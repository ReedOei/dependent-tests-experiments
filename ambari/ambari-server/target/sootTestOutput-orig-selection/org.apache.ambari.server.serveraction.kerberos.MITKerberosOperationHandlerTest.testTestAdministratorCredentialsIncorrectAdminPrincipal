org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12[0] = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[1] = class "java/util/Map"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[1] = class "java/util/Map" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[2] = class "org/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[2] = class "org/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r5
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r1 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler createMock(boolean)>(0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r1 = specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler createMock(boolean)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r4 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r4 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : r1 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.reflect.Method)>($r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : r1 = interfaceinvoke $r3.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.reflect.Method)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : if z0 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : if z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r6 = interfaceinvoke r1.<org.easymock.IMockBuilder: java.lang.Object createNiceMock()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r6 = interfaceinvoke r1.<org.easymock.IMockBuilder: java.lang.Object createNiceMock()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : r2 = (org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler) $r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : r2 = (org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler) $r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r7 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : $r7 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : interfaceinvoke $r7.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : interfaceinvoke $r7.<com.google.inject.Injector: void injectMembers(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : return r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : return $r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.createMock : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : if r3 == null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r5 = (java.lang.String) $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r6 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.util.Set translateEncryptionTypes(java.lang.String,java.lang.String)>($r5, "\\s+") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : r4 = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : r4 = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r5 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r8 = (java.lang.String) $r7
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setAdminServerHost(java.lang.String)>($r8)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setAdminServerHost(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setAdminServerHost : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String adminServerHost> = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setAdminServerHost : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String adminServerHost> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r10 = (java.lang.String) $r9
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r10)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setExecutableSearchPaths(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_create_attributes")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_create_attributes") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r12 = (java.lang.String) $r11
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setCreateAttributes(java.lang.String)>($r12)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setCreateAttributes(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setCreateAttributes : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes> = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setCreateAttributes : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : goto [?= $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin")]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : goto [?= $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin")] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] getExecutableSearchPaths()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] getExecutableSearchPaths()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutableSearchPaths : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutableSearchPaths : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutableSearchPaths : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutableSearchPaths : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] DEFAULT_EXECUTABLE_SEARCH_PATHS>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] DEFAULT_EXECUTABLE_SEARCH_PATHS> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r4 = r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r4 = r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : i0 = lengthof r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : i0 = lengthof r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : i1 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : i1 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if i1 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if i1 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r5 = r4[i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r5 = r4[i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r7 = new java.io.File
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r7 = new java.io.File >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : specialinvoke $r7.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : specialinvoke $r7.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r5, r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r6 = $r7
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r6 = $r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $z0 = virtualinvoke r6.<java.io.File: boolean canExecute()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $z0 = virtualinvoke r6.<java.io.File: boolean canExecute()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r3 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r8 = r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r8 = r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : return $r8
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : return $r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin> = $r14
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin> = $r14 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin.local")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin.local") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : i1 = i1 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r8 = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r8 = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : goto [?= return $r8]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : goto [?= return $r8] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadminLocal> = $r15
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadminLocal> = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setOpen(boolean)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : $z0 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.isOpen : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getAdministratorCredential : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : $r4 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : $r4 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean principalExists(java.lang.String)>($r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.testAdministratorCredentials : $z1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean principalExists(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: boolean isOpen()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: boolean isOpen()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : if r1 != null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $r5[0] = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $r5[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("get_principal %s", $r5)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("get_principal %s", $r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result invokeKAdmin(java.lang.String,java.lang.String)>($r6, null)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.principalExists : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result invokeKAdmin(java.lang.String,java.lang.String)>($r6, null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r3 = null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r3 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r4 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential getAdministratorCredential()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getDefaultRealm()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getDefaultRealm()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r13 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r6 = $r13
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r6 = $r13 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if r4 != null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r14 = virtualinvoke r4.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r14 = virtualinvoke r4.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r7 = $r14
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r7 = $r14 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r8 = null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r8 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r19)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z4 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r9 = virtualinvoke r4.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r9 = virtualinvoke r4.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r21 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r21 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String executableKadmin> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getAdminServerHost()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r22 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getAdminServerHost()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getAdminServerHost : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String adminServerHost>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getAdminServerHost : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String adminServerHost> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getAdminServerHost : return $r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.getAdminServerHost : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r22)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z6 != 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z6 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-s")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-s") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getAdminServerHost()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r23 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getAdminServerHost()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r23)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-p")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-p") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z11 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r9)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z11 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z11 != 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z11 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r24 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r24 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r9)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r25 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : specialinvoke $r24.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: void <init>(java.lang.String,java.lang.String)>($r25, r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : specialinvoke $r24.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: void <init>(java.lang.String,java.lang.String)>($r25, r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r8 = $r24
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r8 = $r24 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : goto [?= $z12 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5)]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : goto [?= $z12 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z12 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z12 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z12 != 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z12 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-r")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-r") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-q")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-q") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r27 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r27 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z17 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z17 = interfaceinvoke $r27.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z17 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z17 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r31 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r31 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : i1 = virtualinvoke $r31.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetries()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : i1 = virtualinvoke $r31.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : i0 = 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : i0 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if i0 > i1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if i0 > i1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i2 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i2 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r32 = newarray (java.lang.String)[$i2]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r32 = newarray (java.lang.String)[$i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r33 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r33 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r34 = (java.lang.String[]) $r33
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r34 = (java.lang.String[]) $r33 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r34, null, r8)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.utils.ShellCommandUtil$Result executeCommand(java.lang.String[],java.util.Map,org.apache.ambari.server.utils.ShellCommandUtil$InteractiveHandler)>($r34, null, r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6: org.apache.ambari.server.utils.ShellCommandUtil$Result answer()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6: org.apache.ambari.server.utils.ShellCommandUtil$Result answer()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6: org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest this$0> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/utils/ShellCommandUtil$Result")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r3 = virtualinvoke $r2.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/utils/ShellCommandUtil$Result") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : r1 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : r1 = (org.apache.ambari.server.utils.ShellCommandUtil$Result) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $i0 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $i0 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $z0 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $z0 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r10 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r12 = interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r14 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r14 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r15 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("kadmin: Client not found in Kerberos database while initializing kadmin interface")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r16 = interfaceinvoke $r15.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("kadmin: Client not found in Kerberos database while initializing kadmin interface") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r18 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r18 = virtualinvoke r1.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Authenticating as principal admin/admin with password.")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r20 = interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("Authenticating as principal admin/admin with password.") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : interfaceinvoke $r20.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r22 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r22 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r22[0] = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : $r22[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r22)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : return r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : return r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : return $r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$6.answer : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if r3 == null
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z18 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z18 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z18 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z18 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : i0 = i0 + 1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r36 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i3 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i3 = virtualinvoke $r36.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i4 = 1000 * $i3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i4 = 1000 * $i3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $l5 = (long) $i4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $l5 = (long) $i4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : staticinvoke <java.lang.Thread: void sleep(long)>($l5)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : staticinvoke <java.lang.Thread: void sleep(long)>($l5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : goto [?= $r39 = newarray (java.lang.Object)[2]]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : goto [?= $r39 = newarray (java.lang.Object)[2]] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r39 = newarray (java.lang.Object)[2]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r39 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r40 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r40 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i6 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i6 = virtualinvoke $r40.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r39[0] = $r41
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r39[0] = $r41 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r39[1] = r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r39[1] = r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Retrying to execute kadmin after a wait of %d seconds :\n\tCommand: %s", $r39)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Retrying to execute kadmin after a wait of %d seconds :\n\tCommand: %s", $r39) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r43 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r43 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke $r43.<org.slf4j.Logger: void warn(java.lang.String)>(r42)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke $r43.<org.slf4j.Logger: void warn(java.lang.String)>(r42) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z19 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z19 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: boolean isSuccessful()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z19 != 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z19 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44 = newarray (java.lang.Object)[4]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[0] = r6
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[0] = r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i7 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $i7 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: int getExitCode()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[1] = $r45
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[1] = $r45 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r46 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r46 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[2] = $r46
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[2] = $r46 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r47 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r47 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[3] = $r47
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r44[3] = $r47 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to execute kadmin:\n\tCommand: %s\n\tExitCode: %s\n\tSTDOUT: %s\n\tSTDERR: %s", $r44)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r48 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to execute kadmin:\n\tCommand: %s\n\tExitCode: %s\n\tSTDOUT: %s\n\tSTDERR: %s", $r44) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r49 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r49 = <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke $r49.<org.slf4j.Logger: void warn(java.lang.String)>(r48)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : interfaceinvoke $r49.<org.slf4j.Logger: void warn(java.lang.String)>(r48) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r11 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : r11 = virtualinvoke r3.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStderr()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z20 = virtualinvoke r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("Client not found in Kerberos database")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $z20 = virtualinvoke r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("Client not found in Kerberos database") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z20 == 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : if $z20 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r50 = new org.apache.ambari.server.serveraction.kerberos.KerberosAdminAuthenticationException
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : $r50 = new org.apache.ambari.server.serveraction.kerberos.KerberosAdminAuthenticationException >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : specialinvoke $r50.<org.apache.ambari.server.serveraction.kerberos.KerberosAdminAuthenticationException: void <init>(java.lang.String)>(r11)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : specialinvoke $r50.<org.apache.ambari.server.serveraction.kerberos.KerberosAdminAuthenticationException: void <init>(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.invokeKAdmin : throw $r50
