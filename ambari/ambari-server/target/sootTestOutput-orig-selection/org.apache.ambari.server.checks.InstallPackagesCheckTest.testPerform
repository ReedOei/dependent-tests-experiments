org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName>
org.apache.ambari.server.state.StackId.getStackName : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.state.StackId.getStackName : return $r1
org.apache.ambari.server.state.StackId.getStackName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity.setStackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackName")
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackName") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.StackEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.StackEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName>
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackName", $r2, r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.StackEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> = r1
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackName : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackName> = r1 >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion>
org.apache.ambari.server.state.StackId.getStackVersion : $r1 = r0.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.state.StackId.getStackVersion : return $r1
org.apache.ambari.server.state.StackId.getStackVersion : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.StackEntity.setStackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_set_stackVersion(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackVersion")
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_checkFetchedForSet(java.lang.String)>("stackVersion") >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion>
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : $r2 = r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackVersion", $r2, r1)
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : virtualinvoke r0.<org.apache.ambari.server.orm.entities.StackEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("stackVersion", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> = r1
org.apache.ambari.server.orm.entities.StackEntity._persistence_set_stackVersion : r0.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String stackVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_repositoryVersion> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setRepositoryVersion : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_repositoryVersion> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setSourceStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setSourceStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_sourceStackId> = r1 >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.setTargetStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> = r1
org.apache.ambari.server.controller.PrereqCheckRequest.setTargetStackId : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> = r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r15 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r15 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r16 = interfaceinvoke $r15.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r16 = interfaceinvoke $r15.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$1: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0>
org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$1: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1)
org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : return $r2
org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r17 = (org.apache.ambari.server.state.Clusters) $r16
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r17 = (org.apache.ambari.server.state.Clusters) $r16 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r4 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r4 = interfaceinvoke $r17.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r5 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId getTargetStackId()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r5 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId getTargetStackId()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetStackId : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId>
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetStackId : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.StackId m_targetStackId> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getTargetStackId : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getTargetStackId : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r6 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r6 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r7 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r7 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_repositoryVersion>
org.apache.ambari.server.controller.PrereqCheckRequest.getRepositoryVersion : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_repositoryVersion> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getRepositoryVersion : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getRepositoryVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r18 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider repositoryVersionDaoProvider>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r18 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider repositoryVersionDaoProvider> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r19 = interfaceinvoke $r18.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r19 = interfaceinvoke $r18.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$5: org.apache.ambari.server.orm.dao.RepositoryVersionDAO get()>()
org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$5: org.apache.ambari.server.orm.dao.RepositoryVersionDAO get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$5: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0>
org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$5: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO access$400(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1)
org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO access$400(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$400 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO>
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$400 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.RepositoryVersionDAO repositoryVersionDAO> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$400 : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$400 : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : return $r2
org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest$5.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r20 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r19
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r20 = (org.apache.ambari.server.orm.dao.RepositoryVersionDAO) $r19 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r21 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r21 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r8 = virtualinvoke $r20.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackNameAndVersion(java.lang.String,java.lang.String)>(r6, $r21)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r8 = virtualinvoke $r20.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: org.apache.ambari.server.orm.entities.RepositoryVersionEntity findByStackNameAndVersion(java.lang.String,java.lang.String)>(r6, $r21) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r22 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r22 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getVersion : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_version()>()
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getVersion : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String _persistence_get_version()>() >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_get_version : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_checkFetched(java.lang.String)>("version")
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_get_version : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void _persistence_checkFetched(java.lang.String)>("version") >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_get_version : $r1 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String version>
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_get_version : $r1 = r0.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String version> >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_get_version : return $r1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity._persistence_get_version : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getVersion : return $r1
org.apache.ambari.server.orm.entities.RepositoryVersionEntity.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r22)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z0 != 0
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r23 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r23 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z1 = virtualinvoke $r23.<java.lang.String: boolean matches(java.lang.String)>("^\\d+(\\.\\d+)*\\-\\d+$")
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z1 = virtualinvoke $r23.<java.lang.String: boolean matches(java.lang.String)>("^\\d+(\\.\\d+)*\\-\\d+$") >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z1 != 0
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r34 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider clusterVersionDAOProvider>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r34 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider clusterVersionDAOProvider> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r35 = interfaceinvoke $r34.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r35 = interfaceinvoke $r34.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$3: org.apache.ambari.server.orm.dao.ClusterVersionDAO get()>()
org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$3: org.apache.ambari.server.orm.dao.ClusterVersionDAO get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$3: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0>
org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$3: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO access$200(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1)
org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO access$200(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$200 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO>
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$200 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.ClusterVersionDAO clusterVersionDAO> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$200 : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : return $r2
org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest$3.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r36 = (org.apache.ambari.server.orm.dao.ClusterVersionDAO) $r35
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r36 = (org.apache.ambari.server.orm.dao.ClusterVersionDAO) $r35 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r37 = virtualinvoke $r36.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r5, r7)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r37 = virtualinvoke $r36.<org.apache.ambari.server.orm.dao.ClusterVersionDAO: org.apache.ambari.server.orm.entities.ClusterVersionEntity findByClusterAndStackAndVersion(java.lang.String,org.apache.ambari.server.state.StackId,java.lang.String)>(r3, r5, r7) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r38 = new java.util.HashSet
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r38 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : specialinvoke $r38.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : specialinvoke $r38.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r10 = $r38
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r10 = $r38 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r39 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r39 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r11 = interfaceinvoke $r39.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r11 = interfaceinvoke $r39.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z3 == 0
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r40 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r40 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r12 = (org.apache.ambari.server.state.Host) $r40
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r12 = (org.apache.ambari.server.state.Host) $r40 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r41 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r41 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r42 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r42 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $r41 == $r42
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $r41 == $r42 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r43 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider hostVersionDaoProvider>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r43 = r0.<org.apache.ambari.server.checks.InstallPackagesCheck: com.google.inject.Provider hostVersionDaoProvider> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r44 = interfaceinvoke $r43.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r44 = interfaceinvoke $r43.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$4: org.apache.ambari.server.orm.dao.HostVersionDAO get()>()
org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$4: org.apache.ambari.server.orm.dao.HostVersionDAO get()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$4: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0>
org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest$4: org.apache.ambari.server.checks.InstallPackagesCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.HostVersionDAO access$300(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1)
org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : $r2 = staticinvoke <org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.HostVersionDAO access$300(org.apache.ambari.server.checks.InstallPackagesCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$300 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$300 : $r1 = r0.<org.apache.ambari.server.checks.InstallPackagesCheckTest: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest.access$300 : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest.access$300 : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : return $r2
org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : return $r1
org.apache.ambari.server.checks.InstallPackagesCheckTest$4.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r45 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r44
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r45 = (org.apache.ambari.server.orm.dao.HostVersionDAO) $r44 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r46 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r46 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r47 = virtualinvoke $r45.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByHost(java.lang.String)>($r46)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r47 = virtualinvoke $r45.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByHost(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r13 = interfaceinvoke $r47.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r13 = interfaceinvoke $r47.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z4 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z4 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z4 == 0
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r48 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r48 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r14 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r48
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r14 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r48 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r49 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r49 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r50 = virtualinvoke $r49.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r50 = virtualinvoke $r49.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r51 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r51 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z5 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r51)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z5 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z5 == 0
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r52 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r52 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r53 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r53 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $r52 != $r53
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $r52 != $r53 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : goto [?= $z4 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.InstallPackagesCheck.perform : goto [?= $z4 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.InstallPackagesCheck.perform : goto [?= $z3 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z7 = interfaceinvoke r10.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $z7 = interfaceinvoke r10.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z7 != 0
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $z7 != 0 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r63 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r63 = virtualinvoke r37.<org.apache.ambari.server.orm.entities.ClusterVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r64 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r64 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $r63 != $r64
org.apache.ambari.server.checks.InstallPackagesCheck.perform : if $r63 != $r64 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r54 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r54 = interfaceinvoke r12.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : interfaceinvoke r10.<java.util.Set: boolean add(java.lang.Object)>($r54)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : interfaceinvoke r10.<java.util.Set: boolean add(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55 = newarray (java.lang.Object)[5]
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r56 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r56 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[0] = $r56
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[0] = $r56 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r57 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r57 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[1] = $r57
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[1] = $r57 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r58 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r58 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[2] = $r58
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[2] = $r58 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[3] = r7
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[3] = r7 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r59 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r10, ", ")
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r59 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r10, ", ") >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[4] = $r59
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r55[4] = $r59 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r60 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Hosts in cluster [{0},{1},{2},{3}] are in INSTALL_FAILED state because Install Packages had failed. Please re-run Install Packages, if necessary place following hosts in Maintenance mode: {4}", $r55)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r60 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Hosts in cluster [{0},{1},{2},{3}] are in INSTALL_FAILED state because Install Packages had failed. Please re-run Install Packages, if necessary place following hosts in Maintenance mode: {4}", $r55) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r61 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r61 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : specialinvoke $r61.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r10)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : specialinvoke $r61.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r10) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r61)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r61) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailedOn : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailedOn : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> = r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r62 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r62 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r62)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r62) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r60)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r60) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : goto [?= return]
org.apache.ambari.server.checks.InstallPackagesCheck.perform : goto [?= return] >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65 = newarray (java.lang.Object)[4]
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r66 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r66 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[0] = $r66
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[0] = $r66 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r67 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r67 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[1] = $r67
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[1] = $r67 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r68 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r68 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[2] = $r68
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[2] = $r68 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[3] = r7
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r65[3] = r7 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r69 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster [{0},{1},{2},{3}] is in INSTALL_FAILED state because Install Packages failed. Please re-run Install Packages even if you placed the failed hosts in Maintenance mode.", $r65)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r69 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster [{0},{1},{2},{3}] is in INSTALL_FAILED state because Install Packages failed. Please re-run Install Packages even if you placed the failed hosts in Maintenance mode.", $r65) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r70 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r70 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : specialinvoke $r70.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : specialinvoke $r70.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : r71 = $r70
org.apache.ambari.server.checks.InstallPackagesCheck.perform : r71 = $r70 >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r72 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r72 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r71.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r72)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r71.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r72) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>(r71)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>(r71) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r73 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.InstallPackagesCheck.perform : $r73 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r73)
org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r73) >>>>>>>> org.apache.ambari.server.checks.InstallPackagesCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>(r69)
