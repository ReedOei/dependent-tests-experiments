org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : if r3 != null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r9 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r9 = virtualinvoke r3.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r10 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r4, $r9)
org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : $r10 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.lang.String,java.lang.String,java.util.Map,byte[])>(r1, r2, r4, $r9) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r9 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r9 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r5 = virtualinvoke $r9.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getCurrentSessionId()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r5 = virtualinvoke $r9.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getCurrentSessionId()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r5 == null
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r5 == null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r11 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r11 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariSessionManager ambariSessionManager> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getSessionCookie()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r12 = virtualinvoke $r11.<org.apache.ambari.server.controller.AmbariSessionManager: java.lang.String getSessionCookie()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r3 == null
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if r3 == null >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z0 == 0
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r16 = new java.util.HashMap
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r16.<java.util.HashMap: void <init>(java.util.Map)>(r3)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r16.<java.util.HashMap: void <init>(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r3 = $r16
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r3 = $r16 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r17 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cookie")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r17 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("Cookie") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r7 = (java.lang.String) $r17
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r7 = (java.lang.String) $r17 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r18 = staticinvoke <org.apache.ambari.server.controller.internal.URLStreamProvider: java.lang.String appendCookie(java.lang.String,java.lang.String)>(r7, r6)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r18 = staticinvoke <org.apache.ambari.server.controller.internal.URLStreamProvider: java.lang.String appendCookie(java.lang.String,java.lang.String)>(r7, r6) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if r0 == null
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if r0 == null >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $i0 = virtualinvoke r0.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $i0 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if $i0 != 0
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ")
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ") >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : return $r6
org.apache.ambari.server.controller.internal.URLStreamProvider.appendCookie : return $r6 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", $r18)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", $r18) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r20 = new java.util.HashMap
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r21 = $r20
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r21 = $r20 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r22 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r22 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r23 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r23 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z1 == 0
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r24 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r8 = (java.util.Map$Entry) $r24
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : r8 = (java.util.Map$Entry) $r24 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r25 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r25 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r26 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r26 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r27 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r26)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r27 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r27)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : interfaceinvoke r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, $r27) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : goto [?= $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : goto [?= $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r30 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.internal.URLStreamProvider streamProvider>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r30 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.internal.URLStreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r31 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariManagementController controller>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r31 = r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: org.apache.ambari.server.controller.AmbariManagementController controller> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z2 == 0
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r33 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r36 = interfaceinvoke $r31.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAmbariServerURI(java.lang.String)>($r32)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r36 = interfaceinvoke $r31.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAmbariServerURI(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r37 = virtualinvoke $r30.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>($r36, r2, r4, r21)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r37 = virtualinvoke $r30.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,byte[],java.util.Map)>($r36, r2, r4, r21) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r38 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.net.HttpURLConnection)>($r37)
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r38 = specialinvoke r0.<org.apache.ambari.server.view.ViewAmbariStreamProvider: java.io.InputStream getInputStream(java.net.HttpURLConnection)>($r37) >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $i1 = <org.apache.ambari.server.proxy.ProxyService: int HTTP_ERROR_RANGE_START>
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $i1 = <org.apache.ambari.server.proxy.ProxyService: int HTTP_ERROR_RANGE_START> >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if i0 < $i1
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : if i0 < $i1 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r10 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : $r10 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r10
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r10 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r38
org.apache.ambari.server.view.ViewAmbariStreamProvider.getInputStream : return $r38 >>>>>>>> org.apache.ambari.server.view.ViewAmbariStreamProvider.readFrom : return $r10
