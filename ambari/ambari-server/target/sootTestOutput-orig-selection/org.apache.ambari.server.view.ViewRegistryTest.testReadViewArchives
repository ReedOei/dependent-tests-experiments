org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r13 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r17
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r13 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r17 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18[0] = r13
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18[0] = r13 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r18)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = new org.apache.ambari.server.view.ViewRegistry
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = new org.apache.ambari.server.view.ViewRegistry >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r19.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r19.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14 = $r19
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14 = $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r0
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r5
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r4
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r6
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r7
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r20
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r20 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r8
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r9 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r9 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r22.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r22.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r10 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r10 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = new org.apache.ambari.server.view.ViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = new org.apache.ambari.server.view.ViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r26
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = r11
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r27 = new org.apache.ambari.server.view.ViewRegistryTest$1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r27 = new org.apache.ambari.server.view.ViewRegistryTest$1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r27.<org.apache.ambari.server.view.ViewRegistryTest$1: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r27.<org.apache.ambari.server.view.ViewRegistryTest$1: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r27
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r27 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r16 = r12
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r16 = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r28 = new org.apache.ambari.server.view.ViewRegistryTest$2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r28 = new org.apache.ambari.server.view.ViewRegistryTest$2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r28.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.state.Clusters)>(r16)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r28.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.state.Clusters)>(r16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r28
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r28 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return r14
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return r14 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0
org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r42
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r1 = (java.io.File) $r42 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r43 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r43
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r2 = (java.io.File) $r43 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r44
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r3 = (java.io.File) $r44 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r45 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r45
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r4 = (java.io.File) $r45 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r46 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r46
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r5 = (java.io.File) $r46 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r47 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r47
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r6 = (java.io.File) $r47 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r48 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r48
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r7 = (java.io.File) $r48 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r49
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r8 = (java.io.File) $r49 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/io/File") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r50
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r9 = (java.io.File) $r50 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarInputStream")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarInputStream") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r51
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r10 = (java.util.jar.JarInputStream) $r51 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarEntry")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r52 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "java/util/jar/JarEntry") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r52
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r11 = (java.util.jar.JarEntry) $r52 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "java/io/FileOutputStream")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r53 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "java/io/FileOutputStream") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r53
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r12 = (java.io.FileOutputStream) $r53 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r54 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r54.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r13 = $r54
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r13 = $r54 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r55)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r55) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r13.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r14 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml>
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r0 = <org.apache.ambari.server.view.configuration.ViewConfigTest: java.lang.String xml> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig(java.lang.String)>($r0) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r1 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r5 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = $r1
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r2 = $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1]
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "org/apache/ambari/server/view/configuration/ViewConfig"
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r6[0] = class "org/apache/ambari/server/view/configuration/ViewConfig" >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r3 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r6) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r4 = virtualinvoke r3.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>()
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : r4 = virtualinvoke r3.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r4.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>(r2)
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r7 = interfaceinvoke r4.<javax.xml.bind.Unmarshaller: java.lang.Object unmarshal(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : $r8 = (org.apache.ambari.server.view.configuration.ViewConfig) $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r8 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1
org.apache.ambari.server.view.configuration.ViewConfigTest.getConfig : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntityTest: org.apache.ambari.server.orm.entities.ViewEntity getViewEntity(org.apache.ambari.server.view.configuration.ViewConfig)>($r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = new java.util.Properties
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r1 = new java.util.Properties >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r1.<java.util.Properties: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r1.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r2 = $r1
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r2 = $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p2", "v2") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r2.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("p3", "v3") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r12 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>(r2)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r12.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>(r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r3 = $r12
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r3 = $r12 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r13 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, r3, "view.jar")
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r13.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r0, r3, "view.jar") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r5 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions>
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String clusterConfigOptions> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getClusterConfigOptions : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r6 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>()
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $r6 = virtualinvoke r1.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getClusterConfigOptions()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY")
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("AMBARI-ONLY") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1
org.apache.ambari.server.orm.entities.ViewEntity.setConfiguration : r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean clusterConfigurable> = 1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version>
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String version> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ViewConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getViewName : return $r7 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build>
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String build> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getBuild : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker>
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String masker> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMasker : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system>
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : $z0 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: boolean system> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0
org.apache.ambari.server.view.configuration.ViewConfig.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7
org.apache.ambari.server.orm.entities.ViewEntity.getQualifiedResourceTypeName : return $r7 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal>
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i0 = <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : $i1 = $i0 + 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : <org.apache.ambari.server.controller.spi.Resource$Type: int nextOrdinal> = $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0
org.apache.ambari.server.controller.spi.Resource$Type.getNextOrdinal : return $i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r4 = $r13
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r4 = $r13 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "org/apache/ambari/server/orm/entities/ViewEntityTest"
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r14 = class "org/apache/ambari/server/orm/entities/ViewEntityTest" >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>($r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setClassLoader : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.ClassLoader classLoader> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r16 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : specialinvoke $r16.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = $r16
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r5 = $r16 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r5.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r5.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r17) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r18 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r5.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r5.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r5)
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r5) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l0 = 20L
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : l0 = 20L >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection getInstances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>()
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection _persistence_get_instances()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_instances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getInstances : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : r6 = interfaceinvoke $r19.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return r4
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return r4 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1
org.apache.ambari.server.orm.entities.ViewEntityTest.getViewEntity : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r15 = staticinvoke <org.apache.ambari.server.orm.entities.ViewInstanceEntityTest: java.util.Set getViewInstanceEntities(org.apache.ambari.server.orm.entities.ViewEntity)>(r14) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r1 = new java.util.HashSet
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r2 = $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r2 = $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r4 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r4 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>() >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>()
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : r0 = staticinvoke <org.apache.ambari.server.view.configuration.ViewConfigTest: org.apache.ambari.server.view.configuration.ViewConfig getConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getInstances()>()
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getInstances()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances>
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances>
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List instances> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getInstances : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getInstances : return $r2 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : return $r1
org.apache.ambari.server.view.configuration.InstanceConfigTest.getInstanceConfigs : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r3 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r5
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r3 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r5 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r6 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r6 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r3)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r6.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r3) >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton>
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : $r0 = <org.apache.ambari.server.security.SecurityHelperImpl: org.apache.ambari.server.security.SecurityHelper singleton> >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0
org.apache.ambari.server.security.SecurityHelperImpl.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.InstanceConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getName : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : $z0 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: boolean visible>
org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : $z0 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: boolean visible> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : return $z0
org.apache.ambari.server.view.configuration.InstanceConfig.isVisible : return $z0 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon>
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon64>
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : $r1 = r0.<org.apache.ambari.server.view.configuration.InstanceConfig: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : return $r1
org.apache.ambari.server.view.configuration.InstanceConfig.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_viewName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i1 = 31 * i0
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : $i2 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : return i3
org.apache.ambari.server.orm.entities.ViewInstanceEntity.hashCode : return i3 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r7 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r7 = staticinvoke <org.apache.ambari.server.view.configuration.InstanceConfigTest: java.util.List getInstanceConfigs()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r9 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r8
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : r9 = (org.apache.ambari.server.view.configuration.InstanceConfig) $r8 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r10 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : $r10 = new org.apache.ambari.server.orm.entities.ViewInstanceEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r10.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r9)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : specialinvoke $r10.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void <init>(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.server.view.configuration.InstanceConfig)>(r0, r9) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon()>()
org.apache.ambari.server.orm.entities.ViewEntity.getIcon : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getIcon : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon64()>()
org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String _persistence_get_icon64()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon64")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("icon64") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon64>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String icon64> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_icon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getIcon64 : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r10)
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : return r2
org.apache.ambari.server.orm.entities.ViewInstanceEntityTest.getViewInstanceEntities : return r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r16 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r16 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r56 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r56
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r17 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r56 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void putInstanceData(java.lang.String,java.lang.String)>("p1", "v1") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void removeInstanceData(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void removeInstanceData(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ViewInstanceDataEntity getInstanceData(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getUsername()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getUsername()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r2 = interfaceinvoke $r1.<org.apache.ambari.server.security.SecurityHelper: java.lang.String getCurrentUserName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : $r2 = interfaceinvoke $r1.<org.apache.ambari.server.security.SecurityHelper: java.lang.String getCurrentUserName()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r1 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r1 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r5 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r5 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r2 = $r5
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r2 = $r5 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r2 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r2 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r6 = null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r6 = null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= r3 = $r6]
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= r3 = $r6] >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r3 = $r6
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r3 = $r6 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z0 = r3 instanceof org.springframework.security.core.userdetails.UserDetails
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z0 = r3 instanceof org.springframework.security.core.userdetails.UserDetails >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z0 == 0
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z1 = r3 instanceof org.apache.ambari.server.security.authorization.User
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $z1 = r3 instanceof org.apache.ambari.server.security.authorization.User >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z1 == 0
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r3 != null
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : if r3 != null >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r9 = ""
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : $r9 = "" >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= r4 = $r9]
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : goto [?= r4 = $r9] >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r4 = $r9
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : r4 = $r9 >>>>>>>> org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : return r4
org.apache.ambari.server.security.SecurityHelperImpl.getCurrentUserName : return r4 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : return $r2
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getUsername : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if r1 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if $i0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $r2 = " "
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : $r2 = " " >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : goto [?= return $r2]
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : return $r2
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getCurrentUserName : return $r2 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("data")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetched(java.lang.String)>("data") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection data>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection data> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_get_data : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : if $z0 == 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : return null
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getInstanceData : return null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : if r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity.removeInstanceData : if r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r4 = new org.apache.ambari.server.orm.entities.ViewInstanceDataEntity
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r4 = new org.apache.ambari.server.orm.entities.ViewInstanceDataEntity >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : specialinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void <init>()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : specialinvoke $r4.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : r3 = $r4
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : r3 = $r4 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_viewName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewName(java.lang.String)>($r5)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewName(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceName(java.lang.String)>($r6)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceName(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String viewInstanceName> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getCurrentUserName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setUser(java.lang.String)>($r7)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setUser(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_user(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setUser : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_user(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("user")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("user") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("user", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("user", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_user : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String user> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setValue(java.lang.String)>(r2)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setValue(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_value(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_value(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("value")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("value") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("value", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("value", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_value : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String value> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceEntity(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r0)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void setViewInstanceEntity(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity.setViewInstanceEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance")
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance>
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1
org.apache.ambari.server.orm.entities.ViewInstanceDataEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : $r8 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection _persistence_get_data()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.putInstanceData : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r57 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r57.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r57.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = $r57
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r18 = $r57 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = new org.apache.ambari.server.orm.entities.ViewEntityEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r58 = new org.apache.ambari.server.orm.entities.ViewEntityEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r58.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r58.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = $r58
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r19 = $r58 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r59)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setId(java.lang.Long)>($r59) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setIdProperty(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setIdProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_idProperty(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setIdProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_idProperty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("idProperty")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("idProperty") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("idProperty", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("idProperty", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_idProperty : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setClassName(java.lang.String)>("class") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setClassName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_className(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setClassName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_className(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("className")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("className") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("className", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("className", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_className : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r60 = virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r60 = virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r60)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstanceName(java.lang.String)>($r60) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstanceName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstanceName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstanceName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstanceName : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r19.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void setViewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r17) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity.setViewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_set_viewInstance(org.apache.ambari.server.orm.entities.ViewInstanceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewInstance") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewInstance", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_set_viewInstance : r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: org.apache.ambari.server.orm.entities.ViewInstanceEntity viewInstance> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r18.<java.util.Collection: boolean add(java.lang.Object)>(r19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r18.<java.util.Collection: boolean add(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r1 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r2 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.Long _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Long: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i1 = virtualinvoke $r2.<java.lang.Long: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i0 = $i1
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i2 = 31 * i0
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewName()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r3 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i3 = virtualinvoke $r3.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i5 = 31 * i4
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewInstanceName()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r4 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_viewInstanceName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewInstanceName")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("viewInstanceName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String viewInstanceName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_viewInstanceName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i7 = $i5 + $i6
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i7 = $i5 + $i6 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i8 = 31 * i7
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i8 = 31 * i7 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_className()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_className()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("className")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("className") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String className> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_className : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i9 = virtualinvoke $r5.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i9 = virtualinvoke $r5.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i10 = $i8 + $i9
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i10 = $i8 + $i9 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i11 = 31 * i10
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i11 = 31 * i10 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("idProperty")
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: void _persistence_checkFetched(java.lang.String)>("idProperty") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty>
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String idProperty> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : return $r1
org.apache.ambari.server.orm.entities.ViewEntityEntity._persistence_get_idProperty : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r6 == null
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : if $r6 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $r7 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntityEntity: java.lang.String _persistence_get_idProperty()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i12 = virtualinvoke $r7.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : $i12 = virtualinvoke $r7.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= i13 = $i11 + $i12]
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : goto [?= i13 = $i11 + $i12] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i13 = $i11 + $i12
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : i13 = $i11 + $i12 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : return i13
org.apache.ambari.server.orm.entities.ViewEntityEntity.hashCode : return i13 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>(r18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r17.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setEntities(java.util.Collection)>(r18) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.setEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_entities(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.setEntities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_entities(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("entities")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("entities") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("entities", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("entities", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities> = r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_entities : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: java.util.Collection entities> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: void setInstances(java.util.Collection)>(r15) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setInstances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_instances(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setInstances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_instances(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("instances")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("instances") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("instances", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("instances", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_instances : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection instances> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r61 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration>
org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig configuration> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getConfiguration : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r62 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r61)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r62 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r3, $r61) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l2 = 99L
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l2 = 99L >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r63 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r63 = interfaceinvoke r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r64 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r64
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r20 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r64 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r65 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r65 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r65.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r65.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = $r65
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r21 = $r65 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r66 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r66)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>($r66) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r21.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r13) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r20.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r21)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r20.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r21) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.ViewInstanceEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.ViewInstanceEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z5 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r67 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r67.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r67.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r68 = $r67
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r68 = $r67 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r69 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r69.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z6 = virtualinvoke $r69.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z6 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}", r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/view.xml", r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/classes", r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/WEB-INF/lib", r7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}/META-INF", r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r82 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r82.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r82.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r83 = $r82
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r83 = $r82 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r83.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r83.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r85 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r85.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r85.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r86 = $r85
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r86 = $r85 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r86.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r86.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r88 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r89 = virtualinvoke $r88.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r89 = virtualinvoke $r88.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r90 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r89) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r91 = interfaceinvoke $r90.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r91.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r93 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r93 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke $r93.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z7 = virtualinvoke $r93.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z7 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z7 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r98 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r99 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r98) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r100 = interfaceinvoke $r99.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r100.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r102 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r102.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i3 = virtualinvoke $r102.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolCoreSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r104 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r103) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r105 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r106 = interfaceinvoke $r104.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r105) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r106.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r108 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i4 = virtualinvoke $r108.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i4 = virtualinvoke $r108.<org.apache.ambari.server.configuration.Configuration: int getViewExtractionThreadPoolMaxSize()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r110 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r109) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r111 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r112 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r111)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r112 = interfaceinvoke $r110.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r111) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r112.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r114 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = virtualinvoke $r114.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l5 = virtualinvoke $r114.<org.apache.ambari.server.configuration.Configuration: long getViewExtractionThreadPoolTimeout()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r115 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r116 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r115) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r117 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r117 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(10000L) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r117)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r118 = interfaceinvoke $r116.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r117) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r118.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r118.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r120 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = virtualinvoke $r120.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r121 = virtualinvoke $r120.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r122 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r121) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = <java.lang.Boolean: java.lang.Boolean FALSE>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r123 = <java.lang.Boolean: java.lang.Boolean FALSE> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r123)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r124 = interfaceinvoke $r122.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r123) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r124.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r126 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r127 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r126)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r127 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r126) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128[0] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r128[0] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r128)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r127.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r128) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke r3.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z8 = virtualinvoke r3.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r130 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r131 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r130) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r132 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r132 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r132)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r131.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r132) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r134 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke $r134.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z9 = virtualinvoke $r134.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z9 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z9 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r139 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r140 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r139) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r141 = interfaceinvoke $r140.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r141.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke r4.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z10 = virtualinvoke r4.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r143 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r144 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r143) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r145 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r146 = interfaceinvoke $r144.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r145) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r146.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r148 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke $r148.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z11 = virtualinvoke $r148.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z11 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z11 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r153 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r154 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r153) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r155 = interfaceinvoke $r154.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("/var/lib/ambari-server/resources/views/work/MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r155.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z12 = virtualinvoke r4.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r157 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r157 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r157)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r158 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r157) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r159 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = interfaceinvoke $r158.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r159)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r160 = interfaceinvoke $r158.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r159) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r160.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r160.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r162 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r162 = virtualinvoke r4.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r162)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r163 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r162) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r164 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r164.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r164.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = interfaceinvoke $r163.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r164)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r165 = interfaceinvoke $r163.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r164) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r165.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r8.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z13 = virtualinvoke r8.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r167 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r168 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r167)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r168 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r167) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r169 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = interfaceinvoke $r168.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r169)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r170 = interfaceinvoke $r168.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r169) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r170.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r172 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r172)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r173 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r172) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r173.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r173.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r175 = virtualinvoke r10.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r176 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r175)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r176 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r175) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r176.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r176.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r178 = virtualinvoke r11.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r178)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r179 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r178) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r179.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("view.xml") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z14 = virtualinvoke r11.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r181 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r182 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r181)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r182 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r181) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r183 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r183 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r183)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r182.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r183) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r185 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = (byte[]) $r185
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r186 = (byte[]) $r185 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i6 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r186)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i6 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r186) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r187 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r187)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r188 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r187) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r188.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r189)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r188.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r189) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r191 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = (byte[]) $r191
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r192 = (byte[]) $r191 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i7 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r192)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i7 = virtualinvoke r10.<java.util.jar.JarInputStream: int read(byte[])>($r192) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r193 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r193)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r194 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r193) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r195 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r194.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r195)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r194.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r195) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r197 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "[B") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = (byte[]) $r197
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r198 = (byte[]) $r197 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i8 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i8 = staticinvoke <org.easymock.EasyMock: int eq(int)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i9 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $i9 = staticinvoke <org.easymock.EasyMock: int eq(int)>(10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r198, $i8, $i9)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void write(byte[],int,int)>($r198, $i8, $i9) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r12.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r10.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r199 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = virtualinvoke $r199.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r200 = virtualinvoke $r199.<org.apache.ambari.server.orm.dao.ViewDAO: org.apache.ambari.server.orm.entities.ViewEntity findByName(java.lang.String)>("MY_VIEW{1.0.0}") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r201 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r200) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r201.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z15 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r203 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r203)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r204 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r203) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r205 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = interfaceinvoke $r204.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r205)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r206 = interfaceinvoke $r204.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r205) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r206.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r2.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z16 = virtualinvoke r2.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r208 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r208)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r209 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r208) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r210 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = interfaceinvoke $r209.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r210)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r211 = interfaceinvoke $r209.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r210) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r211.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z17 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r213 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z17) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r214 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r213)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r214 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r213) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r215 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r215 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r216 = interfaceinvoke $r214.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r215)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r216 = interfaceinvoke $r214.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r215) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r216.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r218 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r218 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r219 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r218)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r219 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r218) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r220 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r220 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r220.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r220.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r221 = interfaceinvoke $r219.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r220)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r221 = interfaceinvoke $r219.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r220) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r221.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = virtualinvoke r7.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z18 = virtualinvoke r7.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r223 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r223 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r224 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r223)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r224 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r223) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r225 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r225 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r226 = interfaceinvoke $r224.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r225)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r226 = interfaceinvoke $r224.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r225) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r226.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r226.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r228 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r228 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r229 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r228)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r229 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r228) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = newarray (java.io.File)[1]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230 = newarray (java.io.File)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230[0] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r230[0] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = interfaceinvoke $r229.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r230)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r231 = interfaceinvoke $r229.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r230) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r231.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r231.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r233 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r233 = virtualinvoke r9.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r234 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r233)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r234 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r233) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r235 = new java.net.URI
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r235 = new java.net.URI >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r235.<java.net.URI: void <init>(java.lang.String)>("file:./")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r235.<java.net.URI: void <init>(java.lang.String)>("file:./") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r236 = interfaceinvoke $r234.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r235)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r236 = interfaceinvoke $r234.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r235) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r236.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r236.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r238 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r238 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z19 = virtualinvoke $r238.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z19 = virtualinvoke $r238.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r239 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r239 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z19) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r240 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r239)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r240 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r239) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r241 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r241 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r242 = interfaceinvoke $r240.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r241)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r242 = interfaceinvoke $r240.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r241) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r242.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r242.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r244 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r244 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r22 = (org.apache.ambari.server.state.Cluster) $r244
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r22 = (org.apache.ambari.server.state.Cluster) $r244 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r245 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r245 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Service") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r23 = (org.apache.ambari.server.state.Service) $r245
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r23 = (org.apache.ambari.server.state.Service) $r245 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r246 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceEntity")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r246 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceEntity") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r246
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r24 = (org.apache.ambari.server.orm.entities.ViewInstanceEntity) $r246 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r25 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r25 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r247 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceDataEntity")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r247 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/ViewInstanceDataEntity") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r26 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r247
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r26 = (org.apache.ambari.server.orm.entities.ViewInstanceDataEntity) $r247 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r248 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r248 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r249 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r248)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r249 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r248) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r250 = interfaceinvoke $r249.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r250 = interfaceinvoke $r249.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("p1") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r250.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r250.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r252 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r252 = virtualinvoke r26.<org.apache.ambari.server.orm.entities.ViewInstanceDataEntity: java.lang.String getUser()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r253 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r252)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r253 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r252) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r254 = interfaceinvoke $r253.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r254 = interfaceinvoke $r253.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(" ") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r254.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r254.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r256 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r256 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r256.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r256.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r27 = $r256
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r27 = $r256 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r23)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HDFS", r23) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r23)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("HIVE", r23) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r259 = new org.apache.ambari.server.state.StackId
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r259 = new org.apache.ambari.server.state.StackId >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r259.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r259.<org.apache.ambari.server.state.StackId: void <init>(java.lang.String)>("HDP-2.0") >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null
org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r28 = $r259
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r28 = $r259 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r294 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r295 = interfaceinvoke $r294.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r295 = interfaceinvoke $r294.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r295)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r296 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r295) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = new java.util.HashMap
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r297 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r297.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r297.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r296.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r297)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : interfaceinvoke $r296.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r297) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = newarray (java.lang.Object)[19]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304 = newarray (java.lang.Object)[19] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r305 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r305 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[0] = $r305
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[0] = $r305 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[1] = r1
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[1] = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[2] = r2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[2] = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[3] = r3
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[3] = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[4] = r4
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[4] = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[5] = r5
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[5] = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[6] = r6
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[6] = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[7] = r7
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[7] = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[8] = r8
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[8] = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[9] = r9
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[9] = r9 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[10] = r10
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[10] = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[11] = r11
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[11] = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[12] = r12
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[12] = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r306 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r306 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[13] = $r306
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[13] = $r306 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r307 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r307 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[14] = $r307
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[14] = $r307 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r308 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r308 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[15] = $r308
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[15] = $r308 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r309 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r309 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[16] = $r309
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[16] = $r309 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[17] = r22
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[17] = r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[18] = r24
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r304[18] = r24 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r304)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r304) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r310 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r310 = new org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r310.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r62, r68, r83, r86, z0)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : specialinvoke $r310.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean)>(r62, r68, r83, r86, z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r311 = $r310
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r311 = $r310 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r312 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r312 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r313 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r313 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ViewInstanceDAO viewInstanceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r314 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r314 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.UserDAO userDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r315 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r315 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r316 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r316 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r317 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r317 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r318 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r318 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r30 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.security.SecurityHelper securityHelper> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r31 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r32 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r33 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r34 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r312, $r313, $r314, $r315, $r316, $r317, $r318, $r30, $r31, null, r311, $r32, $r33)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r34 = staticinvoke <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.view.ViewRegistry getRegistry(org.apache.ambari.server.orm.dao.ViewDAO,org.apache.ambari.server.orm.dao.ViewInstanceDAO,org.apache.ambari.server.orm.dao.UserDAO,org.apache.ambari.server.orm.dao.MemberDAO,org.apache.ambari.server.orm.dao.PrivilegeDAO,org.apache.ambari.server.orm.dao.ResourceDAO,org.apache.ambari.server.orm.dao.ResourceTypeDAO,org.apache.ambari.server.security.SecurityHelper,org.apache.ambari.server.view.ViewInstanceHandlerList,org.apache.ambari.server.view.ViewExtractor,org.apache.ambari.server.view.ViewArchiveUtility,org.apache.ambari.server.api.services.AmbariMetaInfo,org.apache.ambari.server.state.Clusters)>($r312, $r313, $r314, $r315, $r316, $r317, $r318, $r30, $r31, null, r311, $r32, $r33) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = r10
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration: java.lang.Boolean extractViewsAfterClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : z0 = $z3
org.apache.ambari.server.view.ViewRegistry.readViewArchives : z0 = $z3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r8 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r8 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r1 = "Triggering loading of [{}] views"
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r1 = "Triggering loading of [{}] views" >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r9 = "ALL"
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r9 = "ALL" >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>($r1, $r9)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>($r1, $r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives(boolean,boolean,java.lang.String)>(z0, 0, ".*")
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchives(boolean,boolean,java.lang.String)>(z0, 0, ".*") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r16 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r16 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r2 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r2 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration: java.io.File getViewsDir()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r17 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r18 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r18 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r20 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r20 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("work")
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("work") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r23 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r23 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = virtualinvoke $r23.<org.apache.ambari.server.view.ViewExtractor: boolean ensureExtractedArchiveDirectory(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z3 = virtualinvoke $r23.<org.apache.ambari.server.view.ViewExtractor: boolean ensureExtractedArchiveDirectory(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $r3 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $r3 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : r2 = virtualinvoke $r3.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : r2 = virtualinvoke $r3.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map files>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map files> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r4 = (java.io.File) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : $r4 = (java.io.File) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFile : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z0 != 0
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z1 == 0
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z2 = 1
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : goto [?= return $z2]
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : return $z2
org.apache.ambari.server.view.ViewExtractor.ensureExtractedArchiveDirectory : return $z2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z3 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r4 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if r4 == null
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if r4 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r24 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r24 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r24.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r24.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r5 = $r24
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r5 = $r24 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r25 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r25 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r26 = interfaceinvoke $r25.<javax.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r26 = interfaceinvoke $r25.<javax.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistryTest$1: org.apache.ambari.server.api.services.AmbariMetaInfo get()>()
org.apache.ambari.server.view.ViewRegistryTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistryTest$1: org.apache.ambari.server.api.services.AmbariMetaInfo get()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.get : $r1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$1: org.apache.ambari.server.api.services.AmbariMetaInfo val$finalMetaInfo>
org.apache.ambari.server.view.ViewRegistryTest$1.get : $r1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$1: org.apache.ambari.server.api.services.AmbariMetaInfo val$finalMetaInfo> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$1.get : return $r1
org.apache.ambari.server.view.ViewRegistryTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r27 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r26
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r27 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r6 = virtualinvoke $r27.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getServerVersion()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r6 = virtualinvoke $r27.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.lang.String getServerVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r7 = r4
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r7 = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : i0 = lengthof r7
org.apache.ambari.server.view.ViewRegistry.readViewArchives : i0 = lengthof r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : i1 = 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : i1 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if i1 >= i0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if i1 >= i0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r8 = r7[i1]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r8 = r7[i1] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z4 = virtualinvoke r8.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z4 = virtualinvoke r8.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z4 != 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z4 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r28 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r28 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r9 = virtualinvoke $r28.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromArchive(java.io.File)>(r8)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r9 = virtualinvoke $r28.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromArchive(java.io.File)>(r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : if $z0 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r3 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r3 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r5 = (org.apache.ambari.server.view.configuration.ViewConfig) $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : $r5 = (org.apache.ambari.server.view.configuration.ViewConfig) $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : return $r5
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromArchive : return $r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r10 = virtualinvoke r9.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r10 = virtualinvoke r9.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r11 = virtualinvoke r9.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getVersion()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r11 = virtualinvoke r9.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r12 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r10, r11)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r12 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r10, r11) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z5 = virtualinvoke r12.<java.lang.String: boolean matches(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z5 = virtualinvoke r12.<java.lang.String: boolean matches(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z5 != 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z5 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r31 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r31 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r13 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r13 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r34 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r34 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r14 = virtualinvoke $r34.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r13)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r14 = virtualinvoke $r34.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r35 = new org.apache.ambari.server.orm.entities.ViewEntity
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r35 = new org.apache.ambari.server.orm.entities.ViewEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r36 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r36 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r35.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r9, $r36, r13)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke $r35.<org.apache.ambari.server.orm.entities.ViewEntity: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,org.apache.ambari.server.configuration.Configuration,java.lang.String)>(r9, $r36, r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r15 = $r35
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r15 = $r35 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : z2 = virtualinvoke r15.<org.apache.ambari.server.orm.entities.ViewEntity: boolean isSystem()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : z2 = virtualinvoke r15.<org.apache.ambari.server.orm.entities.ViewEntity: boolean isSystem()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer _persistence_get_system()>()
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer _persistence_get_system()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("system")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetched(java.lang.String)>("system") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer system>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.Integer system> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : return $r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_get_system : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : if $i0 != 1
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : if $i0 != 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $z0 = 1
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : $z0 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : goto [?= return $z0]
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.isSystem : return $z0
org.apache.ambari.server.orm.entities.ViewEntity.isSystem : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void addDefinition(org.apache.ambari.server.orm.entities.ViewEntity)>(r15)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void addDefinition(org.apache.ambari.server.orm.entities.ViewEntity)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.addDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions>
org.apache.ambari.server.view.ViewRegistry.addDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.addDefinition : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.addDefinition : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.addDefinition : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.view.ViewRegistry.addDefinition : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z2 != 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z2 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File,java.lang.String)>(r15, r8, r14, r6)
org.apache.ambari.server.view.ViewRegistry.readViewArchives : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void readViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File,java.lang.String)>(r15, r8, r14, r6) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r5 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYING>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r5 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYING> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deploying ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deploying ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r5, $r17)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r5, $r17) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setStatus : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setStatus : r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setStatusDetail : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String statusDetail> = r1
org.apache.ambari.server.orm.entities.ViewEntity.setStatusDetail : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String statusDetail> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r7 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r7 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r18 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r18 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading view archive ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading view archive ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>($r23)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r24 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r24 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r8 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader extractViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File)>(r1, r2, r3)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r8 = virtualinvoke $r24.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader extractViewArchive(org.apache.ambari.server.orm.entities.ViewEntity,java.io.File,java.io.File)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r4 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z0 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z1 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z1 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z1 != 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating archive folder ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating archive folder ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r20 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r20 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r20.<org.slf4j.Logger: void info(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z2 = virtualinvoke r3.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z2 = virtualinvoke r3.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z2 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r21 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r21 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r6 = virtualinvoke $r21.<org.apache.ambari.server.view.ViewArchiveUtility: java.util.jar.JarInputStream getJarFileStream(java.io.File)>(r2)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r6 = virtualinvoke $r21.<org.apache.ambari.server.view.ViewArchiveUtility: java.util.jar.JarInputStream getJarFileStream(java.io.File)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map jarFiles>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map jarFiles> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r4 = (java.util.jar.JarInputStream) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : $r4 = (java.util.jar.JarInputStream) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getJarFileStream : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting files from ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting files from ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r24 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r24 = virtualinvoke r2.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r27)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r27) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r28 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r28 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>(r27)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String)>(r27) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r29 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r29 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r32 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r32 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r7 = virtualinvoke $r29.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>($r35)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r7 = virtualinvoke $r29.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z3 = virtualinvoke r7.<java.io.File: boolean mkdir()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z3 = virtualinvoke r7.<java.io.File: boolean mkdir()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z3 != 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r39 = virtualinvoke r6.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r39 = virtualinvoke r6.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r8 = $r39
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r8 = $r39 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $r39 == null
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $r39 == null >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r40 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r42 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r42 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r44 = virtualinvoke r8.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r44 = virtualinvoke r8.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r9 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r9 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r46 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r46 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r47 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>($r50)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>($r50) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r51 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r51 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r10 = virtualinvoke $r51.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r9)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r10 = virtualinvoke $r51.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z4 = virtualinvoke r8.<java.util.jar.JarEntry: boolean isDirectory()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $z4 = virtualinvoke r8.<java.util.jar.JarEntry: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z4 == 0
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r64 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r64 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r11 = virtualinvoke $r64.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.FileOutputStream getFileOutputStream(java.io.File)>(r10)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r11 = virtualinvoke $r64.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.FileOutputStream getFileOutputStream(java.io.File)>(r10) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map outputStreams>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r2 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map outputStreams> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r4 = (java.io.FileOutputStream) $r3
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : $r4 = (java.io.FileOutputStream) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : return $r4
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getFileOutputStream : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r65 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r65 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r66 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r66 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r66.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Begin copying from ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Begin copying from ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r68 = virtualinvoke r8.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r68 = virtualinvoke r8.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r65.<org.slf4j.Logger: void debug(java.lang.String)>($r72)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r65.<org.slf4j.Logger: void debug(java.lang.String)>($r72) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r12 = newarray (byte)[1024]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r12 = newarray (byte)[1024] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $i4 = virtualinvoke r6.<java.util.jar.JarInputStream: int read(byte[])>(r12)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $i4 = virtualinvoke r6.<java.util.jar.JarInputStream: int read(byte[])>(r12) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : i0 = $i4
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : i0 = $i4 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $i4 <= -1
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : if $i4 <= -1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r11.<java.io.FileOutputStream: void write(byte[],int,int)>(r12, 0, i0)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r11.<java.io.FileOutputStream: void write(byte[],int,int)>(r12, 0, i0) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $i4 = virtualinvoke r6.<java.util.jar.JarInputStream: int read(byte[])>(r12)]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $i4 = virtualinvoke r6.<java.util.jar.JarInputStream: int read(byte[])>(r12)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r73 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r73 = <org.apache.ambari.server.view.ViewExtractor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r74 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r74 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r74.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : specialinvoke $r74.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finish copying from ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finish copying from ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r76 = virtualinvoke r8.<java.util.jar.JarEntry: java.lang.String getName()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r76 = virtualinvoke r8.<java.util.jar.JarEntry: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ")
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r73.<org.slf4j.Logger: void debug(java.lang.String)>($r80)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : interfaceinvoke $r73.<org.slf4j.Logger: void debug(java.lang.String)>($r80) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r11.<java.io.FileOutputStream: void flush()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r11.<java.io.FileOutputStream: void flush()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r11.<java.io.FileOutputStream: void close()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r11.<java.io.FileOutputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= virtualinvoke r6.<java.util.jar.JarInputStream: void closeEntry()>()]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= virtualinvoke r6.<java.util.jar.JarInputStream: void closeEntry()>()] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r6.<java.util.jar.JarInputStream: void closeEntry()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r6.<java.util.jar.JarInputStream: void closeEntry()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= (branch)]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r39 = virtualinvoke r6.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r39 = virtualinvoke r6.<java.util.jar.JarInputStream: java.util.jar.JarEntry getNextJarEntry()>()] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r6.<java.util.jar.JarInputStream: void close()>()
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : virtualinvoke r6.<java.util.jar.JarInputStream: void close()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r91 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>]
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : goto [?= $r91 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r91 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r91 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r92 = virtualinvoke $r91.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r4, 0)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : r92 = virtualinvoke $r91.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r4, 0) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z1 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean badArchive> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z1 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r5 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r5 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z2 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r3 = (java.io.File) $r7
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : r3 = (java.io.File) $r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z3 == 0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r9 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r9 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: java.util.Map viewConfigs> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r11 = (org.apache.ambari.server.view.configuration.ViewConfig) $r10
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : $r11 = (org.apache.ambari.server.view.configuration.ViewConfig) $r10 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : return $r11
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.getViewConfigFromExtractedArchive : return $r11 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r93 = specialinvoke r0.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader getArchiveClassLoader(org.apache.ambari.server.view.configuration.ViewConfig,java.io.File)>(r92, r3)
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : $r93 = specialinvoke r0.<org.apache.ambari.server.view.ViewExtractor: java.lang.ClassLoader getArchiveClassLoader(org.apache.ambari.server.view.configuration.ViewConfig,java.io.File)>(r92, r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r12 = new java.util.LinkedList
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r12 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r12.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r12.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r4 = $r12
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r4 = $r12 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r13 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r15 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r15 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/classes")
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/classes") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r5 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r18 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r18 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r6 = virtualinvoke $r18.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r6 = virtualinvoke $r18.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z0 = virtualinvoke r6.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z0 = virtualinvoke r6.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z0 == 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r19 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r19 = virtualinvoke r6.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r20 = virtualinvoke $r19.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r20 = virtualinvoke $r19.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r20)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r23 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r23 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/lib")
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEB-INF/lib") >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r7 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r7 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r26 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r26 = r0.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r8 = virtualinvoke $r26.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r8 = virtualinvoke $r26.<org.apache.ambari.server.view.ViewArchiveUtility: java.io.File getFile(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z2 = virtualinvoke r8.<java.io.File: boolean exists()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z2 = virtualinvoke r8.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z2 == 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r9 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r9 = virtualinvoke r8.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if r9 == null
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if r9 == null >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r10 = r9
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r10 = r9 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i0 = lengthof r10
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i0 = lengthof r10 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if i1 >= i0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if i1 >= i0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r11 = r10[i1]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : r11 = r10[i1] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z3 = virtualinvoke r11.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $z3 = virtualinvoke r11.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z3 != 0
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r27 = virtualinvoke r11.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r27 = virtualinvoke r11.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r28 = virtualinvoke $r27.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r28 = virtualinvoke $r27.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = i1 + 1
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : goto [?= (branch)]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r29 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r29 = virtualinvoke r2.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r30 = virtualinvoke $r29.<java.net.URI: java.net.URL toURL()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r30 = virtualinvoke $r29.<java.net.URI: java.net.URL toURL()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r30)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r31 = new org.apache.ambari.server.view.ViewClassLoader
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r31 = new org.apache.ambari.server.view.ViewClassLoader >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $i2 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $i2 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r32 = newarray (java.net.URL)[$i2]
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r32 = newarray (java.net.URL)[$i2] >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r33 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r33 = interfaceinvoke r4.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r32) >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r34 = (java.net.URL[]) $r33
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : $r34 = (java.net.URL[]) $r33 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r31.<org.apache.ambari.server.view.ViewClassLoader: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,java.net.URL[])>(r1, $r34)
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : specialinvoke $r31.<org.apache.ambari.server.view.ViewClassLoader: void <init>(org.apache.ambari.server.view.configuration.ViewConfig,java.net.URL[])>(r1, $r34) >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : $r1 = new org.eclipse.jetty.webapp.WebAppContext
org.apache.ambari.server.view.ViewClassLoader.getInitContext : $r1 = new org.eclipse.jetty.webapp.WebAppContext >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : specialinvoke $r1.<org.eclipse.jetty.webapp.WebAppContext: void <init>()>()
org.apache.ambari.server.view.ViewClassLoader.getInitContext : specialinvoke $r1.<org.eclipse.jetty.webapp.WebAppContext: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : r2 = $r1
org.apache.ambari.server.view.ViewClassLoader.getInitContext : r2 = $r1 >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.server.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.server.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.view.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.ambari.view.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.google.inject.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.google.inject.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.slf4j.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.slf4j.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.sun.jersey.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("com.sun.jersey.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.velocity.")
org.apache.ambari.server.view.ViewClassLoader.getInitContext : virtualinvoke r2.<org.eclipse.jetty.webapp.WebAppContext: void addSystemClass(java.lang.String)>("org.apache.velocity.") >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r0 == null
org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r0 == null >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : r3 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getExtraClasspath()>()
org.apache.ambari.server.view.ViewClassLoader.getInitContext : r3 = virtualinvoke r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getExtraClasspath()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List classpath>
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List classpath> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r2 = null
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : $r2 = null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : goto [?= return $r2]
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getExtraClasspath : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r3 == null
org.apache.ambari.server.view.ViewClassLoader.getInitContext : if r3 == null >>>>>>>> org.apache.ambari.server.view.ViewClassLoader.getInitContext : return r2
org.apache.ambari.server.view.ViewClassLoader.getInitContext : return r2 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : return $r31
org.apache.ambari.server.view.ViewExtractor.getArchiveClassLoader : return $r31 >>>>>>>> org.apache.ambari.server.view.ViewExtractor.extractViewArchive : return $r93
org.apache.ambari.server.view.ViewExtractor.extractViewArchive : return $r93 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void configureViewLogging(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r8)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void configureViewLogging(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("view.log4j.properties")
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r3 = virtualinvoke r2.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("view.log4j.properties") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r4 = null
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : r4 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3
org.apache.ambari.server.view.ViewRegistry.configureViewLogging : if null == r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r25 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r25 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r26 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r26 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z0 = virtualinvoke $r26.<org.apache.ambari.server.configuration.Configuration: boolean isViewValidationEnabled()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z0 = virtualinvoke $r26.<org.apache.ambari.server.configuration.Configuration: boolean isViewValidationEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r9 = virtualinvoke $r25.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r7, $z0)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r9 = virtualinvoke $r25.<org.apache.ambari.server.view.ViewArchiveUtility: org.apache.ambari.server.view.configuration.ViewConfig getViewConfigFromExtractedArchive(java.lang.String,boolean)>(r7, $z0) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setConfiguration(org.apache.ambari.server.view.configuration.ViewConfig)>(r9)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setConfiguration(org.apache.ambari.server.view.configuration.ViewConfig)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersions(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String)>(r1, r4)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $z1 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersions(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String)>(r1, r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String minAmbariVersion>
org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String minAmbariVersion> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMinAmbariVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String maxAmbariVersion>
org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String maxAmbariVersion> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : return $r1
org.apache.ambari.server.view.configuration.ViewConfig.getMaxAmbariVersion : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2]
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchive : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity setupViewDefinition(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r8)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity setupViewDefinition(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.ClassLoader)>(r1, r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>(r2)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setClassLoader(java.lang.ClassLoader)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getParameters()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getParameters()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters>
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters>
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List parameters> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getParameters : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getParameters : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r19 = new java.util.HashSet
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r19 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r19.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r19.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r5 = $r19
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r5 = $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r6 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r6 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r8 = (org.apache.ambari.server.view.configuration.ParameterConfig) $r20
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r8 = (org.apache.ambari.server.view.configuration.ParameterConfig) $r20 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r21 = new org.apache.ambari.server.orm.entities.ViewParameterEntity
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r21 = new org.apache.ambari.server.orm.entities.ViewParameterEntity >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r21.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r21.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r9 = $r21
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r9 = $r21 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewName(java.lang.String)>(r6)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewName(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_viewName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_viewName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("viewName") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("viewName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_viewName : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String viewName> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r22 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r22 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String name>
org.apache.ambari.server.view.configuration.ParameterConfig.getName : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String name> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getName : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getName : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setName(java.lang.String)>($r22)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setName(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r23 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDescription()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r23 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDescription()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String description>
org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String description> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getDescription : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDescription(java.lang.String)>($r23)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDescription(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setDescription : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_description(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setDescription : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_description(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("description")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("description") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("description", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("description", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_description : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String description> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r24 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getLabel()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r24 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getLabel()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String label>
org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String label> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getLabel : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setLabel(java.lang.String)>($r24)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setLabel(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_label(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setLabel : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_label(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("label")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("label") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("label", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("label", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_label : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String label> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r25 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getPlaceholder()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r25 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getPlaceholder()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String placeholder>
org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String placeholder> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getPlaceholder : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setPlaceholder(java.lang.String)>($r25)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setPlaceholder(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setPlaceholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_placeholder(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setPlaceholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_placeholder(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("placeholder")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("placeholder") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("placeholder", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("placeholder", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_placeholder : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String placeholder> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r26 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDefaultValue()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r26 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getDefaultValue()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String defaultValue>
org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String defaultValue> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDefaultValue(java.lang.String)>($r26)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setDefaultValue(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setDefaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_defaultValue(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setDefaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_defaultValue(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("defaultValue")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("defaultValue") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("defaultValue", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("defaultValue", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_defaultValue : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String defaultValue> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r27 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getClusterConfig()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r27 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String getClusterConfig()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String clusterConfig>
org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : $r1 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: java.lang.String clusterConfig> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : return $r1
org.apache.ambari.server.view.configuration.ParameterConfig.getClusterConfig : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setClusterConfig(java.lang.String)>($r27)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setClusterConfig(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setClusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_clusterConfig(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setClusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_clusterConfig(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("clusterConfig")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("clusterConfig") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("clusterConfig", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("clusterConfig", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_clusterConfig : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: java.lang.String clusterConfig> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z1 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isRequired()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z1 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isRequired()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean required>
org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean required> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : return $z0
org.apache.ambari.server.view.configuration.ParameterConfig.isRequired : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setRequired(boolean)>($z1)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setRequired(boolean)>($z1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : if z0 == 0
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 89
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 89 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0)]
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0)] >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_required(char)>($c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("required")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("required") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r1 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r1 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r2 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : $r2 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("required", $r1, $r2)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("required", $r1, $r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required> = c0
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_required : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char required> = c0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z2 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isMasked()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $z2 = virtualinvoke r8.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean isMasked()>() >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean masked>
org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : $z0 = r0.<org.apache.ambari.server.view.configuration.ParameterConfig: boolean masked> >>>>>>>> org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : return $z0
org.apache.ambari.server.view.configuration.ParameterConfig.isMasked : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setMasked(boolean)>($z2)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setMasked(boolean)>($z2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : if z0 == 0
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : if z0 == 0 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 78
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 78 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("masked")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("masked") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r1 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r1 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $c1 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r1.<java.lang.Character: void <init>(char)>($c1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r2 = new java.lang.Character
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : $r2 = new java.lang.Character >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : specialinvoke $r2.<java.lang.Character: void <init>(char)>(c0) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("masked", $r1, $r2)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("masked", $r1, $r2) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked> = c0
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_masked : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: char masked> = c0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewEntity(org.apache.ambari.server.orm.entities.ViewEntity)>(r1)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r9.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void setViewEntity(org.apache.ambari.server.orm.entities.ViewEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_view(org.apache.ambari.server.orm.entities.ViewEntity)>(r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity.setViewEntity : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_view(org.apache.ambari.server.orm.entities.ViewEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("view")
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_checkFetchedForSet(java.lang.String)>("view") >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view>
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view> >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("view", $r2, r1)
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("view", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view> = r1
org.apache.ambari.server.orm.entities.ViewParameterEntity._persistence_set_view : r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: org.apache.ambari.server.orm.entities.ViewEntity view> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : interfaceinvoke r5.<java.util.Collection: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 78
org.apache.ambari.server.orm.entities.ViewParameterEntity.setRequired : $c0 = 78 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 89
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : $c0 = 89 >>>>>>>> org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0)]
org.apache.ambari.server.orm.entities.ViewParameterEntity.setMasked : goto [?= virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewParameterEntity: void _persistence_set_masked(char)>($c0)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setParameters(java.util.Collection)>(r5)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setParameters(java.util.Collection)>(r5) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.setParameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_parameters(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.ViewEntity.setParameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_set_parameters(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("parameters")
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_checkFetchedForSet(java.lang.String)>("parameters") >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters>
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : $r2 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("parameters", $r2, r1)
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ViewEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("parameters", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters> = r1
org.apache.ambari.server.orm.entities.ViewEntity._persistence_set_parameters : r0.<org.apache.ambari.server.orm.entities.ViewEntity: java.util.Collection parameters> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r28 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getResources()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r28 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List getResources()>() >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources>
org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r1 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : if $r1 != null
org.apache.ambari.server.view.configuration.ViewConfig.getResources : if $r1 != null >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources>
org.apache.ambari.server.view.configuration.ViewConfig.getResources : $r2 = r0.<org.apache.ambari.server.view.configuration.ViewConfig: java.util.List resources> >>>>>>>> org.apache.ambari.server.view.configuration.ViewConfig.getResources : return $r2
org.apache.ambari.server.view.configuration.ViewConfig.getResources : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r29 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type getExternalResourceType()>()
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : r29 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type getExternalResourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type externalResourceType>
org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.controller.spi.Resource$Type externalResourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getExternalResourceType : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r30 = new org.apache.ambari.server.view.ViewExternalSubResourceProvider
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : $r30 = new org.apache.ambari.server.view.ViewExternalSubResourceProvider >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r30.<org.apache.ambari.server.view.ViewExternalSubResourceProvider: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.orm.entities.ViewEntity)>(r29, r1)
org.apache.ambari.server.view.ViewRegistry.setupViewDefinition : specialinvoke $r30.<org.apache.ambari.server.view.ViewExternalSubResourceProvider: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.orm.entities.ViewEntity)>(r29, r1) >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : $r0 = new java.util.HashSet
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : $r0 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : specialinvoke $r0.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : specialinvoke $r0.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : r1 = $r0
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : r1 = $r0 >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("instance_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("instance_name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("view_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("view_name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("version")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("version") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : return r1
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getPropertyIds : return r1 >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r1 = new java.util.HashMap
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : r2 = $r1
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : r2 = $r1 >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type View>
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type View> >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "view_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, "view_name") >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r5 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewVersion>
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r5 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewVersion> >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "version")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "version") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r7 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewInstance>
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : $r7 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ViewInstance> >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "instance_name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "instance_name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, "name")
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, "name") >>>>>>>> org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : return r2
org.apache.ambari.server.view.ViewExternalSubResourceProvider._getKeyPropertyIds : return r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r48 = $r47
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r48 = $r47 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r49 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r49 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception loading view ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught exception loading view ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r51 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r51 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r54 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r54 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r55 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r55 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r53) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ")
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r58 = virtualinvoke r48.<java.lang.Throwable: java.lang.String getMessage()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r58 = virtualinvoke r48.<java.lang.Throwable: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r54, $r60)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r54, $r60) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r61 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.readViewArchive : $r61 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r61.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r53, r48)
org.apache.ambari.server.view.ViewRegistry.readViewArchive : interfaceinvoke $r61.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(r53, r48) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= (branch)]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= i1 = i1 + 1]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : i1 = i1 + 1
org.apache.ambari.server.view.ViewRegistry.readViewArchives : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r46 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getDefinitions()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r46 = virtualinvoke r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Collection getDefinitions()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r1 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions>
org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r1 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.view.ViewRegistry.getDefinitions : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinitions : return $r2
org.apache.ambari.server.view.ViewRegistry.getDefinitions : return $r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r47 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r47 = interfaceinvoke $r46.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z8 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z8 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z8 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z8 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r48 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : r49 = (org.apache.ambari.server.orm.entities.ViewEntity) $r48
org.apache.ambari.server.view.ViewRegistry.readViewArchives : r49 = (org.apache.ambari.server.orm.entities.ViewEntity) $r48 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r50 = virtualinvoke r49.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r50 = virtualinvoke r49.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getStatus : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status>
org.apache.ambari.server.orm.entities.ViewEntity.getStatus : $r1 = r0.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus status> >>>>>>>> org.apache.ambari.server.orm.entities.ViewEntity.getStatus : return $r1
org.apache.ambari.server.orm.entities.ViewEntity.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r51 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r51 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $r50 != $r51
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $r50 != $r51 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= $z8 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= $z8 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z1 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r58 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $r58 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z10 = virtualinvoke $r58.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>()
org.apache.ambari.server.view.ViewRegistry.readViewArchives : $z10 = virtualinvoke $r58.<org.apache.ambari.server.configuration.Configuration: boolean isViewRemoveUndeployedEnabled()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z10 == 0
org.apache.ambari.server.view.ViewRegistry.readViewArchives : if $z10 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= return]
org.apache.ambari.server.view.ViewRegistry.readViewArchives : goto [?= return] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l10 + 10000L
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : l0 = $l10 + 10000L >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean deploymentFailed>
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : $z0 = r0.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean deploymentFailed> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : return $z0
org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility.isDeploymentFailed : return $z0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z20 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z20 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r35 == null
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if r35 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b12 = $l11 cmp l0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b12 = $l11 cmp l0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b12 >= 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $b12 >= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0")
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : r35 = virtualinvoke r34.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String,java.lang.String)>("MY_VIEW", "1.0.0") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r1, r2)
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = staticinvoke <org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getViewName(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String)>($r3)
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.entities.ViewEntity getDefinition(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions>
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r2 = r0.<org.apache.ambari.server.view.ViewRegistry: java.util.Map viewDefinitions> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = (org.apache.ambari.server.orm.entities.ViewEntity) $r3
org.apache.ambari.server.view.ViewRegistry.getDefinition : $r4 = (org.apache.ambari.server.orm.entities.ViewEntity) $r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getDefinition : return $r4
org.apache.ambari.server.view.ViewRegistry.getDefinition : return $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()]
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : goto [?= $z20 = virtualinvoke r311.<org.apache.ambari.server.view.ViewRegistryTest$TestViewArchiveUtility: boolean isDeploymentFailed()>()] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r319 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r319 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r320 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z21 = virtualinvoke $r319.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r320)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $z21 = virtualinvoke $r319.<org.apache.ambari.view.ViewDefinition$ViewStatus: boolean equals(java.lang.Object)>($r320) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z21 != 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if $z21 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = 2
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $b13 = 2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : b1 = $b13
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : b1 = $b13 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : if z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r35)
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r35) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED>
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r321 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus DEPLOYED> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>()
org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : $r322 = virtualinvoke r35.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.view.ViewDefinition$ViewStatus getStatus()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.testReadViewArchives : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r321, $r322)
