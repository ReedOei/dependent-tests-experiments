org.apache.ambari.server.update.HostUpdateHelperTest$3.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.update.HostUpdateHelperTest$3: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelperTest$3.configure : $r2 = r0.<org.apache.ambari.server.update.HostUpdateHelperTest$3: org.apache.ambari.server.controller.AmbariManagementController val$mockAmbariManagementController>
org.apache.ambari.server.update.HostUpdateHelperTest$3.configure : $r2 = r0.<org.apache.ambari.server.update.HostUpdateHelperTest$3: org.apache.ambari.server.controller.AmbariManagementController val$mockAmbariManagementController> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelperTest$3.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.update.HostUpdateHelperTest$3.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.setHostChangesFileMap : r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap> = r1
org.apache.ambari.server.update.HostUpdateHelper.setHostChangesFileMap : r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap> = r1 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r12 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap>
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r12 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if $r12 == null
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if $r12 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r13 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap>
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r13 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $z0 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $z0 = interfaceinvoke $r13.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if $z0 == 0
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if $z0 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r17 = r0.<org.apache.ambari.server.update.HostUpdateHelper: com.google.inject.Injector injector>
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r17 = r0.<org.apache.ambari.server.update.HostUpdateHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r18 = interfaceinvoke $r17.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r18 = interfaceinvoke $r17.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r18
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r18 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if r2 == null
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if r2 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r19 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap>
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r19 = r0.<org.apache.ambari.server.update.HostUpdateHelper: java.util.Map hostChangesFileMap> >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r20 = interfaceinvoke $r19.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r3 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r3 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if $z1 == 0
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if $z1 == 0 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r21 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r21 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r4 = (java.util.Map$Entry) $r21
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r4 = (java.util.Map$Entry) $r21 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r5 = (java.lang.String) $r22
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r5 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5)
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if r6 == null
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : if r6 == null >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r39 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r39 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r40 = newarray (java.lang.Object)[1]
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r40 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r40[0] = r5
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r40[0] = r5 >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster %s was not found.", $r40)
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : $r41 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster %s was not found.", $r40) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : specialinvoke $r39.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r41)
org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : specialinvoke $r39.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.update.HostUpdateHelper.validateHostChanges : throw $r39
