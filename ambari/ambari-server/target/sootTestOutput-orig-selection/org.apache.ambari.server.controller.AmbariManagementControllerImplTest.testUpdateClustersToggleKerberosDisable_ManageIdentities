org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r0 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r2 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r2 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "com/google/inject/Injector")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "com/google/inject/Injector") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r3 = (com.google.inject.Injector) $r11
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r3 = (com.google.inject.Injector) $r11 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r4 = (org.apache.ambari.server.state.Cluster) $r12
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r4 = (org.apache.ambari.server.state.Cluster) $r12 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/actionmanager/ActionManager") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r5 = (org.apache.ambari.server.actionmanager.ActionManager) $r13
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r5 = (org.apache.ambari.server.actionmanager.ActionManager) $r13 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ClusterRequest")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/ClusterRequest") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r6 = (org.apache.ambari.server.controller.ClusterRequest) $r14
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r6 = (org.apache.ambari.server.controller.ClusterRequest) $r14 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r8 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r8 = staticinvoke <org.easymock.EasyMock: org.easymock.Capture newCapture()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r15 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r9 = (org.apache.ambari.server.controller.KerberosHelper) $r15
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r9 = (org.apache.ambari.server.controller.KerberosHelper) $r15 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke r3.<com.google.inject.Injector: void injectMembers(java.lang.Object)>($r16)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke r3.<com.google.inject.Injector: void injectMembers(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r17 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "com/google/gson/Gson")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r17 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "com/google/gson/Gson") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r20 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/MaintenanceStateHelper")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r20 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/MaintenanceStateHelper") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r23 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r23 = interfaceinvoke r3.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r24 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r24.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r26 = virtualinvoke r6.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r26 = virtualinvoke r6.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r27 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r29 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r29 = interfaceinvoke $r27.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(6)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r29.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r31 = virtualinvoke r6.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r31 = virtualinvoke r6.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r32 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r31)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r32 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r33 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r33 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r34 = interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r34 = interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r34.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r36 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r36 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r37 = interfaceinvoke $r36.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(1L)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r37 = interfaceinvoke $r36.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r38 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r37)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r38 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r39 = interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r39 = interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(2)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r39.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r41 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r41 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r42 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r41) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("cluster")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r43 = interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r43.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters times(int)>(1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r45 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r45 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r46 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r47 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r47 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r48 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r48 = interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r48.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r50 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r51 = (java.util.Map) $r50
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r51 = (java.util.Map) $r50 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addSessionAttributes(java.util.Map)>($r51)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void addSessionAttributes(java.util.Map)>($r51) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r52 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r52.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r54 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r54 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $z0 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: boolean shouldExecuteCustomOperations(org.apache.ambari.server.state.SecurityType,java.util.Map)>($r54, null)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $z0 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: boolean shouldExecuteCustomOperations(org.apache.ambari.server.state.SecurityType,java.util.Map)>($r54, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r56 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r58 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r57)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r58 = interfaceinvoke $r56.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r58.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r61 = (java.util.Map) $r60
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r61 = (java.util.Map) $r60 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $z1 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: boolean getForceToggleKerberosDirective(java.util.Map)>($r61)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $z1 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: boolean getForceToggleKerberosDirective(java.util.Map)>($r61) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r65 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r64)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r65 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r67 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r68 = (java.util.Map) $r67
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r68 = (java.util.Map) $r67 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r69 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: java.lang.Boolean getManageIdentitiesDirective(java.util.Map)>($r68)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r69 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: java.lang.Boolean getManageIdentitiesDirective(java.util.Map)>($r68) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r70 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r71 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r71 = interfaceinvoke $r70.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r71.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r73 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r73 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r74 = (org.apache.ambari.server.state.Cluster) $r73
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r74 = (org.apache.ambari.server.state.Cluster) $r73 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r75 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/SecurityType")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r75 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/state/SecurityType") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r76 = (org.apache.ambari.server.state.SecurityType) $r75
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r76 = (org.apache.ambari.server.state.SecurityType) $r75 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r77 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r77 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject(java.lang.Class)>(class "org/apache/ambari/server/controller/internal/RequestStageContainer") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r78 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r77
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r78 = (org.apache.ambari.server.controller.internal.RequestStageContainer) $r77 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $z2 = staticinvoke <org.easymock.EasyMock: boolean captureBoolean(org.easymock.Capture)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $z2 = staticinvoke <org.easymock.EasyMock: boolean captureBoolean(org.easymock.Capture)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r79 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r79 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r80 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.controller.internal.RequestStageContainer toggleKerberos(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.SecurityType,org.apache.ambari.server.controller.internal.RequestStageContainer,java.lang.Boolean)>($r74, $r76, $r78, $r79)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r80 = interfaceinvoke r9.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.controller.internal.RequestStageContainer toggleKerberos(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.SecurityType,org.apache.ambari.server.controller.internal.RequestStageContainer,java.lang.Boolean)>($r74, $r76, $r78, $r79) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r81 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r80)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r81 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r80) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r82 = interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r82 = interfaceinvoke $r81.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84 = newarray (java.lang.Object)[7]
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84 = newarray (java.lang.Object)[7] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[0] = r5
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[0] = r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[1] = r4
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[1] = r4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r85 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r85 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[2] = $r85
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[2] = $r85 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[3] = r3
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[3] = r3 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[4] = r6
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[4] = r6 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r86 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.controller.AmbariSessionManager sessionManager>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r86 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.controller.AmbariSessionManager sessionManager> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[5] = $r86
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[5] = $r86 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[6] = r9
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r84[6] = r9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r84)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r84) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r87 = new org.apache.ambari.server.controller.AmbariManagementControllerImpl
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r87 = new org.apache.ambari.server.controller.AmbariManagementControllerImpl >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r88 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r88 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : specialinvoke $r87.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: void <init>(org.apache.ambari.server.actionmanager.ActionManager,org.apache.ambari.server.state.Clusters,com.google.inject.Injector)>(r5, $r88, r3)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : specialinvoke $r87.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: void <init>(org.apache.ambari.server.actionmanager.ActionManager,org.apache.ambari.server.state.Clusters,com.google.inject.Injector)>(r5, $r88, r3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r10 = $r87
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : r10 = $r87 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>(r7, null)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : interfaceinvoke r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.RequestStatusResponse updateClusters(java.util.Set,java.util.Map)>(r7, null) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r3 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r3 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if $z0 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r5 = (org.apache.ambari.server.controller.ClusterRequest) $r16
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r5 = (org.apache.ambari.server.controller.ClusterRequest) $r16 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r17 = virtualinvoke r5.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r17 = virtualinvoke r5.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if $r17 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if $r17 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r20 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r20 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $l0 = virtualinvoke $r21.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : $l0 = virtualinvoke $r21.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r6 = interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r6 = interfaceinvoke $r20.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if r6 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if r6 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r7 = virtualinvoke r5.<org.apache.ambari.server.controller.ClusterRequest: java.util.Map getSessionAttributes()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r7 = virtualinvoke r5.<org.apache.ambari.server.controller.ClusterRequest: java.util.Map getSessionAttributes()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if r7 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : if r7 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addSessionAttributes(java.util.Map)>(r7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: void addSessionAttributes(java.util.Map)>(r7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r3 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.RequestStatusResponse updateCluster(org.apache.ambari.server.controller.ClusterRequest,java.util.Map)>(r5, r2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : r3 = specialinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.RequestStatusResponse updateCluster(org.apache.ambari.server.controller.ClusterRequest,java.util.Map)>(r5, r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r3 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r3 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r18 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r18 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r18 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r22 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r22 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a updateCluster request, clusterId=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a updateCluster request, clusterId=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r25 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r25 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r28 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r28 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", securityType=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", securityType=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r31 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r31 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r35)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r36 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r36 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r36 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r36 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r39 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r39 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r40 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r40 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $l0 = virtualinvoke $r40.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $l0 = virtualinvoke $r40.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r4 = interfaceinvoke $r39.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r4 = interfaceinvoke $r39.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getClusterById(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r41 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r41 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r42 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: java.util.Set AUTHORIZATIONS_UPDATE_CLUSTER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r43 = <org.apache.ambari.server.security.authorization.RoleAuthorization: java.util.Set AUTHORIZATIONS_UPDATE_CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: void verifyAuthorization(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r41, $r42, $r43)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: void verifyAuthorization(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r41, $r42, $r43) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.verifyAuthorization : $z0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>(r0, r1, r2)
org.apache.ambari.server.security.authorization.AuthorizationHelper.verifyAuthorization : $z0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : r0 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : r0 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : if r0 != null
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : if r0 != null >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : $r1 = interfaceinvoke r0.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : $r1 = interfaceinvoke r0.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : return $r1
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthentication : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.springframework.security.core.Authentication,org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r3, r0, r1, r2)
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.springframework.security.core.Authentication,org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r3, r0, r1, r2) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r3 == null
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r3 == null >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z1 = interfaceinvoke r3.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z1 == 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r0 != null
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r0 != null >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r15 = interfaceinvoke r0.<org.springframework.security.core.Authentication: java.util.Collection getAuthorities()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r15 = interfaceinvoke r0.<org.springframework.security.core.Authentication: java.util.Collection getAuthorities()>() >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.getAuthorities : $r1 = <org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: java.util.Collection AUTHORITIES>
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.getAuthorities : $r1 = <org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: java.util.Collection AUTHORITIES> >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.getAuthorities : return $r1
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.getAuthorities : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r4 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z2 == 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r5 = (org.springframework.security.core.GrantedAuthority) $r16
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r5 = (org.springframework.security.core.GrantedAuthority) $r16 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r6 = (org.apache.ambari.server.security.authorization.AmbariGrantedAuthority) r5
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r6 = (org.apache.ambari.server.security.authorization.AmbariGrantedAuthority) r5 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r7 = virtualinvoke r6.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity getPrivilegeEntity()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r7 = virtualinvoke r6.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity getPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : return $r1
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity getResource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity _persistence_get_resource()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_resource : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.getResource : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r17 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r17 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity getResourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>()
org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity _persistence_get_resourceType()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetched(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_get_resourceType : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : return $r1
org.apache.ambari.server.orm.entities.ResourceEntity.getResourceType : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r18 = virtualinvoke $r17.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>()
org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String _persistence_get_name()>() >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetched(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : $r1 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_get_name : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : return $r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity.getName : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r9 = staticinvoke <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType translate(java.lang.String)>($r18)
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r9 = staticinvoke <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType translate(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : if r0 != null
org.apache.ambari.server.security.authorization.ResourceType.translate : if r0 != null >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.security.authorization.ResourceType.translate : r2 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.authorization.ResourceType.translate : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : if $z0 == 0
org.apache.ambari.server.security.authorization.ResourceType.translate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.security.authorization.ResourceType.translate : $r3 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : $r4 = staticinvoke <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.security.authorization.ResourceType.translate : $r4 = staticinvoke <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/security/authorization/ResourceType", r0)
org.apache.ambari.server.security.authorization.ResourceType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/security/authorization/ResourceType", r0) >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.valueOf : $r2 = (org.apache.ambari.server.security.authorization.ResourceType) $r1
org.apache.ambari.server.security.authorization.ResourceType.valueOf : $r2 = (org.apache.ambari.server.security.authorization.ResourceType) $r1 >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.valueOf : return $r2
org.apache.ambari.server.security.authorization.ResourceType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.translate : return $r4
org.apache.ambari.server.security.authorization.ResourceType.translate : return $r4 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r19 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r19 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $r19 != r9
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $r19 != r9 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : z0 = 1
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : z0 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : goto [?= (branch)]
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if z0 == 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r10 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r10 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r10 != null
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r10 != null >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r21 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection getAuthorizations()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r21 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection getAuthorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getAuthorizations : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection _persistence_get_authorizations()>()
org.apache.ambari.server.orm.entities.PermissionEntity.getAuthorizations : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection _persistence_get_authorizations()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_authorizations : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getAuthorizations : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity.getAuthorizations : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r11 = $r21
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r11 = $r21 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r11 == null
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if r11 == null >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z5 == 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r22 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r22 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r13 = (org.apache.ambari.server.orm.entities.RoleAuthorizationEntity) $r22
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : r13 = (org.apache.ambari.server.orm.entities.RoleAuthorizationEntity) $r22 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r23 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String getAuthorizationId()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r23 = virtualinvoke r13.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String getAuthorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r24 = staticinvoke <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization translate(java.lang.String)>($r23)
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $r24 = staticinvoke <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization translate(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : if r0 != null
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : if r0 != null >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : if $z0 == 0
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "_")
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "_") >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $r4 = staticinvoke <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization valueOf(java.lang.String)>($r3)
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : $r4 = staticinvoke <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization", r0)
org.apache.ambari.server.security.authorization.RoleAuthorization.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization", r0) >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.valueOf : $r2 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.valueOf : $r2 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r1 >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.valueOf : return $r2
org.apache.ambari.server.security.authorization.RoleAuthorization.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.translate : return $r4
org.apache.ambari.server.security.authorization.RoleAuthorization.translate : return $r4 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r24)
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z6 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z6 == 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : if $z6 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : goto [?= $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z7 = 1
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : $z7 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : return $z7
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : return $z7 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : return $z0
org.apache.ambari.server.security.authorization.AuthorizationHelper.isAuthorized : return $z0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.verifyAuthorization : if $z0 != 0
org.apache.ambari.server.security.authorization.AuthorizationHelper.verifyAuthorization : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r44 = new java.util.LinkedList
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r44 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : specialinvoke $r44.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : specialinvoke $r44.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r5 = $r44
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r5 = $r44 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r6 = null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r6 = null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r45 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.List getDesiredConfig()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r45 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.List getDesiredConfig()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r45 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r45 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r53 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r53 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r54 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r54 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z1 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r54)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z1 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z1 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r55 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r55 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z2 = interfaceinvoke $r55.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z2 = interfaceinvoke $r55.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z2 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r65 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r65 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r66 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization AMBARI_RENAME_CLUSTER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r66 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization AMBARI_RENAME_CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r67 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r66)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r67 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r66) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r65, null, $r67)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z3 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r65, null, $r67) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z3 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r69 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r69 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setClusterName(java.lang.String)>($r69)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setClusterName(java.lang.String)>($r69) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : z4 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : z4 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r70 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.List getDesiredConfig()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r70 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.List getDesiredConfig()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r70 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r70 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r160 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r160 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r161 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r161 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r160 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r160 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r162 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r162 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r163 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r163 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r164 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r164 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_UPGRADE_DOWNGRADE_STACK> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r165 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r164)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r165 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r164) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z27 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r162, $r163, $r165)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z27 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r162, $r163, $r165) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z27 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z27 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r161)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setCurrentStackVersion(org.apache.ambari.server.state.StackId)>(r161) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r167 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r167 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.util.Set getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r167 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r167 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z29 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z29 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : z30 = $z29
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : z30 = $z29 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if z30 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if z30 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r172 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getProvisioningState()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r172 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: java.lang.String getProvisioningState()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if null == $r172
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if null == $r172 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r203 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.controller.ServiceConfigVersionRequest getServiceConfigVersionRequest()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r203 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.controller.ServiceConfigVersionRequest getServiceConfigVersionRequest()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if null == $r203
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if null == $r203 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r6 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r6 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r228 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r228 = virtualinvoke r1.<org.apache.ambari.server.controller.ClusterRequest: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r228 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r228 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r229 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r229 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z35 = interfaceinvoke $r229.<org.apache.ambari.server.controller.KerberosHelper: boolean shouldExecuteCustomOperations(org.apache.ambari.server.state.SecurityType,java.util.Map)>(r228, r2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z35 = interfaceinvoke $r229.<org.apache.ambari.server.controller.KerberosHelper: boolean shouldExecuteCustomOperations(org.apache.ambari.server.state.SecurityType,java.util.Map)>(r228, r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z35 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z35 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r242 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r242 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : z37 = interfaceinvoke $r242.<org.apache.ambari.server.controller.KerberosHelper: boolean getForceToggleKerberosDirective(java.util.Map)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : z37 = interfaceinvoke $r242.<org.apache.ambari.server.controller.KerberosHelper: boolean getForceToggleKerberosDirective(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if z37 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if z37 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r243 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r243 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r243 == r228
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $r243 == r228 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r244 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r244 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r246 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r246 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r247 = virtualinvoke $r246.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r247 = virtualinvoke $r246.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245[0] = $r247
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245[0] = $r247 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r248 = virtualinvoke r228.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r248 = virtualinvoke r228.<org.apache.ambari.server.state.SecurityType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245[1] = $r248
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245[1] = $r248 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r249 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z37)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r249 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z37) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245[2] = $r249
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r245[2] = $r249 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke $r244.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Received cluster security type change request from {} to {} (forced: {})", $r245)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke $r244.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Received cluster security type change request from {} to {} (forced: {})", $r245) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r250 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r250 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r228 == $r250
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r228 == $r250 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r251 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r251 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType NONE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r228 != $r251
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r228 != $r251 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r252 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r252 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r253 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r253 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r254 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r254 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization CLUSTER_TOGGLE_KERBEROS> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r255 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r254)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r255 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r254) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z38 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r252, $r253, $r255)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $z38 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,java.util.Set)>($r252, $r253, $r255) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z38 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if $z38 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r257 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r257 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r258 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r258 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r259 = interfaceinvoke $r258.<org.apache.ambari.server.controller.KerberosHelper: java.lang.Boolean getManageIdentitiesDirective(java.util.Map)>(r2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : $r259 = interfaceinvoke $r258.<org.apache.ambari.server.controller.KerberosHelper: java.lang.Boolean getManageIdentitiesDirective(java.util.Map)>(r2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r3 = interfaceinvoke $r257.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.controller.internal.RequestStageContainer toggleKerberos(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.SecurityType,org.apache.ambari.server.controller.internal.RequestStageContainer,java.lang.Boolean)>(r4, r228, r3, $r259)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : r3 = interfaceinvoke $r257.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.controller.internal.RequestStageContainer toggleKerberos(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.SecurityType,org.apache.ambari.server.controller.internal.RequestStageContainer,java.lang.Boolean)>(r4, r228, r3, $r259) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : goto [?= interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setSecurityType(org.apache.ambari.server.state.SecurityType)>(r228)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : goto [?= interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setSecurityType(org.apache.ambari.server.state.SecurityType)>(r228)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setSecurityType(org.apache.ambari.server.state.SecurityType)>(r228)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: void setSecurityType(org.apache.ambari.server.state.SecurityType)>(r228) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r3 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : if r3 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : return null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateCluster : return null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : return r3
org.apache.ambari.server.controller.AmbariManagementControllerImpl.updateClusters : return r3 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r90 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r90 = virtualinvoke r2.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r10, $r90)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>(r10, $r90) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r91 = virtualinvoke r8.<org.easymock.Capture: java.lang.Object getValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r91 = virtualinvoke r8.<org.easymock.Capture: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r91)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>(r1, $r91) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92 = newarray (java.lang.Object)[7]
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92 = newarray (java.lang.Object)[7] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[0] = r5
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[0] = r5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[1] = r4
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[1] = r4 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r93 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r93 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[2] = $r93
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[2] = $r93 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[3] = r3
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[3] = r3 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[4] = r6
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[4] = r6 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r94 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.controller.AmbariSessionManager sessionManager>
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r94 = <org.apache.ambari.server.controller.AmbariManagementControllerImplTest: org.apache.ambari.server.controller.AmbariSessionManager sessionManager> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[5] = $r94
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[5] = $r94 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[6] = r9
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : $r92[6] = r9 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.testUpdateClustersToggleKerberosDisable : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r92)
