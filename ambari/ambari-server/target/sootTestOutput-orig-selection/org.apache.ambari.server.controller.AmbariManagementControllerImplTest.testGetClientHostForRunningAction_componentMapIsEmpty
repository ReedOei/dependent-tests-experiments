org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r0 = new org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin")
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : specialinvoke $r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void <init>(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : r1 = $r0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : virtualinvoke r1.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: void setAuthenticated(boolean)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0
org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken.setAuthenticated : r0.<org.apache.ambari.server.security.authorization.internal.InternalAuthenticationToken: boolean authenticated> = z0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : $r2 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImplTest.setupAuthentication : interfaceinvoke $r2.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : if r3 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : if r3 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : $r6 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : $r6 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: java.util.Map getServiceComponentHosts()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : $z0 = interfaceinvoke $r6.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : if $z0 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.getClientHostForRunningAction : return null
