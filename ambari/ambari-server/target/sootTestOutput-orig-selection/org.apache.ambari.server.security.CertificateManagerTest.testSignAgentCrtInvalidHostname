org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r2 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r1 = new org.apache.ambari.server.security.CertificateManagerTest$2
org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r1 = new org.apache.ambari.server.security.CertificateManagerTest$2 >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : specialinvoke $r1.<org.apache.ambari.server.security.CertificateManagerTest$2: void <init>(org.apache.ambari.server.security.CertificateManagerTest)>(r0)
org.apache.ambari.server.security.CertificateManagerTest.getInjector : specialinvoke $r1.<org.apache.ambari.server.security.CertificateManagerTest$2: void <init>(org.apache.ambari.server.security.CertificateManagerTest)>(r0) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r2[0] = $r1
org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r2[0] = $r1 >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r2)
org.apache.ambari.server.security.CertificateManagerTest.getInjector : $r3 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r2) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r2 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0>
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r2 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0> >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r3 = virtualinvoke $r2.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.CertificateManagerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r5 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0>
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r5 = r0.<org.apache.ambari.server.security.CertificateManagerTest$2: org.apache.ambari.server.security.CertificateManagerTest this$0> >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.security.CertificateManagerTest$2.configure : $r6 = virtualinvoke $r5.<org.apache.ambari.server.security.CertificateManagerTest: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.security.CertificateManagerTest$2.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.CertificateManagerTest.getInjector : return $r3
org.apache.ambari.server.security.CertificateManagerTest.getInjector : return $r3 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r4 = new org.apache.ambari.server.security.SignCertResponse
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r4 = new org.apache.ambari.server.security.SignCertResponse >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : specialinvoke $r4.<org.apache.ambari.server.security.SignCertResponse: void <init>()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : specialinvoke $r4.<org.apache.ambari.server.security.SignCertResponse: void <init>()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : r5 = $r4
org.apache.ambari.server.security.CertificateManager.signAgentCrt : r5 = $r4 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r19 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r19 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>("Signing agent certificate")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>("Signing agent certificate") >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : r20 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r1)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : r20 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r20)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r20) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z0 == 0
org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r22 = r0.<org.apache.ambari.server.security.CertificateManager: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r22 = r0.<org.apache.ambari.server.security.CertificateManager: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z1 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration: boolean validateAgentHostnames()>()
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z1 = virtualinvoke $r22.<org.apache.ambari.server.configuration.Configuration: boolean validateAgentHostnames()>() >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z1 == 0
org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r23 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r23 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating agent hostname: {}", r20)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r23.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Validating agent hostname: {}", r20) >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z2 = staticinvoke <org.apache.ambari.server.utils.HostUtils: boolean isValidHostname(java.lang.String)>(r20)
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $z2 = staticinvoke <org.apache.ambari.server.utils.HostUtils: boolean isValidHostname(java.lang.String)>(r20) >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : if r0 == null
org.apache.ambari.server.utils.HostUtils.isValidHostname : if r0 == null >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : $r1 = <org.apache.ambari.server.utils.HostUtils: java.util.regex.Pattern REGEX_VALID_HOSTNAME>
org.apache.ambari.server.utils.HostUtils.isValidHostname : $r1 = <org.apache.ambari.server.utils.HostUtils: java.util.regex.Pattern REGEX_VALID_HOSTNAME> >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0)
org.apache.ambari.server.utils.HostUtils.isValidHostname : $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0) >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>()
org.apache.ambari.server.utils.HostUtils.isValidHostname : $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>() >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : if $z0 == 0
org.apache.ambari.server.utils.HostUtils.isValidHostname : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : $z1 = 0
org.apache.ambari.server.utils.HostUtils.isValidHostname : $z1 = 0 >>>>>>>> org.apache.ambari.server.utils.HostUtils.isValidHostname : return $z1
org.apache.ambari.server.utils.HostUtils.isValidHostname : return $z1 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z2 != 0
org.apache.ambari.server.security.CertificateManager.signAgentCrt : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r24 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG>
org.apache.ambari.server.security.CertificateManager.signAgentCrt : $r24 = <org.apache.ambari.server.security.CertificateManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>("The agent hostname is not a valid hostname")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>("The agent hostname is not a valid hostname") >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke r5.<org.apache.ambari.server.security.SignCertResponse: void setResult(java.lang.String)>("ERROR")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke r5.<org.apache.ambari.server.security.SignCertResponse: void setResult(java.lang.String)>("ERROR") >>>>>>>> org.apache.ambari.server.security.SignCertResponse.setResult : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result> = r1
org.apache.ambari.server.security.SignCertResponse.setResult : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result> = r1 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke r5.<org.apache.ambari.server.security.SignCertResponse: void setMessage(java.lang.String)>("The agent hostname is not a valid hostname")
org.apache.ambari.server.security.CertificateManager.signAgentCrt : virtualinvoke r5.<org.apache.ambari.server.security.SignCertResponse: void setMessage(java.lang.String)>("The agent hostname is not a valid hostname") >>>>>>>> org.apache.ambari.server.security.SignCertResponse.setMessage : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message> = r1
org.apache.ambari.server.security.SignCertResponse.setMessage : r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message> = r1 >>>>>>>> org.apache.ambari.server.security.CertificateManager.signAgentCrt : return r5
org.apache.ambari.server.security.CertificateManager.signAgentCrt : return r5 >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getResult : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result>
org.apache.ambari.server.security.SignCertResponse.getResult : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String result> >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getResult : return $r1
org.apache.ambari.server.security.SignCertResponse.getResult : return $r1 >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getMessage : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message>
org.apache.ambari.server.security.SignCertResponse.getMessage : $r1 = r0.<org.apache.ambari.server.security.SignCertResponse: java.lang.String message> >>>>>>>> org.apache.ambari.server.security.SignCertResponse.getMessage : return $r1
