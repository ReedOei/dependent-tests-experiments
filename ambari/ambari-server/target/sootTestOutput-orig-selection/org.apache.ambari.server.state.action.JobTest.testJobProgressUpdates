org.apache.ambari.server.state.action.JobTest.createNewJob : $r2 = new org.apache.ambari.server.state.action.ActionId >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : $r3 = new org.apache.ambari.server.state.action.ActionType
org.apache.ambari.server.state.action.JobTest.createNewJob : $r3 = new org.apache.ambari.server.state.action.ActionType >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : specialinvoke $r3.<org.apache.ambari.server.state.action.ActionType: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.state.action.JobTest.createNewJob : specialinvoke $r3.<org.apache.ambari.server.state.action.ActionType: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : specialinvoke $r2.<org.apache.ambari.server.state.action.ActionId: void <init>(long,org.apache.ambari.server.state.action.ActionType)>(l0, $r3)
org.apache.ambari.server.state.action.JobTest.createNewJob : specialinvoke $r2.<org.apache.ambari.server.state.action.ActionId: void <init>(long,org.apache.ambari.server.state.action.ActionType)>(l0, $r3) >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : r4 = $r2
org.apache.ambari.server.state.action.JobTest.createNewJob : r4 = $r2 >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : $r6 = new org.apache.ambari.server.state.action.ActionImpl
org.apache.ambari.server.state.action.JobTest.createNewJob : $r6 = new org.apache.ambari.server.state.action.ActionImpl >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : specialinvoke $r6.<org.apache.ambari.server.state.action.ActionImpl: void <init>(org.apache.ambari.server.state.action.ActionId,long)>(r4, l1)
org.apache.ambari.server.state.action.JobTest.createNewJob : specialinvoke $r6.<org.apache.ambari.server.state.action.ActionImpl: void <init>(org.apache.ambari.server.state.action.ActionId,long)>(r4, l1) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r2 = new org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine
org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r2 = new org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r3 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum defaultInitialState>
org.apache.ambari.server.state.fsm.StateMachineFactory.make : $r3 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum defaultInitialState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : specialinvoke $r2.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: void <init>(org.apache.ambari.server.state.fsm.StateMachineFactory,java.lang.Object,java.lang.Enum)>(r0, r1, $r3)
org.apache.ambari.server.state.fsm.StateMachineFactory.make : specialinvoke $r2.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: void <init>(org.apache.ambari.server.state.fsm.StateMachineFactory,java.lang.Object,java.lang.Enum)>(r0, r1, $r3) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : $z0 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: boolean optimized>
org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : $z0 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: boolean optimized> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : return $z0
org.apache.ambari.server.state.fsm.StateMachineFactory.access$100 : return $z0 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.make : return $r2
org.apache.ambari.server.state.fsm.StateMachineFactory.make : return $r2 >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : r5 = $r6
org.apache.ambari.server.state.action.JobTest.createNewJob : r5 = $r6 >>>>>>>> org.apache.ambari.server.state.action.JobTest.createNewJob : return r5
org.apache.ambari.server.state.action.JobTest.createNewJob : return r5 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyNewJob : $r2 = <org.apache.ambari.server.state.action.ActionState: org.apache.ambari.server.state.action.ActionState INIT>
org.apache.ambari.server.state.action.JobTest.verifyNewJob : $r2 = <org.apache.ambari.server.state.action.ActionState: org.apache.ambari.server.state.action.ActionState INIT> >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyNewJob : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: org.apache.ambari.server.state.action.ActionState getState()>()
org.apache.ambari.server.state.action.JobTest.verifyNewJob : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: org.apache.ambari.server.state.action.ActionState getState()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getState : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.action.ActionImpl.getState : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : $r4 = r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.fsm.StateMachine stateMachine>
org.apache.ambari.server.state.action.ActionImpl.getState : $r4 = r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.fsm.StateMachine stateMachine> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.fsm.StateMachine: java.lang.Enum getCurrentState()>()
org.apache.ambari.server.state.action.ActionImpl.getState : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.fsm.StateMachine: java.lang.Enum getCurrentState()>() >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.getCurrentState : $r1 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState>
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.getCurrentState : $r1 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.getCurrentState : return $r1
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.getCurrentState : return $r1 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : r1 = (org.apache.ambari.server.state.action.ActionState) $r5
org.apache.ambari.server.state.action.ActionImpl.getState : r1 = (org.apache.ambari.server.state.action.ActionState) $r5 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : $r6 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getState : $r6 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.action.ActionImpl.getState : interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getState : return r1
org.apache.ambari.server.state.action.ActionImpl.getState : return r1 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyNewJob : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3)
org.apache.ambari.server.state.action.JobTest.verifyNewJob : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3) >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyNewJob : $l1 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: long getStartTime()>()
org.apache.ambari.server.state.action.JobTest.verifyNewJob : $l1 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: long getStartTime()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getStartTime : $r2 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getStartTime : $r2 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getStartTime : interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.action.ActionImpl.getStartTime : interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getStartTime : l0 = r0.<org.apache.ambari.server.state.action.ActionImpl: long startTime>
org.apache.ambari.server.state.action.ActionImpl.getStartTime : l0 = r0.<org.apache.ambari.server.state.action.ActionImpl: long startTime> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getStartTime : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getStartTime : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getStartTime : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.action.ActionImpl.getStartTime : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getStartTime : return l0
org.apache.ambari.server.state.action.ActionImpl.getStartTime : return l0 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyNewJob : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(l0, $l1)
org.apache.ambari.server.state.action.JobTest.verifyNewJob : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(l0, $l1) >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r2 = new org.apache.ambari.server.state.action.ActionProgressUpdateEvent
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r2 = new org.apache.ambari.server.state.action.ActionProgressUpdateEvent >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: org.apache.ambari.server.state.action.ActionId getId()>()
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: org.apache.ambari.server.state.action.ActionId getId()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getId : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getId : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getId : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.action.ActionImpl.getId : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getId : r1 = r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionId id>
org.apache.ambari.server.state.action.ActionImpl.getId : r1 = r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionId id> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getId : $r4 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getId : $r4 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getId : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.action.ActionImpl.getId : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getId : return r1
org.apache.ambari.server.state.action.ActionImpl.getId : return r1 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : specialinvoke $r2.<org.apache.ambari.server.state.action.ActionProgressUpdateEvent: void <init>(org.apache.ambari.server.state.action.ActionId,long)>($r4, l0)
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : specialinvoke $r2.<org.apache.ambari.server.state.action.ActionProgressUpdateEvent: void <init>(org.apache.ambari.server.state.action.ActionId,long)>($r4, l0) >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : r3 = $r2
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: void handleEvent(org.apache.ambari.server.state.action.ActionEvent)>(r3)
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: void handleEvent(org.apache.ambari.server.state.action.ActionEvent)>(r3) >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r2 = <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r2 = <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : if $z0 == 0
org.apache.ambari.server.state.action.ActionImpl.handleEvent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : r4 = virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionState getState()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : r4 = virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionState getState()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r17 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock>
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r17 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : interfaceinvoke $r17.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r18 = r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.fsm.StateMachine stateMachine>
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r18 = r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.fsm.StateMachine stateMachine> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.action.ActionEvent: java.lang.Enum getType()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r19 = virtualinvoke r1.<org.apache.ambari.server.state.action.ActionEvent: java.lang.Enum getType()>() >>>>>>>> org.apache.ambari.server.state.fsm.event.AbstractEvent.getType : $r1 = r0.<org.apache.ambari.server.state.fsm.event.AbstractEvent: java.lang.Enum type>
org.apache.ambari.server.state.fsm.event.AbstractEvent.getType : $r1 = r0.<org.apache.ambari.server.state.fsm.event.AbstractEvent: java.lang.Enum type> >>>>>>>> org.apache.ambari.server.state.fsm.event.AbstractEvent.getType : return $r1
org.apache.ambari.server.state.fsm.event.AbstractEvent.getType : return $r1 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : interfaceinvoke $r18.<org.apache.ambari.server.state.fsm.StateMachine: java.lang.Enum doTransition(java.lang.Enum,java.lang.Object)>($r19, r1)
org.apache.ambari.server.state.action.ActionImpl.handleEvent : interfaceinvoke $r18.<org.apache.ambari.server.state.fsm.StateMachine: java.lang.Enum doTransition(java.lang.Enum,java.lang.Object)>($r19, r1) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r3 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: org.apache.ambari.server.state.fsm.StateMachineFactory this$0>
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r3 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: org.apache.ambari.server.state.fsm.StateMachineFactory this$0> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r4 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Object operand>
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r4 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Object operand> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r5 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState>
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r5 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r6 = staticinvoke <org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum access$300(org.apache.ambari.server.state.fsm.StateMachineFactory,java.lang.Object,java.lang.Enum,java.lang.Enum,java.lang.Object)>($r3, $r4, $r5, r1, r2)
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r6 = staticinvoke <org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum access$300(org.apache.ambari.server.state.fsm.StateMachineFactory,java.lang.Object,java.lang.Enum,java.lang.Enum,java.lang.Object)>($r3, $r4, $r5, r1, r2) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.access$300 : $r5 = specialinvoke r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum doTransition(java.lang.Object,java.lang.Enum,java.lang.Enum,java.lang.Object)>(r1, r2, r3, r4)
org.apache.ambari.server.state.fsm.StateMachineFactory.access$300 : $r5 = specialinvoke r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.lang.Enum doTransition(java.lang.Object,java.lang.Enum,java.lang.Enum,java.lang.Object)>(r1, r2, r3, r4) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r7 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.util.Map stateMachineTable>
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r7 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory: java.util.Map stateMachineTable> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : r5 = (java.util.Map) $r8
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : r5 = (java.util.Map) $r8 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : if r5 == null
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : if r5 == null >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r9 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r9 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : r6 = (org.apache.ambari.server.state.fsm.StateMachineFactory$Transition) $r9
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : r6 = (org.apache.ambari.server.state.fsm.StateMachineFactory$Transition) $r9 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : if r6 == null
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : if r6 == null >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r10 = interfaceinvoke r6.<org.apache.ambari.server.state.fsm.StateMachineFactory$Transition: java.lang.Enum doTransition(java.lang.Object,java.lang.Enum,java.lang.Object,java.lang.Enum)>(r1, r2, r4, r3)
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : $r10 = interfaceinvoke r6.<org.apache.ambari.server.state.fsm.StateMachineFactory$Transition: java.lang.Enum doTransition(java.lang.Object,java.lang.Enum,java.lang.Object,java.lang.Enum)>(r1, r2, r4, r3) >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : $r5 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc: org.apache.ambari.server.state.fsm.SingleArcTransition hook>
org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : $r5 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc: org.apache.ambari.server.state.fsm.SingleArcTransition hook> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : if $r5 == null
org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : if $r5 == null >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : $r6 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc: org.apache.ambari.server.state.fsm.SingleArcTransition hook>
org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : $r6 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc: org.apache.ambari.server.state.fsm.SingleArcTransition hook> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : interfaceinvoke $r6.<org.apache.ambari.server.state.fsm.SingleArcTransition: void transition(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : interfaceinvoke $r6.<org.apache.ambari.server.state.fsm.SingleArcTransition: void transition(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $r3 = (org.apache.ambari.server.state.action.ActionImpl) r1
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $r3 = (org.apache.ambari.server.state.action.ActionImpl) r1 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $r4 = (org.apache.ambari.server.state.action.ActionEvent) r2
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $r4 = (org.apache.ambari.server.state.action.ActionEvent) r2 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition: void transition(org.apache.ambari.server.state.action.ActionImpl,org.apache.ambari.server.state.action.ActionEvent)>($r3, $r4)
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition: void transition(org.apache.ambari.server.state.action.ActionImpl,org.apache.ambari.server.state.action.ActionEvent)>($r3, $r4) >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : r3 = (org.apache.ambari.server.state.action.ActionProgressUpdateEvent) r2
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : r3 = (org.apache.ambari.server.state.action.ActionProgressUpdateEvent) r2 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $l0 = virtualinvoke r3.<org.apache.ambari.server.state.action.ActionProgressUpdateEvent: long getProgressUpdateTime()>()
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $l0 = virtualinvoke r3.<org.apache.ambari.server.state.action.ActionProgressUpdateEvent: long getProgressUpdateTime()>() >>>>>>>> org.apache.ambari.server.state.action.ActionProgressUpdateEvent.getProgressUpdateTime : $l0 = r0.<org.apache.ambari.server.state.action.ActionProgressUpdateEvent: long progressUpdateTime>
org.apache.ambari.server.state.action.ActionProgressUpdateEvent.getProgressUpdateTime : $l0 = r0.<org.apache.ambari.server.state.action.ActionProgressUpdateEvent: long progressUpdateTime> >>>>>>>> org.apache.ambari.server.state.action.ActionProgressUpdateEvent.getProgressUpdateTime : return $l0
org.apache.ambari.server.state.action.ActionProgressUpdateEvent.getProgressUpdateTime : return $l0 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : virtualinvoke r1.<org.apache.ambari.server.state.action.ActionImpl: void setLastUpdateTime(long)>($l0)
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : virtualinvoke r1.<org.apache.ambari.server.state.action.ActionImpl: void setLastUpdateTime(long)>($l0) >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : $r2 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock>
org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : $r2 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : r0.<org.apache.ambari.server.state.action.ActionImpl: long lastUpdateTime> = l0
org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : r0.<org.apache.ambari.server.state.action.ActionImpl: long lastUpdateTime> = l0 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock>
org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : goto [?= return]
org.apache.ambari.server.state.action.ActionImpl.setLastUpdateTime : goto [?= return] >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $r4 = staticinvoke <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log access$200()>()
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $r4 = staticinvoke <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log access$200()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.access$200 : $r0 = <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.state.action.ActionImpl.access$200 : $r0 = <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.access$200 : return $r0
org.apache.ambari.server.state.action.ActionImpl.access$200 : return $r0 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : if $z0 == 0
org.apache.ambari.server.state.action.ActionImpl$ActionProgressUpdateTransition.transition : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : $r7 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc: java.lang.Enum postState>
org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : $r7 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc: java.lang.Enum postState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : return $r7
org.apache.ambari.server.state.fsm.StateMachineFactory$SingleInternalArc.doTransition : return $r7 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : return $r10
org.apache.ambari.server.state.fsm.StateMachineFactory.doTransition : return $r10 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory.access$300 : return $r5
org.apache.ambari.server.state.fsm.StateMachineFactory.access$300 : return $r5 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> = $r6
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> = $r6 >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r7 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState>
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : $r7 = r0.<org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine: java.lang.Enum currentState> >>>>>>>> org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : return $r7
org.apache.ambari.server.state.fsm.StateMachineFactory$InternalStateMachine.doTransition : return $r7 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : goto [?= $r35 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock>]
org.apache.ambari.server.state.action.ActionImpl.handleEvent : goto [?= $r35 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock>] >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r35 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock>
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r35 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock writeLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : interfaceinvoke $r35.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : interfaceinvoke $r35.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : goto [?= $r38 = virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionState getState()>()]
org.apache.ambari.server.state.action.ActionImpl.handleEvent : goto [?= $r38 = virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionState getState()>()] >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r38 = virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionState getState()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r38 = virtualinvoke r0.<org.apache.ambari.server.state.action.ActionImpl: org.apache.ambari.server.state.action.ActionState getState()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : if r4 == $r38
org.apache.ambari.server.state.action.ActionImpl.handleEvent : if r4 == $r38 >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r39 = <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $r39 = <org.apache.ambari.server.state.action.ActionImpl: org.apache.commons.logging.Log LOG> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : $z1 = interfaceinvoke $r39.<org.apache.commons.logging.Log: boolean isDebugEnabled()>()
org.apache.ambari.server.state.action.ActionImpl.handleEvent : $z1 = interfaceinvoke $r39.<org.apache.commons.logging.Log: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.handleEvent : if $z1 == 0
org.apache.ambari.server.state.action.ActionImpl.handleEvent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r5 = <org.apache.ambari.server.state.action.ActionState: org.apache.ambari.server.state.action.ActionState IN_PROGRESS>
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r5 = <org.apache.ambari.server.state.action.ActionState: org.apache.ambari.server.state.action.ActionState IN_PROGRESS> >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: org.apache.ambari.server.state.action.ActionState getState()>()
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: org.apache.ambari.server.state.action.ActionState getState()>() >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6)
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $l1 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: long getLastUpdateTime()>()
org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : $l1 = interfaceinvoke r1.<org.apache.ambari.server.state.action.Action: long getLastUpdateTime()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : $r2 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : $r2 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : l0 = r0.<org.apache.ambari.server.state.action.ActionImpl: long lastUpdateTime>
org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : l0 = r0.<org.apache.ambari.server.state.action.ActionImpl: long lastUpdateTime> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock>
org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : $r3 = r0.<org.apache.ambari.server.state.action.ActionImpl: java.util.concurrent.locks.Lock readLock> >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : return l0
org.apache.ambari.server.state.action.ActionImpl.getLastUpdateTime : return l0 >>>>>>>> org.apache.ambari.server.state.action.JobTest.verifyProgressUpdate : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(l0, $l1)
