org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/KerberosHelper") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/serveraction/kerberos/KerberosServerAction")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/serveraction/kerberos/KerberosServerAction") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r4 = new org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1$1
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r4 = new org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1$1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : specialinvoke $r4.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1$1: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : specialinvoke $r4.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1$1: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r3.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r5 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: org.apache.ambari.server.state.Clusters val$clusters>
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: org.apache.ambari.server.state.Clusters val$clusters> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r7 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10)
org.apache.ambari.server.serveraction.kerberos.KerberosServerActionTest$1.configure : interfaceinvoke $r9.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: boolean isClosed()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $z0 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: boolean isClosed()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : if $r1 != null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $z0 = 1
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : $z0 = 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : goto [?= return $z0]
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : return $z0
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.isClosed : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r3 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $r3 != null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r5 = new org.apache.commons.csv.CSVPrinter
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r5 = new org.apache.commons.csv.CSVPrinter >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r1 = new java.io.FileWriter
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r1 = new java.io.FileWriter >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r6 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r1.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r6, 1)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r1.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r6, 1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r7 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r7 = <org.apache.commons.csv.CSVFormat: org.apache.commons.csv.CSVFormat DEFAULT> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r5.<org.apache.commons.csv.CSVPrinter: void <init>(java.lang.Appendable,org.apache.commons.csv.CSVFormat)>($r1, $r7)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : specialinvoke $r5.<org.apache.commons.csv.CSVPrinter: void <init>(java.lang.Appendable,org.apache.commons.csv.CSVFormat)>($r1, $r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = $r5
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r8 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.io.File file> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $l0 = virtualinvoke $r8.<java.io.File: long length()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $l0 = virtualinvoke $r8.<java.io.File: long length()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $b1 = $l0 cmp 0L
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $b1 = $l0 cmp 0L >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $b1 != 0
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : if $b1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.lang.Iterable getHeaderRecord()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: java.lang.Iterable getHeaderRecord()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1 = newarray (java.lang.String)[11]
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1 = newarray (java.lang.String)[11] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[0] = "hostname"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[0] = "hostname" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[1] = "service"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[1] = "service" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[2] = "component"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[2] = "component" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[3] = "principal"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[3] = "principal" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[4] = "principal_type"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[4] = "principal_type" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[5] = "keytab_file_path"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[5] = "keytab_file_path" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[6] = "keytab_file_owner_name"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[6] = "keytab_file_owner_name" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[7] = "keytab_file_owner_access"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[7] = "keytab_file_owner_access" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[8] = "keytab_file_group_name"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[8] = "keytab_file_group_name" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[9] = "keytab_file_group_access"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[9] = "keytab_file_group_access" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[10] = "keytab_file_is_cachable"
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r1[10] = "keytab_file_is_cachable" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1)
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.getHeaderRecord : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : $r9 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : virtualinvoke $r9.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>(r2)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.open : virtualinvoke $r9.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Iterable)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12 = newarray (java.lang.String)[11]
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12 = newarray (java.lang.String)[11] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[0] = r1
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[1] = r2
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[1] = r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[2] = r3
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[2] = r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[3] = r4
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[3] = r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[4] = r5
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[4] = r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[5] = r6
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[5] = r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[6] = r7
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[6] = r7 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[7] = r8
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[7] = r8 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[8] = r9
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[8] = r9 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[9] = r10
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[9] = r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[10] = r11
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : $r12[10] = r11 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: void appendRecord(java.lang.String[])>($r12)
org.apache.ambari.server.serveraction.kerberos.KerberosIdentityDataFileWriter.writeRecord : specialinvoke r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: void appendRecord(java.lang.String[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : if $r2 != null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : if $r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : virtualinvoke $r4.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Object[])>(r1)
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.appendRecord : virtualinvoke $r4.<org.apache.commons.csv.CSVPrinter: void printRecord(java.lang.Object[])>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : if $r1 == null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : if $r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter>
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : virtualinvoke $r2.<org.apache.commons.csv.CSVPrinter: void close()>()
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : virtualinvoke $r2.<org.apache.commons.csv.CSVPrinter: void close()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = null
org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter.close : r0.<org.apache.ambari.server.serveraction.kerberos.AbstractKerberosDataFileWriter: org.apache.commons.csv.CSVPrinter csvPrinter> = null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setExecutionCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1
org.apache.ambari.server.serveraction.AbstractServerAction.setHostRoleCommand : r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.actionmanager.HostRoleCommand hostRoleCommand> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getCommandParameters()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r3 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.util.Map getCommandParameters()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : if $r1 != null >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r3 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r4 = virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>()
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : $r4 = virtualinvoke $r3.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getCommandParams()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r4
org.apache.ambari.server.serveraction.AbstractServerAction.getCommandParameters : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r17 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r17 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.ActionLog actionLog> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke $r17.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Processing identities...")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : virtualinvoke $r17.<org.apache.ambari.server.serveraction.ActionLog: void writeStdOut(java.lang.String)>("Processing identities...") >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.writeStdOut : $r2 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut>
org.apache.ambari.server.serveraction.ActionLog.writeStdOut : $r2 = r0.<org.apache.ambari.server.serveraction.ActionLog: java.lang.StringBuffer stdOut> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.writeStdOut : specialinvoke r0.<org.apache.ambari.server.serveraction.ActionLog: void write(java.lang.StringBuffer,java.lang.String)>($r2, r1)
org.apache.ambari.server.serveraction.ActionLog.writeStdOut : specialinvoke r0.<org.apache.ambari.server.serveraction.ActionLog: void write(java.lang.StringBuffer,java.lang.String)>($r2, r1) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : if r2 == null
org.apache.ambari.server.serveraction.ActionLog.write : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r4 = new java.util.Date
org.apache.ambari.server.serveraction.ActionLog.write : $r4 = new java.util.Date >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : specialinvoke $r4.<java.util.Date: void <init>()>()
org.apache.ambari.server.serveraction.ActionLog.write : specialinvoke $r4.<java.util.Date: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : r3 = $r4
org.apache.ambari.server.serveraction.ActionLog.write : r3 = $r4 >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r5 = r0.<org.apache.ambari.server.serveraction.ActionLog: org.apache.commons.lang.time.FastDateFormat dateFormat>
org.apache.ambari.server.serveraction.ActionLog.write : $r5 = r0.<org.apache.ambari.server.serveraction.ActionLog: org.apache.commons.lang.time.FastDateFormat dateFormat> >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : $r6 = virtualinvoke $r5.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>(r3)
org.apache.ambari.server.serveraction.ActionLog.write : $r6 = virtualinvoke $r5.<org.apache.commons.lang.time.FastDateFormat: java.lang.String format(java.util.Date)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6)
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ")
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ") >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n")
org.apache.ambari.server.serveraction.ActionLog.write : virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r18 = <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.slf4j.Logger LOG>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r18 = <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Processing identities...")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String)>("Processing identities...") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r3 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.controller.KerberosHelper kerberosHelper>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r19 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.controller.KerberosHelper kerberosHelper> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r20 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : r1 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand>
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : $r1 = r0.<org.apache.ambari.server.serveraction.AbstractServerAction: org.apache.ambari.server.agent.ExecutionCommand executionCommand> >>>>>>>> org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1
org.apache.ambari.server.serveraction.AbstractServerAction.getExecutionCommand : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $r3 = virtualinvoke r1.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $r3 = virtualinvoke r1.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : r2 = $r3
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : r2 = $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if r2 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if r2 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : return r2
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getClusterName : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r4 = interfaceinvoke $r19.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.security.credential.PrincipalKeyCredential getKDCAdministratorCredentials(java.lang.String)>($r20)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r4 = interfaceinvoke $r19.<org.apache.ambari.server.controller.KerberosHelper: org.apache.ambari.server.security.credential.PrincipalKeyCredential getKDCAdministratorCredentials(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r5 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getDefaultRealm(java.util.Map)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r5 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getDefaultRealm(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : $r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "default_realm")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : $r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "default_realm") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r0 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r0 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r2 = (java.lang.String) $r3
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : $r2 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getCommandParameterValue : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDefaultRealm : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r6 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KDCType getKDCType(java.util.Map)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r6 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KDCType getKDCType(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "kdc_type")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "kdc_type") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $r2 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType translate(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : $r2 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType translate(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if r0 == null
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if r0 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_")
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r2 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "_") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType valueOf(java.lang.String)>($r3)
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : $r4 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType valueOf(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/serveraction/kerberos/KDCType", r0)
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "org/apache/ambari/server/serveraction/kerberos/KDCType", r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType) $r1
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType) $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : return $r2
org.apache.ambari.server.serveraction.kerberos.KDCType.valueOf : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.translate : return $r4
org.apache.ambari.server.serveraction.kerberos.KDCType.translate : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : return $r2
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getKDCType : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r7 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getDataDirectoryPath(java.util.Map)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r7 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getDataDirectoryPath(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDataDirectoryPath : $r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "data_directory")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDataDirectoryPath : $r1 = staticinvoke <org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: java.lang.String getCommandParameterValue(java.util.Map,java.lang.String)>(r0, "data_directory") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDataDirectoryPath : return $r1
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.getDataDirectoryPath : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r7 == null
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if r7 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r21 = new java.io.File
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r21 = new java.io.File >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r7)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r8 = $r21
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r8 = $r21 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z0 = virtualinvoke r8.<java.io.File: boolean exists()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z0 = virtualinvoke r8.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z1 = virtualinvoke r8.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z1 = virtualinvoke r8.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z2 = virtualinvoke r8.<java.io.File: boolean canRead()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z2 = virtualinvoke r8.<java.io.File: boolean canRead()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z2 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z2 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r27 = new java.io.File
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r27 = new java.io.File >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>(r8, "identity.dat")
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : specialinvoke $r27.<java.io.File: void <init>(java.io.File,java.lang.String)>(r8, "identity.dat") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r28 = $r27
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r28 = $r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z3 = virtualinvoke r28.<java.io.File: boolean exists()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z3 = virtualinvoke r28.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z3 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z3 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z4 = virtualinvoke r28.<java.io.File: boolean canRead()>()
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $z4 = virtualinvoke r28.<java.io.File: boolean canRead()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z4 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : if $z4 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r34 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory kerberosOperationHandlerFactory>
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : $r34 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosServerAction: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory kerberosOperationHandlerFactory> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r35 = virtualinvoke $r34.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler getKerberosOperationHandler(org.apache.ambari.server.serveraction.kerberos.KDCType)>(r6)
org.apache.ambari.server.serveraction.kerberos.KerberosServerAction.processIdentities : r35 = virtualinvoke $r34.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory: org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler getKerberosOperationHandler(org.apache.ambari.server.serveraction.kerberos.KDCType)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $r3 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory$1: int[] $SwitchMap$org$apache$ambari$server$serveraction$kerberos$KDCType>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $r3 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory$1: int[] $SwitchMap$org$apache$ambari$server$serveraction$kerberos$KDCType> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.values : $r0 = <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType[] $VALUES>
org.apache.ambari.server.serveraction.kerberos.KDCType.values : $r0 = <org.apache.ambari.server.serveraction.kerberos.KDCType: org.apache.ambari.server.serveraction.kerberos.KDCType[] $VALUES> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.serveraction.kerberos.KDCType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.values : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType[]) $r1
org.apache.ambari.server.serveraction.kerberos.KDCType.values : $r2 = (org.apache.ambari.server.serveraction.kerberos.KDCType[]) $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KDCType.values : return $r2
org.apache.ambari.server.serveraction.kerberos.KDCType.values : return $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $i0 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KDCType: int ordinal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $i0 = virtualinvoke r1.<org.apache.ambari.server.serveraction.kerberos.KDCType: int ordinal()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $i1 = $r3[$i0]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $i1 = $r3[$i0] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : tableswitch($i1) {     case 1:
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory: com.google.inject.Injector injector>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $r4 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $r5 = interfaceinvoke $r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerFactory.getKerberosOperationHandler : $r5 = interfaceinvoke $r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/serveraction/kerberos/MITKerberosOperationHandler") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6
