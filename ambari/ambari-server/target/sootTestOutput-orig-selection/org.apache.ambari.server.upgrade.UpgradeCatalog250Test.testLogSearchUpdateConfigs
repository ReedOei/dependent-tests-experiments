org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.getTargetVersion : return "2.5.0"
org.apache.ambari.server.upgrade.UpgradeCatalog250.getTargetVersion : return "2.5.0" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r3 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: java.util.Map getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r14 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r4 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r4 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-properties")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r6 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-properties") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r16 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r7 = $r16
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r7 = $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r17 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.enabled", $r18)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.enabled", $r18) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r20 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r20 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.host_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.host_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.host_url", $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.host_url", $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.login_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r24 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>("logsearch.external.auth.login_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.login_url", $r24)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logsearch.auth.external_auth.login_url", $r24) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r26 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r26 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r26.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r26.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r8 = $r26
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r8 = $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.host_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.host_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.login_url")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r8.<java.util.Set: boolean add(java.lang.Object)>("logsearch.external.auth.login_url") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-properties", r7, r8, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-properties", r7, r8, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r18 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r19 = interfaceinvoke $r18.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r19 = interfaceinvoke $r18.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r5 = (org.apache.ambari.server.controller.AmbariManagementController) $r19
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r5 = (org.apache.ambari.server.controller.AmbariManagementController) $r19 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r6 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r6 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r7 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getConfigsByType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r8 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r10 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getServiceByConfigType(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r12 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r9, r3, z0, r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r12 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map mergeProperties(java.util.Map,java.util.Map,boolean,com.google.common.collect.Multimap)>(r9, r3, z0, r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r4 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : specialinvoke $r4.<java.util.HashMap: void <init>(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : specialinvoke $r4.<java.util.HashMap: void <init>(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r5 = $r4
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r5 = $r4 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r8 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r6 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r6 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r7 = (java.util.Map$Entry) $r9
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : r7 = (java.util.Map$Entry) $r9 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z2 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $z2 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z2 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if $z2 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r11 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r14 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType ADDED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r14 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType ADDED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r14, r7)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r14, r7) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if z0 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r15 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r16 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r16 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r18 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType UPDATED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : $r18 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType UPDATED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r18, r7)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r18, r7) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return r5
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.mergeProperties : return r5 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r4 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r12 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r12, r4, r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r12 = specialinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map removeProperties(java.util.Map,java.util.Set,com.google.common.collect.Multimap)>(r12, r4, r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r4 = new java.util.HashMap
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = $r4
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = $r4 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r5.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r7 = (java.lang.String) $r9
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r7 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = new java.util.AbstractMap$SimpleEntry
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = new java.util.AbstractMap$SimpleEntry >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r8.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r7, "")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r8.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r7, "") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r8)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r8) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return r5
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return r5 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i2 = interfaceinvoke r10.<com.google.common.collect.Multimap: int size()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $i2 = interfaceinvoke r10.<com.google.common.collect.Multimap: int size()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $i2 <= 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $i2 <= 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r31 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r31 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r32 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariUpgradeConfigUpdatesFileName>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r32 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.lang.String ambariUpgradeConfigUpdatesFileName> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke $r31.<org.apache.ambari.server.configuration.Configuration: void wrtiteToAmbariUpgradeConfigUpdatesFile(com.google.common.collect.Multimap,java.lang.String,java.lang.String,java.lang.String)>(r10, r2, r11, $r32)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke $r31.<org.apache.ambari.server.configuration.Configuration: void wrtiteToAmbariUpgradeConfigUpdatesFile(com.google.common.collect.Multimap,java.lang.String,java.lang.String,java.lang.String)>(r10, r2, r11, $r32) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r13 = $r33
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r13 = $r33 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r34 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r34 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Write to config updates file failed:", r13)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r34.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Write to config updates file failed:", r13) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r35 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r9, r12)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r35 = staticinvoke <com.google.common.collect.Maps: com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map)>(r9, r12) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z3 = interfaceinvoke $r35.<com.google.common.collect.MapDifference: boolean areEqual()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $z3 = interfaceinvoke $r35.<com.google.common.collect.MapDifference: boolean areEqual()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $z3 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if $z3 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r36 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r36 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37 = newarray (java.lang.Object)[3]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37[0] = r6
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37[0] = r6 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37[1] = r2
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37[1] = r2 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r38 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r38 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37[2] = $r38
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : $r37[2] = $r38 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'{}\' and configType \'{}\' to cluster \'{}\'", $r37)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'{}\' and configType \'{}\' to cluster \'{}\'", $r37) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r8 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = interfaceinvoke r8.<org.apache.ambari.server.state.Config: java.util.Map getPropertiesAttributes()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r39
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if null != r39 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r39 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, r2, r12, r6, r39)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : interfaceinvoke r5.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.lang.String,java.util.Map)>(r1, r2, r12, r6, r39) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>(r2, r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r14 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : if r14 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : goto [?= return] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r27 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logfeeder-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r27 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r27 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r28 = interfaceinvoke r27.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r28 = interfaceinvoke r27.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r29 = interfaceinvoke $r28.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r30 = (java.lang.String) $r29
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r30 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z5 = virtualinvoke r30.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z5 = virtualinvoke r30.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r31 = virtualinvoke r30.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r31 = virtualinvoke r30.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r32 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r31)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r32 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r31) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-env", $r32, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logfeeder-env", $r32, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r1, r2, r3, null, z0, z1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.updateConfigurationPropertiesForCluster : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r1, r2, r3, null, z0, z1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-env") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r33 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r33 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r34 = new java.util.HashMap
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r34 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r34.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r34.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r9 = $r34
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r9 = $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r35 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r35 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r36 = interfaceinvoke $r35.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = (java.lang.String) $r36
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z6 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z6 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'", "infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\' or ambari_server_use_ssl")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\'", "infra_solr_ssl_enabled or logsearch_ui_protocol == \'https\' or ambari_server_use_ssl") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z7 = virtualinvoke r10.<java.lang.String: boolean contains(java.lang.CharSequence)>("infra_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r10 = virtualinvoke r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("infra_solr_ssl_enabled", "logsearch_solr_ssl_enabled") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r37 = interfaceinvoke r33.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r38)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z8 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z8 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z8 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("content", r10) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r40 = new java.util.HashSet
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r40 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r40.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : specialinvoke $r40.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r11 = $r40
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r11 = $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_use_ranger")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_use_ranger") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_node")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_node") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_quorum")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : interfaceinvoke r11.<java.util.Set: boolean add(java.lang.Object)>("logsearch_solr_audit_logs_zk_quorum") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-env", r9, r11, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,java.util.Set,boolean,boolean)>(r5, "logsearch-env", r9, r11, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r41 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("logsearch-log4j") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r41 == null
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if r41 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r42 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r42 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = (java.lang.String) $r43
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = (java.lang.String) $r43 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z12 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z12 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err", "{{logsearch_log_dir}}/logsearch.log")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{logsearch_log_dir}}/logsearch.err", "{{logsearch_log_dir}}/logsearch.log") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z13 = virtualinvoke r44.<java.lang.String: boolean contains(java.lang.CharSequence)>("<priority value=\"warn\"/>") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z13 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<priority value=\"warn\"/>", "<priority value=\"info\"/>")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : r44 = virtualinvoke r44.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<priority value=\"warn\"/>", "<priority value=\"info\"/>") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r45 = interfaceinvoke r41.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("content")
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r46 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>("content") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z14 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>($r46)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $z14 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z14 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : if $z14 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r47 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r44)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : $r47 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("content", r44) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logsearch-log4j", $r47, 1, 1)
org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog250: void updateConfigurationPropertiesForCluster(org.apache.ambari.server.state.Cluster,java.lang.String,java.util.Map,boolean,boolean)>(r5, "logsearch-log4j", $r47, 1, 1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog250.updateLogSearchConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
