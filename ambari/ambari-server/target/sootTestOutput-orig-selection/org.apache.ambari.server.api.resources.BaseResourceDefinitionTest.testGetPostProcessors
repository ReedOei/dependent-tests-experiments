org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r1 = new org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r1 = new org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : specialinvoke $r1.<org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinitionTest,org.apache.ambari.server.controller.spi.Resource$Type)>(r0, $r2)
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : specialinvoke $r1.<org.apache.ambari.server.api.resources.BaseResourceDefinitionTest$5: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinitionTest,org.apache.ambari.server.controller.spi.Resource$Type)>(r0, $r2) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : return $r1
org.apache.ambari.server.api.resources.BaseResourceDefinitionTest.getResourceDefinition : return $r1 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : $r1 = new java.util.ArrayList
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : r2 = $r1
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : r2 = $r1 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : $r3 = new org.apache.ambari.server.api.resources.BaseResourceDefinition$BaseHrefPostProcessor
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : $r3 = new org.apache.ambari.server.api.resources.BaseResourceDefinition$BaseHrefPostProcessor >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : specialinvoke $r3.<org.apache.ambari.server.api.resources.BaseResourceDefinition$BaseHrefPostProcessor: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinition)>(r0)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : specialinvoke $r3.<org.apache.ambari.server.api.resources.BaseResourceDefinition$BaseHrefPostProcessor: void <init>(org.apache.ambari.server.api.resources.BaseResourceDefinition)>(r0) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : return r2
org.apache.ambari.server.api.resources.BaseResourceDefinition.getPostProcessors : return r2 >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.setProperty : $r5 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyCategory(java.lang.String)>(r1)
