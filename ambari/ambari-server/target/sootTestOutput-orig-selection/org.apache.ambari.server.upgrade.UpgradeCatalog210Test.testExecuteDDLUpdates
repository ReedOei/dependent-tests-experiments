org.apache.ambari.server.state.StackId.parseStackIdHelper : if r2 == null >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.state.StackId.parseStackIdHelper : i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1
org.apache.ambari.server.state.StackId.parseStackIdHelper : if i0 == -1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i2 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2
org.apache.ambari.server.state.StackId.parseStackIdHelper : if $i1 > $i2 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackName> = $r8 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1
org.apache.ambari.server.state.StackId.parseStackIdHelper : $i3 = i0 + 1 >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3)
org.apache.ambari.server.state.StackId.parseStackIdHelper : $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3) >>>>>>>> org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9
org.apache.ambari.server.state.StackId.parseStackIdHelper : r1.<org.apache.ambari.server.state.StackId: java.lang.String stackVersion> = $r9 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r1 = "src/test/resources/stacks" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r2 = "src/test/resources/version" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r3 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/"
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r4 = "src/test/resources/" >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("os.name") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("Windows") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r17 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r18 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r19 = virtualinvoke $r18.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z1 = virtualinvoke $r17.<java.util.Properties: boolean containsKey(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r20 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r21 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_PERSISTENCE_TYPE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r22 = virtualinvoke $r21.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r20.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r22, "in-memory") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r24 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r25 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r26 = virtualinvoke $r25.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z2 = virtualinvoke $r24.<java.util.Properties: boolean containsKey(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z2 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r27 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r28 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty METADATA_DIR_PATH> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r29 = virtualinvoke $r28.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r27.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r29, r1) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r31 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r32 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r33 = virtualinvoke $r32.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z3 = virtualinvoke $r31.<java.util.Properties: boolean containsKey(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z3 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r34 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r35 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SERVER_VERSION_FILE> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r36 = virtualinvoke $r35.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r34.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r36, r2) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r38 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r39 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r40 = virtualinvoke $r39.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z4 = virtualinvoke $r38.<java.util.Properties: boolean containsKey(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z4 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r41 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r42 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty OS_VERSION> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r43 = virtualinvoke $r42.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5")
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r41.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r43, "centos5") >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r45 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r46 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r47 = virtualinvoke $r46.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z5 = virtualinvoke $r45.<java.util.Properties: boolean containsKey(java.lang.Object)>($r47) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z5 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r48 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r49 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r50 = virtualinvoke $r49.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r48.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r50, r3) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r52 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r53 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r54 = virtualinvoke $r53.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $z6 = virtualinvoke $r52.<java.util.Properties: boolean containsKey(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : if $z6 != 0 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r55 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r56 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r57 = virtualinvoke $r56.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : virtualinvoke $r55.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r57, r4) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r59 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r60 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties>
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r61 = r0.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r60.<org.apache.ambari.server.orm.InMemoryDefaultTestModule$BeanDefinitionsCachingTestControllerModule: void <init>(java.util.Properties)>($r61) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r1 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ")
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hosts Mapping File ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING>
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_HOSTS_MAPPING> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8)
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : $r9 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9
org.apache.ambari.server.configuration.Configuration.getHostsMapFile : return $r9 >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null
org.apache.ambari.server.controller.HostsMap.setupMap : r1 = null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.HostsMap.setupMap : $r6 = <org.apache.ambari.server.controller.HostsMap: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.HostsMap.setupMap : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.HostsMap.setupMap : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ")
org.apache.ambari.server.controller.HostsMap.setupMap : $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hostsmap file ") >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r8 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.controller.HostsMap.setupMap : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.HostsMap.setupMap : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10)
org.apache.ambari.server.controller.HostsMap.setupMap : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile>
org.apache.ambari.server.controller.HostsMap.setupMap : $r11 = r0.<org.apache.ambari.server.controller.HostsMap: java.lang.String hostsMapFile> >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if $r11 == null >>>>>>>> org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null
org.apache.ambari.server.controller.HostsMap.setupMap : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR>
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SHARED_RESOURCES_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2
org.apache.ambari.server.configuration.Configuration.getSharedResourcesDirPath : return $r2 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r2 = null
org.apache.ambari.server.state.stack.OsFamily.init : r2 = null >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r8 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8
org.apache.ambari.server.state.stack.OsFamily.init : r3 = $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.ambari.server.state.stack.OsFamily.init : $z0 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0
org.apache.ambari.server.state.stack.OsFamily.init : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception
org.apache.ambari.server.state.stack.OsFamily.init : $r9 = new java.lang.Exception >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>()
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r9.<java.lang.Exception: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r9
org.apache.ambari.server.state.stack.OsFamily.init : throw $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18
org.apache.ambari.server.state.stack.OsFamily.init : r19 = $r18 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.OsFamily.init : $r20 = r0.<org.apache.ambari.server.state.stack.OsFamily: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.stack.OsFamily.init : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File
org.apache.ambari.server.state.stack.OsFamily.init : $r6 = new java.io.File >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json")
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>(r1, "os_family.json") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>()
org.apache.ambari.server.state.stack.OsFamily.init : $r22 = virtualinvoke $r6.<java.io.File: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22
org.apache.ambari.server.state.stack.OsFamily.init : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21)
org.apache.ambari.server.state.stack.OsFamily.init : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load OS family definition from %s file", $r21) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.OsFamily.init : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException
org.apache.ambari.server.state.stack.OsFamily.init : $r24 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19)
org.apache.ambari.server.state.stack.OsFamily.init : specialinvoke $r24.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r19) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw $r24
org.apache.ambari.server.state.stack.OsFamily.init : throw $r24 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25
org.apache.ambari.server.state.stack.OsFamily.init : r7 = $r25 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2)
org.apache.ambari.server.state.stack.OsFamily.init : staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.init : throw r7
org.apache.ambari.server.state.stack.OsFamily.init : throw r7 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : r74 = $r73 >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : $r75 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74)
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : specialinvoke $r75.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r74) >>>>>>>> org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75
org.apache.ambari.server.orm.InMemoryDefaultTestModule.configure : throw $r75 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r2 = newarray (java.lang.Object)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r2 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r0 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Provider entityManagerProvider>
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r0 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Provider entityManagerProvider> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r2[0] = $r0
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r2[0] = $r0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r2)
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : staticinvoke <org.easymock.EasyMock: void reset(java.lang.Object[])>($r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r3 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Provider entityManagerProvider>
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r3 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Provider entityManagerProvider> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4)
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r5 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r6 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r6 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r7 = interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r9 = newarray (java.lang.Object)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r9 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r10 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Provider entityManagerProvider>
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r10 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Provider entityManagerProvider> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r9[0] = $r10
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r9[0] = $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r11 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r11 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r12 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r12 = new org.apache.ambari.server.orm.InMemoryDefaultTestModule >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : specialinvoke $r12.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>()
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : specialinvoke $r12.<org.apache.ambari.server.orm.InMemoryDefaultTestModule: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r11[0] = $r12
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r13 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r11)
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.init : $r13 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r11) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.tearDown : $r0 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.tearDown : $r0 = <org.apache.ambari.server.upgrade.UpgradeCatalog220Test: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog220Test.tearDown : $r1 = interfaceinvoke $r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "com/google/inject/persist/PersistService")
org.apache.ambari.server.upgrade.UpgradeCatalog220Test.tearDown : $r1 = interfaceinvoke $r0.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "com/google/inject/persist/PersistService") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap stringCaptures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap stringCaptures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("textCaptureC")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("textCaptureC") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r2 = (org.easymock.Capture) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r2 = (org.easymock.Capture) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap stringCaptures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap stringCaptures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("textCaptureH")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("textCaptureH") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r3 = (org.easymock.Capture) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r3 = (org.easymock.Capture) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classFromC")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classFromC") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r4 = (org.easymock.Capture) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r4 = (org.easymock.Capture) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r14 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classFromH")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r15 = virtualinvoke $r14.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classFromH") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r5 = (org.easymock.Capture) $r15
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r5 = (org.easymock.Capture) $r15 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r16 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classToC")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r17 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classToC") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r6 = (org.easymock.Capture) $r17
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r6 = (org.easymock.Capture) $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL: java.util.HashMap classCaptures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classToH")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("classToH") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r7 = (org.easymock.Capture) $r19
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : r7 = (org.easymock.Capture) $r19 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("alert_current")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("alert_current") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r21 = (java.lang.String) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r23 = (java.lang.String) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r25 = (java.lang.Class) $r24
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r25 = (java.lang.Class) $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r6)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r27 = (java.lang.Class) $r26
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r27 = (java.lang.Class) $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void changeColumnType(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class)>($r21, $r23, $r25, $r27)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void changeColumnType(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class)>($r21, $r23, $r25, $r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("alert_history")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("alert_history") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r29 = (java.lang.String) $r28
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r29 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r31 = (java.lang.String) $r30
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r31 = (java.lang.String) $r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r33 = (java.lang.Class) $r32
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r33 = (java.lang.Class) $r32 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r7)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r35 = (java.lang.Class) $r34
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : $r35 = (java.lang.Class) $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void changeColumnType(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class)>($r29, $r31, $r33, $r35)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$AlertSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void changeColumnType(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class)>($r29, $r31, $r33, $r35) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("ClusterHostMapping")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("ClusterHostMapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r3 = (java.lang.String) $r2
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r3 = (java.lang.String) $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r4 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ClusterHostMapping")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("ClusterHostMapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r6 = (org.easymock.Capture) $r5
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r6 = (org.easymock.Capture) $r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r7 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r8 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r3, $r8)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r3, $r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("configgrouphostmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("configgrouphostmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r10 = (java.lang.String) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r10 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r11 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("configgrouphostmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("configgrouphostmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r13 = (org.easymock.Capture) $r12
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r13 = (org.easymock.Capture) $r12 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r13)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r13) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r15 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r15 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r10, $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r10, $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostconfigmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostconfigmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r17 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r18 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hostconfigmapping")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r19 = virtualinvoke $r18.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hostconfigmapping") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r20 = (org.easymock.Capture) $r19
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r20 = (org.easymock.Capture) $r19 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r20)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r21 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r20) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r22 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r21
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r22 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r21 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r17, $r22)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r17, $r22) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hosts")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hosts") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r24 = (java.lang.String) $r23
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r24 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r25 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r25 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r26 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hosts")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r26 = virtualinvoke $r25.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hosts") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r27 = (org.easymock.Capture) $r26
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r27 = (org.easymock.Capture) $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r27)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r27) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r29 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r28
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r29 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r24, $r29)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r24, $r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentstate")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r31 = (java.lang.String) $r30
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r31 = (java.lang.String) $r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r32 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r32 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r33 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hostcomponentstate")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r33 = virtualinvoke $r32.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hostcomponentstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r34 = (org.easymock.Capture) $r33
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r34 = (org.easymock.Capture) $r33 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r34)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r34) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r36 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r35
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r36 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r35 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r31, $r36)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r31, $r36) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r38 = (java.lang.String) $r37
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r38 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r39 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r39 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r40 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hostcomponentdesiredstate")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r40 = virtualinvoke $r39.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r41 = (org.easymock.Capture) $r40
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r41 = (org.easymock.Capture) $r40 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r41)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r42 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r41) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r43 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r42
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r43 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r42 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r38, $r43)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r38, $r43) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("host_role_command")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r44 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("host_role_command") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r45 = (java.lang.String) $r44
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r45 = (java.lang.String) $r44 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r46 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r46 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r47 = virtualinvoke $r46.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("host_role_command")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r47 = virtualinvoke $r46.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("host_role_command") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r48 = (org.easymock.Capture) $r47
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r48 = (org.easymock.Capture) $r47 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r48)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r49 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r48) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r50 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r49
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r50 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r49 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r45, $r50)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r45, $r50) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hoststate")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r51 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("hoststate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r52 = (java.lang.String) $r51
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r52 = (java.lang.String) $r51 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r53 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r53 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r54 = virtualinvoke $r53.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hoststate")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r54 = virtualinvoke $r53.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("hoststate") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r55 = (org.easymock.Capture) $r54
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r55 = (org.easymock.Capture) $r54 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r55)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r55) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r57 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r56
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r57 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r56 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r52, $r57)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r52, $r57) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r58 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("host_version")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r58 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("host_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r59 = (java.lang.String) $r58
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r59 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r60 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r60 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r61 = virtualinvoke $r60.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("host_version")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r61 = virtualinvoke $r60.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("host_version") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r62 = (org.easymock.Capture) $r61
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r62 = (org.easymock.Capture) $r61 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r63 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r62)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r63 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r62) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r64 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r63
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r64 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r63 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r59, $r64)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r59, $r64) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r65 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("kerberos_principal_host")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r65 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("kerberos_principal_host") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r66 = (java.lang.String) $r65
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r66 = (java.lang.String) $r65 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r67 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r67 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r68 = virtualinvoke $r67.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("kerberos_principal_host")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r68 = virtualinvoke $r67.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("kerberos_principal_host") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r69 = (org.easymock.Capture) $r68
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r69 = (org.easymock.Capture) $r68 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r69)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r69) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r71 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r70
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r71 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r70 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r66, $r71)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r66, $r71) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r72 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("requestoperationlevel")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r72 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("requestoperationlevel") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r73 = (java.lang.String) $r72
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r73 = (java.lang.String) $r72 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r74 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r74 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r75 = virtualinvoke $r74.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("requestoperationlevel")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r75 = virtualinvoke $r74.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("requestoperationlevel") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r76 = (org.easymock.Capture) $r75
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r76 = (org.easymock.Capture) $r75 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r77 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r76)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r77 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r76) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r78 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r77
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r78 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r77 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r73, $r78)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r73, $r78) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r79 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("serviceconfighosts")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r79 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("serviceconfighosts") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r80 = (java.lang.String) $r79
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r80 = (java.lang.String) $r79 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r81 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r81 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r82 = virtualinvoke $r81.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("serviceconfighosts")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r82 = virtualinvoke $r81.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("serviceconfighosts") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r83 = (org.easymock.Capture) $r82
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r83 = (org.easymock.Capture) $r82 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r84 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r83)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r84 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r83) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r85 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r84
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : $r85 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r84 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r80, $r85)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$HostSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r80, $r85) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("widget")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("widget") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : r2 = (org.easymock.Capture) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : r2 = (org.easymock.Capture) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("widget_layout")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("widget_layout") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : r3 = (org.easymock.Capture) $r8
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : r3 = (org.easymock.Capture) $r8 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r9 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("widget_layout_user_widget")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("widget_layout_user_widget") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : r4 = (org.easymock.Capture) $r10
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : r4 = (org.easymock.Capture) $r10 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r12 = (java.lang.String) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r12 = (java.lang.String) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r13 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r14 = (java.util.List) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r14 = (java.util.List) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r15 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r15 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("id")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r17 = (java.lang.String) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r15[0] = $r17
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r15[0] = $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r12, $r14, $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r12, $r14, $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_layout")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_layout") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r19 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r21 = (java.util.List) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r21 = (java.util.List) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r22 = newarray (java.lang.String)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r22 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("id")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r23 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r24 = (java.lang.String) $r23
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r24 = (java.lang.String) $r23 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r22[0] = $r24
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r22[0] = $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r19, $r21, $r22)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r19, $r21, $r22) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_layout_user_widget")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r25 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_layout_user_widget") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r26 = (java.lang.String) $r25
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r26 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r27 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r28 = (java.util.List) $r27
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r28 = (java.util.List) $r27 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r29 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r29 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_layout_id")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r30 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_layout_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r31 = (java.lang.String) $r30
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r31 = (java.lang.String) $r30 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r29[0] = $r31
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r29[0] = $r31 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_id")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r32 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("widget_id") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r33 = (java.lang.String) $r32
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r33 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r29[1] = $r33
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r29[1] = $r33 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r26, $r28, $r29)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void createTable(java.lang.String,java.util.List,java.lang.String[])>($r26, $r28, $r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("users")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("users") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r35 = (java.lang.String) $r34
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r35 = (java.lang.String) $r34 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r36 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: org.easymock.Capture userActiveLayoutsColumnCapture>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r36 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL: org.easymock.Capture userActiveLayoutsColumnCapture> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r36)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r37 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>($r36) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r38 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r37
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : $r38 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r37 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r35, $r38)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$WidgetSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r35, $r38) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r6 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewinstance")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewinstance") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r2 = (org.easymock.Capture) $r7
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r2 = (org.easymock.Capture) $r7 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r8 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewinstance_alter_names")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewinstance_alter_names") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r3 = (org.easymock.Capture) $r9
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r3 = (org.easymock.Capture) $r9 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewparameter")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewparameter") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r4 = (org.easymock.Capture) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r4 = (org.easymock.Capture) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r12 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL: java.util.HashMap captures> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewmain")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("viewmain") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r5 = (org.easymock.Capture) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : r5 = (org.easymock.Capture) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewinstance")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewinstance") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r15 = (java.lang.String) $r14
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r17 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r16
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r17 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r15, $r17)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r15, $r17) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewinstance")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewinstance") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r19 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r20 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r21 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r20
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r21 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r20 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r19, $r21)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r19, $r21) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewparameter")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r22 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewparameter") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r23 = (java.lang.String) $r22
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r23 = (java.lang.String) $r22 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r4) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r25 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r24
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r25 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r24 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r23, $r25)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r23, $r25) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewmain")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("viewmain") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r27 = (java.lang.String) $r26
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r27 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r5)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object capture(org.easymock.Capture)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r29 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r28
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : $r29 = (org.apache.ambari.server.orm.DBAccessor$DBColumnInfo) $r28 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r27, $r29)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$ViewSectionDDL.execute : interfaceinvoke r1.<org.apache.ambari.server.orm.DBAccessor: void addColumn(java.lang.String,org.apache.ambari.server.orm.DBAccessor$DBColumnInfo)>($r27, $r29) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r2 = new org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog210Test,org.apache.ambari.server.orm.DBAccessor)>(r0, r1)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : specialinvoke $r2.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog210Test,org.apache.ambari.server.orm.DBAccessor)>(r0, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r3 = $r2
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r3 = $r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5[0] = r3
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r5[0] = r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r4 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : r4 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.orm.DBAccessor val$dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.orm.DBAccessor val$dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.upgrade.UpgradeCatalog210Test this$0>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33: org.apache.ambari.server.upgrade.UpgradeCatalog210Test this$0> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r6 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager access$000(org.apache.ambari.server.upgrade.UpgradeCatalog210Test)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r6 = staticinvoke <org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager access$000(org.apache.ambari.server.upgrade.UpgradeCatalog210Test)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : $r1 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog210Test: javax.persistence.EntityManager entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : return $r1
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r7 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : $r8 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8)
org.apache.ambari.server.upgrade.UpgradeCatalog210Test$33.configure : interfaceinvoke $r7.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r6 = interfaceinvoke r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/upgrade/UpgradeCatalog210")
org.apache.ambari.server.upgrade.UpgradeCatalog210Test.getUpgradeCatalog : $r6 = interfaceinvoke r4.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/upgrade/UpgradeCatalog210") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6
