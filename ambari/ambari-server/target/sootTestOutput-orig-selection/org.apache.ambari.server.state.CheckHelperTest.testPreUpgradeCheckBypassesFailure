org.apache.ambari.server.state.CheckHelper.performChecks : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r10 = new java.util.ArrayList
org.apache.ambari.server.state.CheckHelper.performChecks : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.CheckHelper.performChecks : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : r4 = $r10
org.apache.ambari.server.state.CheckHelper.performChecks : r4 = $r10 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : r5 = virtualinvoke r0.<org.apache.ambari.server.state.CheckHelper: java.util.List getApplicablePrerequisiteChecks(org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List)>(r1, r2)
org.apache.ambari.server.state.CheckHelper.performChecks : r5 = virtualinvoke r0.<org.apache.ambari.server.state.CheckHelper: java.util.List getApplicablePrerequisiteChecks(org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r3 = new java.util.LinkedList
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r3 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : specialinvoke $r3.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : specialinvoke $r3.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r4 = $r3
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r4 = $r3 >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r5 = <org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.checks.CheckDescription SERVICES_UP>
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r5 = <org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.checks.CheckDescription SERVICES_UP> >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r8 = new org.apache.ambari.server.state.stack.PrerequisiteCheck
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r8 = new org.apache.ambari.server.state.stack.PrerequisiteCheck >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : specialinvoke $r8.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void <init>(org.apache.ambari.server.checks.CheckDescription,java.lang.String)>(r5, "c1")
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : specialinvoke $r8.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void <init>(org.apache.ambari.server.checks.CheckDescription,java.lang.String)>(r5, "c1") >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r6 = $r8
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r6 = $r8 >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r9 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r9 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : virtualinvoke r6.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r9)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : virtualinvoke r6.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r9) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/checks/AbstractCheckDescriptor")
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/checks/AbstractCheckDescriptor") >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r7 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r10
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : r7 = (org.apache.ambari.server.checks.AbstractCheckDescriptor) $r10 >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r12 = (org.apache.ambari.server.controller.PrereqCheckRequest) $r11
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r12 = (org.apache.ambari.server.controller.PrereqCheckRequest) $r11 >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $z0 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>($r12)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $z0 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>($r12) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r14 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r15)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r17 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r17 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r18 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r19 = interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $z1 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isStackUpgradeAllowedToBypassPreChecks()>()
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $z1 = virtualinvoke r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isStackUpgradeAllowedToBypassPreChecks()>() >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r22 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r25 = newarray (java.lang.Object)[1]
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r25 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r25[0] = r7
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r25[0] = r7 >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r25) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r26 = new org.apache.ambari.server.state.DescriptorPreCheck
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : $r26 = new org.apache.ambari.server.state.DescriptorPreCheck >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : specialinvoke $r26.<org.apache.ambari.server.state.DescriptorPreCheck: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,org.apache.ambari.server.state.stack.PrerequisiteCheck)>(r7, r6)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : specialinvoke $r26.<org.apache.ambari.server.state.DescriptorPreCheck: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,org.apache.ambari.server.state.stack.PrerequisiteCheck)>(r7, r6) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26)
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : goto [?= return r4]
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : goto [?= return r4] >>>>>>>> org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : return r4
org.apache.ambari.server.state.CheckHelperTest$CheckHelperMock.getApplicablePrerequisiteChecks : return r4 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.CheckHelper.performChecks : r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : if $z1 == 0
org.apache.ambari.server.state.CheckHelper.performChecks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r11 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : r7 = (org.apache.ambari.server.state.DescriptorPreCheck) $r11
org.apache.ambari.server.state.CheckHelper.performChecks : r7 = (org.apache.ambari.server.state.DescriptorPreCheck) $r11 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : r8 = r7.<org.apache.ambari.server.state.DescriptorPreCheck: org.apache.ambari.server.checks.AbstractCheckDescriptor descriptor>
org.apache.ambari.server.state.CheckHelper.performChecks : r8 = r7.<org.apache.ambari.server.state.DescriptorPreCheck: org.apache.ambari.server.checks.AbstractCheckDescriptor descriptor> >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : r9 = r7.<org.apache.ambari.server.state.DescriptorPreCheck: org.apache.ambari.server.state.stack.PrerequisiteCheck check>
org.apache.ambari.server.state.CheckHelper.performChecks : r9 = r7.<org.apache.ambari.server.state.DescriptorPreCheck: org.apache.ambari.server.state.stack.PrerequisiteCheck check> >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: void perform(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r9, r1)
org.apache.ambari.server.state.CheckHelper.performChecks : virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: void perform(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r9, r1) >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : z0 = virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isStackUpgradeAllowedToBypassPreChecks()>()
org.apache.ambari.server.state.CheckHelper.performChecks : z0 = virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: boolean isStackUpgradeAllowedToBypassPreChecks()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r12 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus getStatus()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r12 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus getStatus()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r13 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.state.CheckHelper.performChecks : $r13 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : if $r12 != $r13
org.apache.ambari.server.state.CheckHelper.performChecks : if $r12 != $r13 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : if z0 == 0
org.apache.ambari.server.state.CheckHelper.performChecks : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r14 = <org.apache.ambari.server.state.CheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.state.CheckHelper.performChecks : $r14 = <org.apache.ambari.server.state.CheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r15 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.CheckHelper.performChecks : $r15 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r16 = virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r16 = virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r17 = virtualinvoke $r16.<org.apache.ambari.server.checks.CheckDescription: java.lang.String name()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r17 = virtualinvoke $r16.<org.apache.ambari.server.checks.CheckDescription: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.checks.CheckDescription.name : $r1 = r0.<org.apache.ambari.server.checks.CheckDescription: java.lang.String m_name>
org.apache.ambari.server.checks.CheckDescription.name : $r1 = r0.<org.apache.ambari.server.checks.CheckDescription: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.name : return $r1
org.apache.ambari.server.checks.CheckDescription.name : return $r1 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r15[0] = $r17
org.apache.ambari.server.state.CheckHelper.performChecks : $r15[0] = $r17 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r18 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String getFailReason()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r18 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String getFailReason()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailReason : return $r1 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r15[1] = $r18
org.apache.ambari.server.state.CheckHelper.performChecks : $r15[1] = $r18 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r19 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r19 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r20 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r19, ", ")
org.apache.ambari.server.state.CheckHelper.performChecks : $r20 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r19, ", ") >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r15[2] = $r20
org.apache.ambari.server.state.CheckHelper.performChecks : $r15[2] = $r20 >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Check {} failed but stack upgrade is allowed to bypass failures. Error to bypass: {}. Failed on: {}", $r15)
org.apache.ambari.server.state.CheckHelper.performChecks : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Check {} failed but stack upgrade is allowed to bypass failures. Error to bypass: {}. Failed on: {}", $r15) >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r21 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus BYPASS>
org.apache.ambari.server.state.CheckHelper.performChecks : $r21 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus BYPASS> >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21)
org.apache.ambari.server.state.CheckHelper.performChecks : virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r21) >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.state.CheckHelper.performChecks : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r22 = virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r22 = virtualinvoke r8.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : $r23 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus getStatus()>()
org.apache.ambari.server.state.CheckHelper.performChecks : $r23 = virtualinvoke r9.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus getStatus()>() >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: void addResult(org.apache.ambari.server.checks.CheckDescription,org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r22, $r23)
org.apache.ambari.server.state.CheckHelper.performChecks : virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: void addResult(org.apache.ambari.server.checks.CheckDescription,org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r22, $r23) >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : goto [?= (branch)]
org.apache.ambari.server.state.CheckHelper.performChecks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.CheckHelper.performChecks : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.CheckHelper.performChecks : return r4
