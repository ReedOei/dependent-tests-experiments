org.apache.ambari.server.controller.PrereqCheckRequest.setPrerequisiteCheckConfig : r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig> = r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r14 = r0.<org.apache.ambari.server.checks.ServicePresenceCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r14 = r0.<org.apache.ambari.server.checks.ServicePresenceCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r15 = interfaceinvoke $r14.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r15 = interfaceinvoke $r14.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.checks.ServicePresenceCheckTest this$0>
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest$1: org.apache.ambari.server.checks.ServicePresenceCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicePresenceCheckTest)>($r1)
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.ServicePresenceCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters m_clusters>
org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.ServicePresenceCheckTest: org.apache.ambari.server.state.Clusters m_clusters> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.ServicePresenceCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r2
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r1
org.apache.ambari.server.checks.ServicePresenceCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r16 = (org.apache.ambari.server.state.Clusters) $r15
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r16 = (org.apache.ambari.server.state.Clusters) $r15 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r17 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r17 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r3 = interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r17)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r3 = interfaceinvoke $r16.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r18 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r18 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r4 = interfaceinvoke $r18.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r4 = interfaceinvoke $r18.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.List getNoUpgradeSupportServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.List getNoUpgradeSupportServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $r2 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r3 = $r2
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r3 = $r2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "no-upgrade-support-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "no-upgrade-support-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r3 = null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r3 = null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig getPrerequisiteCheckConfig()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig>
org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig m_prereqCheckConfig> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getPrerequisiteCheckConfig : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r5 = null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r5 = null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r4 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r4 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r5 = virtualinvoke r4.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r7)
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r5 = virtualinvoke r4.<org.apache.ambari.server.state.stack.UpgradePack$PrerequisiteCheckConfig: java.util.Map getCheckProperties(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r5 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if r5 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if $z0 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : $r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r3 = (java.lang.String) $r8
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : return r3
org.apache.ambari.server.checks.ServicePresenceCheck.getPropertyValue : return r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if null == r4
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if null == r4 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r6 = r5
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r6 = r5 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i0 = lengthof r6
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i0 = lengthof r6 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if i1 >= i0
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if i1 >= i0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r7 = r6[i1]
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r7 = r6[i1] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : r8 = virtualinvoke r7.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = i1 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : goto [?= (branch)]
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : return r3
org.apache.ambari.server.checks.ServicePresenceCheck.getNoUpgradeSupportServices : return r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.Map getRemovedServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.util.Map getRemovedServices(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r2 = new java.util.LinkedHashMap
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r2 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r3 = $r2
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r3 = $r2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "removed-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r4 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "removed-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r5 = specialinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getPropertyValue(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r1, "new-service-names") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 == null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r4 == null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if r5 != null >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r13 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r13 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r14 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r14 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i1 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i2 = interfaceinvoke r7.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i2 = interfaceinvoke r7.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $i1 == $i2
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $i1 == $i2 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i3 = interfaceinvoke r6.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $i3 = interfaceinvoke r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i0 >= $i3
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if i0 >= $i3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r19 = (java.lang.String) $r18
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r19 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r8 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r8 = virtualinvoke $r19.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r20 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r20 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r21 = (java.lang.String) $r20
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r9 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : r9 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z0 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z1 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : $z1 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z1 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9)
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r9) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = i0 + 1
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : goto [?= $i3 = interfaceinvoke r6.<java.util.List: int size()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : goto [?= $i3 = interfaceinvoke r6.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : return r3
org.apache.ambari.server.checks.ServicePresenceCheck.getRemovedServices : return r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r19 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r19 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : specialinvoke $r19.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : specialinvoke $r19.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r7 = $r19
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r7 = $r19 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r8 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r8 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0
org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5]
org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : return $r5
org.apache.ambari.server.checks.CheckDescription.getFail : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return $r3
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return $r3 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r9 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r9 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r20 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r20 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r10 = (java.lang.String) $r20
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r10 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r21 = virtualinvoke r10.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r21 = virtualinvoke r10.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z1 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r21)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z1 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r24 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("service_removed", r1, r2)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r24 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicePresenceCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("service_removed", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r25 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r25 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r26 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r26 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z4 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r27 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r28 = (java.util.Map$Entry) $r27
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r28 = (java.util.Map$Entry) $r27 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r29 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r29 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r30 = (java.lang.String) $r29
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r30 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r31 = virtualinvoke r30.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r31 = virtualinvoke r30.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z5 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r31)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z5 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z5 == 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r32 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : virtualinvoke $r32.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r30)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : virtualinvoke $r32.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r30) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r33 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r33 = interfaceinvoke r28.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r12 = (java.lang.String) $r33
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r12 = (java.lang.String) $r33 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r34 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r34 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r34[0] = r30
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r34[0] = r30 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r34[1] = r12
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r34[1] = r12 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r24, $r34)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r24, $r34) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r13)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r13) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicePresenceCheck.perform : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z8 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $z8 = interfaceinvoke r7.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z8 != 0
org.apache.ambari.server.checks.ServicePresenceCheck.perform : if $z8 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r35 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r35 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r35)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r35) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r36 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r7, 10)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : $r36 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>(r7, 10) >>>>>>>> org.apache.ambari.server.checks.ServicePresenceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r36)
org.apache.ambari.server.checks.ServicePresenceCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
