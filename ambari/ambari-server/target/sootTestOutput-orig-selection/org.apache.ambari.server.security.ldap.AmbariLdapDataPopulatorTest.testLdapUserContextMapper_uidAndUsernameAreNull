org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : r2 = (org.springframework.ldap.core.DirContextAdapter) r1 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r6 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r6 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r7 = virtualinvoke $r6.<org.apache.ambari.server.security.authorization.LdapServerProperties: java.lang.String getUsernameAttribute()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r7 = virtualinvoke $r6.<org.apache.ambari.server.security.authorization.LdapServerProperties: java.lang.String getUsernameAttribute()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : r3 = virtualinvoke r2.<org.springframework.ldap.core.DirContextAdapter: java.lang.String getStringAttribute(java.lang.String)>($r7)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : r3 = virtualinvoke r2.<org.springframework.ldap.core.DirContextAdapter: java.lang.String getStringAttribute(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : r4 = virtualinvoke r2.<org.springframework.ldap.core.DirContextAdapter: java.lang.String getStringAttribute(java.lang.String)>("uid")
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : r4 = virtualinvoke r2.<org.springframework.ldap.core.DirContextAdapter: java.lang.String getStringAttribute(java.lang.String)>("uid") >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r8 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r8 = r0.<org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper: org.apache.ambari.server.security.authorization.LdapServerProperties ldapServerProperties> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r9 = virtualinvoke $r8.<org.apache.ambari.server.security.authorization.LdapServerProperties: java.lang.String getBaseDN()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r9 = virtualinvoke $r8.<org.apache.ambari.server.security.authorization.LdapServerProperties: java.lang.String getBaseDN()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : z0 = staticinvoke <org.apache.ambari.server.security.authorization.AmbariLdapUtils: boolean isLdapObjectOutOfScopeFromBaseDn(org.springframework.ldap.core.DirContextAdapter,java.lang.String)>(r2, $r9)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : z0 = staticinvoke <org.apache.ambari.server.security.authorization.AmbariLdapUtils: boolean isLdapObjectOutOfScopeFromBaseDn(org.springframework.ldap.core.DirContextAdapter,java.lang.String)>(r2, $r9) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : z0 = 1
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : z0 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : r2 = virtualinvoke r0.<org.springframework.ldap.core.DirContextAdapter: javax.naming.Name getDn()>()
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : r2 = virtualinvoke r0.<org.springframework.ldap.core.DirContextAdapter: javax.naming.Name getDn()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : if r2 == null
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : if r2 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : $z1 = 0
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : $z1 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "DN cannot be null in LDAP response object")
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z1, "DN cannot be null in LDAP response object") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : r8 = $r7
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : r8 = $r7 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : $r9 = <org.apache.ambari.server.security.authorization.AmbariLdapUtils: org.slf4j.Logger LOG>
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : $r9 = <org.apache.ambari.server.security.authorization.AmbariLdapUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : $r10 = virtualinvoke r8.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : $r10 = virtualinvoke r8.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r10)
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : return z0
org.apache.ambari.server.security.authorization.AmbariLdapUtils.isLdapObjectOutOfScopeFromBaseDn : return z0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : if z0 == 0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : if z0 == 0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r10 = staticinvoke <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger access$000()>()
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : $r10 = staticinvoke <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.access$000 : $r0 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG>
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.access$000 : $r0 = <org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.access$000 : return $r0
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator.access$000 : return $r0 >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("User \'{}\' is out of scope of the base DN. It will be skipped.", r3)
org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("User \'{}\' is out of scope of the base DN. It will be skipped.", r3) >>>>>>>> org.apache.ambari.server.security.ldap.AmbariLdapDataPopulator$LdapUserContextMapper.mapFromContext : return null
