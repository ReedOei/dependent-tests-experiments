org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $r1 = <org.apache.ambari.server.agent.TestActionQueue$1: int[] $SwitchMap$org$apache$ambari$server$agent$TestActionQueue$ActionQueueOperation$OpType> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $r3 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation$OpType operation>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $r3 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation$OpType operation> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $i0 = virtualinvoke $r3.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation$OpType: int ordinal()>()
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $i0 = virtualinvoke $r3.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation$OpType: int ordinal()>() >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $i1 = $r1[$i0]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : $i1 = $r1[$i0] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : tableswitch($i1) {     case 1:
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : specialinvoke r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: void checkPending()>()
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : specialinvoke r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: void checkPending()>() >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : if $z0 == 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i0 = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i0 = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : r1 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: java.lang.String[] hosts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : r1 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: java.lang.String[] hosts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i1 = lengthof r1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i1 = lengthof r1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i2 = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i2 = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : if i2 >= i1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : if i2 >= i1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : r2 = r1[i2]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : r2 = r1[i2] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $r3 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $r3 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : virtualinvoke $r3.<org.apache.ambari.server.agent.ActionQueue: boolean hasPendingTask(java.lang.String)>(r2)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : virtualinvoke $r3.<org.apache.ambari.server.agent.ActionQueue: boolean hasPendingTask(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.hasPendingTask : r2 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask>
org.apache.ambari.server.agent.ActionQueue.hasPendingTask : r2 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask> >>>>>>>> org.apache.ambari.server.agent.ActionQueue.hasPendingTask : if r2 == null
org.apache.ambari.server.agent.ActionQueue.hasPendingTask : if r2 == null >>>>>>>> org.apache.ambari.server.agent.ActionQueue.hasPendingTask : $z0 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1)
org.apache.ambari.server.agent.ActionQueue.hasPendingTask : $z0 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.hasPendingTask : return $z0
org.apache.ambari.server.agent.ActionQueue.hasPendingTask : return $z0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $r4 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $r4 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $l4 = $r4[i0]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $l4 = $r4[i0] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $l5 = $l4 + 1L
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $l5 = $l4 + 1L >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $r4[i0] = $l5
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : $r4[i0] = $l5 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i0 = i0 + 1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i0 = i0 + 1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i2 = i2 + 1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : goto [?= (branch)]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : staticinvoke <java.lang.Thread: void sleep(long)>(1L)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : staticinvoke <java.lang.Thread: void sleep(long)>(1L) >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : goto [?= $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.checkPending : goto [?= $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : specialinvoke r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: void updateHostList()>()
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : specialinvoke r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: void updateHostList()>() >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r1 = new java.util.HashSet
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : r2 = $r1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : r2 = $r1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : if $z0 == 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : r3 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: java.lang.String[] hosts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : r3 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: java.lang.String[] hosts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : i0 = lengthof r3
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : i1 = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : i1 = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : if i1 >= i0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : if i1 >= i0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : r4 = r3[i1]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $i2 = virtualinvoke r2.<java.util.HashSet: int size()>()
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $i2 = virtualinvoke r2.<java.util.HashSet: int size()>() >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $i3 = $i2 % 2
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $i3 = $i2 % 2 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : if $i3 != 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : if $i3 != 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r6 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r6 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : virtualinvoke $r6.<org.apache.ambari.server.agent.ActionQueue: void updateListOfHostsWithPendingTask(java.util.HashSet)>(null)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : virtualinvoke $r6.<org.apache.ambari.server.agent.ActionQueue: void updateListOfHostsWithPendingTask(java.util.HashSet)>(null) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : if r1 == null
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : if r1 == null >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : $r2 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask>
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : $r2 = r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask> >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>()
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>() >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : if $i0 <= 0
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r7 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r7 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $b4 = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $b4 = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $l5 = $r7[$b4]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $l5 = $r7[$b4] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $l6 = $l5 + 1L
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $l6 = $l5 + 1L >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r7[$b4] = $l6
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r7[$b4] = $l6 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : i1 = i1 + 1
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : goto [?= (branch)]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r5 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : $r5 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : virtualinvoke $r5.<org.apache.ambari.server.agent.ActionQueue: void updateListOfHostsWithPendingTask(java.util.HashSet)>(r2)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : virtualinvoke $r5.<org.apache.ambari.server.agent.ActionQueue: void updateListOfHostsWithPendingTask(java.util.HashSet)>(r2) >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask> = r1
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask> = r1 >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : goto [?= return]
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : goto [?= return] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : goto [?= $r7 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts>]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : goto [?= $r7 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts>] >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : $r3 = <org.apache.ambari.server.agent.ActionQueue: java.util.HashSet EMPTY_HOST_LIST>
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : $r3 = <org.apache.ambari.server.agent.ActionQueue: java.util.HashSet EMPTY_HOST_LIST> >>>>>>>> org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask> = $r3
org.apache.ambari.server.agent.ActionQueue.updateListOfHostsWithPendingTask : r0.<org.apache.ambari.server.agent.ActionQueue: java.util.HashSet hostsWithPendingTask> = $r3 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : staticinvoke <java.lang.Thread: void sleep(long)>(1L)
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : staticinvoke <java.lang.Thread: void sleep(long)>(1L) >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : goto [?= $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.updateHostList : goto [?= $z0 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun>] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.stop : r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun> = 0
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.stop : r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: boolean shouldRun> = 0 >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : goto [?= return]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : goto [?= return] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : goto [?= (branch)]
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.run : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.getOpCounts : $r1 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts>
org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.getOpCounts : $r1 = r0.<org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation: long[] opCounts> >>>>>>>> org.apache.ambari.server.agent.TestActionQueue$ActionQueueOperation.getOpCounts : return $r1
