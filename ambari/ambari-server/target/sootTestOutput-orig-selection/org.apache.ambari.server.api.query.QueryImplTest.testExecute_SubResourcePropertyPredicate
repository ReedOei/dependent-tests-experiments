org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r1 == null
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r1 == null >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.spi.Resource$Type.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.spi.Resource$Type.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if $r3 == $r4
org.apache.ambari.server.controller.spi.Resource$Type.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : r2 = (org.apache.ambari.server.controller.spi.Resource$Type) r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : r2 = (org.apache.ambari.server.controller.spi.Resource$Type) r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.equals : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $i1 = r2.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.equals : $i1 = r2.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if $i0 != $i1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $z1 = 0
org.apache.ambari.server.controller.spi.Resource$Type.equals : $z1 = 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return $z1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return $z1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.api.query.QueryImpl.setKeyValueMap : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setRenderer : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> = r1
org.apache.ambari.server.api.query.QueryImpl.setRenderer : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> = r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setRenderer : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.setRenderer : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setRenderer : interfaceinvoke r1.<org.apache.ambari.server.api.query.render.Renderer: void init(org.apache.ambari.server.controller.spi.SchemaFactory)>($r2)
org.apache.ambari.server.api.query.QueryImpl.setRenderer : interfaceinvoke r1.<org.apache.ambari.server.api.query.render.Renderer: void init(org.apache.ambari.server.controller.spi.SchemaFactory)>($r2) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.init : r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory> = r1
org.apache.ambari.server.api.query.render.BaseRenderer.init : r0.<org.apache.ambari.server.api.query.render.BaseRenderer: org.apache.ambari.server.controller.spi.SchemaFactory m_schemaFactory> = r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.property : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void checkDone()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.property : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void checkDone()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.checkDone : $z0 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean done>
org.apache.ambari.server.controller.utilities.PredicateBuilder.checkDone : $z0 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean done> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.checkDone : if $z0 == 0
org.apache.ambari.server.controller.utilities.PredicateBuilder.checkDone : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.property : r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String propertyId> = r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.property : r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String propertyId> = r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.property : $r2 = new org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty
org.apache.ambari.server.controller.utilities.PredicateBuilder.property : $r2 = new org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.property : specialinvoke $r2.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: void <init>(org.apache.ambari.server.controller.utilities.PredicateBuilder)>(r0)
org.apache.ambari.server.controller.utilities.PredicateBuilder.property : specialinvoke $r2.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: void <init>(org.apache.ambari.server.controller.utilities.PredicateBuilder)>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.property : return $r2
org.apache.ambari.server.controller.utilities.PredicateBuilder.property : return $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String access$000(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r2)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String access$000(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r2) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String propertyId>
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$000 : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$000 : return $r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : if $r3 != null
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : if $r3 != null >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r5 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r5 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r6 = new org.apache.ambari.server.controller.predicate.EqualsPredicate
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r6 = new org.apache.ambari.server.controller.predicate.EqualsPredicate >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r7 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r7 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r8 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String access$000(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r7)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r8 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: java.lang.String access$000(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r7) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : specialinvoke $r6.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>($r8, r1)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : specialinvoke $r6.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>($r8, r1) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if r1 == null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if r1 == null >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $z0 == 0
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r5 = new java.text.ParsePosition
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r5 = new java.text.ParsePosition >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>(0)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : specialinvoke $r5.<java.text.ParsePosition: void <init>(int)>(0) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r2 = $r5
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r2 = $r5 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r3 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r4 = virtualinvoke r3.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r2)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : r4 = virtualinvoke r3.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i1 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $i1 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $i0 != $i1
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r6 = null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : $r6 = null >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : return $r6
org.apache.ambari.server.controller.predicate.ComparisonPredicate.stringToDouble : return $r6 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: void access$100(org.apache.ambari.server.controller.utilities.PredicateBuilder,org.apache.ambari.server.controller.spi.Predicate)>($r5, $r6)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: void access$100(org.apache.ambari.server.controller.utilities.PredicateBuilder,org.apache.ambari.server.controller.spi.Predicate)>($r5, $r6) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$100 : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void addPredicate(org.apache.ambari.server.controller.spi.Predicate)>(r1)
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$100 : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void addPredicate(org.apache.ambari.server.controller.spi.Predicate)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.addPredicate : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.addPredicate : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.addPredicate : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.controller.utilities.PredicateBuilder.addPredicate : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r9 = new org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r9 = new org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r10 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : $r10 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : specialinvoke $r9.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: void <init>(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r10)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : specialinvoke $r9.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: void <init>(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r10) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : return $r9
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithProperty.equals : return $r9 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator access$200(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r2)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator access$200(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r2) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$200 : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator>
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$200 : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$200 : return $r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r1 = <org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator And>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r1 = <org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator And> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : if $r3 == $r1
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : if $r3 == $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r4 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r4 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: void access$300(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r4)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: void access$300(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r4) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$300 : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void handleComparator()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$300 : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void handleComparator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : if $r2 != null
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : if $r2 != null >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r5 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r5 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r6 = <org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator And>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r6 = <org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator And> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator access$202(org.apache.ambari.server.controller.utilities.PredicateBuilder,org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator)>($r5, $r6)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator access$202(org.apache.ambari.server.controller.utilities.PredicateBuilder,org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator)>($r5, $r6) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$202 : r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator> = r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$202 : r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator> = r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$202 : return r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$202 : return r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r8 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : $r8 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : return $r8
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.and : return $r8 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r2 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder access$400(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r1)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r2 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder access$400(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r1) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$400 : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder outer>
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$400 : $r1 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder outer> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$400 : return $r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$400 : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : if $r2 == null
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : if $r2 == null >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r4 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r4 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean access$502(org.apache.ambari.server.controller.utilities.PredicateBuilder,boolean)>($r4, 1)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean access$502(org.apache.ambari.server.controller.utilities.PredicateBuilder,boolean)>($r4, 1) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$502 : r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean done> = z0
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$502 : r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean done> = z0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$502 : return z0
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$502 : return z0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r5 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0>
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r5 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate: org.apache.ambari.server.controller.utilities.PredicateBuilder this$0> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r6 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.spi.Predicate access$600(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r5)
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : $r6 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.spi.Predicate access$600(org.apache.ambari.server.controller.utilities.PredicateBuilder)>($r5) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$600 : $r1 = specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.spi.Predicate getPredicate()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$600 : $r1 = specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.spi.Predicate getPredicate()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void handleComparator()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void handleComparator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r3 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r3 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i0 = interfaceinvoke $r3.<java.util.List: int size()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i0 = interfaceinvoke $r3.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : if $i0 != 0
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r5 = <org.apache.ambari.server.controller.utilities.PredicateBuilder$1: int[] $SwitchMap$org$apache$ambari$server$controller$utilities$PredicateBuilder$Operator>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r5 = <org.apache.ambari.server.controller.utilities.PredicateBuilder$1: int[] $SwitchMap$org$apache$ambari$server$controller$utilities$PredicateBuilder$Operator> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r6 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r6 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator operator> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i1 = virtualinvoke $r6.<org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator: int ordinal()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i1 = virtualinvoke $r6.<org.apache.ambari.server.controller.utilities.PredicateBuilder$Operator: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i2 = $r5[$i1]
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i2 = $r5[$i1] >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : lookupswitch($i2) {     case 1:
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : lookupswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r7 = new org.apache.ambari.server.controller.predicate.AndPredicate
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r7 = new org.apache.ambari.server.controller.predicate.AndPredicate >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r8 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r8 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r9 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r9 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i3 = interfaceinvoke $r9.<java.util.List: int size()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $i3 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r10 = newarray (org.apache.ambari.server.controller.spi.Predicate)[$i3]
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r10 = newarray (org.apache.ambari.server.controller.spi.Predicate)[$i3] >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r11 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10)
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r11 = interfaceinvoke $r8.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r10) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r12 = (org.apache.ambari.server.controller.spi.Predicate[]) $r11
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r12 = (org.apache.ambari.server.controller.spi.Predicate[]) $r11 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : specialinvoke $r7.<org.apache.ambari.server.controller.predicate.AndPredicate: void <init>(org.apache.ambari.server.controller.spi.Predicate[])>($r12)
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : specialinvoke $r7.<org.apache.ambari.server.controller.predicate.AndPredicate: void <init>(org.apache.ambari.server.controller.spi.Predicate[])>($r12) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : $z0 = r0 instanceof org.apache.ambari.server.controller.predicate.BasePredicate
org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : $z0 = r0 instanceof org.apache.ambari.server.controller.predicate.BasePredicate >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : if $z0 == 0
org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : $r1 = (org.apache.ambari.server.controller.predicate.BasePredicate) r0
org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : $r1 = (org.apache.ambari.server.controller.predicate.BasePredicate) r0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : $r2 = interfaceinvoke $r1.<org.apache.ambari.server.controller.predicate.BasePredicate: java.util.Set getPropertyIds()>()
org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : $r2 = interfaceinvoke $r1.<org.apache.ambari.server.controller.predicate.BasePredicate: java.util.Set getPropertyIds()>() >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyIds : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyIds : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyIds : $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1)
org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyIds : $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1) >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyIds : return $r2
org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyIds : return $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : return $r2
org.apache.ambari.server.controller.utilities.PredicateHelper.getPropertyIds : return $r2 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : r1 = $r7
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : r1 = $r7 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : goto [?= $r25 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>]
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : goto [?= $r25 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>] >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r25 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : $r25 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : interfaceinvoke $r25.<java.util.List: void clear()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : interfaceinvoke $r25.<java.util.List: void clear()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void addPredicate(org.apache.ambari.server.controller.spi.Predicate)>(r1)
org.apache.ambari.server.controller.utilities.PredicateBuilder.handleComparator : specialinvoke r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: void addPredicate(org.apache.ambari.server.controller.spi.Predicate)>(r1) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $r2 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $i0 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : if $i0 != 1
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : if $i0 != 1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $r3 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates>
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $r3 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: java.util.List predicates> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : r1 = (org.apache.ambari.server.controller.spi.Predicate) $r4
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : r1 = (org.apache.ambari.server.controller.spi.Predicate) $r4 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $z0 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean not>
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : $z0 = r0.<org.apache.ambari.server.controller.utilities.PredicateBuilder: boolean not> >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : if $z0 == 0
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : return r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.getPredicate : return r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder.access$600 : return $r1
org.apache.ambari.server.controller.utilities.PredicateBuilder.access$600 : return $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : return $r6
org.apache.ambari.server.controller.utilities.PredicateBuilder$PredicateBuilderWithPredicate.toPredicate : return $r6 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.setUserPredicate : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate userPredicate> = r1
org.apache.ambari.server.api.query.QueryImpl.setUserPredicate : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate userPredicate> = r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.execute : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void queryForResources()>()
org.apache.ambari.server.api.query.QueryImpl.execute : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void queryForResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r13 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition>
org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : return $r1
org.apache.ambari.server.api.query.QueryImpl.getResourceDefinition : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : r1 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : r1 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type>
org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : return $r1
org.apache.ambari.server.api.resources.BaseResourceDefinition.getType : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r14 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r14 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r1 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap>
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : $r2 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map keyValueMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2)
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : return $r1
org.apache.ambari.server.api.query.QueryImpl.getKeyValueMap : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r15 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate userPredicate>
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r15 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate userPredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r16 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processUserPredicate(org.apache.ambari.server.controller.spi.Predicate)>($r15)
org.apache.ambari.server.api.query.QueryImpl.queryForResources : $r16 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processUserPredicate(org.apache.ambari.server.controller.spi.Predicate)>($r15) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if r1 != null
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if r1 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r6 = new org.apache.ambari.server.api.query.ProcessingPredicateVisitor
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r6 = new org.apache.ambari.server.api.query.ProcessingPredicateVisitor >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : specialinvoke $r6.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: void <init>(org.apache.ambari.server.api.query.QueryImpl)>(r0)
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : specialinvoke $r6.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: void <init>(org.apache.ambari.server.api.query.QueryImpl)>(r0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r2 = $r6
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r2 = $r6 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r1, r2)
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.visit : $z0 = r0 instanceof org.apache.ambari.server.controller.predicate.PredicateVisitorAcceptor
org.apache.ambari.server.controller.utilities.PredicateHelper.visit : $z0 = r0 instanceof org.apache.ambari.server.controller.predicate.PredicateVisitorAcceptor >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.visit : if $z0 == 0
org.apache.ambari.server.controller.utilities.PredicateHelper.visit : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.visit : $r2 = (org.apache.ambari.server.controller.predicate.PredicateVisitorAcceptor) r0
org.apache.ambari.server.controller.utilities.PredicateHelper.visit : $r2 = (org.apache.ambari.server.controller.predicate.PredicateVisitorAcceptor) r0 >>>>>>>> org.apache.ambari.server.controller.utilities.PredicateHelper.visit : interfaceinvoke $r2.<org.apache.ambari.server.controller.predicate.PredicateVisitorAcceptor: void accept(org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r1)
org.apache.ambari.server.controller.utilities.PredicateHelper.visit : interfaceinvoke $r2.<org.apache.ambari.server.controller.predicate.PredicateVisitorAcceptor: void accept(org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r1) >>>>>>>> org.apache.ambari.server.controller.predicate.ArrayPredicate.accept : interfaceinvoke r1.<org.apache.ambari.server.controller.predicate.PredicateVisitor: void acceptArrayPredicate(org.apache.ambari.server.controller.predicate.ArrayPredicate)>(r0)
org.apache.ambari.server.controller.predicate.ArrayPredicate.accept : interfaceinvoke r1.<org.apache.ambari.server.controller.predicate.PredicateVisitor: void acceptArrayPredicate(org.apache.ambari.server.controller.predicate.ArrayPredicate)>(r0) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r2 = new java.util.LinkedList
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r2 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : specialinvoke $r2.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : specialinvoke $r2.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r3 = $r2
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r3 = $r2 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate[] getPredicates()>()
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ArrayPredicate.getPredicates : $r1 = r0.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate[] predicates>
org.apache.ambari.server.controller.predicate.ArrayPredicate.getPredicates : $r1 = r0.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate[] predicates> >>>>>>>> org.apache.ambari.server.controller.predicate.ArrayPredicate.getPredicates : return $r1
org.apache.ambari.server.controller.predicate.ArrayPredicate.getPredicates : return $r1 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $i2 = lengthof r4
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $i2 = lengthof r4 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : if $i2 <= 0
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : if $i2 <= 0 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r5 = r4
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r5 = r4 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : i0 = lengthof r5
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : i1 = 0
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : i1 = 0 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : if i1 >= i0
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r6 = r5[i1]
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r6 = r5[i1] >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r6, r0)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r6, r0) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.accept : interfaceinvoke r1.<org.apache.ambari.server.controller.predicate.PredicateVisitor: void acceptComparisonPredicate(org.apache.ambari.server.controller.predicate.ComparisonPredicate)>(r0)
org.apache.ambari.server.controller.predicate.ComparisonPredicate.accept : interfaceinvoke r1.<org.apache.ambari.server.controller.predicate.PredicateVisitor: void acceptComparisonPredicate(org.apache.ambari.server.controller.predicate.ComparisonPredicate)>(r0) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.String getPropertyId()>()
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyId : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyId : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyId : return $r1
org.apache.ambari.server.controller.predicate.PropertyPredicate.getPropertyId : return $r1 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/")
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : if i0 != -1
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r3 = $r5
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r3 = $r5 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r6 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.api.query.QueryImpl query>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r6 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.api.query.QueryImpl query> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r4 = virtualinvoke $r6.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map ensureSubResources()>()
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r4 = virtualinvoke $r6.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map ensureSubResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources>
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : if $r10 != null
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : if $r10 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r1 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : specialinvoke $r1.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : specialinvoke $r1.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources> = $r1
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources> = $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r11 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r11 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r2 = interfaceinvoke $r11.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Set getSubResourceDefinitions()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r2 = interfaceinvoke $r11.<org.apache.ambari.server.api.resources.ResourceDefinition: java.util.Set getSubResourceDefinitions()>() >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r1 = new java.util.HashSet
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : r2 = $r1
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : r2 = $r1 >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r4 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r4 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r4.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r3)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r4.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r5 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r5 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r5.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r6)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r5.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r6) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r7 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r7 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Configuration>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Configuration> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r7.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r8)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r7.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r8) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r9 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r9 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r10 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ServiceConfigVersion>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r10 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ServiceConfigVersion> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r9.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r10)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r9.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r10) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r11 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r11 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r12 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Request>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r12 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Request> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r11.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r12)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r11.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r12) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r13 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r13 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r14 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Workflow>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r14 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Workflow> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r13.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r14)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r13.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r14) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r13)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r15 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r15 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r16 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r16 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r15.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r16)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r15.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r16) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r17 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r17 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r18 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterPrivilege>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r18 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterPrivilege> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r17.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r18)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r17.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r18) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r19 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r19 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r20 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type AlertDefinition>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r20 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type AlertDefinition> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r19.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r20)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r19.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r20) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r21 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r21 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r22 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Alert>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r22 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Alert> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r21.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r22)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r21.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r22) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r23 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r23 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterStackVersion>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterStackVersion> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r23.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r24)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r23.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r24) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r23)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r25 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r25 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r26 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterKerberosDescriptor>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r26 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterKerberosDescriptor> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r25.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r26)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r25.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r26) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r27 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r27 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r28 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : $r28 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r27.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r28)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : specialinvoke $r27.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r28) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r27)
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : return r2
org.apache.ambari.server.api.resources.ClusterResourceDefinition.getSubResourceDefinitions : return r2 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r3 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r3 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r4 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r5 = (org.apache.ambari.server.api.resources.SubResourceDefinition) $r12
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r5 = (org.apache.ambari.server.api.resources.SubResourceDefinition) $r12 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r6 = virtualinvoke r5.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r6 = virtualinvoke r5.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.resources.SubResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type>
org.apache.ambari.server.api.resources.SubResourceDefinition.getType : $r1 = r0.<org.apache.ambari.server.api.resources.SubResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type m_type> >>>>>>>> org.apache.ambari.server.api.resources.SubResourceDefinition.getType : return $r1
org.apache.ambari.server.api.resources.SubResourceDefinition.getType : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r7 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r7 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r13 = new org.apache.ambari.server.api.query.QueryImpl
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r13 = new org.apache.ambari.server.api.query.QueryImpl >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r14 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r6, r7)
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r14 = staticinvoke <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition(org.apache.ambari.server.controller.spi.Resource$Type,java.util.Map)>(r6, r7) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r2 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: java.util.Map resourceDefinitions>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r2 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl: java.util.Map resourceDefinitions> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z0 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r11 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r11 = <org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl$1: int[] $SwitchMap$org$apache$ambari$server$controller$spi$Resource$InternalType> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES>
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] $VALUES> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.values : $r2 = (org.apache.ambari.server.controller.spi.Resource$InternalType[]) $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2
org.apache.ambari.server.controller.spi.Resource$InternalType.values : return $r2 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$InternalType getInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $z0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$Type: boolean isInternalType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $i1 = lengthof $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : $z0 = 1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0]
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : goto [?= return $z0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0
org.apache.ambari.server.controller.spi.Resource$Type.isInternalType : return $z0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>()
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$InternalType[] values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r3 = $r2[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : $r3 = $r2[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r3
org.apache.ambari.server.controller.spi.Resource$Type.getInternalType : return $r3 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i0 = virtualinvoke $r12.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i0 = virtualinvoke $r12.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i1 = $r11[$i0]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $i1 = $r11[$i0] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : tableswitch($i1) {     case 1:
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r168 = new org.apache.ambari.server.api.resources.RequestResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r168 = new org.apache.ambari.server.api.resources.RequestResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r168.<org.apache.ambari.server.api.resources.RequestResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r168.<org.apache.ambari.server.api.resources.RequestResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r168
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r168 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= return r3]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= return r3] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : return r3
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : return r3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : specialinvoke $r13.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r7, $r14, r3)
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : specialinvoke $r13.<org.apache.ambari.server.api.query.QueryImpl: void <init>(java.util.Map,org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.controller.spi.ClusterController)>(r7, $r14, r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r8 = $r13
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r8 = $r13 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r15 = virtualinvoke r8.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r15 = virtualinvoke r8.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r9 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.lang.String getSubResourceName(org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.api.resources.SubResourceDefinition)>($r15, r5)
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : r9 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.lang.String getSubResourceName(org.apache.ambari.server.api.resources.ResourceDefinition,org.apache.ambari.server.api.resources.SubResourceDefinition)>($r15, r5) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : $z0 = virtualinvoke r2.<org.apache.ambari.server.api.resources.SubResourceDefinition: boolean isCollection()>()
org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : $z0 = virtualinvoke r2.<org.apache.ambari.server.api.resources.SubResourceDefinition: boolean isCollection()>() >>>>>>>> org.apache.ambari.server.api.resources.SubResourceDefinition.isCollection : $z0 = r0.<org.apache.ambari.server.api.resources.SubResourceDefinition: boolean m_isCollection>
org.apache.ambari.server.api.resources.SubResourceDefinition.isCollection : $z0 = r0.<org.apache.ambari.server.api.resources.SubResourceDefinition: boolean m_isCollection> >>>>>>>> org.apache.ambari.server.api.resources.SubResourceDefinition.isCollection : return $z0
org.apache.ambari.server.api.resources.SubResourceDefinition.isCollection : return $z0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : $r3 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceDefinition: java.lang.String getPluralName()>()
org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : $r3 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceDefinition: java.lang.String getPluralName()>() >>>>>>>> org.apache.ambari.server.api.resources.RequestResourceDefinition.getPluralName : return "requests"
org.apache.ambari.server.api.resources.RequestResourceDefinition.getPluralName : return "requests" >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : goto [?= return $r3]
org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : return $r3
org.apache.ambari.server.api.query.QueryImpl.getSubResourceName : return $r3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r16 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources>
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r16 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r8)
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r8) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r219 = new org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r219 = new org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r92 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterStackVersion>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r92 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterStackVersion> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r219.<org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r92)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r219.<org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r92) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r219
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r219 >>>>>>>> org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition.getPluralName : return "stack_versions"
org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition.getPluralName : return "stack_versions" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r185 = new org.apache.ambari.server.api.resources.WorkflowResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r185 = new org.apache.ambari.server.api.resources.WorkflowResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r185.<org.apache.ambari.server.api.resources.WorkflowResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r185.<org.apache.ambari.server.api.resources.WorkflowResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r185
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r185 >>>>>>>> org.apache.ambari.server.api.resources.WorkflowResourceDefinition.getPluralName : return "workflows"
org.apache.ambari.server.api.resources.WorkflowResourceDefinition.getPluralName : return "workflows" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r163 = new org.apache.ambari.server.api.resources.ServiceConfigVersionResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r163 = new org.apache.ambari.server.api.resources.ServiceConfigVersionResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r163.<org.apache.ambari.server.api.resources.ServiceConfigVersionResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r163.<org.apache.ambari.server.api.resources.ServiceConfigVersionResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r163
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r163 >>>>>>>> org.apache.ambari.server.api.resources.ServiceConfigVersionResourceDefinition.getPluralName : return "service_config_versions"
org.apache.ambari.server.api.resources.ServiceConfigVersionResourceDefinition.getPluralName : return "service_config_versions" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r202 = new org.apache.ambari.server.api.resources.AlertResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r202 = new org.apache.ambari.server.api.resources.AlertResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r202.<org.apache.ambari.server.api.resources.AlertResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r202.<org.apache.ambari.server.api.resources.AlertResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r202
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r202 >>>>>>>> org.apache.ambari.server.api.resources.AlertResourceDefinition.getPluralName : return "alerts"
org.apache.ambari.server.api.resources.AlertResourceDefinition.getPluralName : return "alerts" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r162 = new org.apache.ambari.server.api.resources.ConfigurationResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r162 = new org.apache.ambari.server.api.resources.ConfigurationResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r162.<org.apache.ambari.server.api.resources.ConfigurationResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r162.<org.apache.ambari.server.api.resources.ConfigurationResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r162
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r162 >>>>>>>> org.apache.ambari.server.api.resources.ConfigurationResourceDefinition.getPluralName : return "configurations"
org.apache.ambari.server.api.resources.ConfigurationResourceDefinition.getPluralName : return "configurations" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r156 = new org.apache.ambari.server.api.resources.ServiceResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r156 = new org.apache.ambari.server.api.resources.ServiceResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r156.<org.apache.ambari.server.api.resources.ServiceResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r156.<org.apache.ambari.server.api.resources.ServiceResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r156
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r156 >>>>>>>> org.apache.ambari.server.api.resources.ServiceResourceDefinition.getPluralName : return "services"
org.apache.ambari.server.api.resources.ServiceResourceDefinition.getPluralName : return "services" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r15 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r15 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r15)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z1 == 0
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r157 = new org.apache.ambari.server.api.resources.HostResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r157 = new org.apache.ambari.server.api.resources.HostResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r16 = r157
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r16 = r157 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r157.<org.apache.ambari.server.api.resources.HostResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r157.<org.apache.ambari.server.api.resources.HostResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= r3 = $r16]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : goto [?= r3 = $r16] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = $r16
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = $r16 >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getPluralName : return "hosts"
org.apache.ambari.server.api.resources.HostResourceDefinition.getPluralName : return "hosts" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r203 = new org.apache.ambari.server.api.resources.AlertDefResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r203 = new org.apache.ambari.server.api.resources.AlertDefResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r203.<org.apache.ambari.server.api.resources.AlertDefResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r203.<org.apache.ambari.server.api.resources.AlertDefResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r203
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r203 >>>>>>>> org.apache.ambari.server.api.resources.AlertDefResourceDefinition.getPluralName : return "alert_definitions"
org.apache.ambari.server.api.resources.AlertDefResourceDefinition.getPluralName : return "alert_definitions" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r227 = new org.apache.ambari.server.api.resources.SimpleResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r227 = new org.apache.ambari.server.api.resources.SimpleResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r116 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r116 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Artifact> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r117 = newarray (org.apache.ambari.server.controller.spi.Resource$Type)[0]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r117 = newarray (org.apache.ambari.server.controller.spi.Resource$Type)[0] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r227.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,java.lang.String,org.apache.ambari.server.controller.spi.Resource$Type[])>($r116, "artifact", "artifacts", $r117)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r227.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,java.lang.String,org.apache.ambari.server.controller.spi.Resource$Type[])>($r116, "artifact", "artifacts", $r117) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r227
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r227 >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinition.getPluralName : $r1 = r0.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: java.lang.String pluralName>
org.apache.ambari.server.api.resources.SimpleResourceDefinition.getPluralName : $r1 = r0.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: java.lang.String pluralName> >>>>>>>> org.apache.ambari.server.api.resources.SimpleResourceDefinition.getPluralName : return $r1
org.apache.ambari.server.api.resources.SimpleResourceDefinition.getPluralName : return $r1 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r240 = new org.apache.ambari.server.api.resources.SimpleResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r240 = new org.apache.ambari.server.api.resources.SimpleResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r143 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterKerberosDescriptor>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r143 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterKerberosDescriptor> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r144 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType READ>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r144 = <org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType: org.apache.ambari.server.api.resources.BaseResourceDefinition$DirectiveType READ> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145 = newarray (java.lang.String)[2]
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145[0] = "evaluate_when"
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145[0] = "evaluate_when" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145[1] = "additional_services"
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r145[1] = "additional_services" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r146 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r145)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r146 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r145) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r147 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r144, $r146)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r147 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r144, $r146) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r240.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,java.lang.String,java.util.Collection,java.util.Map)>($r143, "kerberos_descriptor", "kerberos_descriptors", null, $r147)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r240.<org.apache.ambari.server.api.resources.SimpleResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type,java.lang.String,java.lang.String,java.util.Collection,java.util.Map)>($r143, "kerberos_descriptor", "kerberos_descriptors", null, $r147) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if $r5 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if $r5 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r7 = (java.util.Collection) $r6
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r7 = (java.util.Collection) $r6 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : virtualinvoke r4.<java.util.HashSet: boolean addAll(java.util.Collection)>($r7)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : virtualinvoke r4.<java.util.HashSet: boolean addAll(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r240
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r240 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r209 = new org.apache.ambari.server.api.resources.PrivilegeResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r209 = new org.apache.ambari.server.api.resources.PrivilegeResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r75 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterPrivilege>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r75 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ClusterPrivilege> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r209.<org.apache.ambari.server.api.resources.PrivilegeResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r75)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r209.<org.apache.ambari.server.api.resources.PrivilegeResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r75) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r209
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r209 >>>>>>>> org.apache.ambari.server.api.resources.PrivilegeResourceDefinition.getPluralName : return "privileges"
org.apache.ambari.server.api.resources.PrivilegeResourceDefinition.getPluralName : return "privileges" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r191 = new org.apache.ambari.server.api.resources.ConfigGroupResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r191 = new org.apache.ambari.server.api.resources.ConfigGroupResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r191.<org.apache.ambari.server.api.resources.ConfigGroupResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r191.<org.apache.ambari.server.api.resources.ConfigGroupResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r191
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r191 >>>>>>>> org.apache.ambari.server.api.resources.ConfigGroupResourceDefinition.getPluralName : return "config_groups"
org.apache.ambari.server.api.resources.ConfigGroupResourceDefinition.getPluralName : return "config_groups" >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r18 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources>
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : $r18 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map availableSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : return $r18
org.apache.ambari.server.api.query.QueryImpl.ensureSubResources : return $r18 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r3)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : if $z0 == 0
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r7 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceCategories>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r7 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceCategories> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r8 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceProperties>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r8 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceProperties> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r9 = <org.apache.ambari.server.controller.predicate.AlwaysPredicate: org.apache.ambari.server.controller.predicate.AlwaysPredicate INSTANCE>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : $r9 = <org.apache.ambari.server.controller.predicate.AlwaysPredicate: org.apache.ambari.server.controller.predicate.AlwaysPredicate INSTANCE> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r9
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r9 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : goto [?= return]
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : goto [?= return] >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r7 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r7 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : i1 = i1 + 1
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : goto [?= (branch)]
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = r1
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = r1 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $i3 = interfaceinvoke r3.<java.util.List: int size()>()
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $i3 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r8 = newarray (org.apache.ambari.server.controller.spi.Predicate)[$i3]
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r8 = newarray (org.apache.ambari.server.controller.spi.Predicate)[$i3] >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8) >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r10 = (org.apache.ambari.server.controller.spi.Predicate[]) $r9
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r10 = (org.apache.ambari.server.controller.spi.Predicate[]) $r9 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate create(org.apache.ambari.server.controller.spi.Predicate[])>($r10)
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate create(org.apache.ambari.server.controller.spi.Predicate[])>($r10) >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.create : $r2 = staticinvoke <org.apache.ambari.server.controller.predicate.AndPredicate: org.apache.ambari.server.controller.spi.Predicate instance(org.apache.ambari.server.controller.spi.Predicate[])>(r1)
org.apache.ambari.server.controller.predicate.AndPredicate.create : $r2 = staticinvoke <org.apache.ambari.server.controller.predicate.AndPredicate: org.apache.ambari.server.controller.spi.Predicate instance(org.apache.ambari.server.controller.spi.Predicate[])>(r1) >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : r13 = new java.util.LinkedList
org.apache.ambari.server.controller.predicate.AndPredicate.instance : r13 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : specialinvoke r13.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.controller.predicate.AndPredicate.instance : specialinvoke r13.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : r2 = r13
org.apache.ambari.server.controller.predicate.AndPredicate.instance : r2 = r13 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : r3 = r0
org.apache.ambari.server.controller.predicate.AndPredicate.instance : r3 = r0 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : i0 = lengthof r3
org.apache.ambari.server.controller.predicate.AndPredicate.instance : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : i1 = 0
org.apache.ambari.server.controller.predicate.AndPredicate.instance : i1 = 0 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : if i1 >= i0
org.apache.ambari.server.controller.predicate.AndPredicate.instance : if i1 >= i0 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : r4 = r3[i1]
org.apache.ambari.server.controller.predicate.AndPredicate.instance : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : $z0 = r4 instanceof org.apache.ambari.server.controller.predicate.AlwaysPredicate
org.apache.ambari.server.controller.predicate.AndPredicate.instance : $z0 = r4 instanceof org.apache.ambari.server.controller.predicate.AlwaysPredicate >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : if $z0 != 0
org.apache.ambari.server.controller.predicate.AndPredicate.instance : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : i1 = i1 + 1
org.apache.ambari.server.controller.predicate.AndPredicate.instance : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : goto [?= (branch)]
org.apache.ambari.server.controller.predicate.AndPredicate.instance : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : $z1 = r4 instanceof org.apache.ambari.server.controller.predicate.AndPredicate
org.apache.ambari.server.controller.predicate.AndPredicate.instance : $z1 = r4 instanceof org.apache.ambari.server.controller.predicate.AndPredicate >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : if $z1 == 0
org.apache.ambari.server.controller.predicate.AndPredicate.instance : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.controller.predicate.AndPredicate.instance : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : $i2 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.ambari.server.controller.predicate.AndPredicate.instance : $i2 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : if $i2 != 1
org.apache.ambari.server.controller.predicate.AndPredicate.instance : if $i2 != 1 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.predicate.AndPredicate.instance : $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : $r9 = (org.apache.ambari.server.controller.spi.Predicate) $r8
org.apache.ambari.server.controller.predicate.AndPredicate.instance : $r9 = (org.apache.ambari.server.controller.spi.Predicate) $r8 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : goto [?= return $r9]
org.apache.ambari.server.controller.predicate.AndPredicate.instance : goto [?= return $r9] >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.instance : return $r9
org.apache.ambari.server.controller.predicate.AndPredicate.instance : return $r9 >>>>>>>> org.apache.ambari.server.controller.predicate.AndPredicate.create : return $r2
org.apache.ambari.server.controller.predicate.AndPredicate.create : return $r2 >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r11
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.acceptArrayPredicate : r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r11 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r3 = virtualinvoke r2.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set getSubResourceCategories()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r3 = virtualinvoke r2.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set getSubResourceCategories()>() >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceCategories : $r1 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceCategories>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceCategories : $r1 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceCategories> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceCategories : return $r1
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceCategories : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r5 = (java.lang.String) $r7
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r5 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean addPropertyToSubResource(java.lang.String,org.apache.ambari.server.controller.spi.TemporalInfo)>(r5, null)
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean addPropertyToSubResource(java.lang.String,org.apache.ambari.server.controller.spi.TemporalInfo)>(r5, null) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("/")
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : if i0 != -1
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : $r6 = r1
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : $r6 = r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : goto [?= r3 = $r6]
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : goto [?= r3 = $r6] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : r3 = $r6
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : r3 = $r6 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : r4 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map ensureSubResources()>()
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : r4 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map ensureSubResources()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : $r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : $r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : r5 = (org.apache.ambari.server.api.query.QueryImpl) $r7
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : r5 = (org.apache.ambari.server.api.query.QueryImpl) $r7 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : if r5 == null
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : if r5 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void addSubResource(java.lang.String,org.apache.ambari.server.api.query.QueryImpl)>(r3, r5)
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void addSubResource(java.lang.String,org.apache.ambari.server.api.query.QueryImpl)>(r3, r5) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r3 = new org.apache.ambari.server.api.query.render.DefaultRenderer
org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r3 = new org.apache.ambari.server.api.query.render.DefaultRenderer >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : specialinvoke $r3.<org.apache.ambari.server.api.query.render.DefaultRenderer: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.addSubResource : specialinvoke $r3.<org.apache.ambari.server.api.query.render.DefaultRenderer: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : virtualinvoke r2.<org.apache.ambari.server.api.query.QueryImpl: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r3)
org.apache.ambari.server.api.query.QueryImpl.addSubResource : virtualinvoke r2.<org.apache.ambari.server.api.query.QueryImpl: void setRenderer(org.apache.ambari.server.api.query.render.Renderer)>($r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r4 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources>
org.apache.ambari.server.api.query.QueryImpl.addSubResource : $r4 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addSubResource : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2)
org.apache.ambari.server.api.query.QueryImpl.addSubResource : interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : if i0 == -1
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : if i0 == -1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : return 1
org.apache.ambari.server.api.query.QueryImpl.addPropertyToSubResource : return 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r8 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set subResourcePredicateProperties>
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r8 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set subResourcePredicateProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r9 = virtualinvoke r2.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set getSubResourceProperties()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r9 = virtualinvoke r2.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set getSubResourceProperties()>() >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceProperties : $r1 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceProperties>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceProperties : $r1 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: java.util.Set subResourceProperties> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceProperties : return $r1
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getSubResourceProperties : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : interfaceinvoke $r8.<java.util.Set: boolean addAll(java.util.Collection)>($r9)
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : interfaceinvoke $r8.<java.util.Set: boolean addAll(java.util.Collection)>($r9) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $z3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean hasSubResourcePredicate()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $z3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean hasSubResourcePredicate()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set subResourcePredicateProperties>
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set subResourcePredicateProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : if $z0 != 0
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $z1 = 1
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $z1 = 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : goto [?= return $z1]
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : return $z1
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : return $z1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if $z3 == 0
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if $z3 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources>
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if $z4 == 0
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : if $z4 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r14 = (java.util.Map$Entry) $r13
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r14 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r16 = (java.lang.String) $r15
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r16 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r17 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate getSubResourcePredicate(org.apache.ambari.server.controller.spi.Predicate,java.lang.String)>(r1, $r16)
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r17 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate getSubResourcePredicate(org.apache.ambari.server.controller.spi.Predicate,java.lang.String)>(r1, $r16) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : if r1 != null
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : if r1 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : $r4 = new org.apache.ambari.server.api.query.SubResourcePredicateVisitor
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : $r4 = new org.apache.ambari.server.api.query.SubResourcePredicateVisitor >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : specialinvoke $r4.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: void <init>(java.lang.String)>(r2)
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : specialinvoke $r4.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : r3 = $r4
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : r3 = $r4 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r1, r3)
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r1, r3) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r2 = new java.util.LinkedList
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r2 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : specialinvoke $r2.<java.util.LinkedList: void <init>()>()
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : specialinvoke $r2.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r3 = $r2
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r3 = $r2 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate[] getPredicates()>()
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r4 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate[] getPredicates()>() >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $i2 = lengthof r4
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $i2 = lengthof r4 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : if $i2 <= 0
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : if $i2 <= 0 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r5 = r4
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r5 = r4 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : i0 = lengthof r5
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : i1 = 0
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : i1 = 0 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : if i1 >= i0
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r6 = r5[i1]
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r6 = r5[i1] >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r6, r0)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: void visit(org.apache.ambari.server.controller.spi.Predicate,org.apache.ambari.server.controller.predicate.PredicateVisitor)>(r6, r0) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.String getPropertyId()>()
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/")
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : if i0 != -1
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : if i0 != -1 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r3 = $r4
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r3 = $r4 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : if i0 <= -1
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : if i0 <= -1 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r5 = r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: java.lang.String category>
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r5 = r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: java.lang.String category> >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : if $z0 == 0
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $i1 = i0 + 1
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $i1 = i0 + 1 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: org.apache.ambari.server.controller.predicate.ComparisonPredicate copy(java.lang.String)>($r6)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: org.apache.ambari.server.controller.predicate.ComparisonPredicate copy(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : $r2 = new org.apache.ambari.server.controller.predicate.EqualsPredicate
org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : $r2 = new org.apache.ambari.server.controller.predicate.EqualsPredicate >>>>>>>> org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.predicate.EqualsPredicate: java.lang.Comparable getValue()>()
org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.predicate.EqualsPredicate: java.lang.Comparable getValue()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.getValue : $r1 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value>
org.apache.ambari.server.controller.predicate.ComparisonPredicate.getValue : $r1 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value> >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.getValue : return $r1
org.apache.ambari.server.controller.predicate.ComparisonPredicate.getValue : return $r1 >>>>>>>> org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : specialinvoke $r2.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>(r1, $r3)
org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : specialinvoke $r2.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>(r1, $r3) >>>>>>>> org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : return $r2
org.apache.ambari.server.controller.predicate.EqualsPredicate.copy : return $r2 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r7
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r7 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : goto [?= return]
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : goto [?= return] >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r7 = r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited>
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r7 = r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : i1 = i1 + 1
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : goto [?= (branch)]
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r8 = <org.apache.ambari.server.controller.predicate.AlwaysPredicate: org.apache.ambari.server.controller.predicate.AlwaysPredicate INSTANCE>
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : $r8 = <org.apache.ambari.server.controller.predicate.AlwaysPredicate: org.apache.ambari.server.controller.predicate.AlwaysPredicate INSTANCE> >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r8
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptComparisonPredicate : r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r8 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $i3 = interfaceinvoke r3.<java.util.List: int size()>()
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $i3 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r8 = newarray (org.apache.ambari.server.controller.spi.Predicate)[$i3]
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r8 = newarray (org.apache.ambari.server.controller.spi.Predicate)[$i3] >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r10 = (org.apache.ambari.server.controller.spi.Predicate[]) $r9
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r10 = (org.apache.ambari.server.controller.spi.Predicate[]) $r9 >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate create(org.apache.ambari.server.controller.spi.Predicate[])>($r10)
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : $r11 = virtualinvoke r1.<org.apache.ambari.server.controller.predicate.ArrayPredicate: org.apache.ambari.server.controller.spi.Predicate create(org.apache.ambari.server.controller.spi.Predicate[])>($r10) >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r11
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.acceptArrayPredicate : r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> = $r11 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : $r5 = virtualinvoke r3.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate getSubResourcePredicate()>()
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : $r5 = virtualinvoke r3.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate getSubResourcePredicate()>() >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.getSubResourcePredicate : $r1 = r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited>
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.getSubResourcePredicate : $r1 = r0.<org.apache.ambari.server.api.query.SubResourcePredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> >>>>>>>> org.apache.ambari.server.api.query.SubResourcePredicateVisitor.getSubResourcePredicate : return $r1
org.apache.ambari.server.api.query.SubResourcePredicateVisitor.getSubResourcePredicate : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : return $r5
org.apache.ambari.server.api.query.QueryImpl.getSubResourcePredicate : return $r5 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate> = $r17
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate> = $r17 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r18 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r18 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r19 = (org.apache.ambari.server.api.query.QueryImpl) $r18
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r19 = (org.apache.ambari.server.api.query.QueryImpl) $r18 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r20 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate>
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r20 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate subResourcePredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : specialinvoke $r19.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processUserPredicate(org.apache.ambari.server.controller.spi.Predicate)>($r20)
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : specialinvoke $r19.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processUserPredicate(org.apache.ambari.server.controller.spi.Predicate)>($r20) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r1 = new java.util.HashSet
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r1.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r1.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : r2 = $r1
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : r2 = $r1 >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r4 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r4 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r3 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r4.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r3)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r4.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r3) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r5 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r5 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Alert>
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r6 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Alert> >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r5.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r6)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r5.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r6) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r7 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r7 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostStackVersion>
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r8 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostStackVersion> >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r7.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r8)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r7.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r8) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r9 = new org.apache.ambari.server.api.resources.SubResourceDefinition
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r9 = new org.apache.ambari.server.api.resources.SubResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r10 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostKerberosIdentity>
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : $r10 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostKerberosIdentity> >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r9.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r10)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : specialinvoke $r9.<org.apache.ambari.server.api.resources.SubResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r10) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : return r2
org.apache.ambari.server.api.resources.HostResourceDefinition.getSubResourceDefinitions : return r2 >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r160 = new org.apache.ambari.server.api.resources.HostComponentResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r160 = new org.apache.ambari.server.api.resources.HostComponentResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r160.<org.apache.ambari.server.api.resources.HostComponentResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r160.<org.apache.ambari.server.api.resources.HostComponentResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r160
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r160 >>>>>>>> org.apache.ambari.server.api.resources.HostComponentResourceDefinition.getPluralName : return "host_components"
org.apache.ambari.server.api.resources.HostComponentResourceDefinition.getPluralName : return "host_components" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r233 = new org.apache.ambari.server.api.resources.HostKerberosIdentityResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r233 = new org.apache.ambari.server.api.resources.HostKerberosIdentityResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r233.<org.apache.ambari.server.api.resources.HostKerberosIdentityResourceDefinition: void <init>()>()
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r233.<org.apache.ambari.server.api.resources.HostKerberosIdentityResourceDefinition: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r233
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r233 >>>>>>>> org.apache.ambari.server.api.resources.HostKerberosIdentityResourceDefinition.getPluralName : return "kerberos_identities"
org.apache.ambari.server.api.resources.HostKerberosIdentityResourceDefinition.getPluralName : return "kerberos_identities" >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r218 = new org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r218 = new org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r90 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostStackVersion>
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : $r90 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostStackVersion> >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r218.<org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r90)
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : specialinvoke r218.<org.apache.ambari.server.api.resources.ComponentStackVersionResourceDefinition: void <init>(org.apache.ambari.server.controller.spi.Resource$Type)>($r90) >>>>>>>> org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r218
org.apache.ambari.server.api.resources.ResourceInstanceFactoryImpl.getResourceDefinition : r3 = r218 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $z1 = 0
org.apache.ambari.server.api.query.QueryImpl.hasSubResourcePredicate : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r22 = virtualinvoke r2.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate getProcessedPredicate()>()
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r22 = virtualinvoke r2.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate getProcessedPredicate()>() >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getProcessedPredicate : $r1 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited>
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getProcessedPredicate : $r1 = r0.<org.apache.ambari.server.api.query.ProcessingPredicateVisitor: org.apache.ambari.server.controller.spi.Predicate lastVisited> >>>>>>>> org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getProcessedPredicate : return $r1
org.apache.ambari.server.api.query.ProcessingPredicateVisitor.getProcessedPredicate : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processedPredicate> = $r22
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processedPredicate> = $r22 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r23 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processedPredicate>
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : $r23 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate processedPredicate> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : return $r23
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : return $r23 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : goto [?= $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.processUserPredicate : goto [?= $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : r2 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createPredicate(java.util.Map,org.apache.ambari.server.controller.spi.Predicate)>($r14, $r16)
org.apache.ambari.server.api.query.QueryImpl.queryForResources : r2 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createPredicate(java.util.Map,org.apache.ambari.server.controller.spi.Predicate)>($r14, $r16) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createInternalPredicate(java.util.Map)>(r1)
org.apache.ambari.server.api.query.QueryImpl.createPredicate : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Predicate createInternalPredicate(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r8 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r2 = interfaceinvoke $r8.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r2 = interfaceinvoke $r8.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r3 = interfaceinvoke $r9.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r3 = interfaceinvoke $r9.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r2) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r10 = new java.util.HashSet
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r10 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r10.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r10.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r4 = $r10
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r4 = $r10 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r6 = (java.util.Map$Entry) $r12
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r6 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r13 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $r13 == null
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $r13 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r14 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r15 = (org.apache.ambari.server.controller.spi.Resource$Type) $r14
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r15 = (org.apache.ambari.server.controller.spi.Resource$Type) $r14 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r7 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r15)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r7 = interfaceinvoke r3.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r15) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if r7 == null
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if r7 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r16 = new org.apache.ambari.server.controller.predicate.EqualsPredicate
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r16 = new org.apache.ambari.server.controller.predicate.EqualsPredicate >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r17 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r17 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r18 = (java.lang.Comparable) $r17
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r18 = (java.lang.Comparable) $r17 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r16.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>(r7, $r18)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : specialinvoke $r16.<org.apache.ambari.server.controller.predicate.EqualsPredicate: void <init>(java.lang.String,java.lang.Comparable)>(r7, $r18) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i0 = specialinvoke r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: int hashCode()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i0 = specialinvoke r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : if $r1 == null
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId>
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.PropertyPredicate: java.lang.String propertyId> >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : goto [?= return $i0]
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : goto [?= return $i0] >>>>>>>> org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : return $i0
org.apache.ambari.server.controller.predicate.PropertyPredicate.hashCode : return $i0 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value>
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r1 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value> >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : if $r1 == null
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value>
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $r2 = r0.<org.apache.ambari.server.controller.predicate.ComparisonPredicate: java.lang.Comparable value> >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : $i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : goto [?= i3 = $i1 + $i2]
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : goto [?= i3 = $i1 + $i2] >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : return i3
org.apache.ambari.server.controller.predicate.ComparisonPredicate.hashCode : return i3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : n0 = null
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : n0 = null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $i0 = interfaceinvoke r4.<java.util.Set: int size()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $i0 = interfaceinvoke r4.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $i0 != 1
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if $i0 != 1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r19 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r19 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r21 = (org.apache.ambari.server.controller.spi.Predicate) $r20
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r21 = (org.apache.ambari.server.controller.spi.Predicate) $r20 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()]
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : goto [?= $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r26 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r27 = interfaceinvoke $r26.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r27 = interfaceinvoke $r26.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r28 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController>
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : $r28 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.ClusterController clusterController> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r29 = interfaceinvoke $r28.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Predicate getAmendedPredicate(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Predicate)>(r27, r21)
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : r29 = interfaceinvoke $r28.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Predicate getAmendedPredicate(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.controller.spi.Predicate)>(r27, r21) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if null == r29
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : if null == r29 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : return r21
org.apache.ambari.server.api.query.QueryImpl.createInternalPredicate : return r21 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r3 != null
org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r3 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r2 != null
org.apache.ambari.server.api.query.QueryImpl.createPredicate : if r2 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : r6 = new org.apache.ambari.server.controller.predicate.AndPredicate
org.apache.ambari.server.api.query.QueryImpl.createPredicate : r6 = new org.apache.ambari.server.controller.predicate.AndPredicate >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r4 = r6
org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r4 = r6 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r5 = newarray (org.apache.ambari.server.controller.spi.Predicate)[2]
org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r5 = newarray (org.apache.ambari.server.controller.spi.Predicate)[2] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r5[0] = r2
org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r5[0] = r2 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r5[1] = r3
org.apache.ambari.server.api.query.QueryImpl.createPredicate : $r5[1] = r3 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : specialinvoke r6.<org.apache.ambari.server.controller.predicate.AndPredicate: void <init>(org.apache.ambari.server.controller.spi.Predicate[])>($r5)
org.apache.ambari.server.api.query.QueryImpl.createPredicate : specialinvoke r6.<org.apache.ambari.server.controller.predicate.AndPredicate: void <init>(org.apache.ambari.server.controller.spi.Predicate[])>($r5) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createPredicate : return $r4
org.apache.ambari.server.api.query.QueryImpl.createPredicate : return $r4 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void finalizeProperties()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void finalizeProperties()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition>
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r1 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r5 = new org.apache.ambari.server.api.query.QueryInfo
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r5 = new org.apache.ambari.server.api.query.QueryInfo >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r6 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r6 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r5.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>(r1, $r6)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r5.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>(r1, $r6) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r2 = $r5
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r2 = $r5 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r7 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r7 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r8 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r8 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r9 = virtualinvoke $r8.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.name : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.name : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.name : return $r1
org.apache.ambari.server.controller.spi.Resource$Type.name : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r7.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, r2, $r9)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke $r7.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, r2, $r9) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r3 = $r7
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r3 = $r7 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r4 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.util.TreeNode buildQueryPropertyTree(org.apache.ambari.server.api.query.QueryImpl,org.apache.ambari.server.api.util.TreeNode)>(r0, r3)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : r4 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.util.TreeNode buildQueryPropertyTree(org.apache.ambari.server.api.query.QueryImpl,org.apache.ambari.server.api.util.TreeNode)>(r0, r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r8 = r1.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources>
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r8 = r1.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestedSubResources> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r3 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : if $z0 == 0
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r4 = (org.apache.ambari.server.api.query.QueryImpl) $r10
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r4 = (org.apache.ambari.server.api.query.QueryImpl) $r10 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r5 = r4.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition>
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r5 = r4.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition resourceDefinition> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r11 = new org.apache.ambari.server.api.query.QueryInfo
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r11 = new org.apache.ambari.server.api.query.QueryInfo >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r12 = r4.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r12 = r4.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : specialinvoke $r11.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>(r5, $r12)
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : specialinvoke $r11.<org.apache.ambari.server.api.query.QueryInfo: void <init>(org.apache.ambari.server.api.resources.ResourceDefinition,java.util.Set)>(r5, $r12) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r6 = $r11
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r6 = $r11 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r13 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r13 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r14 = virtualinvoke $r13.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : $r14 = virtualinvoke $r13.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r7 = interfaceinvoke r2.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r6, $r14)
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : r7 = interfaceinvoke r2.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>(r6, $r14) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : r4 = $r3
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.util.TreeNode buildQueryPropertyTree(org.apache.ambari.server.api.query.QueryImpl,org.apache.ambari.server.api.util.TreeNode)>(r4, r7)
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.util.TreeNode buildQueryPropertyTree(org.apache.ambari.server.api.query.QueryImpl,org.apache.ambari.server.api.util.TreeNode)>(r4, r7) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : return r2
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : return r2 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.QueryImpl.buildQueryPropertyTree : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer>
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.query.render.Renderer renderer> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $z0 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean isCollectionResource()>()
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $z0 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: boolean isCollectionResource()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>()
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r1 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map getKeyValueMap()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r2 = virtualinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : if $r4 != null
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : if $r4 != null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $z0 = 0
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : $z0 = 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : return $z0
org.apache.ambari.server.api.query.QueryImpl.isCollectionResource : return $z0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.api.query.render.Renderer: org.apache.ambari.server.api.util.TreeNode finalizeProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r4, $z0)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : $r11 = interfaceinvoke $r10.<org.apache.ambari.server.api.query.render.Renderer: org.apache.ambari.server.api.util.TreeNode finalizeProperties(org.apache.ambari.server.api.util.TreeNode,boolean)>(r4, $z0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void mergeFinalizedProperties(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.query.QueryImpl)>($r11, r0)
org.apache.ambari.server.api.query.QueryImpl.finalizeProperties : specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: void mergeFinalizedProperties(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.query.QueryImpl)>($r11, r0) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r13 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r3 = (java.util.Set) $r13
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r3 = (java.util.Set) $r13 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r14 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r14 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r14.<java.util.Set: void clear()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r14.<java.util.Set: void clear()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r15 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r15 = r2.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r15.<java.util.Set: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : interfaceinvoke $r15.<java.util.Set: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r16 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $r16 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r4 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : r4 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : if $z1 == 0
org.apache.ambari.server.api.query.QueryImpl.mergeFinalizedProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.queryForResources : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Request createRequest()>()
org.apache.ambari.server.api.query.QueryImpl.queryForResources : r3 = specialinvoke r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.Request createRequest()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r1 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r1 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestInfoProperties>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r9 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map requestInfoProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r9)
org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r9) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r2 = $r1
org.apache.ambari.server.api.query.QueryImpl.createRequest : r2 = $r1 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r10 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : if $r10 == null
org.apache.ambari.server.api.query.QueryImpl.createRequest : if $r10 == null >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $z1 = r0.<org.apache.ambari.server.api.query.QueryImpl: boolean allProperties>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $z1 = r0.<org.apache.ambari.server.api.query.QueryImpl: boolean allProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z1 == 0
org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r29 = new java.util.HashMap
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r29 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r29.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r29.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r3 = $r29
org.apache.ambari.server.api.query.QueryImpl.createRequest : r3 = $r29 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r30 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map temporalInfoMap>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r30 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Map temporalInfoMap> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(null)
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object get(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r4 = (org.apache.ambari.server.controller.spi.TemporalInfo) $r31
org.apache.ambari.server.api.query.QueryImpl.createRequest : r4 = (org.apache.ambari.server.controller.spi.TemporalInfo) $r31 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r32 = new java.util.HashSet
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r32 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r5 = $r32
org.apache.ambari.server.api.query.QueryImpl.createRequest : r5 = $r32 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r33 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r33 = r0.<org.apache.ambari.server.api.query.QueryImpl: java.util.Set requestedProperties> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>($r33)
org.apache.ambari.server.api.query.QueryImpl.createRequest : interfaceinvoke r5.<java.util.Set: boolean addAll(java.util.Collection)>($r33) >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.QueryImpl.createRequest : $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z3 == 0
org.apache.ambari.server.api.query.QueryImpl.createRequest : if $z3 == 0 >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r39 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r39 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.PageRequest pageRequest> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r40 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.SortRequest sortRequest>
org.apache.ambari.server.api.query.QueryImpl.createRequest : $r40 = r0.<org.apache.ambari.server.api.query.QueryImpl: org.apache.ambari.server.controller.spi.SortRequest sortRequest> >>>>>>>> org.apache.ambari.server.api.query.QueryImpl.createRequest : $r41 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set,java.util.Map,java.util.Map,org.apache.ambari.server.controller.spi.PageRequest,org.apache.ambari.server.controller.spi.SortRequest)>(r5, r2, r3, $r39, $r40)
