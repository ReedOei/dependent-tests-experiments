org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.values : $r0 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.spi.Resource$Type.values : $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.values : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
org.apache.ambari.server.controller.spi.Resource$Type.values : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $r3 = newarray (org.apache.ambari.server.controller.spi.Resource$Type)[$i0]
org.apache.ambari.server.controller.spi.Resource$Type.values : $r3 = newarray (org.apache.ambari.server.controller.spi.Resource$Type)[$i0] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3)
org.apache.ambari.server.controller.spi.Resource$Type.values : $r4 = interfaceinvoke $r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r3) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : $r5 = (org.apache.ambari.server.controller.spi.Resource$Type[]) $r4
org.apache.ambari.server.controller.spi.Resource$Type.values : $r5 = (org.apache.ambari.server.controller.spi.Resource$Type[]) $r4 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.values : return $r5
