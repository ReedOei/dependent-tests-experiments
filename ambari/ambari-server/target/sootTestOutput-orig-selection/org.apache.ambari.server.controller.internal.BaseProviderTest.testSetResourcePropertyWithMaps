org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z1 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if $z1 != 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z3 = 1
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z3 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : goto [?= z0 = $z3]
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : goto [?= z0 = $z3] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : z0 = $z3
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : z0 = $z3 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if z0 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $r9 = <org.apache.ambari.server.controller.internal.BaseProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $r9 = <org.apache.ambari.server.controller.internal.BaseProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z4 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z4 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if $z4 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z5 = staticinvoke <org.apache.ambari.server.controller.internal.BaseProvider: boolean setResourceMapProperty(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.Object)>(r0, r1, r2)
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : $z5 = staticinvoke <org.apache.ambari.server.controller.internal.BaseProvider: boolean setResourceMapProperty(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.Object)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z0 = r2 instanceof java.util.Map
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z0 = r2 instanceof java.util.Map >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z0 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r3 = (java.util.Map) r2
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r3 = (java.util.Map) r2 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z1 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z1 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z1 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : interfaceinvoke r0.<org.apache.ambari.server.controller.spi.Resource: void addCategory(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : interfaceinvoke r0.<org.apache.ambari.server.controller.spi.Resource: void addCategory(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : r2 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.lang.String getCategoryKey(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : r2 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.lang.String getCategoryKey(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.getCategoryKey : if r1 != null
org.apache.ambari.server.controller.internal.ResourceImpl.getCategoryKey : if r1 != null >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.getCategoryKey : $r2 = r1
org.apache.ambari.server.controller.internal.ResourceImpl.getCategoryKey : $r2 = r1 >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.getCategoryKey : return $r2
org.apache.ambari.server.controller.internal.ResourceImpl.getCategoryKey : return $r2 >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $r4 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.util.Map propertiesMap>
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $r4 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.util.Map propertiesMap> >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : if $z0 != 0
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $r5 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.util.Map propertiesMap>
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $r5 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.util.Map propertiesMap> >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $r3 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : $r3 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : specialinvoke $r3.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : specialinvoke $r3.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3)
org.apache.ambari.server.controller.internal.ResourceImpl.addCategory : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3) >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= return 1]
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : goto [?= return 1] >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : return 1
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : return 1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if $z5 != 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : return z0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceProperty : return z0 >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.getPropertiesMap : $r1 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.util.Map propertiesMap>
org.apache.ambari.server.controller.internal.ResourceImpl.getPropertiesMap : $r1 = r0.<org.apache.ambari.server.controller.internal.ResourceImpl: java.util.Map propertiesMap> >>>>>>>> org.apache.ambari.server.controller.internal.ResourceImpl.getPropertiesMap : return $r1
org.apache.ambari.server.controller.internal.ResourceImpl.getPropertiesMap : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z2 == 0
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r5 = (java.util.Map$Entry) $r9
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r5 = (java.util.Map$Entry) $r9 >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r10 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : $r11 = virtualinvoke $r10.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.BaseProvider.setResourceMapProperty : r6 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.lang.String getPropertyId(java.lang.String,java.lang.String)>(r1, $r11)
