org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r7 = virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: java.lang.Object createStrictMock(java.lang.Class)>(class "javax/servlet/http/HttpServletRequest") >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r2 = (javax.servlet.http.HttpServletRequest) $r7
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r2 = (javax.servlet.http.HttpServletRequest) $r7 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r8 = virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: java.lang.Object createStrictMock(java.lang.Class)>(class "javax/servlet/http/HttpServletResponse")
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r8 = virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: java.lang.Object createStrictMock(java.lang.Class)>(class "javax/servlet/http/HttpServletResponse") >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r3 = (javax.servlet.http.HttpServletResponse) $r8
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r3 = (javax.servlet.http.HttpServletResponse) $r8 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r9 = virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: java.lang.Object createStrictMock(java.lang.Class)>(class "org/springframework/security/core/AuthenticationException")
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r9 = virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: java.lang.Object createStrictMock(java.lang.Class)>(class "org/springframework/security/core/AuthenticationException") >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r4 = (org.springframework.security.core.AuthenticationException) $r9
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r4 = (org.springframework.security.core.AuthenticationException) $r9 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r10 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : if $r10 != r1
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : if $r10 != r1 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r15 = virtualinvoke r4.<org.springframework.security.core.AuthenticationException: java.lang.String getMessage()>()
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r15 = virtualinvoke r4.<org.springframework.security.core.AuthenticationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15)
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r16 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("message")
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r17 = interfaceinvoke $r16.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("message") >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, "message")
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, "message") >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r19 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: void replayAll()>()
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: void replayAll()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r21 = new java.util.Properties
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r21 = new java.util.Properties >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : specialinvoke $r21.<java.util.Properties: void <init>()>()
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : specialinvoke $r21.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r5 = $r21
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r5 = $r21 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : if r1 == null
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : if r1 == null >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r32 = new org.apache.ambari.server.security.AmbariEntryPoint
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r32 = new org.apache.ambari.server.security.AmbariEntryPoint >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r33 = new org.apache.ambari.server.configuration.Configuration
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : $r33 = new org.apache.ambari.server.configuration.Configuration >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : specialinvoke $r33.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>(r5)
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : specialinvoke $r33.<org.apache.ambari.server.configuration.Configuration: void <init>(java.util.Properties)>(r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r4 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r8 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r7) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r8 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r15 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15)
org.apache.ambari.server.configuration.Configuration.loadSSLParams : $r16 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r15) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null
org.apache.ambari.server.configuration.Configuration.loadSSLParams : if $r16 == null >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : specialinvoke $r32.<org.apache.ambari.server.security.AmbariEntryPoint: void <init>(org.apache.ambari.server.configuration.Configuration)>($r33)
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : specialinvoke $r32.<org.apache.ambari.server.security.AmbariEntryPoint: void <init>(org.apache.ambari.server.configuration.Configuration)>($r33) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getKerberosAuthenticationProperties : $r1 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties kerberosAuthenticationProperties>
org.apache.ambari.server.configuration.Configuration.getKerberosAuthenticationProperties : $r1 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties kerberosAuthenticationProperties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getKerberosAuthenticationProperties : return $r1
org.apache.ambari.server.configuration.Configuration.getKerberosAuthenticationProperties : return $r1 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r6 = $r32
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : r6 = $r32 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : virtualinvoke r6.<org.apache.ambari.server.security.AmbariEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>(r2, r3, r4)
org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : virtualinvoke r6.<org.apache.ambari.server.security.AmbariEntryPoint: void commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)>(r2, r3, r4) >>>>>>>> org.apache.ambari.server.security.AmbariEntryPoint.commence : $z0 = r0.<org.apache.ambari.server.security.AmbariEntryPoint: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.AmbariEntryPoint.commence : $z0 = r0.<org.apache.ambari.server.security.AmbariEntryPoint: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.AmbariEntryPoint.commence : if $z0 == 0
org.apache.ambari.server.security.AmbariEntryPoint.commence : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.AmbariEntryPoint.commence : $r4 = virtualinvoke r3.<org.springframework.security.core.AuthenticationException: java.lang.String getMessage()>()
org.apache.ambari.server.security.AmbariEntryPoint.commence : $r4 = virtualinvoke r3.<org.springframework.security.core.AuthenticationException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.security.AmbariEntryPoint.commence : interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, $r4)
org.apache.ambari.server.security.AmbariEntryPoint.commence : interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(403, $r4) >>>>>>>> org.apache.ambari.server.security.AmbariEntryPointTest.testCommence : virtualinvoke r0.<org.apache.ambari.server.security.AmbariEntryPointTest: void verifyAll()>()
