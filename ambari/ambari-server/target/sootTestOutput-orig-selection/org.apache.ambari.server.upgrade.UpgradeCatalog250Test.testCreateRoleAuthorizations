org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r2 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: java.util.Map upgradeCatalogMap> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : $r3 = interfaceinvoke r1.<org.apache.ambari.server.upgrade.UpgradeCatalog: java.lang.String getTargetVersion()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.getTargetVersion : return "2.4.2"
org.apache.ambari.server.upgrade.UpgradeCatalog242.getTargetVersion : return "2.4.2" >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.registerCatalog : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r1 = newarray (java.lang.String)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r1 = newarray (java.lang.String)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r1[0] = "AMBARI.ADMINISTRATOR:AMBARI"
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r1[0] = "AMBARI.ADMINISTRATOR:AMBARI" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r1[1] = "CLUSTER.ADMINISTRATOR:CLUSTER"
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r1[1] = "CLUSTER.ADMINISTRATOR:CLUSTER" >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1)
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog242: void addRoleAuthorization(java.lang.String,java.lang.String,java.util.Collection)>("CLUSTER.RUN_CUSTOM_COMMAND", "Perform custom cluster-level actions", $r2)
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog242: void addRoleAuthorization(java.lang.String,java.lang.String,java.util.Collection)>("CLUSTER.RUN_CUSTOM_COMMAND", "Perform custom cluster-level actions", $r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if $z0 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RoleAuthorizationDAO")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/RoleAuthorizationDAO") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r4 = (org.apache.ambari.server.orm.dao.RoleAuthorizationDAO) $r10
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r4 = (org.apache.ambari.server.orm.dao.RoleAuthorizationDAO) $r10 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r5 = virtualinvoke r4.<org.apache.ambari.server.orm.dao.RoleAuthorizationDAO: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity findById(java.lang.String)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r5 = virtualinvoke r4.<org.apache.ambari.server.orm.dao.RoleAuthorizationDAO: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity findById(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if r5 != null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if r5 != null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r11 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r11 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : specialinvoke $r11.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : specialinvoke $r11.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r5 = $r11
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r5 = $r11 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r5.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r5.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r5.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r5.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r4.<org.apache.ambari.server.orm.dao.RoleAuthorizationDAO: void create(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>(r5)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r4.<org.apache.ambari.server.orm.dao.RoleAuthorizationDAO: void create(org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>(r5) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $z1 = interfaceinvoke r3.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $z1 = interfaceinvoke r3.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if $z1 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if $z1 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r6 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r6 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if $z2 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r7 = (java.lang.String) $r12
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r7 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\:")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : r8 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\:") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r13 = r8[0]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r13 = r8[0] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r14 = r8[1]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : $r14 = r8[1] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void addAuthorizationToRole(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r13, $r14, r5)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : virtualinvoke r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: void addAuthorizationToRole(java.lang.String,java.lang.String,org.apache.ambari.server.orm.entities.RoleAuthorizationEntity)>($r13, $r14, r5) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if r3 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if $z0 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if $z1 != 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if $z1 != 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r7 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r7 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/PermissionDAO")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r8 = interfaceinvoke $r7.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/PermissionDAO") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : r4 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r8
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : r4 = (org.apache.ambari.server.orm.dao.PermissionDAO) $r8 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r9 = r0.<org.apache.ambari.server.upgrade.AbstractUpgradeCatalog: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ResourceTypeDAO")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r10 = interfaceinvoke $r9.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/ResourceTypeDAO") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : r5 = (org.apache.ambari.server.orm.dao.ResourceTypeDAO) $r10
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : r5 = (org.apache.ambari.server.orm.dao.ResourceTypeDAO) $r10 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.dao.ResourceTypeDAO: org.apache.ambari.server.orm.entities.ResourceTypeEntity findByName(java.lang.String)>(r2)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r11 = virtualinvoke r5.<org.apache.ambari.server.orm.dao.ResourceTypeDAO: org.apache.ambari.server.orm.entities.ResourceTypeEntity findByName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : r6 = virtualinvoke r4.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findPermissionByNameAndType(java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1, $r11)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : r6 = virtualinvoke r4.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity findPermissionByNameAndType(java.lang.String,org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1, $r11) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if r6 == null
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : if r6 == null >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r12 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection getAuthorizations()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : $r12 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection getAuthorizations()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : virtualinvoke r4.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity merge(org.apache.ambari.server.orm.entities.PermissionEntity)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addAuthorizationToRole : virtualinvoke r4.<org.apache.ambari.server.orm.dao.PermissionDAO: org.apache.ambari.server.orm.entities.PermissionEntity merge(org.apache.ambari.server.orm.entities.PermissionEntity)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.addRoleAuthorization : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("AMBARI.ADMINISTRATOR:AMBARI")
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("AMBARI.ADMINISTRATOR:AMBARI") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog242: void addRoleAuthorization(java.lang.String,java.lang.String,java.util.Collection)>("AMBARI.RUN_CUSTOM_COMMAND", "Perform custom administrative actions", $r3)
org.apache.ambari.server.upgrade.UpgradeCatalog242.createRoleAuthorizations : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog242: void addRoleAuthorization(java.lang.String,java.lang.String,java.util.Collection)>("AMBARI.RUN_CUSTOM_COMMAND", "Perform custom administrative actions", $r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationId : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationName : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationName()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetched(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : $r1 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_get_authorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationName : return $r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.getAuthorizationName : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : return 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : return 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if r1 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if r1 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if $r3 == $r4
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : r2 = (org.apache.ambari.server.orm.entities.RoleAuthorizationEntity) r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : r2 = (org.apache.ambari.server.orm.entities.RoleAuthorizationEntity) r1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r5 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if $r5 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if $r5 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r6 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>()
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String _persistence_get_authorizationId()>() >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : goto [?= $z2 = 0]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : goto [?= $z2 = 0] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $z2 = 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : $z2 = 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.equals : return $z2
