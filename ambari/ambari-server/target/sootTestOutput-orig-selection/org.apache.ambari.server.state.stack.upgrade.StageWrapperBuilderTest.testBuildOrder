org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : r2 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List beforeBuild(org.apache.ambari.server.state.UpgradeContext)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : r2 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List beforeBuild(org.apache.ambari.server.state.UpgradeContext)>(r1)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : r2 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List beforeBuild(org.apache.ambari.server.state.UpgradeContext)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : $r2 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(100)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(100) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : r3 = $r2
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : return r3
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.beforeBuild : return r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r3 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r3 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : return r2
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.beforeBuild : return r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : r3 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List build(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r2)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : r3 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List build(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : $r3 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : $r3 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_stageWrappers>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : $r5 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_stageWrappers> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : return $r5
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.build : return $r5 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : r4 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List afterBuild(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r3)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : r4 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List afterBuild(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r3) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : r3 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List afterBuild(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r2)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : r3 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder: java.util.List afterBuild(org.apache.ambari.server.state.UpgradeContext,java.util.List)>(r1, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.afterBuild : $z1 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r2)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.afterBuild : $z1 = staticinvoke <org.springframework.util.CollectionUtils: boolean isEmpty(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.afterBuild : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.afterBuild : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.afterBuild : return r2
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.afterBuild : return r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r4 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5)
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : return r3
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.afterBuild : return r3 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : return r4
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilder.build : return r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.access$000 : $r1 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List getInvocationOrder()>()
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.access$000 : $r1 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List getInvocationOrder()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.getInvocationOrder : $r1 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder>
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.getInvocationOrder : $r1 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder: java.util.List m_invocationOrder> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.getInvocationOrder : return $r1
org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.getInvocationOrder : return $r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.StageWrapperBuilderTest$MockStageWrapperBuilder.access$000 : return $r1
