org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : $r1 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "com/google/gson/Gson") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : $r2 = new com.google.gson.Gson
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : $r2 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : specialinvoke $r2.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : specialinvoke $r2.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelperTest$1.configure : interfaceinvoke $r1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setBaseUrl : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl> = r1
org.apache.ambari.server.state.RepositoryInfo.setBaseUrl : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String baseUrl> = r1 >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setOsType : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType> = r1
org.apache.ambari.server.state.RepositoryInfo.setOsType : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType> = r1 >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setRepoId : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoId> = r1
org.apache.ambari.server.state.RepositoryInfo.setRepoId : r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String repoId> = r1 >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.setUnique : r0.<org.apache.ambari.server.state.RepositoryInfo: boolean unique> = z0
org.apache.ambari.server.state.RepositoryInfo.setUnique : r0.<org.apache.ambari.server.state.RepositoryInfo: boolean unique> = z0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r2 = new com.google.gson.JsonArray
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r2 = new com.google.gson.JsonArray >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r2.<com.google.gson.JsonArray: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r2.<com.google.gson.JsonArray: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r3 = $r2
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r3 = $r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r4 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r4 = staticinvoke <com.google.common.collect.ArrayListMultimap: com.google.common.collect.ArrayListMultimap create()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r6 = (org.apache.ambari.server.state.RepositoryInfo) $r12
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r6 = (org.apache.ambari.server.state.RepositoryInfo) $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r13 = virtualinvoke r6.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getOsType()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r13 = virtualinvoke r6.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String getOsType()>() >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.getOsType : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType>
org.apache.ambari.server.state.RepositoryInfo.getOsType : $r1 = r0.<org.apache.ambari.server.state.RepositoryInfo: java.lang.String osType> >>>>>>>> org.apache.ambari.server.state.RepositoryInfo.getOsType : return $r1
org.apache.ambari.server.state.RepositoryInfo.getOsType : return $r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : interfaceinvoke r4.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r13, r6)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : interfaceinvoke r4.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r13, r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r14 = interfaceinvoke r4.<com.google.common.collect.Multimap: java.util.Map asMap()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r14 = interfaceinvoke r4.<com.google.common.collect.Multimap: java.util.Map asMap()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r18 = (java.util.Map$Entry) $r17
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r18 = (java.util.Map$Entry) $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r19 = new com.google.gson.JsonObject
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r19 = new com.google.gson.JsonObject >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r19.<com.google.gson.JsonObject: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r19.<com.google.gson.JsonObject: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r7 = $r19
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r7 = $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r20 = new com.google.gson.JsonArray
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r20 = new com.google.gson.JsonArray >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r20.<com.google.gson.JsonArray: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r20.<com.google.gson.JsonArray: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r8 = $r20
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r8 = $r20 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r21 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r21 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r22 = (java.util.Collection) $r21
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r22 = (java.util.Collection) $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r9 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r9 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r23 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r10 = (org.apache.ambari.server.state.RepositoryInfo) $r23
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r10 = (org.apache.ambari.server.state.RepositoryInfo) $r23 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r24 = new com.google.gson.JsonObject
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r24 = new com.google.gson.JsonObject >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r24.<com.google.gson.JsonObject: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : specialinvoke $r24.<com.google.gson.JsonObject: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r11 = $r24
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : r11 = $r24 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r25 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID>
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.serializeOperatingSystems : $r25 = <org.apache.ambari.server.controller.internal.RepositoryResourceProvider: java.lang.String REPOSITORY_BASE_URL_PROPERTY_ID> >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r1 = new org.codehaus.jackson.map.ObjectMapper
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r1 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : specialinvoke $r1.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : specialinvoke $r1.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : r2 = $r1
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : r2 = $r1 >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r5 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0)
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r5 = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r3 = new org.apache.ambari.server.controller.utilities.PropertyHelper$2
org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : $r3 = new org.apache.ambari.server.controller.utilities.PropertyHelper$2 >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.readPropertyIds : specialinvoke $r3.<org.apache.ambari.server.controller.utilities.PropertyHelper$2: void <init>()>()
