org.apache.ambari.server.checks.KafkaKerberosCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName>
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : $r1 = r0.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String m_clusterName> >>>>>>>> org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1
org.apache.ambari.server.controller.PrereqCheckRequest.getClusterName : return $r1 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r5 = r0.<org.apache.ambari.server.checks.KafkaKerberosCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r5 = r0.<org.apache.ambari.server.checks.KafkaKerberosCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.KafkaKerberosCheckTest$1: org.apache.ambari.server.state.Clusters get()>()
org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : $r1 = virtualinvoke r0.<org.apache.ambari.server.checks.KafkaKerberosCheckTest$1: org.apache.ambari.server.state.Clusters get()>() >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.KafkaKerberosCheckTest$1: org.apache.ambari.server.checks.KafkaKerberosCheckTest this$0>
org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : $r1 = r0.<org.apache.ambari.server.checks.KafkaKerberosCheckTest$1: org.apache.ambari.server.checks.KafkaKerberosCheckTest this$0> >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.KafkaKerberosCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.KafkaKerberosCheckTest)>($r1)
org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : $r2 = staticinvoke <org.apache.ambari.server.checks.KafkaKerberosCheckTest: org.apache.ambari.server.state.Clusters access$000(org.apache.ambari.server.checks.KafkaKerberosCheckTest)>($r1) >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.KafkaKerberosCheckTest: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.checks.KafkaKerberosCheckTest.access$000 : $r1 = r0.<org.apache.ambari.server.checks.KafkaKerberosCheckTest: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest.access$000 : return $r1
org.apache.ambari.server.checks.KafkaKerberosCheckTest.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : return $r2
org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : return $r2 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : return $r1
org.apache.ambari.server.checks.KafkaKerberosCheckTest$1.get : return $r1 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r7 = (org.apache.ambari.server.state.Clusters) $r6
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r7 = (org.apache.ambari.server.state.Clusters) $r6 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : r4 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : r4 = interfaceinvoke $r7.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r8 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r8 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r9 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r9 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : if $r8 != $r9
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : if $r8 != $r9 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r10 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r10 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet m_failedOn> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.getFailedOn : return $r1 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : virtualinvoke $r10.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("KAFKA")
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : virtualinvoke $r10.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("KAFKA") >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r11 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r11 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r11)
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r11) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setStatus : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> = r1 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r12 = virtualinvoke r0.<org.apache.ambari.server.checks.KafkaKerberosCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : $r12 = virtualinvoke r0.<org.apache.ambari.server.checks.KafkaKerberosCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r3 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("default", r1, r2) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r2 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0
org.apache.ambari.server.checks.CheckDescription.getFail : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails>
org.apache.ambari.server.checks.CheckDescription.getFail : $r3 = r0.<org.apache.ambari.server.checks.CheckDescription: java.util.Map m_fails> >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.checks.CheckDescription.getFail : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4
org.apache.ambari.server.checks.CheckDescription.getFail : $r5 = (java.lang.String) $r4 >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5]
org.apache.ambari.server.checks.CheckDescription.getFail : goto [?= return $r5] >>>>>>>> org.apache.ambari.server.checks.CheckDescription.getFail : return $r5
org.apache.ambari.server.checks.CheckDescription.getFail : return $r5 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return $r3
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return $r3 >>>>>>>> org.apache.ambari.server.checks.KafkaKerberosCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r12)
org.apache.ambari.server.checks.KafkaKerberosCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1
org.apache.ambari.server.state.stack.PrerequisiteCheck.setFailReason : r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.lang.String m_failReason> = r1 >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status>
org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : $r1 = r0.<org.apache.ambari.server.state.stack.PrerequisiteCheck: org.apache.ambari.server.state.stack.PrereqCheckStatus m_status> >>>>>>>> org.apache.ambari.server.state.stack.PrerequisiteCheck.getStatus : return $r1
