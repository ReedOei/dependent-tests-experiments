org.apache.ambari.server.events.publishers.VersionEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.VersionEventPublisher: com.google.common.eventbus.EventBus m_eventBus> >>>>>>>> org.apache.ambari.server.events.publishers.VersionEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1)
org.apache.ambari.server.events.publishers.VersionEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r2 = new org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r2 = new org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r4 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r4 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r5 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.ServiceComponentHost sch>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r5 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.ServiceComponentHost sch> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : specialinvoke $r2.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: void <init>(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>($r4, $r5, r1)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : specialinvoke $r2.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: void <init>(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>($r4, $r5, r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : r3 = $r2
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : r3 = $r2 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r6 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.events.listeners.upgrade.StackVersionListener listener>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r6 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.events.listeners.upgrade.StackVersionListener listener> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke $r6.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void onAmbariEvent(org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent)>(r3)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke $r6.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void onAmbariEvent(org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent)>(r3) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r2 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: org.slf4j.Logger LOG>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r2 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r4 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r4 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost sch>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost sch> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r5 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String getVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r5 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String version>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String version> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z0 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: void verifyAll()>()
