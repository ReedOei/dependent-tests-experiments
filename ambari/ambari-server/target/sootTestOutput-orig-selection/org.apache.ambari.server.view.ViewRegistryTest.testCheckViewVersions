org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/events/publishers/AmbariEventPublisher") >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r13 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r17
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r13 = (org.apache.ambari.server.events.publishers.AmbariEventPublisher) $r17 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18[0] = r13
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r18[0] = r13 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r18)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r18) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = new org.apache.ambari.server.view.ViewRegistry
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r19 = new org.apache.ambari.server.view.ViewRegistry >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r19.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r13)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r19.<org.apache.ambari.server.view.ViewRegistry: void <init>(org.apache.ambari.server.events.publishers.AmbariEventPublisher)>(r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14 = $r19
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14 = $r19 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r0
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewDAO viewDAO> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r5
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceDAO resourceDAO> = r5 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ViewInstanceDAO instanceDAO> = r1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.UserDAO userDAO> = r2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r3
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.MemberDAO memberDAO> = r3 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r4
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.PrivilegeDAO privilegeDAO> = r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r6
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.orm.dao.ResourceTypeDAO resourceTypeDAO> = r6 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r7
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.security.SecurityHelper securityHelper> = r7 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r20 = <org.apache.ambari.server.view.ViewRegistryTest: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r20
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.configuration.Configuration configuration> = $r20 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r8
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewInstanceHandlerList handlerList> = r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r9 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r9 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = new org.apache.ambari.server.view.ViewExtractor
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r22 = new org.apache.ambari.server.view.ViewExtractor >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r22.<org.apache.ambari.server.view.ViewExtractor: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r22.<org.apache.ambari.server.view.ViewExtractor: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> = $r22 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r10 != null
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : if r10 != null >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = new org.apache.ambari.server.view.ViewArchiveUtility
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r24 = new org.apache.ambari.server.view.ViewArchiveUtility >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>()
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r24.<org.apache.ambari.server.view.ViewArchiveUtility: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24]
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : goto [?= r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24] >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r24 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewExtractor extractor> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility>
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r26 = r14.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r26
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r25.<org.apache.ambari.server.view.ViewExtractor: org.apache.ambari.server.view.ViewArchiveUtility archiveUtility> = $r26 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = r11
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r15 = r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r27 = new org.apache.ambari.server.view.ViewRegistryTest$1
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r27 = new org.apache.ambari.server.view.ViewRegistryTest$1 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r27.<org.apache.ambari.server.view.ViewRegistryTest$1: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r15)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r27.<org.apache.ambari.server.view.ViewRegistryTest$1: void <init>(org.apache.ambari.server.api.services.AmbariMetaInfo)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r27
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider ambariMetaInfoProvider> = $r27 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r16 = r12
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r16 = r12 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r28 = new org.apache.ambari.server.view.ViewRegistryTest$2
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : $r28 = new org.apache.ambari.server.view.ViewRegistryTest$2 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r28.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.state.Clusters)>(r16)
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : specialinvoke $r28.<org.apache.ambari.server.view.ViewRegistryTest$2: void <init>(org.apache.ambari.server.state.Clusters)>(r16) >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r28
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : r14.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> = $r28 >>>>>>>> org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return r14
org.apache.ambari.server.view.ViewRegistryTest.getRegistry : return r14 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0
org.apache.ambari.server.view.ViewRegistry.initInstance : <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> = r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getInstance : $r0 = <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton>
org.apache.ambari.server.view.ViewRegistry.getInstance : $r0 = <org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.ViewRegistry singleton> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getInstance : return $r0
org.apache.ambari.server.view.ViewRegistry.getInstance : return $r0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2]
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z0 != 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z1 = virtualinvoke r2.<java.lang.String: boolean matches(java.lang.String)>("^((\\d+\\.)?)*(\\*|\\d+)$")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $z1 = virtualinvoke r2.<java.lang.String: boolean matches(java.lang.String)>("^((\\d+\\.)?)*(\\*|\\d+)$") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z1 != 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(42)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(42) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 != -1
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 != -1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r3, r2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String)>(r3, r2) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r0, r1, 0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r0, r1, 0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if r0 != null
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r0 != null >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if r1 != null
org.apache.ambari.server.utils.VersionUtils.compareVersions : if r1 != null >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r0)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r9 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r1)
org.apache.ambari.server.utils.VersionUtils.compareVersions : r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i4 = virtualinvoke r9.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i4 < 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i4 < 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i6 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(45)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i6 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(45) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i6 < 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i6 < 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z0 = virtualinvoke r9.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z0 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z1 = virtualinvoke r10.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z1 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 >= 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = "${ambariVersion}"
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r14 = "${ambariVersion}" >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r15 = virtualinvoke r9.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z2 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r2 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.utils.VersionUtils.compareVersions : r2 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r3 = virtualinvoke r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.")
org.apache.ambari.server.utils.VersionUtils.compareVersions : r3 = virtualinvoke r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.") >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i8 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i8 = lengthof r2 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = lengthof r3
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i9 = lengthof r3 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 == 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = i1
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = i1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i11 = $i10]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i11 = $i10] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i11 = $i10
org.apache.ambari.server.utils.VersionUtils.compareVersions : i11 = $i10 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r4 = $r16
org.apache.ambari.server.utils.VersionUtils.compareVersions : r4 = $r16 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = new java.util.ArrayList
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r5 = $r17
org.apache.ambari.server.utils.VersionUtils.compareVersions : r5 = $r17 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= i11
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= i11 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i12 = lengthof r2 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i12
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i12 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r18 = r2[i2]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r18 = r2[i2] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i3 = $i13]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i3 = $i13] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i3 = $i13
org.apache.ambari.server.utils.VersionUtils.compareVersions : i3 = $i13 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $i14 = lengthof r3]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= $i14 = lengthof r3] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i14 = lengthof r3
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i14 = lengthof r3 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i14
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i2 >= $i14 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r23 = r3[i2]
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r23 = r3[i2] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i16 = $i15]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i16 = $i15] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i16 = $i15
org.apache.ambari.server.utils.VersionUtils.compareVersions : i16 = $i15 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.utils.VersionUtils.compareVersions : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i2 = i2 + 1]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= i2 = i2 + 1] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = i2 + 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= (branch)]
org.apache.ambari.server.utils.VersionUtils.compareVersions : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i17 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i17 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i18 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i18 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i19 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i18)
org.apache.ambari.server.utils.VersionUtils.compareVersions : i19 = staticinvoke <java.lang.Math: int max(int,int)>($i17, $i18) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i20 >= i19
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i20 >= i19 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r28 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i20)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r28 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i20) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = (java.lang.Integer) $r28
org.apache.ambari.server.utils.VersionUtils.compareVersions : r29 = (java.lang.Integer) $r28 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i20)
org.apache.ambari.server.utils.VersionUtils.compareVersions : $r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i20) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : r6 = (java.lang.Integer) $r30
org.apache.ambari.server.utils.VersionUtils.compareVersions : r6 = (java.lang.Integer) $r30 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = virtualinvoke r29.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i21 = virtualinvoke r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i22 = virtualinvoke r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i22 = virtualinvoke r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i21 >= $i22
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i21 >= $i22 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i23 = virtualinvoke r29.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i23 = virtualinvoke r29.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i24 = virtualinvoke r6.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i24 = virtualinvoke r6.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i23 <= $i24
org.apache.ambari.server.utils.VersionUtils.compareVersions : if $i23 <= $i24 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : return 1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return $i0
org.apache.ambari.server.utils.VersionUtils.compareVersions : return $i0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : goto [?= i1 = $i3]
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : goto [?= i1 = $i3] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : i1 = $i3
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : i1 = $i3 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i1 != i0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i1 != i0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return -1
org.apache.ambari.server.utils.VersionUtils.compareVersions : return -1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i15 = 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i15 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r20 = new java.lang.StringBuilder
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Ambari server version ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The Ambari server version ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" the configured ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" the configured ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ambari version ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Ambari version ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for view ")
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for view ") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r30 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r30 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : r8 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : r8 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r32 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR>
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r32 = <org.apache.ambari.view.ViewDefinition$ViewStatus: org.apache.ambari.view.ViewDefinition$ViewStatus ERROR> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r32, r8)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: void setViewStatus(org.apache.ambari.server.orm.entities.ViewEntity,org.apache.ambari.view.ViewDefinition$ViewStatus,java.lang.String)>(r1, $r32, r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatus(org.apache.ambari.view.ViewDefinition$ViewStatus)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3)
org.apache.ambari.server.view.ViewRegistry.setViewStatus : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: void setStatusDetail(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r33 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG>
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r33 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String)>(r8)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : return 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = i20 + 1
org.apache.ambari.server.utils.VersionUtils.compareVersions : i20 = i20 + 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 <= 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : if i2 <= 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r19 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $r19 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r3, $r19, i2)
org.apache.ambari.server.view.ViewRegistry.checkViewVersion : $i3 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersions(java.lang.String,java.lang.String,int)>(r3, $r19, i2) >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 <= i1
org.apache.ambari.server.utils.VersionUtils.compareVersions : if i0 <= i1 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = i0
org.apache.ambari.server.utils.VersionUtils.compareVersions : $i10 = i0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : return 0
org.apache.ambari.server.utils.VersionUtils.compareVersions : return 0 >>>>>>>> org.apache.ambari.server.utils.VersionUtils.compareVersions : $i13 = 0
