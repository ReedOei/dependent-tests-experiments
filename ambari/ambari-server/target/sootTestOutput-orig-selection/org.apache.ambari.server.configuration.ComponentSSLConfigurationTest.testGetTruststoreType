org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r3 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : specialinvoke $r3.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : specialinvoke $r3.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : r4 = $r3
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : r4 = $r3 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String m_key> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getKey : return $r1 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, r0)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r8, r0) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r10 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r11 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, r1)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r11, r1) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r13 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r14 = virtualinvoke $r13.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, r2)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r14, r2) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED>
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r16 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r17 = virtualinvoke $r16.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r18 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r18 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z0) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, $r18)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r4.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>($r17, $r18) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r20 = new org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$TestConfiguration
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r20 = new org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$TestConfiguration >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : specialinvoke $r20.<org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$TestConfiguration: void <init>(java.util.Properties,org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$1)>(r4, null)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : specialinvoke $r20.<org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$TestConfiguration: void <init>(java.util.Properties,org.apache.ambari.server.configuration.ComponentSSLConfigurationTest$1)>(r4, null) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue>
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : $r1 = r0.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object m_defaultValue> >>>>>>>> org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1
org.apache.ambari.server.configuration.Configuration$ConfigurationProperty.getDefaultValue : return $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3
org.apache.ambari.server.configuration.Configuration.getProperty : if null == $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4)
org.apache.ambari.server.configuration.Configuration.getProperty : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.Configuration.getProperty : $r6 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2)
org.apache.ambari.server.configuration.Configuration.getProperty : $r7 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r6, r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r7
org.apache.ambari.server.configuration.Configuration.getProperty : return $r7 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL>
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty API_USE_SSL> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2)
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0
org.apache.ambari.server.configuration.Configuration.getApiSSLAuthentication : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r1 = new org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : specialinvoke $r1.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : r2 = $r1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED>
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r3 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty KERBEROS_AUTH_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r13 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0)
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: void setKerberosAuthenticationEnabled(boolean)>($z0) >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.setKerberosAuthenticationEnabled : r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> = z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>()
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : $z1 = virtualinvoke r2.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean isKerberosAuthenticationEnabled()>() >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled>
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : $z0 = r0.<org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties: boolean kerberosAuthenticationEnabled> >>>>>>>> org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0
org.apache.ambari.server.security.authentication.kerberos.AmbariKerberosAuthenticationProperties.isKerberosAuthenticationEnabled : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : if $z1 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2
org.apache.ambari.server.configuration.Configuration.createKerberosAuthenticationProperties : return r2 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : r5 = $r20
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : r5 = $r20 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r21 = new org.apache.ambari.server.configuration.ComponentSSLConfiguration
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : $r21 = new org.apache.ambari.server.configuration.ComponentSSLConfiguration >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : specialinvoke $r21.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void <init>()>()
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : specialinvoke $r21.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : r6 = $r21
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : r6 = $r21 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r6.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>(r5)
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : virtualinvoke r6.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>(r5) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PATH> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r3 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r3)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties>
org.apache.ambari.server.configuration.Configuration.getProperty : $r2 = r0.<org.apache.ambari.server.configuration.Configuration: java.util.Properties properties> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1)
org.apache.ambari.server.configuration.Configuration.getProperty : $r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getProperty : return $r3
org.apache.ambari.server.configuration.Configuration.getProperty : return $r3 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePath> = $r4
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePath> = $r4 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r5 = specialinvoke r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String getPassword(org.apache.ambari.server.configuration.Configuration)>(r1)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r5 = specialinvoke r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String getPassword(org.apache.ambari.server.configuration.Configuration)>(r1) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r2 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_PASSWORD> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r5 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r5 = virtualinvoke $r2.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r5)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromStore(java.lang.String)>(r3)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String readPasswordFromStore(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r2 = null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : r2 = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>()
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : specialinvoke r0.<org.apache.ambari.server.configuration.Configuration: void loadCredentialProvider()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z0 = r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z0 = r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : if $z0 != 0
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : if $z0 != 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r1 = new org.apache.ambari.server.security.encryption.CredentialProvider
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r1 = new org.apache.ambari.server.security.encryption.CredentialProvider >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r4 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r4 = new java.io.File >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getServerKeyStoreDirectory()>()
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getServerKeyStoreDirectory()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR>
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SRVR_KSTR_DIR> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if r2 == null
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if r2 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r3 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : $r3 = new java.io.File >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : return $r3
org.apache.ambari.server.configuration.Configuration.getServerKeyStoreDirectory : return $r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "master")
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "master") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : r3 = $r4
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : r3 = $r4 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r6 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r6 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Value of {} is not set, using {}", $r7, $r8)
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Value of {} is not set, using {}", $r7, $r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : goto [?= return r3]
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : goto [?= return r3] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : return r3
org.apache.ambari.server.configuration.Configuration.getMasterKeyLocation : return r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: boolean isMasterKeyPersisted()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : r1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>()
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : r1 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyLocation()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : if r1 == null
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : if r1 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : $z1 = 0
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : $z1 = 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : return $z1
org.apache.ambari.server.configuration.Configuration.isMasterKeyPersisted : return $z1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r4 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getMasterKeyStoreLocation()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r1 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : r2 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(org.apache.ambari.server.configuration.Configuration$ConfigurationProperty)>($r1) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : if $z0 == 0
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : if $z0 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r4 = new java.io.File
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r4 = new java.io.File >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getServerKeyStoreDirectory()>()
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r5 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.io.File getServerKeyStoreDirectory()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "credentials.jceks")
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "credentials.jceks") >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : r3 = $r4
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : r3 = $r4 >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r6 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r6 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION>
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEYSTORE_LOCATION> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : $r8 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Value of {} is not set, using {}", $r7, $r8)
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : interfaceinvoke $r6.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Value of {} is not set, using {}", $r7, $r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : goto [?= return r3]
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : goto [?= return r3] >>>>>>>> org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : return r3
org.apache.ambari.server.configuration.Configuration.getMasterKeyStoreLocation : return r3 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : specialinvoke $r1.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(null, $r3, $z1, $r4)
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : specialinvoke $r1.<org.apache.ambari.server.security.encryption.CredentialProvider: void <init>(java.lang.String,java.io.File,boolean,java.io.File)>(null, $r3, $z1, $r4) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r2 = staticinvoke <java.lang.System: java.util.Map getenv()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r2 = staticinvoke <java.lang.System: java.util.Map getenv()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r2 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $z0 = interfaceinvoke r2.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z0 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY")
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("AMBARI_SECURITY_MASTER_KEY") >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = (java.lang.String) $r6
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r1 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r1 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r7 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty MASTER_KEY_LOCATION> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r8 = virtualinvoke $r7.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r3 = (java.lang.String) $r9
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : r3 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r3 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : if r3 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.readMasterKey : return r1 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $r1 = r0.<org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: char[] master> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : if $r1 == null
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : if $r1 == null >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $z0 = 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : $z0 = 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : return $z0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.isMasterKeyInitialized : return $z0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r2 = $r5
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r2 = $r5 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r6 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r6 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r7 = new java.lang.StringBuilder
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credential provider creation failed. Reason: ")
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credential provider creation failed. Reason: ") >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r9 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r9 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r11)
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r12 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG>
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $r12 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z2 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : $z2 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : if $z2 == 0
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : if $z2 == 0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> = null
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> = null >>>>>>>> org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized> = 1
org.apache.ambari.server.configuration.Configuration.loadCredentialProvider : r0.<org.apache.ambari.server.configuration.Configuration: boolean credentialProviderInitialized> = 1 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider>
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : $r5 = r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.security.encryption.CredentialProvider credentialProvider> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r5 == null
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : if $r5 == null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r2
org.apache.ambari.server.configuration.Configuration.readPasswordFromStore : return r2 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : if r4 != null
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : if r4 != null >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r6 = r3
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : $r6 = r3 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : goto [?= return $r6]
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : goto [?= return $r6] >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : return $r6
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getPassword : return $r6 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePassword> = $r5
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststorePassword> = $r5 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r6 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty SSL_TRUSTSTORE_TYPE> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r7 = virtualinvoke $r6.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r8 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r7)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r8 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType> = $r8
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType> = $r8 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r9 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty AMBARI_METRICS_HTTPS_ENABLED> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r10 = virtualinvoke $r9.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r11 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r10)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $r11 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getProperty(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r11)
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean httpsEnabled> = $z0
org.apache.ambari.server.configuration.ComponentSSLConfiguration.init : r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean httpsEnabled> = $z0 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : return r6
org.apache.ambari.server.configuration.ComponentSSLConfigurationTest.getConfiguration : return r6 >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType>
org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : $r1 = r0.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: java.lang.String truststoreType> >>>>>>>> org.apache.ambari.server.configuration.ComponentSSLConfiguration.getTruststoreType : return $r1
