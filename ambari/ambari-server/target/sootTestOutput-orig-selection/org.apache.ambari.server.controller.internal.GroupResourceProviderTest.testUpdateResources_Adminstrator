org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r0 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r0 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization")
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Group>
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r2 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Group> >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController")
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r10 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/controller/AmbariManagementController") >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r10
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r3 = (org.apache.ambari.server.controller.AmbariManagementController) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse")
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r11 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/controller/RequestStatusResponse") >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.RequestStatusResponse) $r11
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r4 = (org.apache.ambari.server.controller.RequestStatusResponse) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r5 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher: java.util.Set getGroupRequestSet(java.lang.String)>("engineering")
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : r5 = staticinvoke <org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher: java.util.Set getGroupRequestSet(java.lang.String)>("engineering") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : $r1 = new org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$GroupRequestSetMatcher
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : $r1 = new org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$GroupRequestSetMatcher >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : specialinvoke $r1.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$GroupRequestSetMatcher: void <init>(java.lang.String)>(r0)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : specialinvoke $r1.<org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$GroupRequestSetMatcher: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r1)
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : staticinvoke <org.easymock.EasyMock: void reportMatcher(org.easymock.IArgumentMatcher)>($r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : return null
org.apache.ambari.server.controller.internal.AbstractResourceProviderTest$Matcher.getGroupRequestSet : return null >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: void updateGroups(java.util.Set)>(r5)
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : interfaceinvoke r3.<org.apache.ambari.server.controller.AmbariManagementController: void updateGroups(java.util.Set)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r12 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r12 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r12[0] = r3
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r12[0] = r3 >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r12[1] = r4
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r12[1] = r4 >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12)
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r13 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r13 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : interfaceinvoke $r13.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1)
org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : interfaceinvoke $r13.<org.springframework.security.core.context.SecurityContext: void setAuthentication(org.springframework.security.core.Authentication)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.GroupResourceProviderTest.testUpdateResources : $r14 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Set getPropertyIds(org.apache.ambari.server.controller.spi.Resource$Type)>(r2)
