org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r1 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r9 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r9 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9)
org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9) >>>>>>>> org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : r2 = $r1
org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : r2 = $r1 >>>>>>>> org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r10 = newarray (java.lang.Class)[1]
org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r10 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r10[0] = class "org/apache/ambari/server/state/stack/ServiceMetainfoXml"
org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : $r10[0] = class "org/apache/ambari/server/state/stack/ServiceMetainfoXml" >>>>>>>> org.apache.ambari.server.state.ServiceInfoTest.getServiceInfo : r3 = staticinvoke <javax.xml.bind.JAXBContext: javax.xml.bind.JAXBContext newInstance(java.lang.Class[])>($r10)
