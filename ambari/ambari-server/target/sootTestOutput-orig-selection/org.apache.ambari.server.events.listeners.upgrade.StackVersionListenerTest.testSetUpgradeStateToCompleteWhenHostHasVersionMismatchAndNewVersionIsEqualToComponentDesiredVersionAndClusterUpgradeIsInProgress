org.apache.ambari.server.events.publishers.VersionEventPublisher.register : $r2 = r0.<org.apache.ambari.server.events.publishers.VersionEventPublisher: com.google.common.eventbus.EventBus m_eventBus> >>>>>>>> org.apache.ambari.server.events.publishers.VersionEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1)
org.apache.ambari.server.events.publishers.VersionEventPublisher.register : virtualinvoke $r2.<com.google.common.eventbus.EventBus: void register(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r2 = new org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r2 = new org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r4 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r4 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r5 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.ServiceComponentHost sch>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r5 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.state.ServiceComponentHost sch> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : specialinvoke $r2.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: void <init>(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>($r4, $r5, r1)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : specialinvoke $r2.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: void <init>(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>($r4, $r5, r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : r3 = $r2
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : r3 = $r2 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r6 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.events.listeners.upgrade.StackVersionListener listener>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : $r6 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: org.apache.ambari.server.events.listeners.upgrade.StackVersionListener listener> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke $r6.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void onAmbariEvent(org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent)>(r3)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke $r6.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void onAmbariEvent(org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent)>(r3) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r2 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: org.slf4j.Logger LOG>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r2 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Received event {}", r1) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r3 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getCluster : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r4 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r4 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost getServiceComponentHost()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost sch>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: org.apache.ambari.server.state.ServiceComponentHost sch> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getServiceComponentHost : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r5 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String getVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r5 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String version>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.String version> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getVersion : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z0 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z0 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r10 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.util.concurrent.locks.Lock m_stackVersionLock>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r10 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.util.concurrent.locks.Lock m_stackVersionLock> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r11 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long getRepositoryVersionId()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r11 = virtualinvoke r1.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long getRepositoryVersionId()>() >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long repoVersionId>
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : $r1 = r0.<org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent: java.lang.Long repoVersionId> >>>>>>>> org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : return $r1
org.apache.ambari.server.events.HostComponentVersionAdvertisedEvent.getRepositoryVersionId : return $r1 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if null == $r11
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if null == $r11 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r18 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: com.google.inject.Provider ambariMetaInfo>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r18 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: com.google.inject.Provider ambariMetaInfo> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r19 = interfaceinvoke $r18.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r19 = interfaceinvoke $r18.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r20 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r20 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r19 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r21 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r21 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r23 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r23 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r24 = virtualinvoke $r23.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r24 = virtualinvoke $r23.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r25 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r25 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r26 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r26 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r27 = virtualinvoke r20.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r22, $r24, $r25, $r26)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r27 = virtualinvoke r20.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r22, $r24, $r25, $r26) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r28 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r28 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r29 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r28)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r29 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r30 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r30 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r8 = interfaceinvoke $r29.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r30)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : r8 = interfaceinvoke $r29.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z2 = virtualinvoke r27.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z2 = virtualinvoke r27.<org.apache.ambari.server.state.ComponentInfo: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z2 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z5 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: boolean isVersionAdvertised()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z5 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z5 != 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z5 != 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r38 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r38 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r39 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r39 = interfaceinvoke r8.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z8 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $z8 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>($r39) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z8 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : if $z8 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void processComponentAdvertisedVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String,org.apache.ambari.server.state.ServiceComponent)>(r3, r4, r5, r8)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void processComponentAdvertisedVersion(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String,org.apache.ambari.server.state.ServiceComponent)>(r3, r4, r5, r8) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r3)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z0 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if r5 == null
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if r5 == null >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r6 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $r6 = <org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.lang.String UNKNOWN_VERSION> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z1 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z1 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r5, r3)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r5, r3) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z2 != 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : if $z2 != 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void processComponentVersionChange(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>(r1, r4, r2, r3)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentAdvertisedVersion : specialinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: void processComponentVersionChange(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.ServiceComponentHost,java.lang.String)>(r1, r4, r2, r3) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getDesiredVersion()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r7 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState IN_PROGRESS>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r7 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState IN_PROGRESS> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if r6 != $r7
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if r6 != $r7 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r11 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState VERSION_MISMATCH>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r11 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState VERSION_MISMATCH> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if r6 != $r11
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if r6 != $r11 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if $z1 == 0
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if $z1 == 0 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r12 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeEntity()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r12 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.orm.entities.UpgradeEntity getUpgradeEntity()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if $r12 == null
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : if $r12 == null >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r13 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState COMPLETE>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : $r13 = <org.apache.ambari.server.state.UpgradeState: org.apache.ambari.server.state.UpgradeState COMPLETE> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setUpgradeState(org.apache.ambari.server.state.UpgradeState)>($r13)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setUpgradeState(org.apache.ambari.server.state.UpgradeState)>($r13) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : goto [?= interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>(r4)]
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : goto [?= interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>(r4)] >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>(r4)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.processComponentVersionChange : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: void setVersion(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r40 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.util.concurrent.locks.Lock m_stackVersionLock>
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : $r40 = r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListener: java.util.concurrent.locks.Lock m_stackVersionLock> >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r40.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : interfaceinvoke $r40.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : goto [?= return]
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.onAmbariEvent : goto [?= return] >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest.sendEventAndVerify : virtualinvoke r0.<org.apache.ambari.server.events.listeners.upgrade.StackVersionListenerTest: void verifyAll()>()
