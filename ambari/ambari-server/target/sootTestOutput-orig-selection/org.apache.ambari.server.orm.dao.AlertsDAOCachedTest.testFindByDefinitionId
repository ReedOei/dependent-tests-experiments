org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r4 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r2 = (org.apache.ambari.server.state.Cluster) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r5 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : r3 = (org.apache.ambari.server.configuration.Configuration) $r5 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertEventPublisherPoolSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r7 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r9 = interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r9.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $z0 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r12 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r13 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r14 = interfaceinvoke $r12.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $i1 = virtualinvoke r3.<org.apache.ambari.server.configuration.Configuration: int getAlertCacheSize()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(100) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r19 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r19.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21[0] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r21[0] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r21) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r22 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r22.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r23 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r23.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r25 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r26 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r25.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r27 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r27.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r29 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Cluster") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r29.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r30 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r31 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertDefinitionDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r30.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r30.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r32 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r33 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r32.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r34 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r34 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$MockModule.configure : interfaceinvoke $r34.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r12 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r12 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r13 = interfaceinvoke $r12.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r2 = (javax.persistence.EntityManager) $r13
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r2 = (javax.persistence.EntityManager) $r13 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r14 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r14 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r15 = interfaceinvoke $r14.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/DaoUtils") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r3 = (org.apache.ambari.server.orm.dao.DaoUtils) $r15
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r3 = (org.apache.ambari.server.orm.dao.DaoUtils) $r15 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertHistoryEntity")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r16 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertHistoryEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r4 = (org.apache.ambari.server.orm.entities.AlertHistoryEntity) $r16
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r4 = (org.apache.ambari.server.orm.entities.AlertHistoryEntity) $r16 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertDefinitionEntity")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/orm/entities/AlertDefinitionEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r5 = (org.apache.ambari.server.orm.entities.AlertDefinitionEntity) $r17
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r5 = (org.apache.ambari.server.orm.entities.AlertDefinitionEntity) $r17 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: void mock(org.apache.ambari.server.orm.entities.AlertDefinitionEntity,org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r5, r4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: void mock(org.apache.ambari.server.orm.entities.AlertDefinitionEntity,org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r5, r4) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("definitionName")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("definitionName") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r12 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r13 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r14 = interfaceinvoke $r13.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("c6401.ambari.apache.org") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r14.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r16 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r17 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r18 = interfaceinvoke $r17.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r18.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r23 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r23.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r25 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r30 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r30 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("alertText")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("alertText") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34 = newarray (java.lang.Object)[2]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[0] = r1
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[0] = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[1] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : $r34[1] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r34)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.mock : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r34) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r18 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r18 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r18.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r18.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r6 = $r18
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r6 = $r18 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertHistory")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertHistory") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertHistory", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertHistory", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertHistory : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertId()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_historyId(java.lang.Long)>($r2)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_historyId(java.lang.Long)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("historyId")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("historyId") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("historyId", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("historyId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_historyId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long historyId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertDefinition(org.apache.ambari.server.orm.entities.AlertDefinitionEntity)>($r3)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_alertDefinition(org.apache.ambari.server.orm.entities.AlertDefinitionEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertDefinition")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("alertDefinition") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertDefinition", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("alertDefinition", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_alertDefinition : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity alertDefinition> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getAlertDefinitionId()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_definitionId(java.lang.Long)>($r4)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_definitionId(java.lang.Long)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("definitionId")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("definitionId") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("definitionId", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("definitionId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_definitionId : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long definitionId> = r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getAlertText()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestText(java.lang.String)>($r5)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setAlertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestText(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestText")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestText") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestText", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestText", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestText : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.String latestText> = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r19)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r19) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setOriginalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_originalTimestamp(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setOriginalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_originalTimestamp(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("originalTimestamp")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("originalTimestamp") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("originalTimestamp", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("originalTimestamp", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_originalTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long originalTimestamp> = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(2L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r20)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r6.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r20) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.setLatestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestTimestamp(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity.setLatestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_set_latestTimestamp(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestTimestamp")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetchedForSet(java.lang.String)>("latestTimestamp") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : $r2 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestTimestamp", $r2, r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("latestTimestamp", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> = r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_set_latestTimestamp : r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> = r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r21 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r21 = new org.apache.ambari.server.orm.entities.AlertCurrentEntity >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r21.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : specialinvoke $r21.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r7 = $r21
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r7 = $r21 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setAlertHistory(org.apache.ambari.server.orm.entities.AlertHistoryEntity)>(r4) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r22)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setOriginalTimestamp(java.lang.Long)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r23)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r7.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void setLatestTimestamp(java.lang.Long)>($r23) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r24 = interfaceinvoke r2.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r24 = interfaceinvoke r2.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r25 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r26 = interfaceinvoke $r25.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/TypedQuery")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r28 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/TypedQuery") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r8 = (javax.persistence.TypedQuery) $r28
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r8 = (javax.persistence.TypedQuery) $r28 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.lang.String getNamedQuery()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r29 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.lang.String getNamedQuery()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$2.getNamedQuery : return "AlertCurrentEntity.findByDefinitionId"
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$2.getNamedQuery : return "AlertCurrentEntity.findByDefinitionId" >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r30 = interfaceinvoke r2.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>($r29, class "org/apache/ambari/server/orm/entities/AlertCurrentEntity")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r30 = interfaceinvoke r2.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>($r29, class "org/apache/ambari/server/orm/entities/AlertCurrentEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r31 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r32 = interfaceinvoke $r31.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r32.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34 = newarray (org.apache.ambari.server.orm.entities.AlertCurrentEntity)[1]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34 = newarray (org.apache.ambari.server.orm.entities.AlertCurrentEntity)[1] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34[0] = r6
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r34[0] = r6 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r9 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r34)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r9 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r34) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r35 = newarray (java.lang.Object)[0]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r35 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r36 = virtualinvoke r3.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r8, $r35)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r36 = virtualinvoke r3.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r8, $r35) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r37 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r38 = interfaceinvoke $r37.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : interfaceinvoke $r38.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters atLeastOnce()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40 = newarray (java.lang.Object)[3]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[0] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[0] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[1] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[1] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[2] = r8
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r40[2] = r8 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r40)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r40) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r41 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector>
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r41 = r0.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest: com.google.inject.Injector m_injector> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r42 = interfaceinvoke $r41.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO")
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r42 = interfaceinvoke $r41.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/orm/dao/AlertsDAO") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r10 = (org.apache.ambari.server.orm.dao.AlertsDAO) $r42
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r10 = (org.apache.ambari.server.orm.dao.AlertsDAO) $r42 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r10.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.entities.AlertCurrentEntity merge(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : virtualinvoke r10.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.entities.AlertCurrentEntity merge(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider>
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r5 = (javax.persistence.EntityManager) $r4
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r5 = (javax.persistence.EntityManager) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r6 = interfaceinvoke $r5.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r1)
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r6 = interfaceinvoke $r5.<javax.persistence.EntityManager: java.lang.Object merge(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : if r0 != r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : return 1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.equals : return 1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r6
org.apache.ambari.server.orm.dao.AlertsDAO.merge : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r6 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $z0 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $z0 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : if $z0 == 0
org.apache.ambari.server.orm.dao.AlertsDAO.merge : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : r2 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7)
org.apache.ambari.server.orm.dao.AlertsDAO.merge : r2 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity getAlertHistory()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity getAlertHistory()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity _persistence_get_alertHistory()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity _persistence_get_alertHistory()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("alertHistory")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("alertHistory") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: org.apache.ambari.server.orm.entities.AlertHistoryEntity alertHistory> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_alertHistory : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getAlertHistory : return $r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r3 = new org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r3 = new org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r4 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $l0 = virtualinvoke $r4.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r5 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: org.apache.ambari.server.orm.entities.AlertDefinitionEntity getAlertDefinition()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r6 = virtualinvoke $r5.<org.apache.ambari.server.orm.entities.AlertDefinitionEntity: java.lang.String getDefinitionName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r7 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : $r7 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.AlertHistoryEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : specialinvoke $r3.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: void <init>(long,java.lang.String,java.lang.String)>($l0, $r6, $r7)
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : specialinvoke $r3.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: void <init>(long,java.lang.String,java.lang.String)>($l0, $r6, $r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r2 = $r3
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : r2 = $r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : return r2
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.build : return r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache>
org.apache.ambari.server.orm.dao.AlertsDAO.merge : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : interfaceinvoke $r9.<com.google.common.cache.LoadingCache: void put(java.lang.Object,java.lang.Object)>(r2, r7)
org.apache.ambari.server.orm.dao.AlertsDAO.merge : interfaceinvoke $r9.<com.google.common.cache.LoadingCache: void put(java.lang.Object,java.lang.Object)>(r2, r7) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b0 = 31
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b0 = 31 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b1 = 1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : b1 = 1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i2 = 31 * b1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i2 = 31 * b1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r1 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r1 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r1 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r1 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r2 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r2 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i3 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i5 = 31 * i4
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i5 = 31 * i4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l6 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l6 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l8 = $l7 >>> 32
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l8 = $l7 >>> 32 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l9 = $l6 ^ $l8
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $l9 = $l6 ^ $l8 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i10 = (int) $l9
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i10 = (int) $l9 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i11 = $i5 + $i10
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i11 = $i5 + $i10 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i12 = 31 * i11
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i12 = 31 * i11 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r3 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : if $r3 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r4 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $r4 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i13 = virtualinvoke $r4.<java.lang.String: int hashCode()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : $i13 = virtualinvoke $r4.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i14 = $i12 + $i13
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : i14 = $i12 + $i13 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : return i14
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.hashCode : return i14 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.merge : return r7
org.apache.ambari.server.orm.dao.AlertsDAO.merge : return r7 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r11 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.util.List execute(org.apache.ambari.server.orm.dao.AlertsDAO)>(r10)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : r11 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea: java.util.List execute(org.apache.ambari.server.orm.dao.AlertsDAO)>(r10) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$2.execute : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List findCurrentByDefinitionId(long)>(0L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$2.execute : $r2 = virtualinvoke r1.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List findCurrentByDefinitionId(long)>(0L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider>
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r3 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.inject.Provider m_entityManagerProvider> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r4 = interfaceinvoke $r3.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r5 = (javax.persistence.EntityManager) $r4
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r5 = (javax.persistence.EntityManager) $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : r1 = interfaceinvoke $r5.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("AlertCurrentEntity.findByDefinitionId", class "org/apache/ambari/server/orm/entities/AlertCurrentEntity")
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : r1 = interfaceinvoke $r5.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("AlertCurrentEntity.findByDefinitionId", class "org/apache/ambari/server/orm/entities/AlertCurrentEntity") >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : interfaceinvoke r1.<javax.persistence.TypedQuery: javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object)>("definitionId", $r6)
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : interfaceinvoke r1.<javax.persistence.TypedQuery: javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object)>("definitionId", $r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.dao.DaoUtils m_daoUtils>
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r8 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.orm.dao.DaoUtils m_daoUtils> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r9 = newarray (java.lang.Object)[0]
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r9 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : r2 = virtualinvoke $r8.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r1, $r9)
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : r2 = virtualinvoke $r8.<org.apache.ambari.server.orm.dao.DaoUtils: java.util.List selectList(javax.persistence.TypedQuery,java.lang.Object[])>(r1, $r9) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r10 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration>
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $r10 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: org.apache.ambari.server.configuration.Configuration m_configuration> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $z0 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>()
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : $z0 = virtualinvoke $r10.<org.apache.ambari.server.configuration.Configuration: boolean isAlertCacheEnabled()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : if $z0 == 0
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : r2 = specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List supplementWithCachedAlerts(java.util.List)>(r2)
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : r2 = specialinvoke r0.<org.apache.ambari.server.orm.dao.AlertsDAO: java.util.List supplementWithCachedAlerts(java.util.List)>(r2) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r2 = new java.util.ArrayList
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r3 = $r2
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r3 = $r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if $z0 == 0
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r8
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r8 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r6 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r5)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r6 = staticinvoke <org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey build(org.apache.ambari.server.orm.entities.AlertCurrentEntity)>(r5) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache>
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO: com.google.common.cache.LoadingCache m_currentAlertCache> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r10 = interfaceinvoke $r9.<com.google.common.cache.LoadingCache: java.lang.Object getIfPresent(java.lang.Object)>(r6)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : $r10 = interfaceinvoke $r9.<com.google.common.cache.LoadingCache: java.lang.Object getIfPresent(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r0 != r1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r1 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if r1 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r3 == $r4
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : r2 = (org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey) r1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : r2 = (org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey) r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l0 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l0 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l1 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $l1 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: long m_clusterId> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $b2 = $l0 cmp $l1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $b2 = $l0 cmp $l1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $b2 == 0
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $b2 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r5 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r5 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r5 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r5 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r7 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r8 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r8 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_alertDefinitionName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z0 != 0
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r9 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r9 != null
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $r9 != null >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r11 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r11 = r0.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r12 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName>
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $r12 = r2.<org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey: java.lang.String m_hostName> >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z1 != 0
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : return 1
org.apache.ambari.server.orm.dao.AlertsDAO$AlertCacheKey.equals : return 1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r10
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r7 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r10 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if null == r7
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : if null == r7 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = r7
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : r5 = r7 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : return r3
org.apache.ambari.server.orm.dao.AlertsDAO.supplementWithCachedAlerts : return r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : return r2
org.apache.ambari.server.orm.dao.AlertsDAO.findCurrentByDefinitionId : return r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$2.execute : return $r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest$CachedAlertTestArea$2.execute : return $r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $i0 = interfaceinvoke r11.<java.util.List: int size()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $i0 = interfaceinvoke r11.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $l1 = (long) $i0
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l1) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(3L) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r45 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r45 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r46 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r45
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r46 = (org.apache.ambari.server.orm.entities.AlertCurrentEntity) $r45 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r47 = virtualinvoke $r46.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long getLatestTimestamp()>()
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r47 = virtualinvoke $r46.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long getLatestTimestamp()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long _persistence_get_latestTimestamp()>()
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long _persistence_get_latestTimestamp()>() >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("latestTimestamp")
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : virtualinvoke r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: void _persistence_checkFetched(java.lang.String)>("latestTimestamp") >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp>
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : $r1 = r0.<org.apache.ambari.server.orm.entities.AlertCurrentEntity: java.lang.Long latestTimestamp> >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity._persistence_get_latestTimestamp : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : return $r1
org.apache.ambari.server.orm.entities.AlertCurrentEntity.getLatestTimestamp : return $r1 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r47)
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r44, $r47) >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48 = newarray (java.lang.Object)[4]
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[0] = r5
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[0] = r5 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[1] = r4
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[1] = r4 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[2] = r2
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[2] = r2 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[3] = r3
org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : $r48[3] = r3 >>>>>>>> org.apache.ambari.server.orm.dao.AlertsDAOCachedTest.testFindUsesCache : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r48)
