org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12[0] = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[1] = class "java/util/Map"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[1] = class "java/util/Map" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[2] = class "org/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[2] = class "org/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r5
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : $r1 = new java.util.LinkedList
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : $r1 = new java.util.LinkedList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.LinkedList responses>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.LinkedList responses> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : specialinvoke $r1.<java.util.LinkedList: void <init>(java.util.Collection)>($r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : specialinvoke $r1.<java.util.LinkedList: void <init>(java.util.Collection)>($r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.Queue currentResponses> = $r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.start : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.Queue currentResponses> = $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.Queue currentResponses>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : $r2 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.Queue currentResponses> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : $r4 = (java.lang.String) $r3
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : return $r4
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.getResponse : return $r4 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.Queue currentResponses>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler: java.util.Queue currentResponses> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $i0 = interfaceinvoke $r1.<java.util.Queue: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : if $i0 != 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : if $i0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $z0 = 0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $z0 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : return $z0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : return $z0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $z0 = 1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : $z0 = 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler$InteractivePasswordHandler.done : goto [?= return $z0]
