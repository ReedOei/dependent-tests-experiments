org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test: java.lang.Object createStrictMock(java.lang.Class)>(class "com/google/inject/Provider") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : r1 = (com.google.inject.Provider) $r3
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : r1 = (com.google.inject.Provider) $r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r4 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r4 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : r2 = (javax.persistence.EntityManager) $r4
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : r2 = (javax.persistence.EntityManager) $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r5 = interfaceinvoke r1.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r5 = interfaceinvoke r1.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r6 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : $r7 = interfaceinvoke $r6.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : interfaceinvoke $r7.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : return r1
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.initEntityManagerProvider : return r1 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r4 = new org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r4 = new org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : specialinvoke $r4.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog211Test,org.apache.ambari.server.orm.DBAccessor,org.apache.ambari.server.state.stack.OsFamily,javax.persistence.EntityManager)>(r0, r1, r2, r3)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : specialinvoke $r4.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: void <init>(org.apache.ambari.server.upgrade.UpgradeCatalog211Test,org.apache.ambari.server.orm.DBAccessor,org.apache.ambari.server.state.stack.OsFamily,javax.persistence.EntityManager)>(r0, r1, r2, r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : r5 = $r4
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : r5 = $r4 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r7 = newarray (com.google.inject.Module)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r7 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r7[0] = r5
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r7[0] = r5 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : r6 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : r6 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r2 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/orm/DBAccessor") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: org.apache.ambari.server.orm.DBAccessor val$dbAccessor>
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r3 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: org.apache.ambari.server.orm.DBAccessor val$dbAccessor> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : interfaceinvoke $r2.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r4 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: org.apache.ambari.server.state.stack.OsFamily val$osFamily>
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r5 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: org.apache.ambari.server.state.stack.OsFamily val$osFamily> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r5)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : interfaceinvoke $r4.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r6 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r6 = interfaceinvoke r1.<com.google.inject.Binder: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "javax/persistence/EntityManager") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: javax.persistence.EntityManager val$entityManager>
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : $r7 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5: javax.persistence.EntityManager val$entityManager> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7)
org.apache.ambari.server.upgrade.UpgradeCatalog211Test$5.configure : interfaceinvoke $r6.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r8 = interfaceinvoke r6.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/upgrade/UpgradeCatalog211")
org.apache.ambari.server.upgrade.UpgradeCatalog211Test.getUpgradeCatalog : $r8 = interfaceinvoke r6.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "org/apache/ambari/server/upgrade/UpgradeCatalog211") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r0 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r0.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = $r0 >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = class "org/apache/ambari/server/configuration/Configuration" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r2 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r2 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r6
