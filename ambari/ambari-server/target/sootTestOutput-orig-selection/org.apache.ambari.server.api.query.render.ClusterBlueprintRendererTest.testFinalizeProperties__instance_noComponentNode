org.apache.ambari.server.topology.HostGroupInfo.addHost : $r5 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames> >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : r2 = $r5
org.apache.ambari.server.topology.HostGroupInfo.addHost : r2 = $r5 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : entermonitor $r5
org.apache.ambari.server.topology.HostGroupInfo.addHost : entermonitor $r5 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.topology.HostGroupInfo.addHost : r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3)
org.apache.ambari.server.topology.HostGroupInfo.addHost : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : if $z0 != 0
org.apache.ambari.server.topology.HostGroupInfo.addHost : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : $r7 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames>
org.apache.ambari.server.topology.HostGroupInfo.addHost : $r7 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames> >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.topology.HostGroupInfo.addHost : interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : exitmonitor r2
org.apache.ambari.server.topology.HostGroupInfo.addHost : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHost : goto [?= return]
org.apache.ambari.server.topology.HostGroupInfo.addHost : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.setConfiguration : r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration> = r1
org.apache.ambari.server.topology.HostGroupInfo.setConfiguration : r0.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration configuration> = r1 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : $r6 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames>
org.apache.ambari.server.topology.HostGroupInfo.addHosts : $r6 = r0.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection hostNames> >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : r2 = $r6
org.apache.ambari.server.topology.HostGroupInfo.addHosts : r2 = $r6 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : entermonitor $r6
org.apache.ambari.server.topology.HostGroupInfo.addHosts : entermonitor $r6 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostGroupInfo.addHosts : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostGroupInfo.addHosts : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : if $z0 == 0
org.apache.ambari.server.topology.HostGroupInfo.addHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostGroupInfo.addHosts : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : r4 = (java.lang.String) $r7
org.apache.ambari.server.topology.HostGroupInfo.addHosts : r4 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : virtualinvoke r0.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r4)
org.apache.ambari.server.topology.HostGroupInfo.addHosts : virtualinvoke r0.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostGroupInfo.addHosts : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : exitmonitor r2
org.apache.ambari.server.topology.HostGroupInfo.addHosts : exitmonitor r2 >>>>>>>> org.apache.ambari.server.topology.HostGroupInfo.addHosts : goto [?= return]
org.apache.ambari.server.topology.HostGroupInfo.addHosts : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : $r1 = specialinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : $r1 = specialinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r1 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type access$000(java.lang.String)>(r1)
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : r2 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type access$000(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.access$000 : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type getType(java.lang.String)>(r0)
org.apache.ambari.server.controller.spi.Resource$Type.access$000 : $r1 = staticinvoke <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type getType(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r1 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : $r3 = (org.apache.ambari.server.controller.spi.Resource$Type) $r2
org.apache.ambari.server.controller.spi.Resource$Type.getType : $r3 = (org.apache.ambari.server.controller.spi.Resource$Type) $r2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.getType : return $r3
org.apache.ambari.server.controller.spi.Resource$Type.getType : return $r3 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.access$000 : return $r1
org.apache.ambari.server.controller.spi.Resource$Type.access$000 : return $r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : if r2 != null
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : if r2 != null >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r3 = new org.apache.ambari.server.controller.spi.Resource$Type
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r3 = new org.apache.ambari.server.controller.spi.Resource$Type >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $r4 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $i0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>()
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : $i0 = virtualinvoke r0.<org.apache.ambari.server.controller.spi.Resource$InternalType: int ordinal()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : specialinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String,int,org.apache.ambari.server.controller.spi.Resource$1)>($r4, $i0, null)
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : specialinvoke $r3.<org.apache.ambari.server.controller.spi.Resource$Type: void <init>(java.lang.String,int,org.apache.ambari.server.controller.spi.Resource$1)>($r4, $i0, null) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types>
org.apache.ambari.server.controller.spi.Resource$Type.setType : $r2 = <org.apache.ambari.server.controller.spi.Resource$Type: java.util.Map types> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.apache.ambari.server.controller.spi.Resource$Type.setType : interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : goto [?= return $r3]
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.getType : return $r3
org.apache.ambari.server.controller.spi.Resource$InternalType.getType : return $r3 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : return $r1
org.apache.ambari.server.controller.spi.Resource$InternalType.access$200 : return $r1 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : if r2 == null >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives>
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : $r8 = r0.<org.apache.ambari.server.api.resources.BaseResourceDefinition: java.util.Map directives> >>>>>>>> org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.ambari.server.api.resources.BaseResourceDefinition.initializeDirectives : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.ambari.server.api.query.QueryInfo.getProperties : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set m_properties>
org.apache.ambari.server.api.query.QueryInfo.getProperties : $r1 = r0.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set m_properties> >>>>>>>> org.apache.ambari.server.api.query.QueryInfo.getProperties : return $r1
org.apache.ambari.server.api.query.QueryInfo.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory>
org.apache.ambari.server.utils.AmbariPath.getPath : $r1 = <org.apache.ambari.server.utils.AmbariPath: java.lang.String rootDirectory> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null
org.apache.ambari.server.utils.AmbariPath.getPath : if $r1 != null >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.AmbariPath.getPath : $r3 = <org.apache.ambari.server.utils.AmbariPath: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.")
org.apache.ambari.server.utils.AmbariPath.getPath : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>("Cannot get $ROOT enviroment variable. Installed to custom root directory Ambari might not work correctly.") >>>>>>>> org.apache.ambari.server.utils.AmbariPath.getPath : return r0
org.apache.ambari.server.utils.AmbariPath.getPath : return r0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController>
org.apache.ambari.server.controller.AmbariServer.getController : $r0 = <org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.controller.AmbariManagementController clusterController> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.getController : return $r0
org.apache.ambari.server.controller.AmbariServer.getController : return $r0 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r2 = new java.util.HashSet
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r2 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r11 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r11 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r12 = (org.apache.ambari.server.api.query.QueryInfo) $r11
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r12 = (org.apache.ambari.server.api.query.QueryInfo) $r11 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r13 = virtualinvoke $r12.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r13 = virtualinvoke $r12.<org.apache.ambari.server.api.query.QueryInfo: java.util.Set getProperties()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r13)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r2.<java.util.HashSet: void <init>(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r3 = $r2
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r3 = $r2 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r14 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r14 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r15 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.String getName()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r15 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getName : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.String m_name>
org.apache.ambari.server.api.util.TreeNodeImpl.getName : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getName : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getName : return $r1 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r14.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, r3, $r15)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r14.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(null, r3, $r15) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r4 = $r14
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r4 = $r14 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer: void copyPropertiesToResult(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.util.TreeNode)>(r1, r4)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : virtualinvoke r0.<org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer: void copyPropertiesToResult(org.apache.ambari.server.api.util.TreeNode,org.apache.ambari.server.api.util.TreeNode)>(r1, r4) >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $r6 = interfaceinvoke r1.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2 >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : if $z0 == 0
org.apache.ambari.server.api.query.render.BaseRenderer.copyPropertiesToResult : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r16 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Configuration>
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r16 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Configuration> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r5 = virtualinvoke $r16.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r5 = virtualinvoke $r16.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.name : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.name : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.name : return $r1
org.apache.ambari.server.controller.spi.Resource$Type.name : return $r1 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r17 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r5)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r17 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r1 == null
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r1 == null >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/")
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("/") >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if $z0 == 0
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r8 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r8 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r10 = (org.apache.ambari.server.api.util.TreeNode) $r9
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r10 = (org.apache.ambari.server.api.util.TreeNode) $r9 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : return $r10
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : return $r10 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if $r17 != null
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if $r17 != null >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r18 = new java.util.HashSet
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r18 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r18.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r18.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r18, r5)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r18, r5) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : r4 = $r3
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r20 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service>
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r20 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Service> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r6 = virtualinvoke $r20.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r6 = virtualinvoke $r20.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r21 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r21 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if $r21 != null
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if $r21 != null >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r22 = new java.util.HashSet
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r22 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r22.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r22.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r22, r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r22, r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host>
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r24 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Host> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r7 = virtualinvoke $r24.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r7 = virtualinvoke $r24.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r25 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent>
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r25 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type HostComponent> >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r8 = virtualinvoke $r25.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r8 = virtualinvoke $r25.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r9 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>($r30)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r9 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47)
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r4 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r4 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : r3 = (org.apache.ambari.server.api.util.TreeNode) $r5
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : r3 = (org.apache.ambari.server.api.util.TreeNode) $r5 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r3 != null
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : if r3 != null >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r6 = null
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r6 = null >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : goto [?= return $r6]
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : goto [?= return $r6] >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : return $r6
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : return $r6 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if r9 != null
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if r9 != null >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r10 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r7)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r10 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if r10 != null
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : if r10 != null >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r31 = new java.util.HashSet
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r31 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r31.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r31.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r10 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r31, r7)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r10 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r31, r7) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r32 = new java.util.HashSet
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r32 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r9 = interfaceinvoke r10.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r32, r8)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : r9 = interfaceinvoke r10.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode addChild(java.lang.Object,java.lang.String)>($r32, r8) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r33 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r5)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r33 = interfaceinvoke r4.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r34 = interfaceinvoke $r33.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r35 = (java.util.Set) $r34
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r35 = (java.util.Set) $r34 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke $r35.<java.util.Set: boolean add(java.lang.Object)>("properties")
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke $r35.<java.util.Set: boolean add(java.lang.Object)>("properties") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r36 = interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r36 = interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r37 = (java.util.Set) $r36
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : $r37 = (java.util.Set) $r36 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke $r37.<java.util.Set: boolean add(java.lang.Object)>("HostRoles/component_name")
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : interfaceinvoke $r37.<java.util.Set: boolean add(java.lang.Object)>("HostRoles/component_name") >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : return r4
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.finalizeProperties : return r4 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $i1 = i0 + 1
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $i1 = i0 + 1 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChild : $r6 = interfaceinvoke r3.<org.apache.ambari.server.api.util.TreeNode: org.apache.ambari.server.api.util.TreeNode getChild(java.lang.String)>($r7)
