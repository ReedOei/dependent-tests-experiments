org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r0 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.Authentication createAdministrator(java.lang.String)>("admin") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r1 = new org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.springframework.security.core.GrantedAuthority createAdministratorGrantedAuthority()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r0 = new org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : $r1 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PrivilegeEntity createAdministratorPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = new org.apache.ambari.server.orm.entities.PrivilegeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r0 = new org.apache.ambari.server.orm.entities.PrivilegeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r2 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceEntity createAmbariResourceEntity()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r0 = new org.apache.ambari.server.orm.entities.ResourceEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r0 = new org.apache.ambari.server.orm.entities.ResourceEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : specialinvoke $r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setId(java.lang.Long)>(null) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_id(java.lang.Long)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: java.lang.Long id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r2 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r1 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.ResourceType: int getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id>
org.apache.ambari.server.security.authorization.ResourceType.getId : $i0 = r0.<org.apache.ambari.server.security.authorization.ResourceType: int id> >>>>>>>> org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0
org.apache.ambari.server.security.authorization.ResourceType.getId : return $i0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(java.lang.String,java.lang.Integer)>($r1, $r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r2 = new org.apache.ambari.server.orm.entities.ResourceTypeEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : specialinvoke $r2.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : r3 = $r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setId(java.lang.Integer)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0)
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : virtualinvoke r3.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void setName(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity.setName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_set_name(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name")
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("name") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name>
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("name", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1
org.apache.ambari.server.orm.entities.ResourceTypeEntity._persistence_set_name : r0.<org.apache.ambari.server.orm.entities.ResourceTypeEntity: java.lang.String name> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3
org.apache.ambari.server.security.TestAuthenticationFactory.createResourceTypeEntity : return $r3 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.ResourceEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.ResourceEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.ResourceEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.ResourceEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.ResourceEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAmbariResourceEntity : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setResource(org.apache.ambari.server.orm.entities.ResourceEntity)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setResource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_resource(org.apache.ambari.server.orm.entities.ResourceEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resource") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resource", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_resource : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.ResourceEntity resource> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : $r3 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.PermissionEntity createAdministratorPermission()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r0 = new org.apache.ambari.server.orm.entities.PermissionEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : specialinvoke $r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : r1 = $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : r1 = $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setId(java.lang.Integer)>($r2) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_id(java.lang.Integer)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("id", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_id : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI>
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r3 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType AMBARI> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r4 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.ResourceTypeEntity createResourceTypeEntity(org.apache.ambari.server.security.authorization.ResourceType)>($r3) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setResourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setResourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_resourceType(org.apache.ambari.server.orm.entities.ResourceTypeEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("resourceType") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("resourceType", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_resourceType : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: org.apache.ambari.server.orm.entities.ResourceTypeEntity resourceType> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization")
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r5 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/RoleAuthorization") >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r5)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: java.util.Collection createAuthorizations(java.util.Set)>($r5) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r1 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r3 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : r4 = (org.apache.ambari.server.security.authorization.RoleAuthorization) $r5 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : $r6 = staticinvoke <org.apache.ambari.server.security.TestAuthenticationFactory: org.apache.ambari.server.orm.entities.RoleAuthorizationEntity createRoleAuthorizationEntity(org.apache.ambari.server.security.authorization.RoleAuthorization)>(r4) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r1 = new org.apache.ambari.server.orm.entities.RoleAuthorizationEntity >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : specialinvoke $r1.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void <init>()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : r2 = $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r3 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String getId()>() >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id>
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : $r1 = r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String id> >>>>>>>> org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1
org.apache.ambari.server.security.authorization.RoleAuthorization.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationId(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationId(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationId") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: org.eclipse.persistence.queries.FetchGroup _persistence_fetchGroup> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : if $r2 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : $z1 = 1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1]
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_isAttributeFetched : return $z1 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_checkFetchedForSet : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationId", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : $r4 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.beans.PropertyChangeListener _persistence_listener> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_propertyChange : if $r4 == null >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationId : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationId> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>()
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : $r4 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.RoleAuthorization: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4)
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void setAuthorizationName(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity.setAuthorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_set_authorizationName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName")
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizationName") >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName>
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : $r2 = r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1)
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : virtualinvoke r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizationName", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1
org.apache.ambari.server.orm.entities.RoleAuthorizationEntity._persistence_set_authorizationName : r0.<org.apache.ambari.server.orm.entities.RoleAuthorizationEntity: java.lang.String authorizationName> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createRoleAuthorizationEntity : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2
org.apache.ambari.server.security.TestAuthenticationFactory.createAuthorizations : return r2 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r6)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PermissionEntity: void setAuthorizations(java.util.Collection)>($r6) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity.setAuthorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_set_authorizations(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetchedForSet(java.lang.String)>("authorizations") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : $r2 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("authorizations", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_set_authorizations : r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.util.Collection authorizations> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPermission : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r3)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : virtualinvoke r1.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void setPermission(org.apache.ambari.server.orm.entities.PermissionEntity)>($r3) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity.setPermission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_set_permission(org.apache.ambari.server.orm.entities.PermissionEntity)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetchedForSet(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : $r2 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_propertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("permission", $r2, r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_set_permission : r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> = r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorPrivilegeEntity : return r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : specialinvoke $r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: void <init>(org.apache.ambari.server.orm.entities.PrivilegeEntity)>($r1) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministratorGrantedAuthority : return $r0 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null)
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : specialinvoke $r1.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: void <init>(java.lang.String,java.util.Collection,org.apache.ambari.server.security.TestAuthenticationFactory$1)>(r0, $r3, null) >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r1 >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r0
org.apache.ambari.server.security.TestAuthenticationFactory.createAdministrator : return $r0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/springframework/security/core/context/SecurityContext")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/springframework/security/core/context/SecurityContext") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r3 = (org.springframework.security.core.context.SecurityContext) $r17
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r3 = (org.springframework.security.core.context.SecurityContext) $r17 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/servlet/FilterConfig")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r18 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/servlet/FilterConfig") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r4 = (javax.servlet.FilterConfig) $r18
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r4 = (javax.servlet.FilterConfig) $r18 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r19 = staticinvoke <org.easymock.EasyMock: java.lang.Object createMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r5 = (org.apache.ambari.server.configuration.Configuration) $r19
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r5 = (org.apache.ambari.server.configuration.Configuration) $r19 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r20 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultApiAuthenticatedUser()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r20 = virtualinvoke r5.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultApiAuthenticatedUser()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r21 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r22 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r22 = interfaceinvoke $r21.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r22.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r24 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/audit/AuditLogger") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r6 = (org.apache.ambari.server.audit.AuditLogger) $r24
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r6 = (org.apache.ambari.server.audit.AuditLogger) $r24 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z1 = interfaceinvoke r6.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z1 = interfaceinvoke r6.<org.apache.ambari.server.audit.AuditLogger: boolean isEnabled()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r26 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r28 = interfaceinvoke $r26.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r27) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r28.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/AmbariAuthorizationFilter")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r30 = staticinvoke <org.easymock.EasyMock: org.easymock.IMockBuilder createMockBuilder(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/AmbariAuthorizationFilter") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r31 = interfaceinvoke $r30.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getSecurityContext")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r31 = interfaceinvoke $r30.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getSecurityContext") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32 = interfaceinvoke $r31.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getViewRegistry")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r32 = interfaceinvoke $r31.<org.easymock.IMockBuilder: org.easymock.IMockBuilder addMockedMethod(java.lang.String)>("getViewRegistry") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33 = newarray (java.lang.Object)[5]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/AmbariEntryPoint")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r34 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/AmbariEntryPoint") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[0] = $r34
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[0] = $r34 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[1] = r5
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[1] = r5 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r35 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/Users") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[2] = $r35
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[2] = $r35 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[3] = r6
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[3] = r6 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/PermissionHelper")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r36 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/security/authorization/PermissionHelper") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[4] = $r36
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r33[4] = $r36 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r37 = interfaceinvoke $r32.<org.easymock.IMockBuilder: org.easymock.IMockBuilder withConstructor(java.lang.Object[])>($r33)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r37 = interfaceinvoke $r32.<org.easymock.IMockBuilder: org.easymock.IMockBuilder withConstructor(java.lang.Object[])>($r33) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r38 = interfaceinvoke $r37.<org.easymock.IMockBuilder: java.lang.Object createMock()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r38 = interfaceinvoke $r37.<org.easymock.IMockBuilder: java.lang.Object createMock()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r7 = (org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter) $r38
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r7 = (org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter) $r38 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/view/ViewRegistry")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r39 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/view/ViewRegistry") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r8 = (org.apache.ambari.server.view.ViewRegistry) $r39
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r8 = (org.apache.ambari.server.view.ViewRegistry) $r39 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r40 = interfaceinvoke r4.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("realm")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r40 = interfaceinvoke r4.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("realm") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r41 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AuthFilter")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r42 = interfaceinvoke $r41.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("AuthFilter") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r42.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r44 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r44 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r45 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r46 = interfaceinvoke $r45.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r46.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r48 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.apache.ambari.server.view.ViewRegistry getViewRegistry()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r48 = virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.apache.ambari.server.view.ViewRegistry getViewRegistry()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r49 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r50 = interfaceinvoke $r49.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r50.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r52 = interfaceinvoke r3.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r52 = interfaceinvoke r3.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r53 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r54 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r54 = interfaceinvoke $r53.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r54.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("DeniedView")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r56 = staticinvoke <org.easymock.EasyMock: java.lang.Object eq(java.lang.Object)>("DeniedView") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r57 = (java.lang.String) $r56
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r57 = (java.lang.String) $r56 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r58 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r58 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r59 = (java.lang.String) $r58
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r59 = (java.lang.String) $r58 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r60 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r61 = (java.lang.String) $r60
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r61 = (java.lang.String) $r60 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z2 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z2 = staticinvoke <org.easymock.EasyMock: boolean anyBoolean()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z3 = virtualinvoke r8.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r57, $r59, $r61, $z2)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z3 = virtualinvoke r8.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>($r57, $r59, $r61, $z2) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r63 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r65 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r64)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r65 = interfaceinvoke $r63.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r65.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67 = newarray (java.lang.Object)[6]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67 = newarray (java.lang.Object)[6] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[0] = r4
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[0] = r4 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[1] = r7
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[1] = r7 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[2] = r3
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[2] = r3 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[3] = r8
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[3] = r8 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[4] = r5
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[4] = r5 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[5] = r6
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r67[5] = r6 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r67)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r67) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r68 = interfaceinvoke r2.<com.google.common.collect.Table: java.util.Set cellSet()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r68 = interfaceinvoke r2.<com.google.common.collect.Table: java.util.Set cellSet()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r9 = interfaceinvoke $r68.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r9 = interfaceinvoke $r68.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z4 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r69 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r69 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r10 = (com.google.common.collect.Table$Cell) $r69
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r10 = (com.google.common.collect.Table$Cell) $r69 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "javax/servlet/FilterChain")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r70 = staticinvoke <org.easymock.EasyMock: java.lang.Object createStrictMock(java.lang.Class)>(class "javax/servlet/FilterChain") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r11 = (javax.servlet.FilterChain) $r70
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r11 = (javax.servlet.FilterChain) $r70 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/servlet/http/HttpServletRequest")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r71 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/servlet/http/HttpServletRequest") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r12 = (javax.servlet.http.HttpServletRequest) $r71
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r12 = (javax.servlet.http.HttpServletRequest) $r71 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r72 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/servlet/http/HttpServletResponse")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r72 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "javax/servlet/http/HttpServletResponse") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r13 = (javax.servlet.http.HttpServletResponse) $r72
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r13 = (javax.servlet.http.HttpServletResponse) $r72 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r73 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r73 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r14 = (java.lang.String) $r73
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r14 = (java.lang.String) $r73 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r15 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : r15 = virtualinvoke r14.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\?") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r74 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r74 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r75 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r74) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r76 = r15[0]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r76 = r15[0] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r77 = interfaceinvoke $r75.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r76) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r77.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r79 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r79 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r80 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $i0 = lengthof r15
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $i0 = lengthof r15 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $i0 != 2
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $i0 != 2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r81 = null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r81 = null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r82 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r81)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r82 = interfaceinvoke $r80.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r81) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r82.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r84 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r84 = interfaceinvoke r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r85 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r84)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r85 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r84) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r86 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r86 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r87 = interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r86)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r87 = interfaceinvoke $r85.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r86) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r87.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if z0 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r97 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r97 = interfaceinvoke r10.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r98 = (java.lang.Boolean) $r97
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r98 = (java.lang.Boolean) $r97 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z5 = virtualinvoke $r98.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $z5 = virtualinvoke $r98.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z5 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r99 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r99 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r100 = (javax.servlet.ServletRequest) $r99
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r100 = (javax.servlet.ServletRequest) $r99 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r101 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r101 = staticinvoke <org.easymock.EasyMock: java.lang.Object anyObject()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r102 = (javax.servlet.ServletResponse) $r101
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r102 = (javax.servlet.ServletResponse) $r101 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke r11.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r100, $r102)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke r11.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>($r100, $r102) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r103 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r103 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expectLastCall()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r103.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : interfaceinvoke $r103.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters once()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105 = newarray (java.lang.Object)[3]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105[0] = r12
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105[0] = r12 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105[1] = r13
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105[1] = r13 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105[2] = r11
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r105[2] = r11 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r105)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r105) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>(r12, r13, r11)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : virtualinvoke r7.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>(r12, r13, r11) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r5 = (javax.servlet.http.HttpServletResponse) r2
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r5 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r7 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r7 = virtualinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: org.springframework.security.core.context.SecurityContext getSecurityContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r8 = interfaceinvoke r7.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r8 = interfaceinvoke r7.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : n0 = null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : n0 = null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if r8 == null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if r8 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z0 = r8 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z0 = r8 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z0 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z1 = r8 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z1 = r8 instanceof org.springframework.security.authentication.AnonymousAuthenticationToken >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z1 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z2 = interfaceinvoke r8.<org.springframework.security.core.Authentication: boolean isAuthenticated()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z2 = interfaceinvoke r8.<org.springframework.security.core.Authentication: boolean isAuthenticated()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.isAuthenticated : return 1
org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.isAuthenticated : return 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z2 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z5 = specialinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: boolean authorizationPerformedInternally(java.lang.String)>(r6)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z5 = specialinvoke r0.<org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter: boolean authorizationPerformedInternally(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/users.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/users.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z0 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/requests.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z1 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/requests.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z1 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z1 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/groups.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/groups.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z2 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : goto [?= return $z23]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : goto [?= return $z23] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : return $z23
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : return $z23 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z5 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r90 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r90 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null)
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r0 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: java.lang.String getAuthenticatedName(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r1 = staticinvoke <org.springframework.security.core.context.SecurityContextHolder: org.springframework.security.core.context.SecurityContext getContext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>()
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : r2 = interfaceinvoke r1.<org.springframework.security.core.context.SecurityContext: org.springframework.security.core.Authentication getAuthentication()>() >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : if null != r2 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : $r3 = r0 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3]
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : goto [?= return $r3] >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r3 >>>>>>>> org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0
org.apache.ambari.server.security.authorization.AuthorizationHelper.getAuthenticatedName : return $r0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $r90 == null
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $r90 == null >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $r119 = newarray (java.lang.Object)[1]]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $r119 = newarray (java.lang.Object)[1]] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r119 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r119 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r119[0] = r11
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : $r119[0] = r11 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r119)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : staticinvoke <org.easymock.EasyMock: void verify(java.lang.Object[])>($r119) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= (branch)]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilterTest.performGeneralDoFilterTest : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z3 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/credentials.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z3 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/credentials.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z3 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z3 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z4 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z4 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z4 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z5 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/requests.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z5 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/requests.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z5 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z5 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z6 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/services.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z6 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/services.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z6 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z7 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/alert.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z7 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/alert.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z7 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z7 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z8 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/(\\w+)?")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z8 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/(\\w+)?") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z8 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z9 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/stacks/.*?/versions/.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z9 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/stacks/.*?/versions/.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z9 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z9 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z10 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/views.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z10 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/views.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z10 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z10 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z11 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/views/([^/]+)/([^/]+)/([^/]+)(.*)")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z11 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/views/([^/]+)/([^/]+)/([^/]+)(.*)") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z11 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z11 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z12 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/widget_layouts.*?")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z12 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/widget_layouts.*?") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z12 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z12 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z13 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/hosts.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z13 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/hosts.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z13 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z13 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z14 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/configurations.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z14 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/configurations.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z14 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z14 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z15 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/components.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z15 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/components.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z15 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z15 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z16 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/host_components.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z16 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/host_components.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z16 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z16 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z17 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/config_groups.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z17 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/config_groups.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z17 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z17 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z18 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/hosts.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z18 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/hosts.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z18 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z18 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z19 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/alert_targets.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z19 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/alert_targets.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z19 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z19 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z20 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z20 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/privileges.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z20 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z20 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z21 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/persist.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z21 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/persist.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z21 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z21 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z22 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/upgrades.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z22 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/clusters/.*?/upgrades.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z22 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : if $z22 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.authorizationPerformedInternally : $z23 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z6 = 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z6 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z7 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/bootstrap.*")
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z7 = virtualinvoke r6.<java.lang.String: boolean matches(java.lang.String)>("/api/v[0-9]+/bootstrap.*") >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z7 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z7 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r49 = interfaceinvoke r8.<org.springframework.security.core.Authentication: java.util.Collection getAuthorities()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r49 = interfaceinvoke r8.<org.springframework.security.core.Authentication: java.util.Collection getAuthorities()>() >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : $r1 = r0.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: java.util.Collection authorities>
org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : $r1 = r0.<org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization: java.util.Collection authorities> >>>>>>>> org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : return $r1
org.apache.ambari.server.security.TestAuthenticationFactory$TestAuthorization.getAuthorities : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r50 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r50 = interfaceinvoke $r49.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z9 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z9 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z9 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z9 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r51 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r51 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r52 = (org.springframework.security.core.GrantedAuthority) $r51
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r52 = (org.springframework.security.core.GrantedAuthority) $r51 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z10 = r52 instanceof org.apache.ambari.server.security.authorization.AmbariGrantedAuthority
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z10 = r52 instanceof org.apache.ambari.server.security.authorization.AmbariGrantedAuthority >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z10 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z10 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r53 = (org.apache.ambari.server.security.authorization.AmbariGrantedAuthority) r52
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r53 = (org.apache.ambari.server.security.authorization.AmbariGrantedAuthority) r52 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r14 = virtualinvoke r53.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity getPrivilegeEntity()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r14 = virtualinvoke r53.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity getPrivilegeEntity()>() >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity>
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : $r1 = r0.<org.apache.ambari.server.security.authorization.AmbariGrantedAuthority: org.apache.ambari.server.orm.entities.PrivilegeEntity privilegeEntity> >>>>>>>> org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : return $r1
org.apache.ambari.server.security.authorization.AmbariGrantedAuthority.getPrivilegeEntity : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r54 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r54 = virtualinvoke r14.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity getPermission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>()
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity _persistence_get_permission()>() >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission")
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: void _persistence_checkFetched(java.lang.String)>("permission") >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission>
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : $r1 = r0.<org.apache.ambari.server.orm.entities.PrivilegeEntity: org.apache.ambari.server.orm.entities.PermissionEntity permission> >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity._persistence_get_permission : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1
org.apache.ambari.server.orm.entities.PrivilegeEntity.getPermission : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r15 = virtualinvoke $r54.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer getId()>()
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : r15 = virtualinvoke $r54.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer getId()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>()
org.apache.ambari.server.orm.entities.PermissionEntity.getId : $r1 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer _persistence_get_id()>() >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id")
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: void _persistence_checkFetched(java.lang.String)>("id") >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1)
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : $z0 = virtualinvoke r0.<org.apache.ambari.server.orm.entities.PermissionEntity: boolean _persistence_isAttributeFetched(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_checkFetched : if $z0 != 0 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id>
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : $r1 = r0.<org.apache.ambari.server.orm.entities.PermissionEntity: java.lang.Integer id> >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity._persistence_get_id : return $r1 >>>>>>>> org.apache.ambari.server.orm.entities.PermissionEntity.getId : return $r1
org.apache.ambari.server.orm.entities.PermissionEntity.getId : return $r1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z11 = virtualinvoke r15.<java.lang.Integer: boolean equals(java.lang.Object)>($r55)
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z11 = virtualinvoke r15.<java.lang.Integer: boolean equals(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z11 == 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if $z11 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z6 = 1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z6 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= (branch)]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z6 != 0
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z6 != 0 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z25 = 1
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : $z25 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= z8 = $z25]
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : goto [?= z8 = $z25] >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z8 = $z25
org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : z8 = $z25 >>>>>>>> org.apache.ambari.server.security.authorization.AmbariAuthorizationFilter.doFilter : if z8 != 0
