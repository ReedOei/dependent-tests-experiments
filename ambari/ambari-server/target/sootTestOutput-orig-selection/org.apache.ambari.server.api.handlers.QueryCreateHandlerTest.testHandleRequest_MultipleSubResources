org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r1 == null
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r1 == null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r2 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r2 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.lang.String m_name> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= i0 = $i1]
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= i0 = $i1] >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : i0 = $i1
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : i0 = $i1 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i2 = 31 * i0
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i2 = 31 * i0 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r3 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r3 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r3 == null
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : if $r3 == null >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r4 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $r4 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i3 = interfaceinvoke $r4.<java.util.Map: int hashCode()>()
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : $i3 = interfaceinvoke $r4.<java.util.Map: int hashCode()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= i4 = $i2 + $i3]
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : goto [?= i4 = $i2 + $i3] >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : i4 = $i2 + $i3
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : i4 = $i2 + $i3 >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.hashCode : return i4
org.apache.ambari.server.api.services.NamedPropertySet.hashCode : return i4 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r3 = new org.apache.ambari.server.api.util.TreeNodeImpl >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : specialinvoke $r3.<org.apache.ambari.server.api.util.TreeNodeImpl: void <init>(org.apache.ambari.server.api.util.TreeNode,java.lang.Object,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : r4 = $r3
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : r4 = $r3 >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : $r5 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4)
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r4) >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4
org.apache.ambari.server.api.util.TreeNodeImpl.addChild : return r4 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController m_controller>
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController m_controller> >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : return $r1
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getClusterController : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r9 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler getReadHandler()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r9 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler getReadHandler()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler m_testReadHandler>
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : $r1 = r0.<org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler: org.apache.ambari.server.api.handlers.RequestHandler m_testReadHandler> >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : return $r1
org.apache.ambari.server.api.handlers.QueryCreateHandlerTest$TestQueryCreateHandler.getReadHandler : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r2 = interfaceinvoke $r9.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r1)
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r2 = interfaceinvoke $r9.<org.apache.ambari.server.api.handlers.RequestHandler: org.apache.ambari.server.api.services.Result handleRequest(org.apache.ambari.server.api.services.Request)>(r1) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r10 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r10 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.services.ResultStatus getStatus()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z0 = virtualinvoke $r10.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z0 = virtualinvoke $r10.<org.apache.ambari.server.api.services.ResultStatus: boolean isErrorState()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z0 != 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r11 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r11 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r12 = interfaceinvoke $r11.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren>
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.util.Map m_mapChildren> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2
org.apache.ambari.server.api.util.TreeNodeImpl.getChildren : return $r2 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z1 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $z1 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z1 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r3 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: java.util.Map buildCreateSet(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2)
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : r3 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: java.util.Map buildCreateSet(org.apache.ambari.server.api.services.Request,org.apache.ambari.server.api.services.Result)>(r1, r2) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r25 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r25 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.services.RequestBody getBody()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r3 = virtualinvoke $r25.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getNamedPropertySets()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r3 = virtualinvoke $r25.<org.apache.ambari.server.api.services.RequestBody: java.util.Set getNamedPropertySets()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r26 = new java.util.HashMap
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r26 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r26.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r26.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r4 = $r26
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r4 = $r26 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r5 = interfaceinvoke r1.<org.apache.ambari.server.api.services.Request: org.apache.ambari.server.api.resources.ResourceInstance getResource()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r27 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r27 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r6 = interfaceinvoke $r27.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r6 = interfaceinvoke $r27.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r7 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r7 = virtualinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r28 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r6)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r28 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r6) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r0 != r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return 1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r8 = interfaceinvoke $r28.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r6)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r8 = interfaceinvoke $r28.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>(r6) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r9 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r9 = interfaceinvoke r2.<org.apache.ambari.server.api.services.Result: org.apache.ambari.server.api.util.TreeNode getResultTree()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r10 = interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r10 = interfaceinvoke r9.<org.apache.ambari.server.api.util.TreeNode: java.util.Collection getChildren()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r11 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z0 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r29 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r29 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r12 = (org.apache.ambari.server.api.util.TreeNode) $r29
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r12 = (org.apache.ambari.server.api.util.TreeNode) $r29 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r30 = interfaceinvoke r12.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r30 = interfaceinvoke r12.<org.apache.ambari.server.api.util.TreeNode: java.lang.Object getObject()>() >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object>
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : $r1 = r0.<org.apache.ambari.server.api.util.TreeNodeImpl: java.lang.Object m_object> >>>>>>>> org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1
org.apache.ambari.server.api.util.TreeNodeImpl.getObject : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r13 = (org.apache.ambari.server.controller.spi.Resource) $r30
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r13 = (org.apache.ambari.server.controller.spi.Resource) $r30 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r14 = interfaceinvoke r13.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r8)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r14 = interfaceinvoke r13.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r15 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z1 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r31 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r31 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r16 = (org.apache.ambari.server.api.services.NamedPropertySet) $r31
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r16 = (org.apache.ambari.server.api.services.NamedPropertySet) $r31 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r32 = virtualinvoke r16.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map getProperties()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r32 = virtualinvoke r16.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.getProperties : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties>
org.apache.ambari.server.api.services.NamedPropertySet.getProperties : $r1 = r0.<org.apache.ambari.server.api.services.NamedPropertySet: java.util.Map m_mapProperties> >>>>>>>> org.apache.ambari.server.api.services.NamedPropertySet.getProperties : return $r1
org.apache.ambari.server.api.services.NamedPropertySet.getProperties : return $r1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r33 = interfaceinvoke $r32.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r17 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r17 = interfaceinvoke $r33.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z2 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r34 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r34 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r18 = (java.util.Map$Entry) $r34
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r18 = (java.util.Map$Entry) $r34 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r35 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r35 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r19 = (java.util.Set) $r35
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r19 = (java.util.Set) $r35 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r20 = interfaceinvoke r19.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r20 = interfaceinvoke r19.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z3 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if $z3 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r36 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r36 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r21 = (java.util.Map) $r36
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r21 = (java.util.Map) $r36 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r37 = new java.util.HashMap
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r37 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r37.<java.util.HashMap: void <init>(java.util.Map)>(r21)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r37.<java.util.HashMap: void <init>(java.util.Map)>(r21) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r22 = $r37
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r22 = $r37 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r38 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r38 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r39 = (java.lang.String) $r38
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r39 = (java.lang.String) $r38 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r23 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.controller.spi.Resource$Type getCreateType(org.apache.ambari.server.api.resources.ResourceInstance,java.lang.String)>(r5, $r39)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r23 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.controller.spi.Resource$Type getCreateType(org.apache.ambari.server.api.resources.ResourceInstance,java.lang.String)>(r5, $r39) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : if r2 == null
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : if r2 == null >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : if $z0 == 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r5 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: java.util.Map getSubResources()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r5 = interfaceinvoke r1.<org.apache.ambari.server.api.resources.ResourceInstance: java.util.Map getSubResources()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : r3 = (org.apache.ambari.server.api.resources.ResourceInstance) $r6
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : r3 = (org.apache.ambari.server.api.resources.ResourceInstance) $r6 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : if r3 != null
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : if r3 != null >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r13 = interfaceinvoke r3.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r13 = interfaceinvoke r3.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : $r14 = interfaceinvoke $r13.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : return $r14
org.apache.ambari.server.api.handlers.QueryCreateHandler.getCreateType : return $r14 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r40 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r23)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r40 = interfaceinvoke r7.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.Schema getSchema(org.apache.ambari.server.controller.spi.Resource$Type)>(r23) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if r1 == null
org.apache.ambari.server.controller.spi.Resource$Type.equals : if r1 == null >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.spi.Resource$Type.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.controller.spi.Resource$Type.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if $r3 == $r4
org.apache.ambari.server.controller.spi.Resource$Type.equals : if $r3 == $r4 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : r2 = (org.apache.ambari.server.controller.spi.Resource$Type) r1
org.apache.ambari.server.controller.spi.Resource$Type.equals : r2 = (org.apache.ambari.server.controller.spi.Resource$Type) r1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.equals : $i0 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $i1 = r2.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.equals : $i1 = r2.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : if $i0 != $i1
org.apache.ambari.server.controller.spi.Resource$Type.equals : if $i0 != $i1 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : $z1 = 0
org.apache.ambari.server.controller.spi.Resource$Type.equals : $z1 = 0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.equals : return $z1
org.apache.ambari.server.controller.spi.Resource$Type.equals : return $z1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r41 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r41 = interfaceinvoke r5.<org.apache.ambari.server.api.resources.ResourceInstance: org.apache.ambari.server.api.resources.ResourceDefinition getResourceDefinition()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r42 = interfaceinvoke $r41.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r42 = interfaceinvoke $r41.<org.apache.ambari.server.api.resources.ResourceDefinition: org.apache.ambari.server.controller.spi.Resource$Type getType()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r43 = interfaceinvoke $r40.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r42)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r43 = interfaceinvoke $r40.<org.apache.ambari.server.controller.spi.Schema: java.lang.String getKeyPropertyId(org.apache.ambari.server.controller.spi.Resource$Type)>($r42) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, r14)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : interfaceinvoke r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r43, r14) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r45 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r45 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r23) >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $r1 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: java.lang.String name> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>() >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i1 = 31 * i0 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal>
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : $i2 = r0.<org.apache.ambari.server.controller.spi.Resource$Type: int ordinal> >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : i3 = $i1 + $i2 >>>>>>>> org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3
org.apache.ambari.server.controller.spi.Resource$Type.hashCode : return i3 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r24 = (java.util.Set) $r45
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r24 = (java.util.Set) $r45 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if r24 != null
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : if r24 != null >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r46 = new java.util.HashSet
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : $r46 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r46.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : specialinvoke $r46.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r24 = $r46
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : r24 = $r46 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, r24)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, r24) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : interfaceinvoke r24.<java.util.Set: boolean add(java.lang.Object)>(r22)
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : interfaceinvoke r24.<java.util.Set: boolean add(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z3 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : goto [?= $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : return r4
org.apache.ambari.server.api.handlers.QueryCreateHandler.buildCreateSet : return r4 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : goto [?= $i0 = interfaceinvoke r3.<java.util.Map: int size()>()]
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : goto [?= $i0 = interfaceinvoke r3.<java.util.Map: int size()>()] >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i0 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i0 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i0 == 1
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i0 == 1 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i1 = interfaceinvoke r3.<java.util.Map: int size()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $i1 = interfaceinvoke r3.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i1 != 0
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : if $i1 != 0 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r17 = "Multiple sub-resource types may not be created in the same request."
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r17 = "Multiple sub-resource types may not be created in the same request." >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r18 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.services.Result createInvalidRequestResult(java.lang.String)>($r17)
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : $r18 = specialinvoke r0.<org.apache.ambari.server.api.handlers.QueryCreateHandler: org.apache.ambari.server.api.services.Result createInvalidRequestResult(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r2 = new org.apache.ambari.server.api.services.ResultImpl
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r2 = new org.apache.ambari.server.api.services.ResultImpl >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r3 = new org.apache.ambari.server.api.services.ResultStatus
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r3 = new org.apache.ambari.server.api.services.ResultStatus >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r4 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST>
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r4 = <org.apache.ambari.server.api.services.ResultStatus$STATUS: org.apache.ambari.server.api.services.ResultStatus$STATUS BAD_REQUEST> >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r5 = new java.lang.StringBuilder
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Request: ")
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Request: ") >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r3.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r4, $r8)
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r3.<org.apache.ambari.server.api.services.ResultStatus: void <init>(org.apache.ambari.server.api.services.ResultStatus$STATUS,java.lang.String)>($r4, $r8) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r2.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r3)
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : specialinvoke $r2.<org.apache.ambari.server.api.services.ResultImpl: void <init>(org.apache.ambari.server.api.services.ResultStatus)>($r3) >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : return $r2
org.apache.ambari.server.api.handlers.QueryCreateHandler.createInvalidRequestResult : return $r2 >>>>>>>> org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : return $r18
org.apache.ambari.server.api.handlers.QueryCreateHandler.handleRequest : return $r18 >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status>
org.apache.ambari.server.api.services.ResultImpl.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultImpl: org.apache.ambari.server.api.services.ResultStatus m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1
org.apache.ambari.server.api.services.ResultImpl.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status>
org.apache.ambari.server.api.services.ResultStatus.getStatus : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: org.apache.ambari.server.api.services.ResultStatus$STATUS m_status> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1
org.apache.ambari.server.api.services.ResultStatus.getStatus : return $r1 >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg>
org.apache.ambari.server.api.services.ResultStatus.getMessage : $r1 = r0.<org.apache.ambari.server.api.services.ResultStatus: java.lang.String m_msg> >>>>>>>> org.apache.ambari.server.api.services.ResultStatus.getMessage : return $r1
