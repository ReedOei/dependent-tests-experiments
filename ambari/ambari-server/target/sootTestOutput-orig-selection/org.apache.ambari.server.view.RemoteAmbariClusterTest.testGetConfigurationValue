org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r3 = null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r4 = specialinvoke r0.<org.apache.ambari.server.view.RemoteAmbariCluster: java.lang.String getDesiredConfig(java.lang.String)>(r1)
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r4 = specialinvoke r0.<org.apache.ambari.server.view.RemoteAmbariCluster: java.lang.String getDesiredConfig(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r8 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: com.google.common.cache.LoadingCache configurationCache>
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r8 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: com.google.common.cache.LoadingCache configurationCache> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r9 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: java.lang.String clusterPath>
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r9 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: java.lang.String clusterPath> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?fields=services/ServiceInfo,hosts,Clusters")
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?fields=services/ServiceInfo,hosts,Clusters") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r13 = interfaceinvoke $r8.<com.google.common.cache.LoadingCache: java.lang.Object get(java.lang.Object)>($r12)
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r13 = interfaceinvoke $r8.<com.google.common.cache.LoadingCache: java.lang.Object get(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r2 = (java.lang.String) r1
org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r2 = (java.lang.String) r1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r3 = virtualinvoke r0.<org.apache.ambari.server.view.RemoteAmbariCluster$1: com.google.gson.JsonElement load(java.lang.String)>($r2)
org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r3 = virtualinvoke r0.<org.apache.ambari.server.view.RemoteAmbariCluster$1: com.google.gson.JsonElement load(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r2 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster$1: org.apache.ambari.server.view.RemoteAmbariCluster this$0>
org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r2 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster$1: org.apache.ambari.server.view.RemoteAmbariCluster this$0> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r3 = staticinvoke <org.apache.ambari.server.view.RemoteAmbariCluster: com.google.gson.JsonElement access$000(org.apache.ambari.server.view.RemoteAmbariCluster,java.lang.String)>($r2, r1)
org.apache.ambari.server.view.RemoteAmbariCluster$1.load : $r3 = staticinvoke <org.apache.ambari.server.view.RemoteAmbariCluster: com.google.gson.JsonElement access$000(org.apache.ambari.server.view.RemoteAmbariCluster,java.lang.String)>($r2, r1) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.access$000 : $r2 = specialinvoke r0.<org.apache.ambari.server.view.RemoteAmbariCluster: com.google.gson.JsonElement readFromUrlJSON(java.lang.String)>(r1)
org.apache.ambari.server.view.RemoteAmbariCluster.access$000 : $r2 = specialinvoke r0.<org.apache.ambari.server.view.RemoteAmbariCluster: com.google.gson.JsonElement readFromUrlJSON(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r4 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: org.apache.ambari.view.AmbariStreamProvider streamProvider>
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r4 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: org.apache.ambari.view.AmbariStreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r5 = (java.lang.String) null
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r5 = (java.lang.String) null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : r2 = interfaceinvoke $r4.<org.apache.ambari.view.AmbariStreamProvider: java.io.InputStream readFrom(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, "GET", $r5, null)
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : r2 = interfaceinvoke $r4.<org.apache.ambari.view.AmbariStreamProvider: java.io.InputStream readFrom(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, "GET", $r5, null) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$1: java.io.InputStream answer()>()
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$1: java.io.InputStream answer()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r1 = r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$1: int[] val$desiredConfigPolls>
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r1 = r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$1: int[] val$desiredConfigPolls> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $b0 = 0
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $b0 = 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $i1 = $r1[$b0]
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $i1 = $r1[$b0] >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $i2 = $i1 + 1
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $i2 = $i1 + 1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r1[$b0] = $i2
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r1[$b0] = $i2 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r2 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r2 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r3 = "{\"Clusters\": {\"desired_configs\": {\"test-site\": {\"tag\": \"TAG\"}}}}"
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r3 = "{\"Clusters\": {\"desired_configs\": {\"test-site\": {\"tag\": \"TAG\"}}}}" >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4)
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : return $r2
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : return $r2 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : return $r1
org.apache.ambari.server.view.RemoteAmbariClusterTest$1.answer : return $r1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : r3 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>(r2)
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : r3 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream)>(r2) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r6 = new com.google.gson.JsonParser
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r6 = new com.google.gson.JsonParser >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : specialinvoke $r6.<com.google.gson.JsonParser: void <init>()>()
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : specialinvoke $r6.<com.google.gson.JsonParser: void <init>()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r7 = virtualinvoke $r6.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r3)
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : $r7 = virtualinvoke $r6.<com.google.gson.JsonParser: com.google.gson.JsonElement parse(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : return $r7
org.apache.ambari.server.view.RemoteAmbariCluster.readFromUrlJSON : return $r7 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.access$000 : return $r2
org.apache.ambari.server.view.RemoteAmbariCluster.access$000 : return $r2 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster$1.load : return $r3
org.apache.ambari.server.view.RemoteAmbariCluster$1.load : return $r3 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r3 = (com.google.gson.JsonElement) $r13
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r3 = (com.google.gson.JsonElement) $r13 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r3 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r3 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z0 = virtualinvoke r3.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z0 = virtualinvoke r3.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z0 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r14 = virtualinvoke r3.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r14 = virtualinvoke r3.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r4 = virtualinvoke $r14.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("Clusters")
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r4 = virtualinvoke $r14.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("Clusters") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r4 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r4 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z1 = virtualinvoke r4.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z1 = virtualinvoke r4.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z1 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r15 = virtualinvoke r4.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r15 = virtualinvoke r4.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r5 = virtualinvoke $r15.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("desired_configs")
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r5 = virtualinvoke $r15.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("desired_configs") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r5 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r5 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z2 = virtualinvoke r5.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z2 = virtualinvoke r5.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z2 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r16 = virtualinvoke r5.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r16 = virtualinvoke r5.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r6 = virtualinvoke $r16.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>(r1)
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r6 = virtualinvoke $r16.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r6 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r6 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z3 = virtualinvoke r6.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z3 = virtualinvoke r6.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z3 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r17 = virtualinvoke r6.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r17 = virtualinvoke r6.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r7 = virtualinvoke $r17.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("tag")
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : r7 = virtualinvoke $r17.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("tag") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r7 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if r7 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z4 = virtualinvoke r7.<com.google.gson.JsonElement: boolean isJsonPrimitive()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $z4 = virtualinvoke r7.<com.google.gson.JsonElement: boolean isJsonPrimitive()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z4 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : if $z4 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r18 = virtualinvoke r7.<com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r18 = virtualinvoke r7.<com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r19 = virtualinvoke $r18.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : $r19 = virtualinvoke $r18.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : return $r19
org.apache.ambari.server.view.RemoteAmbariCluster.getDesiredConfig : return $r19 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r4 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r4 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r8 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: com.google.common.cache.LoadingCache configurationCache>
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r8 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: com.google.common.cache.LoadingCache configurationCache> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9 = newarray (java.lang.Object)[3]
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r10 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: java.lang.String clusterPath>
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r10 = r0.<org.apache.ambari.server.view.RemoteAmbariCluster: java.lang.String clusterPath> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9[0] = $r10
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9[0] = $r10 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9[1] = r1
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9[1] = r1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9[2] = r4
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r9[2] = r4 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/configurations?(type=%s&tag=%s)", $r9)
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/configurations?(type=%s&tag=%s)", $r9) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r12 = interfaceinvoke $r8.<com.google.common.cache.LoadingCache: java.lang.Object get(java.lang.Object)>($r11)
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r12 = interfaceinvoke $r8.<com.google.common.cache.LoadingCache: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$2: java.io.InputStream answer()>()
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r1 = virtualinvoke r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$2: java.io.InputStream answer()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r1 = r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$2: int[] val$testConfigPolls>
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r1 = r0.<org.apache.ambari.server.view.RemoteAmbariClusterTest$2: int[] val$testConfigPolls> >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $b0 = 0
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $b0 = 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $i1 = $r1[$b0]
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $i1 = $r1[$b0] >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $i2 = $i1 + 1
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $i2 = $i1 + 1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r1[$b0] = $i2
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r1[$b0] = $i2 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r2 = new java.io.ByteArrayInputStream
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r2 = new java.io.ByteArrayInputStream >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r3 = "{\"items\": [{\"properties\": {\"test.property.name\": \"test property value\"}}]}"
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r3 = "{\"items\": [{\"properties\": {\"test.property.name\": \"test property value\"}}]}" >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>()
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4)
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : return $r2
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : return $r2 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : return $r1
org.apache.ambari.server.view.RemoteAmbariClusterTest$2.answer : return $r1 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r3 = (com.google.gson.JsonElement) $r12
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r3 = (com.google.gson.JsonElement) $r12 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : goto [?= (branch)]
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r3 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r3 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z0 = virtualinvoke r3.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z0 = virtualinvoke r3.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z0 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z0 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r16 = virtualinvoke r3.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r16 = virtualinvoke r3.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r17 = virtualinvoke $r16.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("items")
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r17 = virtualinvoke $r16.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("items") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r17 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r17 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z1 = virtualinvoke r17.<com.google.gson.JsonElement: boolean isJsonArray()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z1 = virtualinvoke r17.<com.google.gson.JsonElement: boolean isJsonArray()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z1 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z1 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r18 = virtualinvoke r17.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r18 = virtualinvoke r17.<com.google.gson.JsonElement: com.google.gson.JsonArray getAsJsonArray()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r5 = virtualinvoke $r18.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(0)
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r5 = virtualinvoke $r18.<com.google.gson.JsonArray: com.google.gson.JsonElement get(int)>(0) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r5 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r5 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z2 = virtualinvoke r5.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z2 = virtualinvoke r5.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z2 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z2 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r19 = virtualinvoke r5.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r19 = virtualinvoke r5.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r6 = virtualinvoke $r19.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("properties")
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r6 = virtualinvoke $r19.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>("properties") >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r6 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r6 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z3 = virtualinvoke r6.<com.google.gson.JsonElement: boolean isJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z3 = virtualinvoke r6.<com.google.gson.JsonElement: boolean isJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z3 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z3 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r20 = virtualinvoke r6.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r20 = virtualinvoke r6.<com.google.gson.JsonElement: com.google.gson.JsonObject getAsJsonObject()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r7 = virtualinvoke $r20.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>(r2)
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : r7 = virtualinvoke $r20.<com.google.gson.JsonObject: com.google.gson.JsonElement get(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r7 == null
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if r7 == null >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z4 = virtualinvoke r7.<com.google.gson.JsonElement: boolean isJsonPrimitive()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $z4 = virtualinvoke r7.<com.google.gson.JsonElement: boolean isJsonPrimitive()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z4 != 0
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : if $z4 != 0 >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r21 = virtualinvoke r7.<com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r21 = virtualinvoke r7.<com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r22 = virtualinvoke $r21.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>()
org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : $r22 = virtualinvoke $r21.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>() >>>>>>>> org.apache.ambari.server.view.RemoteAmbariCluster.getConfigurationValue : return $r22
