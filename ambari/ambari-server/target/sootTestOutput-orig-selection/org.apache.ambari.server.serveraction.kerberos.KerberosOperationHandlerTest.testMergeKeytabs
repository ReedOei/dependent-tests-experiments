org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getKerberosOperationRetryTimeout()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r8 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r10 = interfaceinvoke $r8.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12[0] = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r13 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r14 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r13.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r15.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r16 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : $r17 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest$2.configure : interfaceinvoke $r16.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r3 = class "org/apache/ambari/server/serveraction/kerberos/KerberosOperationHandler" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4 = newarray (java.lang.Class)[3]
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4 = newarray (java.lang.Class)[3] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[0] = class "[Ljava/lang/String;"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[0] = class "[Ljava/lang/String;" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[1] = class "java/util/Map"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[1] = class "java/util/Map" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[2] = class "org/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler"
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r4[2] = class "org/apache/ambari/server/utils/ShellCommandUtil$InteractiveHandler" >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r4)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : $r5 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("executeCommand", $r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r5
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandlerTest: java.lang.reflect.Method methodExecuteCommand> = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r1 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r1 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : r2 = $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : r2 = $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r5 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = $r5
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i1 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i1 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r4 = r3[i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = i1 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i2 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i2 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r9 = newarray (java.lang.String)[$i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r9 = newarray (java.lang.String)[$i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = (java.lang.String[]) $r10
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = (java.lang.String[]) $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r16)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r16) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r4 = $r15
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r4 = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r5 = $r17
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r5 = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.Keytab >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r18.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r18.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r6 = $r18
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r6 = $r18 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : b0 = $b1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : b0 = $b1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r19 = new org.apache.directory.shared.kerberos.KerberosTime
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r19 = new org.apache.directory.shared.kerberos.KerberosTime >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r19.<org.apache.directory.shared.kerberos.KerberosTime: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r19.<org.apache.directory.shared.kerberos.KerberosTime: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r8 = $r19
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r8 = $r19 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r20 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r20 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r9 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r9 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r10 = (org.apache.directory.shared.kerberos.components.EncryptionKey) $r21
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r10 = (org.apache.directory.shared.kerberos.components.EncryptionKey) $r21 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r22 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r22 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r22.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: void <init>(java.lang.String,int,org.apache.directory.shared.kerberos.KerberosTime,byte,org.apache.directory.shared.kerberos.components.EncryptionKey)>(r1, 1, r8, b0, r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r22.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: void <init>(java.lang.String,int,org.apache.directory.shared.kerberos.KerberosTime,byte,org.apache.directory.shared.kerberos.components.EncryptionKey)>(r1, 1, r8, b0, r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke r6.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke r6.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : return r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : return r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r25 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r25 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = r25
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = r25 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r11 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r11 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r3 = $r10
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r3 = $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r26 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r26 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = r26
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = r26 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r13 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r13 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r13)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r4 = $r12
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r4 = $r12 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r27.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r27.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r5 = r27
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r5 = r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z4 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r15
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z5 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r9 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r16
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r9 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r16 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r17 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r17 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r18 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r18 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z6 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r19 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r19 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = virtualinvoke $r19.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = virtualinvoke $r19.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r21 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r21 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r22 = virtualinvoke $r21.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r22 = virtualinvoke $r21.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z7 = virtualinvoke $r20.<org.apache.directory.shared.kerberos.codec.types.EncryptionType: boolean equals(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z7 = virtualinvoke $r20.<org.apache.directory.shared.kerberos.codec.types.EncryptionType: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z7 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r6.<java.util.Iterator: void remove()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r6.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r24 = r28
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r24 = r28 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r24.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r24.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : return r24
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r1 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : r2 = $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : r2 = $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r5 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = $r5
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i1 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i1 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r4 = r3[i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = i1 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i2 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i2 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r9 = newarray (java.lang.String)[$i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r9 = newarray (java.lang.String)[$i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = (java.lang.String[]) $r10
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = (java.lang.String[]) $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r16)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r16) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r4 = $r15
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r4 = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r5 = $r17
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r5 = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.Keytab >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r18.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r18.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r6 = $r18
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r6 = $r18 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : b0 = $b1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : b0 = $b1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r19 = new org.apache.directory.shared.kerberos.KerberosTime
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r19 = new org.apache.directory.shared.kerberos.KerberosTime >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r19.<org.apache.directory.shared.kerberos.KerberosTime: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r19.<org.apache.directory.shared.kerberos.KerberosTime: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r8 = $r19
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r8 = $r19 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r20 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r20 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r9 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r9 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r10 = (org.apache.directory.shared.kerberos.components.EncryptionKey) $r21
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r10 = (org.apache.directory.shared.kerberos.components.EncryptionKey) $r21 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r22 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r22 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r22.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: void <init>(java.lang.String,int,org.apache.directory.shared.kerberos.KerberosTime,byte,org.apache.directory.shared.kerberos.components.EncryptionKey)>(r1, 1, r8, b0, r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r22.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: void <init>(java.lang.String,int,org.apache.directory.shared.kerberos.KerberosTime,byte,org.apache.directory.shared.kerberos.components.EncryptionKey)>(r1, 1, r8, b0, r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke r6.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke r6.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : return r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : return r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r25 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r25 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = r25
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = r25 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r11 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r11 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r3 = $r10
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r3 = $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r26 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r26 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = r26
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = r26 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r13 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r13 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r13)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r4 = $r12
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r4 = $r12 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r27.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r27.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r5 = r27
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r5 = r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z4 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r15
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z5 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r9 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r16
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r9 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r16 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r17 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r17 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r18 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r18 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z6 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r19 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r19 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = virtualinvoke $r19.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = virtualinvoke $r19.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r21 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r21 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r22 = virtualinvoke $r21.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r22 = virtualinvoke $r21.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z7 = virtualinvoke $r20.<org.apache.directory.shared.kerberos.codec.types.EncryptionType: boolean equals(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z7 = virtualinvoke $r20.<org.apache.directory.shared.kerberos.codec.types.EncryptionType: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z7 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r6.<java.util.Iterator: void remove()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r6.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r24 = r28
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r24 = r28 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r24.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r24.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : return r24
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r1 = newarray (com.google.inject.Module)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r0 = new org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : specialinvoke $r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r1[0] = $r0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r2 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r2 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : r1 = (org.apache.ambari.server.configuration.Configuration) $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerOsFamily()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r4 = staticinvoke <org.easymock.EasyMock: org.easymock.IExpectationSetters expect(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r5 = interfaceinvoke $r4.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters andReturn(java.lang.Object)>("redhat6") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>()
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r5.<org.easymock.IExpectationSetters: org.easymock.IExpectationSetters anyTimes()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7[0] = r1
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r7[0] = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : staticinvoke <org.easymock.EasyMock: void replay(java.lang.Object[])>($r7) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r9 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/Clusters") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r8.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r10 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/configuration/Configuration") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r10.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r11 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : $r12 = staticinvoke <org.easymock.EasyMock: java.lang.Object createNiceMock(java.lang.Class)>(class "org/apache/ambari/server/state/stack/OsFamily") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12)
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest$2.configure : interfaceinvoke $r11.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : <org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest: com.google.inject.Injector injector> = $r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HAS_IPA")
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HAS_IPA") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : if $r3 == null
org.apache.ambari.server.serveraction.kerberos.IPAKerberosOperationHandlerTest.beforeClass : if $r3 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r1 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r1 = new org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r1.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void <init>(org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest)>(r0) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : r2 = $r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : r2 = $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : $r3 = new org.apache.ambari.server.security.credential.PrincipalKeyCredential >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : specialinvoke $r3.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: void <init>(java.lang.String,java.lang.String)>("admin/admin", "hadoop") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : virtualinvoke r2.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void open(org.apache.ambari.server.security.credential.PrincipalKeyCredential,java.lang.String,java.util.Map)>($r3, "EXAMPLE.COM", null) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>() >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> >>>>>>>> org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : return $r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if $z1 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setDefaultRealm(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest$6: void setExecutableSearchPaths(java.lang.String)>("/usr/bin, /usr/kerberos/bin, /usr/sbin") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r5 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = $r5
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = $r5 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i1 >= i0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if i1 >= i0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r4 = r3[i1]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $z0 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if $z0 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = i1 + 1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i2 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $i2 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r9 = newarray (java.lang.String)[$i2]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r9 = newarray (java.lang.String)[$i2] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r9) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = (java.lang.String[]) $r10
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : $r8 = (java.lang.String[]) $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: void setExecutableSearchPaths(java.lang.String[])>($r8) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandlerTest.createHandler : return r2 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r15 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r16 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes> >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r16)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r15.<java.util.HashSet: void <init>(java.util.Collection)>($r16) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r4 = $r15
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r4 = $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r5 = $r17
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r5 = $r17 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r18 = new org.apache.directory.server.kerberos.shared.keytab.Keytab >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r18.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r18.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r6 = $r18
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r6 = $r18 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z1 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z1 != 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r7 = staticinvoke <org.apache.directory.server.kerberos.shared.crypto.encryption.KerberosKeyFactory: java.util.Map getKerberosKeys(java.lang.String,java.lang.String,java.util.Set)>(r1, r2, r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r7 == null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if r3 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $b1 = virtualinvoke r3.<java.lang.Integer: byte byteValue()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : b0 = $b1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : b0 = $b1 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r19 = new org.apache.directory.shared.kerberos.KerberosTime
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r19 = new org.apache.directory.shared.kerberos.KerberosTime >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r19.<org.apache.directory.shared.kerberos.KerberosTime: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r19.<org.apache.directory.shared.kerberos.KerberosTime: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r8 = $r19
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r8 = $r19 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r20 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r20 = interfaceinvoke r7.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r9 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r9 = interfaceinvoke $r20.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r21 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r10 = (org.apache.directory.shared.kerberos.components.EncryptionKey) $r21
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : r10 = (org.apache.directory.shared.kerberos.components.EncryptionKey) $r21 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r22 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : $r22 = new org.apache.directory.server.kerberos.shared.keytab.KeytabEntry >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r22.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: void <init>(java.lang.String,int,org.apache.directory.shared.kerberos.KerberosTime,byte,org.apache.directory.shared.kerberos.components.EncryptionKey)>(r1, 1, r8, b0, r10)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : specialinvoke $r22.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: void <init>(java.lang.String,int,org.apache.directory.shared.kerberos.KerberosTime,byte,org.apache.directory.shared.kerberos.components.EncryptionKey)>(r1, 1, r8, b0, r10) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke r6.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : virtualinvoke r6.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : return r6
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.createKeytab : return r6 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r1 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r25 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r25 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = r25
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r10 = r25 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r11 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r11 = virtualinvoke r1.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r25.<java.util.ArrayList: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r3 = $r10
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r3 = $r10 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if r2 != null >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r26 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r26 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = r26
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r12 = r26 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r13 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r13 = virtualinvoke r2.<org.apache.directory.server.kerberos.shared.keytab.Keytab: java.util.List getEntries()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r13)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r4 = $r12
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r4 = $r12 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r27 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r27.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r27.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r5 = r27
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r5 = r27 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z0 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z2 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z4 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z4 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r15 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r15
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r7 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r15 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r8 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z5 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z5 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r16 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r9 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r16
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r9 = (org.apache.directory.server.kerberos.shared.keytab.KeytabEntry) $r16 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r17 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r17 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r18 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r18 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: java.lang.String getPrincipalName()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z6 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z6 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r19 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r19 = virtualinvoke r9.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = virtualinvoke $r19.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r20 = virtualinvoke $r19.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r21 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r21 = virtualinvoke r7.<org.apache.directory.server.kerberos.shared.keytab.KeytabEntry: org.apache.directory.shared.kerberos.components.EncryptionKey getKey()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r22 = virtualinvoke $r21.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $r22 = virtualinvoke $r21.<org.apache.directory.shared.kerberos.components.EncryptionKey: org.apache.directory.shared.kerberos.codec.types.EncryptionType getKeyType()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z7 = virtualinvoke $r20.<org.apache.directory.shared.kerberos.codec.types.EncryptionType: boolean equals(java.lang.Object)>($r22)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : $z7 = virtualinvoke $r20.<org.apache.directory.shared.kerberos.codec.types.EncryptionType: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z7 == 0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : if $z7 == 0 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r6.<java.util.Iterator: void remove()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r6.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : goto [?= $z5 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r3) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r4)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r4) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r28 = new org.apache.directory.server.kerberos.shared.keytab.Keytab >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : specialinvoke r28.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r24 = r28
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : r24 = r28 >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r24.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : virtualinvoke r24.<org.apache.directory.server.kerberos.shared.keytab.Keytab: void setEntries(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.mergeKeytabs : return r24
