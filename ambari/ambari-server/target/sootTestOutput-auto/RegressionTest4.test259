org.apache.ambari.server.utils.ShellCommandUtil.setFileGroup : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.utils.ShellCommandUtil.setFileGroup : $r6 = <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.commons.logging.Log LOG>
org.apache.ambari.server.utils.ShellCommandUtil.setFileGroup : r2 = $r5
org.apache.ambari.server.utils.ShellCommandUtil.setFileGroup : $r3 = newarray (java.lang.String)[3]
org.apache.ambari.server.utils.ShellCommandUtil.setFileGroup : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX>
org.apache.ambari.server.utils.ShellCommandUtil.setFileGroup : $r9 = new org.apache.ambari.server.utils.ShellCommandUtil$Result
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r3[0] = "ambari-sudo.sh"
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if r1 == null goto $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i0 = lengthof r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : r14 = virtualinvoke r4.<java.lang.ProcessBuilder: java.lang.Process start()>()
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : if z0 == 0 goto r3 = r0
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $r12 = new java.lang.ProcessBuilder
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $z1 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean WINDOWS>
org.apache.ambari.server.utils.ShellCommandUtil.runCommand : $i2 = lengthof r0
