org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setKeyEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getText : $r1 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.lang.String text>
org.apache.ambari.server.security.credential.PrincipalKeyCredential.setKey : r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setOpen : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: boolean open> = z0
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setDefaultRealm : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm> = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setDefaultRealm(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setOpen(boolean)>(1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setAdministratorCredential(org.apache.ambari.server.security.credential.PrincipalKeyCredential)>(r1)
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r14 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("admin_server_host")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r9 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("executable_search_paths")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r4 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("encryption_types")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r11 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("kdc_create_attributes")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : $r15 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String getExecutable(java.lang.String)>("kadmin.local")
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.open : if r3 == null goto virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: void setKeyEncryptionTypes(java.util.Set)>(null)
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getKey : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] key>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getKeyEncryptionTypes : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.util.Set keyEncryptionTypes>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = virtualinvoke r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] getExecutableSearchPaths()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r4 = r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r2 != null goto r4 = r2
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : goto [?= (branch)]
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $r7 = new java.io.File
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r2 = <org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] DEFAULT_EXECUTABLE_SEARCH_PATHS>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : r3 = virtualinvoke r6.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : $z0 = virtualinvoke r6.<java.io.File: boolean canExecute()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutable : if r3 != null goto $r8 = r3
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : return r4
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.translateEncryptionTypes : $r3 = new java.util.HashSet
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r3 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: char[] getKey()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z1 = staticinvoke <org.apache.commons.lang.ArrayUtils: boolean isEmpty(char[])>(r3)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : if r1 != null goto r2 = virtualinvoke r1.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String getPrincipal()>()
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setAdministratorCredential : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: org.apache.ambari.server.security.credential.PrincipalKeyCredential administratorCredential> = r1
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setCreateAttributes : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String createAttributes> = r1
org.apache.ambari.server.security.credential.PrincipalKeyCredential.getPrincipal : $r1 = r0.<org.apache.ambari.server.security.credential.PrincipalKeyCredential: java.lang.String principal>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getExecutableSearchPaths : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths>
org.apache.ambari.server.state.stack.upgrade.StageWrapper.getParams : $r1 = r0.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.Map params>
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.getDefaultRealm : $r1 = r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String defaultRealm>
org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler.setAdminServerHost : r0.<org.apache.ambari.server.serveraction.kerberos.MITKerberosOperationHandler: java.lang.String adminServerHost> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r1 == null goto (branch)
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r2 = null
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : r0.<org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler: java.lang.String[] executableSearchPaths> = r1
org.apache.ambari.server.serveraction.kerberos.KerberosOperationHandler.setExecutableSearchPaths : if r2 != null goto $i2 = interfaceinvoke r2.<java.util.List: int size()>()
