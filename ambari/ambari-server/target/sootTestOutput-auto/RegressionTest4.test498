org.apache.ambari.server.topology.HostGroupImpl.getName : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.lang.String name>
org.apache.ambari.server.topology.HostGroupImpl.getComponents : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map components>
org.apache.ambari.server.topology.SettingFactory.getSetting : $r1 = new java.util.HashMap
org.apache.ambari.server.topology.SettingFactory.getSetting : return r3
org.apache.ambari.server.topology.SettingFactory.getSetting : $r11 = new org.apache.ambari.server.topology.Setting
org.apache.ambari.server.topology.SettingFactory.getSetting : if r0 == null goto return r3
org.apache.ambari.server.topology.HostGroupImpl.getStack : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: org.apache.ambari.server.controller.internal.Stack stack>
org.apache.ambari.server.topology.SecurityConfiguration.getType : $r1 = r0.<org.apache.ambari.server.topology.SecurityConfiguration: org.apache.ambari.server.state.SecurityType type>
org.apache.ambari.server.topology.Setting.getSettingValue : $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.topology.Setting.getSettingValue : $r2 = r0.<org.apache.ambari.server.topology.Setting: java.util.Map properties>
org.apache.ambari.server.topology.HostGroupImpl.getServices : $r1 = r0.<org.apache.ambari.server.topology.HostGroupImpl: java.util.Map componentsForService>
org.apache.ambari.server.topology.SecurityConfiguration.getDescriptor : $r1 = r0.<org.apache.ambari.server.topology.SecurityConfiguration: java.lang.String descriptor>
