<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<upgrade-config-changes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="upgrade-config.xsd">
  <services>
    <service name="HBASE">
      <component name="HBASE_MASTER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_3_4_0_hbase_remove_local_indexing">
            <type>hbase-site</type>
            <set key="phoenix.functions.allowUserDefinedFunctions" value="true"/>
            <transfer operation="delete" delete-key="hbase.master.loadbalancer.class"
                      if-key="hbase.master.loadbalancer.class"
                      if-type="hbase-site"
                      if-value="org.apache.phoenix.hbase.index.balancer.IndexLoadBalancer"/>
            <replace key="hbase.coprocessor.master.classes"
                     find="org.apache.phoenix.hbase.index.master.IndexMasterObserver"
                     replace-with=""/>
            <replace key="hbase.coprocessor.regionserver.classes"
                     find="org.apache.hadoop.hbase.regionserver.LocalIndexMerger"
                     replace-with=""/>

          </definition>
          <!-- These HBASE configs changed in HDP 2.3.4.0, so upgrades like HDP 2.2 to 2.4 still need them. -->
          <definition xsi:type="configure" id="hdp_2_4_0_0_hbase_remove_local_indexing">
            <type>hbase-site</type>
            <set key="phoenix.functions.allowUserDefinedFunctions" value="true"/>
            <transfer operation="delete" delete-key="hbase.master.loadbalancer.class"
                      if-key="hbase.master.loadbalancer.class"
                      if-type="hbase-site"
                      if-value="org.apache.phoenix.hbase.index.balancer.IndexLoadBalancer"/>
            <replace key="hbase.coprocessor.master.classes"
                     find="org.apache.phoenix.hbase.index.master.IndexMasterObserver"
                     replace-with="" />
            <replace key="hbase.coprocessor.regionserver.classes"
                     find="org.apache.hadoop.hbase.regionserver.LocalIndexMerger"
                     replace-with="" />

          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_hbase_audit_db">
            <type>ranger-hbase-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>

        </changes>
      </component>
    </service>

    <service name="TEZ">
      <component name="TEZ_CLIENT">
        <changes>
          <definition xsi:type="configure" id="hdp_2_3_0_0_tez_client_adjust_tez_lib_uris_property">
            <type>tez-site</type>
            <set key="tez.lib.uris" value="/hdp/apps/${hdp.version}/tez/tez.tar.gz"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_4_0_0_tez_client_adjust_tez_lib_uris_property">
            <type>tez-site</type>
            <set key="tez.lib.uris" value="/hdp/apps/${hdp.version}/tez/tez.tar.gz"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_5_0_0_tez_client_adjust_tez_lib_uris_property">
            <type>tez-site</type>
            <set key="tez.lib.uris" value="/hdp/apps/${hdp.version}/tez/tez.tar.gz"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="SQOOP">
      <component name="SQOOP">
        <changes>
          <!-- All of these configs are present in Atlas' application.properties file instead and then copied to the hook's atlas-application.properties file. -->
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_sqoop_atlas_configs">
            <type>sqoop-site</type>
            <transfer operation="delete" delete-key="atlas.cluster.name" />
          </definition>

          <!-- Add these configs if the cluster is Kerberized.
          Will only be written to the local file system if Atlas is present. -->
          <definition xsi:type="configure" id="hdp_2_5_0_0_add_sqoop_atlas_security_configs">
            <type>sqoop-atlas-application.properties</type>
            <set key="atlas.jaas.KafkaClient.option.useTicketCache" value="true" 
              if-type="cluster-env" if-key="security_enabled" if-value="true"/>

            <set key="atlas.jaas.KafkaClient.option.renewTicket" value="true" 
              if-type="cluster-env" if-key="security_enabled" if-value="true"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="HIVE">
      <component name="HIVE_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_hive_server_configure_authentication" summary="Removing unused properties for current hive authentication type">
            <type>hive-site</type>
            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.url" if-key="hive.server2.authentication" if-type="hive-site" if-value="NONE"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.baseDN" if-key="hive.server2.authentication" if-type="hive-site" if-value="NONE"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.pam.services" if-key="hive.server2.authentication" if-type="hive-site" if-value="NONE"/>
            <transfer operation="delete" delete-key="hive.server2.custom.authentication.class" if-key="hive.server2.authentication" if-type="hive-site" if-value="NONE"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.keytab" if-key="hive.server2.authentication" if-type="hive-site" if-value="NONE"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.principal" if-key="hive.server2.authentication" if-type="hive-site" if-value="NONE"/>

            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.keytab" if-key="hive.server2.authentication" if-type="hive-site" if-value="ldap"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.principal" if-key="hive.server2.authentication" if-type="hive-site" if-value="ldap"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.pam.services" if-key="hive.server2.authentication" if-type="hive-site" if-value="ldap"/>
            <transfer operation="delete" delete-key="hive.server2.custom.authentication.class" if-key="hive.server2.authentication" if-type="hive-site" if-value="ldap"/>

            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.url" if-key="hive.server2.authentication" if-type="hive-site" if-value="kerberos"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.baseDN" if-key="hive.server2.authentication" if-type="hive-site" if-value="kerberos"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.pam.services" if-key="hive.server2.authentication" if-type="hive-site" if-value="kerberos"/>
            <transfer operation="delete" delete-key="hive.server2.custom.authentication.class" if-key="hive.server2.authentication" if-type="hive-site" if-value="kerberos"/>

            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.url" if-key="hive.server2.authentication" if-type="hive-site" if-value="pam"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.baseDN" if-key="hive.server2.authentication" if-type="hive-site" if-value="pam"/>
            <transfer operation="delete" delete-key="hive.server2.custom.authentication.class" if-key="hive.server2.authentication" if-type="hive-site" if-value="pam"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.keytab" if-key="hive.server2.authentication" if-type="hive-site" if-value="pam"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.principal" if-key="hive.server2.authentication" if-type="hive-site" if-value="pam"/>

            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.url" if-key="hive.server2.authentication" if-type="hive-site" if-value="custom"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.ldap.baseDN" if-key="hive.server2.authentication" if-type="hive-site" if-value="custom"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.pam.services" if-key="hive.server2.authentication" if-type="hive-site" if-value="custom"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.keytab" if-key="hive.server2.authentication" if-type="hive-site" if-value="custom"/>
            <transfer operation="delete" delete-key="hive.server2.authentication.kerberos.principal" if-key="hive.server2.authentication" if-type="hive-site" if-value="custom"/>
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_hive_audit_db">
            <type>ranger-hive-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>

          <!-- All of these configs are present in Atlas' application.properties file instead and then copied to the hook's atlas-application.properties file. -->
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_hive_atlas_configs">
            <type>hive-site</type>
            <transfer operation="delete" delete-key="atlas.rest.address" />
            <transfer operation="delete" delete-key="atlas.hook.hive.minThreads" />
            <transfer operation="delete" delete-key="atlas.hook.hive.maxThreads" />
          </definition>

        </changes>
      </component>
      <component name="WEBHCAT_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_webhcat_server_update_configuration_paths" summary="Updating Configuration Paths">
            <type>webhcat-site</type>
            <replace key="templeton.jar" find="/usr/hdp/current/hive-webhcat" replace-with="/usr/hdp/${hdp.version}/hive"/>
            <replace key="templeton.libjars" find="/usr/hdp/current/zookeeper-client" replace-with="/usr/hdp/${hdp.version}/zookeeper,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar"/>
            <replace key="templeton.hadoop" find="/usr/hdp/current/hadoop-client" replace-with="/usr/hdp/${hdp.version}/hadoop"/>
            <replace key="templeton.hcat" find="/usr/hdp/current/hive-client" replace-with="/usr/hdp/${hdp.version}/hive"/>
            <set key="templeton.hive.extra.files" value="/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib"/>
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_webhcat_server_update_configuration_paths" summary="Updating Configuration Paths">
            <type>webhcat-site</type>
            <replace key="templeton.jar" find="/usr/hdp/current/hive-webhcat" replace-with="/usr/hdp/${hdp.version}/hive"/>
            <replace key="templeton.libjars" find="/usr/hdp/current/zookeeper-client" replace-with="/usr/hdp/${hdp.version}/zookeeper,/usr/hdp/${hdp.version}/hive/lib/hive-common.jar"/>
            <replace key="templeton.hadoop" find="/usr/hdp/current/hadoop-client" replace-with="/usr/hdp/${hdp.version}/hadoop"/>
            <replace key="templeton.hcat" find="/usr/hdp/current/hive-client" replace-with="/usr/hdp/${hdp.version}/hive"/>
            <set key="templeton.hive.extra.files" value="/usr/hdp/${hdp.version}/tez/conf/tez-site.xml,/usr/hdp/${hdp.version}/tez,/usr/hdp/${hdp.version}/tez/lib"/>
          </definition>
        </changes>
      </component>
    </service>

    <service name="RANGER">
      <component name="RANGER_ADMIN">
        <changes>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_audit_db_flag">
            <type>ranger-env</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db"/>
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_audit_db_admin_properties">
            <type>admin-properties</type>
            <transfer operation="delete" delete-key="audit_db_name" />
            <transfer operation="delete" delete-key="audit_db_user" />
            <transfer operation="delete" delete-key="audit_db_password" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_audit_db_ranger_admin_site">
            <type>ranger-admin-site</type>
            <set key="ranger.audit.source.type" value="solr"/>
            <transfer operation="delete" delete-key="ranger.jpa.audit.jdbc.driver" />
            <transfer operation="delete" delete-key="ranger.jpa.audit.jdbc.url" />
            <transfer operation="delete" delete-key="ranger.jpa.audit.jdbc.user" />
            <transfer operation="delete" delete-key="ranger.jpa.audit.jdbc.password" />
            <transfer operation="delete" delete-key="ranger.jpa.audit.jdbc.credential.alias" />
            <transfer operation="delete" delete-key="ranger.jpa.audit.jdbc.dialect" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_sso_property">
            <type>ranger-admin-site</type>
            <transfer operation="delete" delete-key="ranger.sso.cookiename" />
            <transfer operation="delete" delete-key="ranger.sso.query.param.originalurl" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_set_external_solrCloud_flag">
            <type>ranger-env</type>            
            <set key="is_external_solrCloud_enabled" value="true" 
              if-type="ranger-env" if-key="is_solrCloud_enabled" if-value="true"/>
          </definition>

        </changes>
      </component>
    </service>

    <service name="RANGER_KMS">
      <component name="RANGER_KMS_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_kms_audit_db">
            <type>ranger-kms-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="HDFS">
      <component name="NAMENODE">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_namenode_ha_adjustments">
            <type>hdfs-site</type>
            <transfer operation="delete" delete-key="dfs.namenode.rpc-address" if-type="hdfs-site" if-key="dfs.nameservices" if-key-state="present"/>
            <transfer operation="delete" delete-key="dfs.namenode.http-address" if-type="hdfs-site" if-key="dfs.nameservices" if-key-state="present"/>
            <transfer operation="delete" delete-key="dfs.namenode.https-address" if-type="hdfs-site" if-key="dfs.nameservices" if-key-state="present"/>
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_hdfs_audit_db">
            <type>ranger-hdfs-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="SPARK">
      <component name="SPARK_JOBHISTORYSERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_spark_jobhistoryserver">
            <type>spark-defaults</type>
            <transfer operation="delete" delete-key="spark.yarn.services" />
            <transfer operation="delete" delete-key="spark.driver.extraJavaOptions" />
            <transfer operation="delete" delete-key="spark.yarn.am.extraJavaOptions" />
            <set key="spark.history.provider" value="org.apache.spark.deploy.history.FsHistoryProvider"/>
          </definition>
          <definition xsi:type="configure" id="hdp_2_4_0_0_spark_java_opts">
            <type>spark-javaopts-properties</type>
            <transfer operation="delete" delete-key="content" />
          </definition>
        </changes>
      </component>
      <component name="SPARK_CLIENT">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_remove_spark_properties_extraJavaOptions">
            <type>spark-defaults</type>
            <transfer operation="delete" delete-key="spark.driver.extraJavaOptions" />
            <transfer operation="delete" delete-key="spark.yarn.am.extraJavaOptions" />
          </definition>
          <definition xsi:type="configure" id="hdp_2_4_0_0_spark_java_opts">
            <type>spark-javaopts-properties</type>
            <transfer operation="delete" delete-key="content" />
          </definition>
        </changes>
      </component>
      <component name="SPARK_THRIFTSERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_spark_thriftserver">
            <type>spark-thrift-sparkconf</type>
            <transfer operation="delete" delete-key="spark.yarn.executor.memoryOverhead" />
            <transfer operation="delete" delete-key="spark.yarn.driver.memoryOverhead" />
            <transfer operation="delete" delete-key="spark.yarn.scheduler.heartbeat.interval-ms" />
            <transfer operation="delete" delete-key="spark.yarn.max.executor.failures" />
            <transfer operation="delete" delete-key="spark.yarn.containerLauncherMaxThreads" />
            <transfer operation="delete" delete-key="spark.yarn.submit.file.replication" />
            <transfer operation="delete" delete-key="spark.yarn.preserve.staging.files" />
            <transfer operation="delete" delete-key="spark.yarn.max.executor.failures" />
            <transfer operation="delete" delete-key="spark.driver.extraJavaOptions" />
            <transfer operation="delete" delete-key="spark.yarn.am.extraJavaOptions" />
          </definition>
          <definition xsi:type="configure" id="hdp_2_4_0_0_spark_java_opts">
            <type>spark-javaopts-properties</type>
            <transfer operation="delete" delete-key="content" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="OOZIE">
      <component name="OOZIE_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_4_0_0_oozie_remove_service_classes" summary="Updating Oozie Service classes">
            <type>oozie-site</type>
            <replace key="oozie.services" find="org.apache.oozie.service.CoordinatorStoreService," replace-with="" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="KAFKA">
      <component name="KAFKA_BROKER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_kafka_audit_db">
            <type>ranger-kafka-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>
          <definition xsi:type="configure" id="hdp_2_5_0_0_add_protocol_compatibility">
            <type>kafka-broker</type>
            <set key="inter.broker.protocol.version" value="0.9.0.0" />
            <set key="log.message.format.version" value="0.9.0.0" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="YARN">
      <component name="RESOURCEMANAGER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_yarn_audit_db">
            <type>ranger-yarn-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="STORM">
      <component name="NIMBUS">
        <changes>
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_storm_audit_db">
            <type>ranger-storm-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_upgrade_storm_1.0">
            <type>storm-site</type>
            <replace key="_storm.thrift.nonsecure.transport" find="backtype.storm.security.auth.SimpleTransportPlugin"
                     replace-with="org.apache.storm.security.auth.SimpleTransportPlugin" />
            <replace key="_storm.thrift.secure.transport" find="backtype.storm.security.auth.KerberosSaslTransportPlugin"
                     replace-with="org.apache.storm.security.auth.KerberosSaslTransportPlugin" />
            <replace key="storm.messaging.transport" find="backtype.storm.messaging.netty.Context"
                     replace-with="org.apache.storm.messaging.netty.Context" />
            <replace key="nimbus.topology.validator" find="backtype.storm.nimbus.DefaultTopologyValidator"
                     replace-with="org.apache.storm.nimbus.DefaultTopologyValidator" />
            <replace key="topology.spout.wait.strategy" find="backtype.storm.spout.SleepSpoutWaitStrategy"
                     replace-with="org.apache.storm.spout.SleepSpoutWaitStrategy" />
            <replace key="topology.kryo.factory" find="backtype.storm.serialization.DefaultKryoFactory"
                     replace-with="org.apache.storm.serialization.DefaultKryoFactory" />
            <replace key="topology.tuple.serializer" find="backtype.storm.serialization.types.ListDelegateSerializer"
                     replace-with="org.apache.storm.serialization.types.ListDelegateSerializer" />
            <replace key="nimbus.authorizer" find="backtype.storm.security.auth.authorizer.SimpleACLAuthorizer"
                     replace-with="org.apache.storm.security.auth.authorizer.SimpleACLAuthorizer" />
            <replace key="drpc.authorizer" find="backtype.storm.security.auth.authorizer.DRPCSimpleACLAuthorizer"
                     replace-with="org.apache.storm.security.auth.authorizer.DRPCSimpleACLAuthorizer" />
            <replace key="ui.filter" find="backtype.storm.security.auth.KerberosPrincipalToLocal"
                     replace-with="org.apache.storm.security.auth.KerberosPrincipalToLocal" />
            <replace key="storm.principal.tolocal" find="backtype.storm.security.auth.KerberosPrincipalToLocal"
                     replace-with="org.apache.storm.security.auth.KerberosPrincipalToLocal" />
            <set key="client.jartransformer.class" value="org.apache.storm.hack.StormShadeTransformer" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_5_0_0_add_storm_security_configs">
            <type>storm-site</type>
            <set key="nimbus.impersonation.authorizer" value="org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer" if-type="cluster-env" if-key="security_enabled" if-value="true" />
            <set key="nimbus.impersonation.acl" value="{ {{storm_bare_jaas_principal}} : {hosts: ['*'], groups: ['*']}}" if-type="cluster-env" if-key="security_enabled" if-value="true" />
            <set key="nimbus.admins" value="['{{storm_bare_jaas_principal}}', '{{ambari_bare_jaas_principal}}']" if-type="cluster-env" if-key="security_enabled" if-value="true" />
          </definition>

          <definition xsi:type="configure" id="hdp_2_3_0_0_remove_empty_storm_topology_submission_notifier_plugin_class"
                      summary="Removing empty storm.topology.submission.notifier.plugin.class property">
            <type>storm-site</type>
            <transfer operation="delete" delete-key="storm.topology.submission.notifier.plugin.class" if-key="storm.topology.submission.notifier.plugin.class"
                      if-type="storm-site" if-value=" "/>
          </definition>

          <!-- All of these configs are present in Atlas' application.properties file instead and then copied to the hook's atlas-application.properties file. -->
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_storm_atlas_configs">
            <type>storm-site</type>
            <transfer operation="delete" delete-key="atlas.cluster.name" />
          </definition>
          <definition xsi:type="configure" id="increase_storm_zookeeper_timeouts"
                      summary="Increase storm.zookeeper.session.timeout and storm.zookeeper.connection.timeout property">
            <type>storm-site</type>
            <set key="storm.zookeeper.session.timeout"
                 value="30000"
                 if-key="storm.zookeeper.session.timeout"
                 if-type="storm-site"
                 if-value="20000" />
            <set key="storm.zookeeper.connection.timeout"
                 value="30000"
                 if-key="storm.zookeeper.connection.timeout"
                 if-type="storm-site"
                 if-value="15000" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="KNOX">
      <component name="KNOX_GATEWAY">
        <changes>
          <definition xsi:type="configure" id="hdp_2_5_0_0_remove_ranger_knox_audit_db">
            <type>ranger-knox-audit</type>
            <transfer operation="delete" delete-key="xasecure.audit.destination.db" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.url" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.user" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.password" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.jdbc.driver" />
            <transfer operation="delete" delete-key="xasecure.audit.credential.provider.file" />
            <transfer operation="delete" delete-key="xasecure.audit.destination.db.batch.filespool.dir" />
          </definition>
        </changes>
      </component>
    </service>

    <service name="FALCON">
      <component name="FALCON_SERVER">
        <changes>
          <definition xsi:type="configure" id="hdp_2_5_0_0_falcon_server_adjust_services_property">
            <type>falcon-startup.properties</type>
            <set key="*.application.services" value="org.apache.falcon.security.AuthenticationInitializationService, org.apache.falcon.workflow.WorkflowJobEndNotificationService, org.apache.falcon.service.ProcessSubscriberService, org.apache.falcon.extensions.ExtensionService, org.apache.falcon.service.LifecyclePolicyMap, org.apache.falcon.entity.store.ConfigurationStore, org.apache.falcon.rerun.service.RetryService, org.apache.falcon.rerun.service.LateRunService, org.apache.falcon.service.LogCleanupService, org.apache.falcon.metadata.MetadataMappingService{{atlas_application_class_addition}}"/>
          </definition>
        </changes>
      </component>
    </service>
  </services>
</upgrade-config-changes>
