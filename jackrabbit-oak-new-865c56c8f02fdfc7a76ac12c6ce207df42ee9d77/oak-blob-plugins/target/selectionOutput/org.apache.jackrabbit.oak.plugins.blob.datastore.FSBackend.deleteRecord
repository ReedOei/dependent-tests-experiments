org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r5)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : entermonitor r0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : entermonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : entermonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : throw $r13
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $z1 = virtualinvoke r2.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : return
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $z1 = virtualinvoke r2.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $z1 = virtualinvoke r2.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void deleteEmptyParentDirs(java.io.File)>(r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r8 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r8 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r7 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r8 = <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete file ")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete file ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete file ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r12)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void deleteEmptyParentDirs(java.io.File)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : goto [?= exitmonitor r0]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: void deleteEmptyParentDirs(java.io.File)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : goto [?= exitmonitor r0] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : exitmonitor r0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : goto [?= exitmonitor r0] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.deleteRecord : $r13 := @caughtexception
