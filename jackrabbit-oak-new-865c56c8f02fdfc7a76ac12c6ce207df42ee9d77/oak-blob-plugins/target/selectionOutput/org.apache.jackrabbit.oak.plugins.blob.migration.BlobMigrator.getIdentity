org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : r3 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.lang.String getContentIdentity()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : if r3 != null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : if r3 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : if r3 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : return r3
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : $r2 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : r3 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String shaHex(java.io.InputStream)>($r2)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : r3 = staticinvoke <org.apache.commons.codec.digest.DigestUtils: java.lang.String shaHex(java.io.InputStream)>($r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.getIdentity : return r3
