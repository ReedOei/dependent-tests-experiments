org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r5 = new java.util.ArrayList >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir>
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r8 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r8 = virtualinvoke $r7.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r6, $r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r6, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : return $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : r4 = (java.io.File) $r10
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : r4 = (java.io.File) $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $z1 = virtualinvoke r4.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $z1 = virtualinvoke r4.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r11 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r11 = new org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r12 = new org.apache.jackrabbit.core.data.DataIdentifier
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r12 = new org.apache.jackrabbit.core.data.DataIdentifier >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r13 = virtualinvoke r4.<java.io.File: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : $r13 = virtualinvoke r4.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : specialinvoke $r12.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r13)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : specialinvoke $r12.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : specialinvoke $r11.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend,org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend,org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r0, r0, $r12, r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : specialinvoke $r11.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend$FSBackendDataRecord: void <init>(org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend,org.apache.jackrabbit.oak.spi.blob.AbstractSharedBackend,org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r0, r0, $r12, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r11)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
