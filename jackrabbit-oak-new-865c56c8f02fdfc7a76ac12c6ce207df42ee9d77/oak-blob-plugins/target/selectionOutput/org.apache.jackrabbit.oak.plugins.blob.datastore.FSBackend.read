org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File fsPathDir> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend: java.io.File getFile(org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r1, $r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r5 = new org.apache.jackrabbit.core.data.LazyFileInputStream
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r5 = new org.apache.jackrabbit.core.data.LazyFileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r5.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>(r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r5 = new org.apache.jackrabbit.core.data.LazyFileInputStream >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r6 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r7 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r8 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error opening input stream of ")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error opening input stream of ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r10 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r7.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r7.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : throw $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r5.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : return $r5
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : specialinvoke $r5.<org.apache.jackrabbit.core.data.LazyFileInputStream: void <init>(java.io.File)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.read : $r6 := @caughtexception
