org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : r2 = virtualinvoke r0.<org.apache.jackrabbit.core.data.DataIdentifier: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r3 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r3 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, 2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r5 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r5 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(2, 4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(2, 4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r7 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r7 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(4, 6)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(4, 6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r9 = new java.io.File
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : $r9 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.getFile : return $r9
