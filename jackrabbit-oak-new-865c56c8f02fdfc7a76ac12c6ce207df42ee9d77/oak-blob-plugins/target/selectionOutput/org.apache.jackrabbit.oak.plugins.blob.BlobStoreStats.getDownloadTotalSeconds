org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $r2 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: java.util.concurrent.TimeUnit recordedTimeUnit> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats downloadTimeSeries>
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $r1 = r0.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats: org.apache.jackrabbit.oak.stats.MeterStats downloadTimeSeries> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>()
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $l0 = interfaceinvoke $r1.<org.apache.jackrabbit.oak.stats.MeterStats: long getCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l0)
org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : $l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.BlobStoreStats.getDownloadTotalSeconds : return $l1
