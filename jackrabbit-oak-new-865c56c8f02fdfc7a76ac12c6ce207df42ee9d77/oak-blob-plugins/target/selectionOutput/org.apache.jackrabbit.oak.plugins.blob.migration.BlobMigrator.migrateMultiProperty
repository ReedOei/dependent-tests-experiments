org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r10 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r10)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r11 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r2 = (java.lang.Iterable) $r11
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r2 = (java.lang.Iterable) $r11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r12 = new java.util.ArrayList
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r12 = new java.util.ArrayList >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r13 = new org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r13 = new org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r14 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r14 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: void <init>(org.apache.jackrabbit.oak.api.Type)>($r14)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: void <init>(org.apache.jackrabbit.oak.api.Type)>($r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder assignFrom(org.apache.jackrabbit.oak.api.PropertyState)>(r1)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder assignFrom(org.apache.jackrabbit.oak.api.PropertyState)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : z4 = 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : z4 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r5 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r5 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if z4 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder setValues(java.lang.Iterable)>($r12)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if z4 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : return null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder setValues(java.lang.Iterable)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r17 = virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.api.PropertyState getPropertyState()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r17 = virtualinvoke $r13.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.api.PropertyState getPropertyState()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : return $r17
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r18 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r6 = (org.apache.jackrabbit.oak.api.Blob) $r18
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r6 = (org.apache.jackrabbit.oak.api.Blob) $r18 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r7 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String getIdentity(org.apache.jackrabbit.oak.api.Blob)>(r6)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r7 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String getIdentity(org.apache.jackrabbit.oak.api.Blob)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $z1 = interfaceinvoke $r19.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: boolean isMigrated(java.lang.String)>(r7)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $z1 = interfaceinvoke $r19.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: boolean isMigrated(java.lang.String)>(r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r24 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r20 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r21 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r21 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r8 = interfaceinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: java.lang.String writeBlob(java.io.InputStream)>($r21)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : r8 = interfaceinvoke $r20.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: java.lang.String writeBlob(java.io.InputStream)>($r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r22 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r22 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r23 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r22.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r23, r8)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r22.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r23, r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r22)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : z4 = 1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : z4 = 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r24 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r25 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : $r25 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r24.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r25, r7)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : specialinvoke $r24.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r25, r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r24)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateMultiProperty : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
