org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r6 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Scheduling pending uploads")
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Scheduling pending uploads") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: void movePendingUploadsToStaging(java.io.File,java.io.File,boolean)>(r1, r2, 1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: void movePendingUploadsToStaging(java.io.File,java.io.File,boolean)>(r1, r2, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r7 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r7 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File uploadCacheSpace>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File uploadCacheSpace> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r9 = virtualinvoke $r7.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r8)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r9 = virtualinvoke $r7.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r10 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$3
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r10 = new org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$3 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : specialinvoke $r10.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$3: void <init>(org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache)>(r0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : specialinvoke $r10.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache$3: void <init>(org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r11 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r10)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r11 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : r3 = virtualinvoke $r11.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : r3 = virtualinvoke $r11.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : i0 = 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : i0 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r12 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r12 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Scheduled [{}] pending uploads", $r13)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Scheduled [{}] pending uploads", $r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : return
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : r4 = (java.io.File) $r14
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : r4 = (java.io.File) $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r15 = virtualinvoke r4.<java.io.File: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r15 = virtualinvoke r4.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : r5 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.base.Optional putOptionalDisregardingSize(java.lang.String,java.io.File,boolean)>($r15, r4, 1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : r5 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.base.Optional putOptionalDisregardingSize(java.lang.String,java.io.File,boolean)>($r15, r4, 1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $z1 = virtualinvoke r5.<com.google.common.base.Optional: boolean isPresent()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $z1 = virtualinvoke r5.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : i0 = i0 + 1
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r16 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r16 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r17 = virtualinvoke r4.<java.io.File: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $r17 = virtualinvoke r4.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("File [{}] not setup for upload", $r17)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : interfaceinvoke $r16.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("File [{}] not setup for upload", $r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : i0 = i0 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.build : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
