org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r8 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r3 = (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry) $r8
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r3 = (org.apache.jackrabbit.oak.spi.state.ChildNodeEntry) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r4 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r4 = interfaceinvoke r3.<org.apache.jackrabbit.oak.spi.state.ChildNodeEntry: org.apache.jackrabbit.oak.spi.state.NodeState getNodeState()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r9 = interfaceinvoke r4.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r9 = interfaceinvoke r4.<org.apache.jackrabbit.oak.spi.state.NodeState: java.lang.Iterable getProperties()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r5 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r5 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : return
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r10 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r6 = (org.apache.jackrabbit.oak.api.PropertyState) $r10
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r6 = (org.apache.jackrabbit.oak.api.PropertyState) $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r11 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r11 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r12 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r12 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $r11 != $r12
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $r11 != $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r21 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.api.PropertyState migrateProperty(org.apache.jackrabbit.oak.api.PropertyState)>(r6)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $r11 != $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r13 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r13 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.PropertyState: org.apache.jackrabbit.oak.api.Type getType()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r14 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r14 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARIES> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $r13 != $r14
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $r13 != $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r21 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.api.PropertyState migrateMultiProperty(org.apache.jackrabbit.oak.api.PropertyState)>(r6)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $r13 != $r14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r21 = null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r21 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if r21 == null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if r21 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r7 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: org.apache.jackrabbit.oak.spi.state.NodeBuilder getBuilder(org.apache.jackrabbit.oak.spi.state.NodeBuilder)>(r1)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if r21 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r7 = virtualinvoke r2.<org.apache.jackrabbit.oak.plugins.blob.migration.DepthFirstNodeIterator: org.apache.jackrabbit.oak.spi.state.NodeBuilder getBuilder(org.apache.jackrabbit.oak.spi.state.NodeBuilder)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $z1 = interfaceinvoke r7.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $z1 = interfaceinvoke r7.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $z1 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : interfaceinvoke r7.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(org.apache.jackrabbit.oak.api.PropertyState)>(r21)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if $z1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r16 = <org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r16 = <org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String lastPath>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String lastPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Can\'t migrate blobs for a non-existing node: {}", $r15)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Can\'t migrate blobs for a non-existing node: {}", $r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : interfaceinvoke r7.<org.apache.jackrabbit.oak.spi.state.NodeBuilder: org.apache.jackrabbit.oak.spi.state.NodeBuilder setProperty(org.apache.jackrabbit.oak.api.PropertyState)>(r21) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $i0 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $i1 = $i0 + 1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $i1 = $i0 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes> = $i1
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: int migratedNodes> = $i1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r18 = <org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r18 = <org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String lastPath>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String lastPath> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r20 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : $r20 = interfaceinvoke r6.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Migrated property {}/{}", $r19, $r20)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Migrated property {}/{}", $r19, $r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r21 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.api.PropertyState migrateMultiProperty(org.apache.jackrabbit.oak.api.PropertyState)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if r21 == null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : r21 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.api.PropertyState migrateProperty(org.apache.jackrabbit.oak.api.PropertyState)>(r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateNode : if r21 == null
