org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r5 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r6 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r6 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r8 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r8 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r7, $r8)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r7, $r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : return
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : r4 = (java.io.File) $r10
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : r4 = (java.io.File) $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z1 = virtualinvoke r4.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z1 = virtualinvoke r4.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z2 = virtualinvoke r4.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $z2 = virtualinvoke r4.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z2 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r12 = <org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : if $z2 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r12 = <org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r11 = newarray (java.lang.Object)[1]
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r13 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r13 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r11[0] = $r13
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : $r11[0] = $r13 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Failed to delete root record {} ", $r11)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Failed to delete root record {} ", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.deleteAllMetadataRecords : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
