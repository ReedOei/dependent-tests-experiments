org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cacheSize") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : l0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: long toLong(java.lang.Object,long)>($r6, 0L)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : l0 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: long toLong(java.lang.Object,long)>($r6, 0L) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $b1 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $b1 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("OakFileDataStore initialized")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("OakFileDataStore initialized") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r8 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r8 = new org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : return $r8
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r9 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r9, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r3 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r9, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "Cannot create FileDataStoreService with caching. [{path}] property not configured.")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r3, "Cannot create FileDataStoreService with caching. [{path}] property not configured.") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("path")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("path") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cacheSize")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cacheSize") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fsBackendPath", r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fsBackendPath", r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cacheSize", $r14)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cacheSize", $r14) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cachePath")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r16 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cachePath") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r4 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r16, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : r4 = staticinvoke <org.apache.jackrabbit.oak.commons.PropertiesUtil: java.lang.String toString(java.lang.Object,java.lang.String)>($r16, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if r4 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cachePath")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : if r4 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r17 = new java.util.Properties
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r17 = new java.util.Properties >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r17.<java.util.Properties: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r17.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : virtualinvoke $r17.<java.util.Properties: void putAll(java.util.Map)>(r2)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : virtualinvoke $r17.<java.util.Properties: void putAll(java.util.Map)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r19 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r18 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r18 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing with properties ")
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initializing with properties ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r22)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String)>($r22) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r23 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.apache.jackrabbit.core.data.DataStore getCachingDataStore(java.util.Properties,org.osgi.service.component.ComponentContext)>($r17, r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r23 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService: org.apache.jackrabbit.core.data.DataStore getCachingDataStore(java.util.Properties,org.osgi.service.component.ComponentContext)>($r17, r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : return $r23
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>("cachePath") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("path", r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FileDataStoreService.createDataStore : $r17 = new java.util.Properties
