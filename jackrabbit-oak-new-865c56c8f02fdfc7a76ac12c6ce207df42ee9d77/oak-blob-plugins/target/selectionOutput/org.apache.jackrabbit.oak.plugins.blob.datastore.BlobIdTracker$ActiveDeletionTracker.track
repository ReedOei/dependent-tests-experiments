org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r3 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r4 = newarray (java.io.File)[1]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : throw $r9
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r4 = newarray (java.io.File)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r4[0] = r1
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r4 = newarray (java.io.File)[1] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r4[0] = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r4[0] = r1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void append(java.util.List,java.io.File,boolean)>($r5, $r6, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void append(java.util.List,java.io.File,boolean)>($r5, $r6, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void append(java.util.List,java.io.File,boolean)>($r5, $r6, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>($r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r7 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: void sort(java.io.File)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r9 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : virtualinvoke $r8.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.track : return
