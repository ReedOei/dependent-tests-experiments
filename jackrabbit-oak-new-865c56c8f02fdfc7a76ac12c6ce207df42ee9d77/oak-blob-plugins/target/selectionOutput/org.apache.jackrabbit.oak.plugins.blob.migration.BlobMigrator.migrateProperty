org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r7 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r7)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r8 = interfaceinvoke r1.<org.apache.jackrabbit.oak.api.PropertyState: java.lang.Object getValue(org.apache.jackrabbit.oak.api.Type)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : r2 = (org.apache.jackrabbit.oak.api.Blob) $r8
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : r2 = (org.apache.jackrabbit.oak.api.Blob) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : r3 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String getIdentity(org.apache.jackrabbit.oak.api.Blob)>(r2)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : r3 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: java.lang.String getIdentity(org.apache.jackrabbit.oak.api.Blob)>(r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $z0 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: boolean isMigrated(java.lang.String)>(r3)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $z0 = interfaceinvoke $r9.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: boolean isMigrated(java.lang.String)>(r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : return null
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r11 = interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r11 = interfaceinvoke r2.<org.apache.jackrabbit.oak.api.Blob: java.io.InputStream getNewStream()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : r4 = interfaceinvoke $r10.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: java.lang.String writeBlob(java.io.InputStream)>($r11)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : r4 = interfaceinvoke $r10.<org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore: java.lang.String writeBlob(java.io.InputStream)>($r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r12 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r12 = new org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator: org.apache.jackrabbit.oak.spi.blob.split.SplitBlobStore blobStore> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r13, r4)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : specialinvoke $r12.<org.apache.jackrabbit.oak.plugins.blob.BlobStoreBlob: void <init>(org.apache.jackrabbit.oak.spi.blob.BlobStore,java.lang.String)>($r13, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r14 = new org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r14 = new org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r15 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY>
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r15 = <org.apache.jackrabbit.oak.api.Type: org.apache.jackrabbit.oak.api.Type BINARY> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : specialinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: void <init>(org.apache.jackrabbit.oak.api.Type)>($r15)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : specialinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: void <init>(org.apache.jackrabbit.oak.api.Type)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder assignFrom(org.apache.jackrabbit.oak.api.PropertyState)>(r1)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder assignFrom(org.apache.jackrabbit.oak.api.PropertyState)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder setValue(java.lang.Object)>($r12)
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder setValue(java.lang.Object)>($r12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r18 = virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.api.PropertyState getPropertyState()>()
org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : $r18 = virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.memory.PropertyBuilder: org.apache.jackrabbit.oak.api.PropertyState getPropertyState()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.migration.BlobMigrator.migrateProperty : return $r18
