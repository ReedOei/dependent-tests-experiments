org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $z0 = virtualinvoke r0.<java.io.File: boolean setLastModified(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $z1 = virtualinvoke r0.<java.io.File: boolean canWrite()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : return
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $z1 = virtualinvoke r0.<java.io.File: boolean canWrite()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : return
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r2 = new java.io.RandomAccessFile
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r2 = new java.io.RandomAccessFile >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r0, "rw")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r2 = new java.io.RandomAccessFile >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r3 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r4 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r5 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An IO Exception occurred while trying to set the last modified date: ")
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("An IO Exception occurred while trying to set the last modified date: ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r7 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r7 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r4.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r4.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : throw $r4
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r0, "rw") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r0, "rw") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r3 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(r0, "rw") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $l1 = virtualinvoke $r2.<java.io.RandomAccessFile: long length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $l1 = virtualinvoke $r2.<java.io.RandomAccessFile: long length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void setLength(long)>($l1)
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $l1 = virtualinvoke $r2.<java.io.RandomAccessFile: long length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : throw $r10
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r3 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : throw $r10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r3 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void setLength(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r10 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void setLength(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r3 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void setLength(long)>($l1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : virtualinvoke $r2.<java.io.RandomAccessFile: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : $r3 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.FSBackend.setLastModified : return
