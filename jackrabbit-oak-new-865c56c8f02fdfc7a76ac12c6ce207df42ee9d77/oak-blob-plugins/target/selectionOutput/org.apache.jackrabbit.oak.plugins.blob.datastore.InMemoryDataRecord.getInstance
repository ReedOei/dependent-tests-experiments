org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $z0 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: boolean $assertionsDisabled> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z0 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $z1 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("0x")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z0 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = "0x"
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = "0x" >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = virtualinvoke $r1.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i0 = virtualinvoke $r1.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i0)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i13 = virtualinvoke r18.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i13 = virtualinvoke r18.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i1 = i13 % 2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i1 = i13 % 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i1 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r3 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $i1 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i14 = i13 / 2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i14 = i13 / 2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20 = newarray (byte)[i14]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20 = newarray (byte)[i14] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if i15 >= i14
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if i15 >= i14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i2 = 2 * i15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if i15 >= i14 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r2 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord getInstance(byte[])>(r20) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : return $r2
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i2 = 2 * i15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c3 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i2)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i2 = 2 * i15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to deserialize byte array ")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to deserialize byte array ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r0 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r0 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r15 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r15 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r16 = new java.lang.IllegalArgumentException
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r16 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : throw $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c3 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c3 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i7 = $i4 << 4
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i7 = $i4 << 4 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i5 = 2 * i15
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i5 = 2 * i15 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i6 = $i5 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i6 = $i5 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c8 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i6)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i6 = $i5 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c8 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $c8 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i10 = $i7 | $i9
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i9 = staticinvoke <java.lang.Character: int digit(char,int)>($c8, 16) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r11 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i10 = $i7 | $i9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $b11 = (byte) $i10
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $b11 = (byte) $i10 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20[i15] = $b11
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r20[i15] = $b11 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = i15 + 1
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : i15 = i15 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if i15 >= i14
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to deserialize byte array ")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unable to deserialize byte array ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , length=")
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , length=") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i12 = virtualinvoke r18.<java.lang.String: int length()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $i12 = virtualinvoke r18.<java.lang.String: int length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r8 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.slf4j.Logger log>
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r8 = <org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord: org.slf4j.Logger log> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>(r19)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : interfaceinvoke $r8.<org.slf4j.Logger: void debug(java.lang.String)>(r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r9 = new java.lang.IllegalArgumentException
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r9 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r19)
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : throw $r9
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $z1 = virtualinvoke r17.<java.lang.String: boolean startsWith(java.lang.String)>("0x") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r10 = new java.lang.AssertionError
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r1 = "0x"
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : $r10 = new java.lang.AssertionError >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r10.<java.lang.AssertionError: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : specialinvoke $r10.<java.lang.AssertionError: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.InMemoryDataRecord.getInstance : throw $r10
