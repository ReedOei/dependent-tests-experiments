org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r6 = new java.io.File >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r7 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r7 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore: java.lang.String getPath()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r8 = new java.util.ArrayList
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r8 = new java.util.ArrayList >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r10 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r10 = virtualinvoke $r6.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r11 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r9, $r10)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r11 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>($r9, $r10) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : return $r8
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : r5 = (java.io.File) $r12
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : r5 = (java.io.File) $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z1 = virtualinvoke r5.<java.io.File: boolean isDirectory()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z1 = virtualinvoke r5.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z1 != 0
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r13 = new org.apache.jackrabbit.core.data.FileDataRecord
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : if $z1 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r13 = new org.apache.jackrabbit.core.data.FileDataRecord >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r14 = new org.apache.jackrabbit.core.data.DataIdentifier
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r14 = new org.apache.jackrabbit.core.data.DataIdentifier >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r15 = virtualinvoke r5.<java.io.File: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : $r15 = virtualinvoke r5.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r14.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r15)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r14.<org.apache.jackrabbit.core.data.DataIdentifier: void <init>(java.lang.String)>($r15) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r13.<org.apache.jackrabbit.core.data.FileDataRecord: void <init>(org.apache.jackrabbit.core.data.AbstractDataStore,org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r0, $r14, r5)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : specialinvoke $r13.<org.apache.jackrabbit.core.data.FileDataRecord: void <init>(org.apache.jackrabbit.core.data.AbstractDataStore,org.apache.jackrabbit.core.data.DataIdentifier,java.io.File)>(r0, $r14, r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r13)
org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.OakFileDataStore.getAllMetadataRecords : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
