org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void markRequest()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r4.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void markRequest()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : l0 = virtualinvoke r2.<java.io.File: long length()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : l0 = virtualinvoke r2.<java.io.File: long length()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File uploadCacheSpace>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.io.File uploadCacheSpace> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUtils: java.io.File getFile(java.lang.String,java.io.File)>(r1, $r5)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : r3 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUtils: java.io.File getFile(java.lang.String,java.io.File)>(r1, $r5) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if z0 == 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r22 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l1 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l2 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: long size>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l2 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: long size> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $b3 = $l1 cmp $l2
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $b3 = $l1 cmp $l2 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $b3 > 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $b3 > 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap attic>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $b3 > 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l11 = neg l0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l11 = neg l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l11)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap map>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r29 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap map> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z6 = interfaceinvoke $r29.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z6 = interfaceinvoke $r29.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z6 != 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z6 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap attic>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z6 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : r30 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : r30 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke r30.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r7)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke r30.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>($r7) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r8 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>(r30)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r8 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>(r30) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : return $r8
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap attic> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z2 = interfaceinvoke $r9.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z2 = interfaceinvoke $r9.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z2 == 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : r30 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z2 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : return $r10
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap attic> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z3 = interfaceinvoke $r11.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z3 = interfaceinvoke $r11.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z3 != 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap map>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z3 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r12 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap map> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r13 = interfaceinvoke $r12.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r13 = interfaceinvoke $r12.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $r13 != null
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $r13 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z4 = virtualinvoke r3.<java.io.File: boolean exists()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $r13 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r28 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $r13 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r24 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Error moving file to staging", $r23)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r24.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Error moving file to staging", $r23) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r25 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r25 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l9 = neg l0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l9 = neg l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r25.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l9)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r25.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>($l9) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap map>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r26 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap map> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r26.<java.util.concurrent.ConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r26.<java.util.concurrent.ConcurrentMap: boolean remove(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : goto [?= $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()]
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : goto [?= $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r10 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional absent()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z4 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z4 != 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $z4 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r2, r3)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $z4 != 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void markHit()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void markHit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r14.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void markHit()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementCount()>()
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r15.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementCount()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementSize(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r16 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementSize(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r16.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementSize(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.cache.Weigher memWeigher>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r18 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.cache.Weigher memWeigher> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $i5 = interfaceinvoke $r17.<com.google.common.cache.Weigher: int weigh(java.lang.Object,java.lang.Object)>(r1, r3)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r17 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.cache.Weigher memWeigher> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $i5 = interfaceinvoke $r17.<com.google.common.cache.Weigher: int weigh(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l6 = (long) $i5
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $i5 = interfaceinvoke $r17.<com.google.common.cache.Weigher: int weigh(java.lang.Object,java.lang.Object)>(r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l6 = (long) $i5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r18.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementMemSize(long)>($l6)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l6 = (long) $i5 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r18.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementMemSize(long)>($l6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r19 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.util.concurrent.SettableFuture stage(java.lang.String,java.io.File)>(r1, r3)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : virtualinvoke $r18.<org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats: void incrementMemSize(long)>($l6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r19 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.util.concurrent.SettableFuture stage(java.lang.String,java.io.File)>(r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r20 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r19)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r19 = specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: com.google.common.util.concurrent.SettableFuture stage(java.lang.String,java.io.File)>(r1, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r20 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : return $r20
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r20 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional of(java.lang.Object)>($r19) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r2, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r21 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r2, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r21 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("File [{}] moved to staging cache [{}]", r2, r3)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r21 = <org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("File [{}] moved to staging cache [{}]", r2, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r14 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: org.apache.jackrabbit.oak.plugins.blob.StagingCacheStats cacheStats>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : interfaceinvoke $r21.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("File [{}] moved to staging cache [{}]", r2, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r23 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r22 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l7 = virtualinvoke $r22.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(l0)
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $l7 = virtualinvoke $r22.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(l0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $b8 = $l7 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $b8 = $l7 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $b8 >= 0
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $b8 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.atomic.AtomicLong currentSize>
org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : if $b8 >= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache.putOptionalDisregardingSize : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.UploadStagingCache: java.util.concurrent.ConcurrentMap attic>
