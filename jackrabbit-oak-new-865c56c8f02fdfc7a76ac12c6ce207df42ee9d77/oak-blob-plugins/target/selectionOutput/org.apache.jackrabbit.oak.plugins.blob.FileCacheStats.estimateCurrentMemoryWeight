org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r5 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCacheStats: com.google.common.cache.Weigher memWeigher> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : if $r5 != null
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : if $r5 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : return -1L
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : if $r5 != null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : l2 = 0L
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : l2 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCacheStats: com.google.common.cache.Cache cache>
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCacheStats: com.google.common.cache.Cache cache> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r7 = interfaceinvoke $r6.<com.google.common.cache.Cache: java.util.concurrent.ConcurrentMap asMap()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r7 = interfaceinvoke $r6.<com.google.common.cache.Cache: java.util.concurrent.ConcurrentMap asMap()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r8 = interfaceinvoke $r7.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r8 = interfaceinvoke $r7.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : return l2
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r2 = (java.util.Map$Entry) $r9
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r2 = (java.util.Map$Entry) $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r3 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : r4 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCacheStats: com.google.common.cache.Weigher memWeigher>
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCacheStats: com.google.common.cache.Weigher memWeigher> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $i0 = interfaceinvoke $r10.<com.google.common.cache.Weigher: int weigh(java.lang.Object,java.lang.Object)>(r3, r4)
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $i0 = interfaceinvoke $r10.<com.google.common.cache.Weigher: int weigh(java.lang.Object,java.lang.Object)>(r3, r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $l1 = (long) $i0
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $l1 = (long) $i0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : l2 = l2 + $l1
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : l2 = l2 + $l1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCacheStats.estimateCurrentMemoryWeight : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
