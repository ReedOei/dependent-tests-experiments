org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : l4 = 0L
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : l4 = 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : return l4
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r3 = (java.lang.String) $r8
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r3 = (java.lang.String) $r8 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r9 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: org.jclouds.blobstore.BlobStoreContext context> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r4 = interfaceinvoke $r9.<org.jclouds.blobstore.BlobStoreContext: org.jclouds.blobstore.BlobStore getBlobStore()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r4 = interfaceinvoke $r9.<org.jclouds.blobstore.BlobStoreContext: org.jclouds.blobstore.BlobStore getBlobStore()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r5 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: org.jclouds.blobstore.domain.BlobMetadata blobMetadata(java.lang.String,java.lang.String)>($r10, r3)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : r5 = interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: org.jclouds.blobstore.domain.BlobMetadata blobMetadata(java.lang.String,java.lang.String)>($r10, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $b1 = l0 cmp 0L
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $b1 = l0 cmp 0L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $b1 <= 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r12 = interfaceinvoke r5.<org.jclouds.blobstore.domain.StorageMetadata: java.util.Date getLastModified()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $b1 <= 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: void removeBlob(java.lang.String,java.lang.String)>($r11, r3)
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : interfaceinvoke r4.<org.jclouds.blobstore.BlobStore: void removeBlob(java.lang.String,java.lang.String)>($r11, r3) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : l4 = l4 + 1L
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : l4 = l4 + 1L >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r12 = interfaceinvoke r5.<org.jclouds.blobstore.domain.StorageMetadata: java.util.Date getLastModified()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $l2 = virtualinvoke $r12.<java.util.Date: long getTime()>()
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $l2 = virtualinvoke $r12.<java.util.Date: long getTime()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $b3 = $l2 cmp l0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $b3 = $l2 cmp l0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $b3 > 0
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $b3 > 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore: java.lang.String cloudContainer>
org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : if $b3 > 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.cloud.CloudBlobStore.countDeleteChunks : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
