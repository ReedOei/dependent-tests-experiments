org.apache.jackrabbit.oak.plugins.blob.FileCache.build : i0 = 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File parent>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r4 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File parent> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: void moveDownloadCache(java.io.File)>($r4)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : staticinvoke <org.apache.jackrabbit.oak.plugins.blob.DataStoreCacheUpgradeUtils: void moveDownloadCache(java.io.File)>($r4) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r5 = staticinvoke <com.google.common.io.Files: com.google.common.collect.TreeTraverser fileTreeTraverser()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File cacheRoot>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: java.io.File cacheRoot> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r7 = virtualinvoke $r5.<com.google.common.collect.TreeTraverser: com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object)>($r6) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r8 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$6
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r8 = new org.apache.jackrabbit.oak.plugins.blob.FileCache$6 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.FileCache$6: void <init>(org.apache.jackrabbit.oak.plugins.blob.FileCache)>(r0)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke $r8.<org.apache.jackrabbit.oak.plugins.blob.FileCache$6: void <init>(org.apache.jackrabbit.oak.plugins.blob.FileCache)>(r0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r9 = virtualinvoke $r7.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r8)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r9 = virtualinvoke $r7.<com.google.common.collect.FluentIterable: com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r1 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r1 = virtualinvoke $r9.<com.google.common.collect.FluentIterable: java.util.Iterator iterator()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $z0 == 0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : if $z0 == 0 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r10 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r10 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("[{}] files put in im-memory cache", $r11)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r10.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("[{}] files put in im-memory cache", $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : return i0
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r2 = (java.io.File) $r12
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r2 = (java.io.File) $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r13 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : r2 = (java.io.File) $r12 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r16 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Error in putting cached file in map[{}]", r2)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Error in putting cached file in map[{}]", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r13 = virtualinvoke r2.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void put(java.lang.String,java.io.File,boolean)>($r13, r2, 0)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r13 = virtualinvoke r2.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void put(java.lang.String,java.io.File,boolean)>($r13, r2, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : i0 = i0 + 1
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : specialinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.FileCache: void put(java.lang.String,java.io.File,boolean)>($r13, r2, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : i0 = i0 + 1 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r14 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG>
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r14 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Added file [{}} to in-memory cache", r2)
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r14 = <org.apache.jackrabbit.oak.plugins.blob.FileCache: org.slf4j.Logger LOG> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Added file [{}} to in-memory cache", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : goto [?= (branch)]
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : interfaceinvoke $r14.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("Added file [{}} to in-memory cache", r2) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : $r15 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.FileCache.build : goto [?= (branch)] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.FileCache.build : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
