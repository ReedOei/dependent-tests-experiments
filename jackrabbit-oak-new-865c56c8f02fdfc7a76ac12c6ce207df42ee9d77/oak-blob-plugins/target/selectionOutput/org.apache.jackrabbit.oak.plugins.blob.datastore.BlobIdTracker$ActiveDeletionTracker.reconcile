org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r6 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("toBeRemoved", null)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void lock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r15 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r15.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : throw $r14
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("toBeRemoved", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("removed", null)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("toBeRemoved", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("removed", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r17 = null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("removed", null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r17 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r17 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r7 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r7 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r7 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r17 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r17.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r17 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r18 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r17 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r18 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r18.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r18 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r18 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r2.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : throw $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : throw $r16 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r2.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : throw $r16
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r2.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r18.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r18.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r17.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r18 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r17.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : specialinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r1, $r8, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r8 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : specialinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r1, $r8, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r17 = $r7
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : specialinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r1, $r8, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r17 = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r2, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r17 = $r7 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r2, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r9 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r7, r2, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r9 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r9 = new org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : specialinvoke $r9.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r2, $r10, null)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r10 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : specialinvoke $r9.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r2, $r10, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = $r9
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : specialinvoke $r9.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void <init>(java.io.File,java.io.File,com.google.common.base.Function)>(r2, $r10, null) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r9, r3, 0)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : r18 = $r9 >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r9, r3, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r16 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r9, r3, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <org.apache.jackrabbit.oak.commons.FileIOUtils: int writeStrings(java.util.Iterator,java.io.File,boolean)>($r9, r3, 0) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r7 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r9 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r7 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r9.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r9 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r2.<java.io.File: boolean delete()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <com.google.common.io.Files: void move(java.io.File,java.io.File)>(r3, $r11)
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <com.google.common.io.Files: void move(java.io.File,java.io.File)>(r3, $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r12 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : staticinvoke <com.google.common.io.Files: void move(java.io.File,java.io.File)>(r3, $r11) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r12 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String)>("removed active delete records")
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r12 = staticinvoke <org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String)>("removed active delete records") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : interfaceinvoke $r12.<org.slf4j.Logger: void trace(java.lang.String)>("removed active delete records") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r13 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.util.concurrent.locks.ReentrantLock lock> >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>()
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r13.<java.util.concurrent.locks.ReentrantLock: void unlock()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : goto [?= return]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : goto [?= return] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : return
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r2.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : goto [?= $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>]
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke r2.<java.io.File: boolean delete()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : goto [?= $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : goto [?= $r11 = r0.<org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker: java.io.File delFile>] >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r9.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r9.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : if $r9 == null
org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : virtualinvoke $r7.<org.apache.jackrabbit.oak.commons.FileIOUtils$FileLineDifferenceIterator: void close()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.datastore.BlobIdTracker$ActiveDeletionTracker.reconcile : $r14 := @caughtexception
