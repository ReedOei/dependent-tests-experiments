org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : r2 = virtualinvoke r0.<org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore: org.apache.jackrabbit.core.data.DataRecord getRecordIfStored(org.apache.jackrabbit.core.data.DataIdentifier)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : if r2 == null
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : return r2
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : if r2 == null >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r3 = new org.apache.jackrabbit.core.data.DataStoreException
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r3 = new org.apache.jackrabbit.core.data.DataStoreException >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r4 = new java.lang.StringBuilder
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Record ")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Record ") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist")
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist") >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : specialinvoke $r3.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String)>($r8)
org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : specialinvoke $r3.<org.apache.jackrabbit.core.data.DataStoreException: void <init>(java.lang.String)>($r8) >>>>>>>> org.apache.jackrabbit.oak.plugins.blob.AbstractSharedCachingDataStore.getRecord : throw $r3
