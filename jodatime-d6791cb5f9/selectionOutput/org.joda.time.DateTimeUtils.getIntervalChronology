org.joda.time.DateTimeUtils.getIntervalChronology : if r0 != null >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>()
org.joda.time.DateTimeUtils.getIntervalChronology : if r0 != null >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : r1 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.Chronology getChronology()>()
org.joda.time.DateTimeUtils.getIntervalChronology : r1 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : if r1 != null
org.joda.time.DateTimeUtils.getIntervalChronology : if r1 != null >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>()
org.joda.time.DateTimeUtils.getIntervalChronology : if r1 != null >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : return r1
org.joda.time.DateTimeUtils.getIntervalChronology : $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>() >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : return $r3
org.joda.time.DateTimeUtils.getIntervalChronology : $r2 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance()>() >>>>>>>> org.joda.time.DateTimeUtils.getIntervalChronology : return $r2
