org.joda.time.field.BaseDateTimeField.addWrapField : i2 = r2[i0] >>>>>>>> org.joda.time.field.BaseDateTimeField.addWrapField : $i4 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMinimumValue(org.joda.time.ReadablePartial)>(r1)
org.joda.time.field.BaseDateTimeField.addWrapField : $i4 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMinimumValue(org.joda.time.ReadablePartial)>(r1) >>>>>>>> org.joda.time.field.BaseDateTimeField.addWrapField : $i5 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMaximumValue(org.joda.time.ReadablePartial)>(r1)
org.joda.time.field.BaseDateTimeField.addWrapField : $i5 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int getMaximumValue(org.joda.time.ReadablePartial)>(r1) >>>>>>>> org.joda.time.field.BaseDateTimeField.addWrapField : i3 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>(i2, i1, $i4, $i5)
org.joda.time.field.BaseDateTimeField.addWrapField : i3 = staticinvoke <org.joda.time.field.FieldUtils: int getWrappedValue(int,int,int,int)>(i2, i1, $i4, $i5) >>>>>>>> org.joda.time.field.BaseDateTimeField.addWrapField : $r3 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int[] set(org.joda.time.ReadablePartial,int,int[],int)>(r1, i0, r2, i3)
org.joda.time.field.BaseDateTimeField.addWrapField : $r3 = virtualinvoke r0.<org.joda.time.field.BaseDateTimeField: int[] set(org.joda.time.ReadablePartial,int,int[],int)>(r1, i0, r2, i3) >>>>>>>> org.joda.time.field.BaseDateTimeField.addWrapField : return $r3
