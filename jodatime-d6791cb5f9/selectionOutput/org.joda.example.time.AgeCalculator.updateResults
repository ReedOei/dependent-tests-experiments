org.joda.example.time.AgeCalculator.updateResults : r10 = $r9 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : i5 = 0
org.joda.example.time.AgeCalculator.updateResults : i5 = 0 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r11 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>
org.joda.example.time.AgeCalculator.updateResults : $r11 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $i6 = lengthof $r11
org.joda.example.time.AgeCalculator.updateResults : $i6 = lengthof $r11 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : if i5 >= $i6
org.joda.example.time.AgeCalculator.updateResults : if i5 >= $i6 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r12 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>
org.joda.example.time.AgeCalculator.updateResults : if i5 >= $i6 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : return
org.joda.example.time.AgeCalculator.updateResults : $r12 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r13 = $r12[i5]
org.joda.example.time.AgeCalculator.updateResults : $r13 = $r12[i5] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : virtualinvoke $r13.<org.joda.example.time.AgeCalculator$FieldSet: void setResultsText(java.lang.String)>("")
org.joda.example.time.AgeCalculator.updateResults : virtualinvoke $r13.<org.joda.example.time.AgeCalculator$FieldSet: void setResultsText(java.lang.String)>("") >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : i5 = i5 + 1
org.joda.example.time.AgeCalculator.updateResults : i5 = i5 + 1 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : goto [?= $r11 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>]
org.joda.example.time.AgeCalculator.updateResults : goto [?= $r11 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r11 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>
org.joda.example.time.AgeCalculator.updateResults : $r1 = new org.joda.time.DateTime >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r3 = r0.<org.joda.example.time.AgeCalculator: java.lang.String iBirthdateStr>
org.joda.example.time.AgeCalculator.updateResults : $r1 = new org.joda.time.DateTime >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : $r3 = r0.<org.joda.example.time.AgeCalculator: java.lang.String iBirthdateStr> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>()
org.joda.example.time.AgeCalculator.updateResults : $r3 = r0.<org.joda.example.time.AgeCalculator: java.lang.String iBirthdateStr> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r5 = r0.<org.joda.example.time.AgeCalculator: org.joda.time.Chronology iChronology>
org.joda.example.time.AgeCalculator.updateResults : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : $r5 = r0.<org.joda.example.time.AgeCalculator: org.joda.time.Chronology iChronology> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : specialinvoke $r1.<org.joda.time.DateTime: void <init>(java.lang.Object,org.joda.time.Chronology)>($r4, $r5)
org.joda.example.time.AgeCalculator.updateResults : $r5 = r0.<org.joda.example.time.AgeCalculator: org.joda.time.Chronology iChronology> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : specialinvoke $r1.<org.joda.time.DateTime: void <init>(java.lang.Object,org.joda.time.Chronology)>($r4, $r5) >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : r2 = $r1
org.joda.example.time.AgeCalculator.updateResults : specialinvoke $r1.<org.joda.time.DateTime: void <init>(java.lang.Object,org.joda.time.Chronology)>($r4, $r5) >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : r2 = $r1 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.joda.example.time.AgeCalculator.updateResults : r2 = $r1 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : l1 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>()
org.joda.example.time.AgeCalculator.updateResults : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : l1 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>() >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : i2 = 0
org.joda.example.time.AgeCalculator.updateResults : l1 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>() >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : i2 = 0 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>
org.joda.example.time.AgeCalculator.updateResults : i2 = 0 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $i3 = lengthof $r6
org.joda.example.time.AgeCalculator.updateResults : $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : $i3 = lengthof $r6 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : if i2 >= $i3
org.joda.example.time.AgeCalculator.updateResults : $i3 = lengthof $r6 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : if i2 >= $i3 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r7 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>
org.joda.example.time.AgeCalculator.updateResults : if i2 >= $i3 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : goto [?= return]
org.joda.example.time.AgeCalculator.updateResults : if i2 >= $i3 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : goto [?= return] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : return
org.joda.example.time.AgeCalculator.updateResults : $r7 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r8 = $r7[i2]
org.joda.example.time.AgeCalculator.updateResults : $r7 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets> >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : $r8 = $r7[i2] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : staticinvoke <org.joda.example.time.AgeCalculator$FieldSet: long access$300(org.joda.example.time.AgeCalculator$FieldSet,long,long)>($r8, l0, l1)
org.joda.example.time.AgeCalculator.updateResults : $r8 = $r7[i2] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : staticinvoke <org.joda.example.time.AgeCalculator$FieldSet: long access$300(org.joda.example.time.AgeCalculator$FieldSet,long,long)>($r8, l0, l1) >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : i2 = i2 + 1
org.joda.example.time.AgeCalculator.updateResults : staticinvoke <org.joda.example.time.AgeCalculator$FieldSet: long access$300(org.joda.example.time.AgeCalculator$FieldSet,long,long)>($r8, l0, l1) >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : i2 = i2 + 1 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : goto [?= $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>]
org.joda.example.time.AgeCalculator.updateResults : i2 = i2 + 1 >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
org.joda.example.time.AgeCalculator.updateResults : goto [?= $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>
org.joda.example.time.AgeCalculator.updateResults : goto [?= $r6 = r0.<org.joda.example.time.AgeCalculator: org.joda.example.time.AgeCalculator$FieldSet[] iFieldSets>] >>>>>>>> org.joda.example.time.AgeCalculator.updateResults : $r9 := @caughtexception
