org.joda.time.chrono.GJChronology.toString : $r1 = new java.lang.StringBuffer >>>>>>>> org.joda.time.chrono.GJChronology.toString : specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(60)
org.joda.time.chrono.GJChronology.toString : specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>(60) >>>>>>>> org.joda.time.chrono.GJChronology.toString : r2 = $r1
org.joda.time.chrono.GJChronology.toString : r2 = $r1 >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GJChronology")
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("GJChronology") >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91)
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91) >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r6 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.GJChronology.toString : $r6 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r7 = virtualinvoke $r6.<org.joda.time.DateTimeZone: java.lang.String getID()>()
org.joda.time.chrono.GJChronology.toString : $r7 = virtualinvoke $r6.<org.joda.time.DateTimeZone: java.lang.String getID()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7)
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7) >>>>>>>> org.joda.time.chrono.GJChronology.toString : $l0 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis>
org.joda.time.chrono.GJChronology.toString : $l0 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis> >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r9 = <org.joda.time.chrono.GJChronology: org.joda.time.Instant DEFAULT_CUTOVER>
org.joda.time.chrono.GJChronology.toString : $r9 = <org.joda.time.chrono.GJChronology: org.joda.time.Instant DEFAULT_CUTOVER> >>>>>>>> org.joda.time.chrono.GJChronology.toString : $l1 = virtualinvoke $r9.<org.joda.time.Instant: long getMillis()>()
org.joda.time.chrono.GJChronology.toString : $l1 = virtualinvoke $r9.<org.joda.time.Instant: long getMillis()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : $b2 = $l0 cmp $l1
org.joda.time.chrono.GJChronology.toString : $b2 = $l0 cmp $l1 >>>>>>>> org.joda.time.chrono.GJChronology.toString : if $b2 == 0
org.joda.time.chrono.GJChronology.toString : if $b2 == 0 >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",cutover=")
org.joda.time.chrono.GJChronology.toString : if $b2 == 0 >>>>>>>> org.joda.time.chrono.GJChronology.toString : $i7 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: int getMinimumDaysInFirstWeek()>()
org.joda.time.chrono.GJChronology.toString : $i7 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: int getMinimumDaysInFirstWeek()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : if $i7 == 4
org.joda.time.chrono.GJChronology.toString : if $i7 == 4 >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",mdfw=")
org.joda.time.chrono.GJChronology.toString : if $i7 == 4 >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93)
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93) >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r18 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.joda.time.chrono.GJChronology.toString : $r18 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : return $r18
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",mdfw=") >>>>>>>> org.joda.time.chrono.GJChronology.toString : $i8 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: int getMinimumDaysInFirstWeek()>()
org.joda.time.chrono.GJChronology.toString : $i8 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: int getMinimumDaysInFirstWeek()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i8)
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i8) >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93)
org.joda.time.chrono.GJChronology.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",cutover=") >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r11 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>()
org.joda.time.chrono.GJChronology.toString : $r11 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r12 = virtualinvoke $r11.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>()
org.joda.time.chrono.GJChronology.toString : $r12 = virtualinvoke $r11.<org.joda.time.Chronology: org.joda.time.DateTimeField dayOfYear()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : $l3 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis>
org.joda.time.chrono.GJChronology.toString : $l3 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis> >>>>>>>> org.joda.time.chrono.GJChronology.toString : $l4 = virtualinvoke $r12.<org.joda.time.DateTimeField: long remainder(long)>($l3)
org.joda.time.chrono.GJChronology.toString : $l4 = virtualinvoke $r12.<org.joda.time.DateTimeField: long remainder(long)>($l3) >>>>>>>> org.joda.time.chrono.GJChronology.toString : $b5 = $l4 cmp 0L
org.joda.time.chrono.GJChronology.toString : $b5 = $l4 cmp 0L >>>>>>>> org.joda.time.chrono.GJChronology.toString : if $b5 != 0
org.joda.time.chrono.GJChronology.toString : if $b5 != 0 >>>>>>>> org.joda.time.chrono.GJChronology.toString : r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>()
org.joda.time.chrono.GJChronology.toString : if $b5 != 0 >>>>>>>> org.joda.time.chrono.GJChronology.toString : r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>()
org.joda.time.chrono.GJChronology.toString : r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>()
org.joda.time.chrono.GJChronology.toString : $r13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r14 = virtualinvoke r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r13)
org.joda.time.chrono.GJChronology.toString : $r14 = virtualinvoke r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r13) >>>>>>>> org.joda.time.chrono.GJChronology.toString : $l6 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis>
org.joda.time.chrono.GJChronology.toString : $l6 = r0.<org.joda.time.chrono.GJChronology: long iCutoverMillis> >>>>>>>> org.joda.time.chrono.GJChronology.toString : virtualinvoke $r14.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>(r2, $l6)
org.joda.time.chrono.GJChronology.toString : virtualinvoke $r14.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>(r2, $l6) >>>>>>>> org.joda.time.chrono.GJChronology.toString : $i7 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: int getMinimumDaysInFirstWeek()>()
org.joda.time.chrono.GJChronology.toString : r3 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>() >>>>>>>> org.joda.time.chrono.GJChronology.toString : goto [?= $r13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>()]
org.joda.time.chrono.GJChronology.toString : goto [?= $r13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>()] >>>>>>>> org.joda.time.chrono.GJChronology.toString : $r13 = virtualinvoke r0.<org.joda.time.chrono.GJChronology: org.joda.time.Chronology withUTC()>()
