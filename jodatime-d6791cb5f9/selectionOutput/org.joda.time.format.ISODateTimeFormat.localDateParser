org.joda.time.format.ISODateTimeFormat.localDateParser : $r0 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp> >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : if $r0 != null
org.joda.time.format.ISODateTimeFormat.localDateParser : if $r0 != null >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : $r1 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateElementParser()>()
org.joda.time.format.ISODateTimeFormat.localDateParser : if $r0 != null >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : $r3 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp>
org.joda.time.format.ISODateTimeFormat.localDateParser : $r3 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp> >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : return $r3
org.joda.time.format.ISODateTimeFormat.localDateParser : $r1 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateElementParser()>() >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : $r2 = virtualinvoke $r1.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZoneUTC()>()
org.joda.time.format.ISODateTimeFormat.localDateParser : $r2 = virtualinvoke $r1.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZoneUTC()>() >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp> = $r2
org.joda.time.format.ISODateTimeFormat.localDateParser : <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp> = $r2 >>>>>>>> org.joda.time.format.ISODateTimeFormat.localDateParser : $r3 = <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter ldp>
