org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : $r1 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: org.joda.time.DateTimeZone iZone> >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : l1 = virtualinvoke $r1.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0)
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : l1 = virtualinvoke $r1.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0) >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : $r2 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: org.joda.time.DateTimeField iField>
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : $r2 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: org.joda.time.DateTimeField iField> >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : $i2 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getLeapAmount(long)>(l1)
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : $i2 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getLeapAmount(long)>(l1) >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount : return $i2
