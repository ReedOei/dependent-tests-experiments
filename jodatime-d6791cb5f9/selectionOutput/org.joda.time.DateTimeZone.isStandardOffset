org.joda.time.DateTimeZone.isStandardOffset : $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>(l0) >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : $i2 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getStandardOffset(long)>(l0)
org.joda.time.DateTimeZone.isStandardOffset : $i2 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getStandardOffset(long)>(l0) >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : if $i1 != $i2
org.joda.time.DateTimeZone.isStandardOffset : if $i1 != $i2 >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : $z0 = 1
org.joda.time.DateTimeZone.isStandardOffset : if $i1 != $i2 >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : $z0 = 0
org.joda.time.DateTimeZone.isStandardOffset : $z0 = 0 >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : return $z0
org.joda.time.DateTimeZone.isStandardOffset : $z0 = 1 >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : goto [?= return $z0]
org.joda.time.DateTimeZone.isStandardOffset : goto [?= return $z0] >>>>>>>> org.joda.time.DateTimeZone.isStandardOffset : return $z0
