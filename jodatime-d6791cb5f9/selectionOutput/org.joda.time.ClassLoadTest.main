org.joda.time.ClassLoadTest.main : $r1 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : $r4 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r4 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("-----------AbstractInstant---------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("-----------AbstractInstant---------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : r2 = class "org/joda/time/base/AbstractInstant"
org.joda.time.ClassLoadTest.main : r2 = class "org/joda/time/base/AbstractInstant" >>>>>>>> org.joda.time.ClassLoadTest.main : $r5 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r5 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("-----------ReadableDateTime--------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("-----------ReadableDateTime--------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : r6 = class "org/joda/time/ReadableDateTime"
org.joda.time.ClassLoadTest.main : r6 = class "org/joda/time/ReadableDateTime" >>>>>>>> org.joda.time.ClassLoadTest.main : $r7 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r7 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("-----------AbstractDateTime--------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("-----------AbstractDateTime--------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : r8 = class "org/joda/time/base/AbstractDateTime"
org.joda.time.ClassLoadTest.main : r8 = class "org/joda/time/base/AbstractDateTime" >>>>>>>> org.joda.time.ClassLoadTest.main : $r9 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r9 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("-----------DateTime----------------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("-----------DateTime----------------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : r10 = class "org/joda/time/DateTime"
org.joda.time.ClassLoadTest.main : r10 = class "org/joda/time/DateTime" >>>>>>>> org.joda.time.ClassLoadTest.main : $r11 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r11 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("-----------DateTimeZone------------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("-----------DateTimeZone------------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : r12 = class "org/joda/time/DateTimeZone"
org.joda.time.ClassLoadTest.main : r12 = class "org/joda/time/DateTimeZone" >>>>>>>> org.joda.time.ClassLoadTest.main : $r13 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r13 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("-----------new DateTime()----------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("-----------new DateTime()----------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : $r14 = new org.joda.time.DateTime
org.joda.time.ClassLoadTest.main : $r14 = new org.joda.time.DateTime >>>>>>>> org.joda.time.ClassLoadTest.main : specialinvoke $r14.<org.joda.time.DateTime: void <init>()>()
org.joda.time.ClassLoadTest.main : specialinvoke $r14.<org.joda.time.DateTime: void <init>()>() >>>>>>>> org.joda.time.ClassLoadTest.main : r3 = $r14
org.joda.time.ClassLoadTest.main : r3 = $r14 >>>>>>>> org.joda.time.ClassLoadTest.main : $r15 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r15 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("-----------new DateTime(ReadableInstant)-------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("-----------new DateTime(ReadableInstant)-------") >>>>>>>> org.joda.time.ClassLoadTest.main : $r16 = new org.joda.time.DateTime
org.joda.time.ClassLoadTest.main : $r16 = new org.joda.time.DateTime >>>>>>>> org.joda.time.ClassLoadTest.main : specialinvoke $r16.<org.joda.time.DateTime: void <init>(java.lang.Object)>(r3)
org.joda.time.ClassLoadTest.main : specialinvoke $r16.<org.joda.time.DateTime: void <init>(java.lang.Object)>(r3) >>>>>>>> org.joda.time.ClassLoadTest.main : r17 = $r16
org.joda.time.ClassLoadTest.main : r17 = $r16 >>>>>>>> org.joda.time.ClassLoadTest.main : $r18 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r18 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("-----------new DateTime(Long)------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("-----------new DateTime(Long)------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : $r19 = new org.joda.time.DateTime
org.joda.time.ClassLoadTest.main : $r19 = new org.joda.time.DateTime >>>>>>>> org.joda.time.ClassLoadTest.main : $r20 = new java.lang.Long
org.joda.time.ClassLoadTest.main : $r20 = new java.lang.Long >>>>>>>> org.joda.time.ClassLoadTest.main : specialinvoke $r20.<java.lang.Long: void <init>(long)>(0L)
org.joda.time.ClassLoadTest.main : specialinvoke $r20.<java.lang.Long: void <init>(long)>(0L) >>>>>>>> org.joda.time.ClassLoadTest.main : specialinvoke $r19.<org.joda.time.DateTime: void <init>(java.lang.Object)>($r20)
org.joda.time.ClassLoadTest.main : specialinvoke $r19.<org.joda.time.DateTime: void <init>(java.lang.Object)>($r20) >>>>>>>> org.joda.time.ClassLoadTest.main : r21 = $r19
org.joda.time.ClassLoadTest.main : r21 = $r19 >>>>>>>> org.joda.time.ClassLoadTest.main : $r22 = <java.lang.System: java.io.PrintStream out>
org.joda.time.ClassLoadTest.main : $r22 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.time.ClassLoadTest.main : virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------------------------")
org.joda.time.ClassLoadTest.main : virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------------------------") >>>>>>>> org.joda.time.ClassLoadTest.main : return
