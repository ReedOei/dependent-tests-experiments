org.joda.example.time.DateTimePerformance.checkDateToString : i0 = <org.joda.example.time.DateTimePerformance: int COUNT_SLOW> >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : $r4 = new java.util.Date
org.joda.example.time.DateTimePerformance.checkDateToString : $r4 = new java.util.Date >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke $r4.<java.util.Date: void <init>()>()
org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke $r4.<java.util.Date: void <init>()>() >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : r1 = $r4
org.joda.example.time.DateTimePerformance.checkDateToString : r1 = $r4 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : i1 = 0
org.joda.example.time.DateTimePerformance.checkDateToString : i1 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkDateToString : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE> >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : if i1 >= $i3
org.joda.example.time.DateTimePerformance.checkDateToString : if i1 >= $i3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("Date", "toString")
org.joda.example.time.DateTimePerformance.checkDateToString : if i1 >= $i3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : return
org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("Date", "toString") >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : i2 = 0
org.joda.example.time.DateTimePerformance.checkDateToString : i2 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkDateToString : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : $r5 = new java.text.SimpleDateFormat
org.joda.example.time.DateTimePerformance.checkDateToString : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0)
org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0) >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : i1 = i1 + 1
org.joda.example.time.DateTimePerformance.checkDateToString : i1 = i1 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : goto [?= $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>]
org.joda.example.time.DateTimePerformance.checkDateToString : goto [?= $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>] >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkDateToString : $r5 = new java.text.SimpleDateFormat >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd MMM yyyy")
org.joda.example.time.DateTimePerformance.checkDateToString : specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd MMM yyyy") >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : r2 = $r5
org.joda.example.time.DateTimePerformance.checkDateToString : r2 = $r5 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : r3 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1)
org.joda.example.time.DateTimePerformance.checkDateToString : r3 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1) >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : if r3 != null
org.joda.example.time.DateTimePerformance.checkDateToString : if r3 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : $r6 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.DateTimePerformance.checkDateToString : if r3 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : i2 = i2 + 1
org.joda.example.time.DateTimePerformance.checkDateToString : i2 = i2 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : goto [?= (branch)]
org.joda.example.time.DateTimePerformance.checkDateToString : goto [?= (branch)] >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkDateToString : $r6 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise")
org.joda.example.time.DateTimePerformance.checkDateToString : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise") >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateToString : i2 = i2 + 1
