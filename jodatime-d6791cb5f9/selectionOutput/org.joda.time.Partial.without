org.joda.time.Partial.without : i0 = virtualinvoke r0.<org.joda.time.Partial: int indexOf(org.joda.time.DateTimeFieldType)>(r1) >>>>>>>> org.joda.time.Partial.without : if i0 == -1
org.joda.time.Partial.without : if i0 == -1 >>>>>>>> org.joda.time.Partial.without : $i1 = virtualinvoke r0.<org.joda.time.Partial: int size()>()
org.joda.time.Partial.without : if i0 == -1 >>>>>>>> org.joda.time.Partial.without : return r0
org.joda.time.Partial.without : $i1 = virtualinvoke r0.<org.joda.time.Partial: int size()>() >>>>>>>> org.joda.time.Partial.without : $i2 = $i1 - 1
org.joda.time.Partial.without : $i2 = $i1 - 1 >>>>>>>> org.joda.time.Partial.without : r2 = newarray (org.joda.time.DateTimeFieldType)[$i2]
org.joda.time.Partial.without : r2 = newarray (org.joda.time.DateTimeFieldType)[$i2] >>>>>>>> org.joda.time.Partial.without : $i3 = virtualinvoke r0.<org.joda.time.Partial: int size()>()
org.joda.time.Partial.without : $i3 = virtualinvoke r0.<org.joda.time.Partial: int size()>() >>>>>>>> org.joda.time.Partial.without : $i4 = $i3 - 1
org.joda.time.Partial.without : $i4 = $i3 - 1 >>>>>>>> org.joda.time.Partial.without : r3 = newarray (int)[$i4]
org.joda.time.Partial.without : r3 = newarray (int)[$i4] >>>>>>>> org.joda.time.Partial.without : $r5 = r0.<org.joda.time.Partial: org.joda.time.DateTimeFieldType[] iTypes>
org.joda.time.Partial.without : $r5 = r0.<org.joda.time.Partial: org.joda.time.DateTimeFieldType[] iTypes> >>>>>>>> org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, 0, i0)
org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r2, 0, i0) >>>>>>>> org.joda.time.Partial.without : $r6 = r0.<org.joda.time.Partial: org.joda.time.DateTimeFieldType[] iTypes>
org.joda.time.Partial.without : $r6 = r0.<org.joda.time.Partial: org.joda.time.DateTimeFieldType[] iTypes> >>>>>>>> org.joda.time.Partial.without : $i5 = i0 + 1
org.joda.time.Partial.without : $i5 = i0 + 1 >>>>>>>> org.joda.time.Partial.without : $i6 = lengthof r2
org.joda.time.Partial.without : $i6 = lengthof r2 >>>>>>>> org.joda.time.Partial.without : $i7 = $i6 - i0
org.joda.time.Partial.without : $i7 = $i6 - i0 >>>>>>>> org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i5, r2, i0, $i7)
org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, $i5, r2, i0, $i7) >>>>>>>> org.joda.time.Partial.without : $r7 = r0.<org.joda.time.Partial: int[] iValues>
org.joda.time.Partial.without : $r7 = r0.<org.joda.time.Partial: int[] iValues> >>>>>>>> org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r3, 0, i0)
org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r3, 0, i0) >>>>>>>> org.joda.time.Partial.without : $r8 = r0.<org.joda.time.Partial: int[] iValues>
org.joda.time.Partial.without : $r8 = r0.<org.joda.time.Partial: int[] iValues> >>>>>>>> org.joda.time.Partial.without : $i8 = i0 + 1
org.joda.time.Partial.without : $i8 = i0 + 1 >>>>>>>> org.joda.time.Partial.without : $i9 = lengthof r3
org.joda.time.Partial.without : $i9 = lengthof r3 >>>>>>>> org.joda.time.Partial.without : $i10 = $i9 - i0
org.joda.time.Partial.without : $i10 = $i9 - i0 >>>>>>>> org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i8, r3, i0, $i10)
org.joda.time.Partial.without : staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, $i8, r3, i0, $i10) >>>>>>>> org.joda.time.Partial.without : $r9 = new org.joda.time.Partial
org.joda.time.Partial.without : $r9 = new org.joda.time.Partial >>>>>>>> org.joda.time.Partial.without : $r10 = r0.<org.joda.time.Partial: org.joda.time.Chronology iChronology>
org.joda.time.Partial.without : $r10 = r0.<org.joda.time.Partial: org.joda.time.Chronology iChronology> >>>>>>>> org.joda.time.Partial.without : specialinvoke $r9.<org.joda.time.Partial: void <init>(org.joda.time.Chronology,org.joda.time.DateTimeFieldType[],int[])>($r10, r2, r3)
org.joda.time.Partial.without : specialinvoke $r9.<org.joda.time.Partial: void <init>(org.joda.time.Chronology,org.joda.time.DateTimeFieldType[],int[])>($r10, r2, r3) >>>>>>>> org.joda.time.Partial.without : r4 = $r9
org.joda.time.Partial.without : r4 = $r9 >>>>>>>> org.joda.time.Partial.without : $r11 = r0.<org.joda.time.Partial: org.joda.time.Chronology iChronology>
org.joda.time.Partial.without : $r11 = r0.<org.joda.time.Partial: org.joda.time.Chronology iChronology> >>>>>>>> org.joda.time.Partial.without : virtualinvoke $r11.<org.joda.time.Chronology: void validate(org.joda.time.ReadablePartial,int[])>(r4, r3)
org.joda.time.Partial.without : virtualinvoke $r11.<org.joda.time.Chronology: void validate(org.joda.time.ReadablePartial,int[])>(r4, r3) >>>>>>>> org.joda.time.Partial.without : return r4
