org.joda.time.DateMidnight.toInterval : r1 = virtualinvoke r0.<org.joda.time.DateMidnight: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.DateMidnight.toInterval : l0 = virtualinvoke r0.<org.joda.time.DateMidnight: long getMillis()>()
org.joda.time.DateMidnight.toInterval : l0 = virtualinvoke r0.<org.joda.time.DateMidnight: long getMillis()>() >>>>>>>> org.joda.time.DateMidnight.toInterval : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>()
org.joda.time.DateMidnight.toInterval : $r2 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType days()>() >>>>>>>> org.joda.time.DateMidnight.toInterval : $r3 = virtualinvoke $r2.<org.joda.time.DurationFieldType: org.joda.time.DurationField getField(org.joda.time.Chronology)>(r1)
org.joda.time.DateMidnight.toInterval : $r3 = virtualinvoke $r2.<org.joda.time.DurationFieldType: org.joda.time.DurationField getField(org.joda.time.Chronology)>(r1) >>>>>>>> org.joda.time.DateMidnight.toInterval : l1 = virtualinvoke $r3.<org.joda.time.DurationField: long add(long,int)>(l0, 1)
org.joda.time.DateMidnight.toInterval : l1 = virtualinvoke $r3.<org.joda.time.DurationField: long add(long,int)>(l0, 1) >>>>>>>> org.joda.time.DateMidnight.toInterval : $r4 = new org.joda.time.Interval
org.joda.time.DateMidnight.toInterval : $r4 = new org.joda.time.Interval >>>>>>>> org.joda.time.DateMidnight.toInterval : specialinvoke $r4.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, r1)
org.joda.time.DateMidnight.toInterval : specialinvoke $r4.<org.joda.time.Interval: void <init>(long,long,org.joda.time.Chronology)>(l0, l1, r1) >>>>>>>> org.joda.time.DateMidnight.toInterval : return $r4
