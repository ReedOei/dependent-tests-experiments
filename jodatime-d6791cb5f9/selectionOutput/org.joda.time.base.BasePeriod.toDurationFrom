org.joda.time.base.BasePeriod.toDurationFrom : l0 = staticinvoke <org.joda.time.DateTimeUtils: long getInstantMillis(org.joda.time.ReadableInstant)>(r1) >>>>>>>> org.joda.time.base.BasePeriod.toDurationFrom : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getInstantChronology(org.joda.time.ReadableInstant)>(r1)
org.joda.time.base.BasePeriod.toDurationFrom : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getInstantChronology(org.joda.time.ReadableInstant)>(r1) >>>>>>>> org.joda.time.base.BasePeriod.toDurationFrom : l1 = virtualinvoke r2.<org.joda.time.Chronology: long add(org.joda.time.ReadablePeriod,long,int)>(r0, l0, 1)
org.joda.time.base.BasePeriod.toDurationFrom : l1 = virtualinvoke r2.<org.joda.time.Chronology: long add(org.joda.time.ReadablePeriod,long,int)>(r0, l0, 1) >>>>>>>> org.joda.time.base.BasePeriod.toDurationFrom : $r3 = new org.joda.time.Duration
org.joda.time.base.BasePeriod.toDurationFrom : $r3 = new org.joda.time.Duration >>>>>>>> org.joda.time.base.BasePeriod.toDurationFrom : specialinvoke $r3.<org.joda.time.Duration: void <init>(long,long)>(l0, l1)
org.joda.time.base.BasePeriod.toDurationFrom : specialinvoke $r3.<org.joda.time.Duration: void <init>(long,long)>(l0, l1) >>>>>>>> org.joda.time.base.BasePeriod.toDurationFrom : return $r3
