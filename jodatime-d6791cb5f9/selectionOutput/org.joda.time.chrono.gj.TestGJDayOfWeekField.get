org.joda.time.chrono.gj.TestGJDayOfWeekField.get : $r1 = r0.<org.joda.time.chrono.gj.TestGJDayOfWeekField: org.joda.time.chrono.gj.TestGJChronology iChronology> >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : $l2 = virtualinvoke $r1.<org.joda.time.chrono.gj.TestGJChronology: long fixedFromMillis(long)>(l0)
org.joda.time.chrono.gj.TestGJDayOfWeekField.get : $l2 = virtualinvoke $r1.<org.joda.time.chrono.gj.TestGJChronology: long fixedFromMillis(long)>(l0) >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : $l3 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>($l2, 7L)
org.joda.time.chrono.gj.TestGJDayOfWeekField.get : $l3 = staticinvoke <org.joda.time.chrono.gj.TestGJChronology: long mod(long,long)>($l2, 7L) >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : i1 = (int) $l3
org.joda.time.chrono.gj.TestGJDayOfWeekField.get : i1 = (int) $l3 >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : if i1 != 0
org.joda.time.chrono.gj.TestGJDayOfWeekField.get : if i1 != 0 >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : i1 = 7
org.joda.time.chrono.gj.TestGJDayOfWeekField.get : if i1 != 0 >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : return i1
org.joda.time.chrono.gj.TestGJDayOfWeekField.get : i1 = 7 >>>>>>>> org.joda.time.chrono.gj.TestGJDayOfWeekField.get : return i1
