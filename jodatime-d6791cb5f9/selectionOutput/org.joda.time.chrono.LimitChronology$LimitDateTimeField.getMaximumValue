org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : $r1 = r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.chrono.LimitChronology this$0> >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null)
org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : virtualinvoke $r1.<org.joda.time.chrono.LimitChronology: void checkLimits(long,java.lang.String)>(l0, null) >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>()
org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : $r2 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology$LimitDateTimeField: org.joda.time.DateTimeField getWrappedField()>() >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : $i1 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0)
org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : $i1 = virtualinvoke $r2.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0) >>>>>>>> org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue : return $i1
