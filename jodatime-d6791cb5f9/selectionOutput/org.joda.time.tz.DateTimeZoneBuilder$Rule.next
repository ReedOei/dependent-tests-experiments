org.joda.time.tz.DateTimeZoneBuilder$Rule.next : r1 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstanceUTC()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i3 = i1 + i2
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i3 = i1 + i2 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l4 = l0
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l4 = l0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $b7 = l0 cmp -9223372036854775808L
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $b7 = l0 cmp -9223372036854775808L >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if $b7 != 0
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if $b7 != 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i5 = -2147483648
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if $b7 != 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r2 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l8 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l8 = (long) i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l9 = l0 + $l8
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l9 = l0 + $l8 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i5 = virtualinvoke $r2.<org.joda.time.DateTimeField: int get(long)>($l9)
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i5 = virtualinvoke $r2.<org.joda.time.DateTimeField: int get(long)>($l9) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i10 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear>
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i10 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if i5 >= $i10
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if i5 >= $i10 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if i5 >= $i10 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: org.joda.time.tz.DateTimeZoneBuilder$Recurrence iRecurrence>
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: org.joda.time.tz.DateTimeZoneBuilder$Recurrence iRecurrence> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l6 = virtualinvoke $r4.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: long next(long,int,int)>(l4, i1, i2)
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l6 = virtualinvoke $r4.<org.joda.time.tz.DateTimeZoneBuilder$Recurrence: long next(long,int,int)>(l4, i1, i2) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $b15 = l6 cmp l0
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $b15 = l6 cmp l0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if $b15 <= 0
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if $b15 <= 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r5 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>()
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if $b15 <= 0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : return l6
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r5 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l16 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l16 = (long) i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l17 = l6 + $l16
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l17 = l6 + $l16 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i18 = virtualinvoke $r5.<org.joda.time.DateTimeField: int get(long)>($l17)
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i18 = virtualinvoke $r5.<org.joda.time.DateTimeField: int get(long)>($l17) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i19 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iToYear>
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i19 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iToYear> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if i18 <= $i19
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if i18 <= $i19 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l6 = l0
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : if i18 <= $i19 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : return l6
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l6 = l0 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : return l6
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r3 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeField year()>() >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i11 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear>
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i11 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear> >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l12 = virtualinvoke $r3.<org.joda.time.DateTimeField: long set(long,int)>(0L, $i11)
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l12 = virtualinvoke $r3.<org.joda.time.DateTimeField: long set(long,int)>(0L, $i11) >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l13 = (long) i3
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $l13 = (long) i3 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l14 = $l12 - $l13
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l14 = $l12 - $l13 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l4 = l14 - 1L
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : l4 = l14 - 1L >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $r4 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: org.joda.time.tz.DateTimeZoneBuilder$Recurrence iRecurrence>
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : i5 = -2147483648 >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : goto [?= $i10 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear>]
org.joda.time.tz.DateTimeZoneBuilder$Rule.next : goto [?= $i10 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear>] >>>>>>>> org.joda.time.tz.DateTimeZoneBuilder$Rule.next : $i10 = r0.<org.joda.time.tz.DateTimeZoneBuilder$Rule: int iFromYear>
