org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i0 = <org.joda.example.time.DateTimePerformance: int COUNT_VERY_FAST> >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $r2 = new java.util.GregorianCalendar
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $r2 = new java.util.GregorianCalendar >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : specialinvoke $r2.<java.util.GregorianCalendar: void <init>()>()
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : specialinvoke $r2.<java.util.GregorianCalendar: void <init>()>() >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : r1 = $r2
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : r1 = $r2 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i1 = 0
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i1 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE> >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i1 >= $i4
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i1 >= $i4 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("GCal", "setGetHour")
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i1 >= $i4 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : return
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("GCal", "setGetHour") >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i2 = 0
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i2 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : virtualinvoke r1.<java.util.GregorianCalendar: void set(int,int)>(11, 13)
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0)
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0) >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i1 = i1 + 1
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i1 = i1 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : goto [?= $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>]
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : goto [?= $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>] >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : virtualinvoke r1.<java.util.GregorianCalendar: void set(int,int)>(11, 13) >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(11)
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(11) >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if r1 != null
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if r1 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $r3 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if r1 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i2 = i2 + 1
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i2 = i2 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : goto [?= (branch)]
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : goto [?= (branch)] >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : $r3 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise")
org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise") >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalSetGetHour : i2 = i2 + 1
