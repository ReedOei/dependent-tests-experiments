org.joda.time.DateTimeZone.offsetFormatter : $r0 = <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter cOffsetFormatter> >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : if $r0 != null
org.joda.time.DateTimeZone.offsetFormatter : if $r0 != null >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : $r1 = new org.joda.time.format.DateTimeFormatterBuilder
org.joda.time.DateTimeZone.offsetFormatter : if $r0 != null >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : $r4 = <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter cOffsetFormatter>
org.joda.time.DateTimeZone.offsetFormatter : $r4 = <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter cOffsetFormatter> >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : return $r4
org.joda.time.DateTimeZone.offsetFormatter : $r1 = new org.joda.time.format.DateTimeFormatterBuilder >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : specialinvoke $r1.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>()
org.joda.time.DateTimeZone.offsetFormatter : specialinvoke $r1.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>() >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : $r2 = virtualinvoke $r1.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>(null, 1, 2, 4)
org.joda.time.DateTimeZone.offsetFormatter : $r2 = virtualinvoke $r1.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendTimeZoneOffset(java.lang.String,boolean,int,int)>(null, 1, 2, 4) >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>()
org.joda.time.DateTimeZone.offsetFormatter : $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>() >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter cOffsetFormatter> = $r3
org.joda.time.DateTimeZone.offsetFormatter : <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter cOffsetFormatter> = $r3 >>>>>>>> org.joda.time.DateTimeZone.offsetFormatter : $r4 = <org.joda.time.DateTimeZone: org.joda.time.format.DateTimeFormatter cOffsetFormatter>
