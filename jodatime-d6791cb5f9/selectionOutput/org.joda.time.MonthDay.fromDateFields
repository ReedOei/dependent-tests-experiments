org.joda.time.MonthDay.fromDateFields : if r0 != null >>>>>>>> org.joda.time.MonthDay.fromDateFields : $r1 = new java.lang.IllegalArgumentException
org.joda.time.MonthDay.fromDateFields : if r0 != null >>>>>>>> org.joda.time.MonthDay.fromDateFields : $r2 = new org.joda.time.MonthDay
org.joda.time.MonthDay.fromDateFields : $r2 = new org.joda.time.MonthDay >>>>>>>> org.joda.time.MonthDay.fromDateFields : $i0 = virtualinvoke r0.<java.util.Date: int getMonth()>()
org.joda.time.MonthDay.fromDateFields : $i0 = virtualinvoke r0.<java.util.Date: int getMonth()>() >>>>>>>> org.joda.time.MonthDay.fromDateFields : $i1 = $i0 + 1
org.joda.time.MonthDay.fromDateFields : $i1 = $i0 + 1 >>>>>>>> org.joda.time.MonthDay.fromDateFields : $i2 = virtualinvoke r0.<java.util.Date: int getDate()>()
org.joda.time.MonthDay.fromDateFields : $i2 = virtualinvoke r0.<java.util.Date: int getDate()>() >>>>>>>> org.joda.time.MonthDay.fromDateFields : specialinvoke $r2.<org.joda.time.MonthDay: void <init>(int,int)>($i1, $i2)
org.joda.time.MonthDay.fromDateFields : specialinvoke $r2.<org.joda.time.MonthDay: void <init>(int,int)>($i1, $i2) >>>>>>>> org.joda.time.MonthDay.fromDateFields : return $r2
org.joda.time.MonthDay.fromDateFields : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.MonthDay.fromDateFields : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The date must not be null")
org.joda.time.MonthDay.fromDateFields : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The date must not be null") >>>>>>>> org.joda.time.MonthDay.fromDateFields : throw $r1
