org.joda.time.field.FieldUtils.getWrappedValue : if i1 < i2 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $r0 = new java.lang.IllegalArgumentException
org.joda.time.field.FieldUtils.getWrappedValue : if i1 < i2 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i5 = i2 - i1
org.joda.time.field.FieldUtils.getWrappedValue : $i5 = i2 - i1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : i3 = $i5 + 1
org.joda.time.field.FieldUtils.getWrappedValue : i3 = $i5 + 1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : i6 = i0 - i1
org.joda.time.field.FieldUtils.getWrappedValue : i6 = i0 - i1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : if i6 < 0
org.joda.time.field.FieldUtils.getWrappedValue : if i6 < 0 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i7 = i6 % i3
org.joda.time.field.FieldUtils.getWrappedValue : if i6 < 0 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i9 = neg i6
org.joda.time.field.FieldUtils.getWrappedValue : $i9 = neg i6 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : i4 = $i9 % i3
org.joda.time.field.FieldUtils.getWrappedValue : i4 = $i9 % i3 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : if i4 != 0
org.joda.time.field.FieldUtils.getWrappedValue : if i4 != 0 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i10 = 0 + i1
org.joda.time.field.FieldUtils.getWrappedValue : if i4 != 0 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i11 = i3 - i4
org.joda.time.field.FieldUtils.getWrappedValue : $i11 = i3 - i4 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i12 = $i11 + i1
org.joda.time.field.FieldUtils.getWrappedValue : $i12 = $i11 + i1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : return $i12
org.joda.time.field.FieldUtils.getWrappedValue : $i10 = 0 + i1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : return $i10
org.joda.time.field.FieldUtils.getWrappedValue : $i7 = i6 % i3 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : $i8 = $i7 + i1
org.joda.time.field.FieldUtils.getWrappedValue : $i8 = $i7 + i1 >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : return $i8
org.joda.time.field.FieldUtils.getWrappedValue : $r0 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIN > MAX")
org.joda.time.field.FieldUtils.getWrappedValue : specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("MIN > MAX") >>>>>>>> org.joda.time.field.FieldUtils.getWrappedValue : throw $r0
