org.joda.example.time.Examples.runDateTime : $r1 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("DateTime")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("DateTime") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r4 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r4 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("=======")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("=======") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r5 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r5 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("DateTime stores a the date and time using millisecs from 1970-01-01T00:00:00Z internally")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("DateTime stores a the date and time using millisecs from 1970-01-01T00:00:00Z internally") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r6 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r6 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("DateTime is immutable and thread-safe")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("DateTime is immutable and thread-safe") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r7 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r7 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("                      in = new DateTime()")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("                      in = new DateTime()") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r8 = new org.joda.time.DateTime
org.joda.example.time.Examples.runDateTime : $r8 = new org.joda.time.DateTime >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r8.<org.joda.time.DateTime: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r8.<org.joda.time.DateTime: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : r2 = $r8
org.joda.example.time.Examples.runDateTime : r2 = $r8 >>>>>>>> org.joda.example.time.Examples.runDateTime : $r9 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r9 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r10 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r10 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Millisecond time:     in.getMillis():           ")
org.joda.example.time.Examples.runDateTime : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Millisecond time:     in.getMillis():           ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $l0 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>()
org.joda.example.time.Examples.runDateTime : $l0 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.joda.example.time.Examples.runDateTime : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r14 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r14 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r15 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r15 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ISO string version:   in.toString():            ")
org.joda.example.time.Examples.runDateTime : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ISO string version:   in.toString():            ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r17 = virtualinvoke r2.<org.joda.time.DateTime: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r17 = virtualinvoke r2.<org.joda.time.DateTime: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.joda.example.time.Examples.runDateTime : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r19) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r20 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r20 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r21 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r21 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ISO chronology:       in.getChronology():       ")
org.joda.example.time.Examples.runDateTime : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ISO chronology:       in.getChronology():       ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r23 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.Chronology getChronology()>()
org.joda.example.time.Examples.runDateTime : $r23 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23)
org.joda.example.time.Examples.runDateTime : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r25)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r25) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r26 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r26 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r27 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r27 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Your time zone:       in.getDateTimeZone():     ")
org.joda.example.time.Examples.runDateTime : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Your time zone:       in.getDateTimeZone():     ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r29 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTimeZone getZone()>()
org.joda.example.time.Examples.runDateTime : $r29 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29)
org.joda.example.time.Examples.runDateTime : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r32 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r32 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r33 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r33 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change millis:        in.withMillis(0):         ")
org.joda.example.time.Examples.runDateTime : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Change millis:        in.withMillis(0):         ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r35 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime withMillis(long)>(0L)
org.joda.example.time.Examples.runDateTime : $r35 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime withMillis(long)>(0L) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35)
org.joda.example.time.Examples.runDateTime : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r37) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r38 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r38 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>("") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r39 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r39 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r40 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r40 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get year:             in.getYear():             ")
org.joda.example.time.Examples.runDateTime : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get year:             in.getYear():             ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $i1 = virtualinvoke r2.<org.joda.time.DateTime: int getYear()>()
org.joda.example.time.Examples.runDateTime : $i1 = virtualinvoke r2.<org.joda.time.DateTime: int getYear()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.joda.example.time.Examples.runDateTime : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r43)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r43) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r44 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r44 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r45 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r45 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get monthOfYear:      in.getMonthOfYear():      ")
org.joda.example.time.Examples.runDateTime : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get monthOfYear:      in.getMonthOfYear():      ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $i2 = virtualinvoke r2.<org.joda.time.DateTime: int getMonthOfYear()>()
org.joda.example.time.Examples.runDateTime : $i2 = virtualinvoke r2.<org.joda.time.DateTime: int getMonthOfYear()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
org.joda.example.time.Examples.runDateTime : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r48)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>($r48) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r49 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r49 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r50 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r50 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get dayOfMonth:       in.getDayOfMonth():       ")
org.joda.example.time.Examples.runDateTime : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get dayOfMonth:       in.getDayOfMonth():       ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $i3 = virtualinvoke r2.<org.joda.time.DateTime: int getDayOfMonth()>()
org.joda.example.time.Examples.runDateTime : $i3 = virtualinvoke r2.<org.joda.time.DateTime: int getDayOfMonth()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
org.joda.example.time.Examples.runDateTime : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r53)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r53) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r54 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r54 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("...")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r54.<java.io.PrintStream: void println(java.lang.String)>("...") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r55 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r55 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r56 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r56 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r56.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r56.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property access:      in.dayOfWeek().get():                   ")
org.joda.example.time.Examples.runDateTime : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Property access:      in.dayOfWeek().get():                   ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r58 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>()
org.joda.example.time.Examples.runDateTime : $r58 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $i4 = virtualinvoke $r58.<org.joda.time.DateTime$Property: int get()>()
org.joda.example.time.Examples.runDateTime : $i4 = virtualinvoke $r58.<org.joda.time.DateTime$Property: int get()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)
org.joda.example.time.Examples.runDateTime : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r60)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r55.<java.io.PrintStream: void println(java.lang.String)>($r60) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r61 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r61 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r62 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r62 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day of week as text:  in.dayOfWeek().getAsText():             ")
org.joda.example.time.Examples.runDateTime : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day of week as text:  in.dayOfWeek().getAsText():             ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r64 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>()
org.joda.example.time.Examples.runDateTime : $r64 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r65 = virtualinvoke $r64.<org.joda.time.DateTime$Property: java.lang.String getAsText()>()
org.joda.example.time.Examples.runDateTime : $r65 = virtualinvoke $r64.<org.joda.time.DateTime$Property: java.lang.String getAsText()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)
org.joda.example.time.Examples.runDateTime : $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r67)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r61.<java.io.PrintStream: void println(java.lang.String)>($r67) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r68 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r68 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r69 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r69 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r69.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day as short text:    in.dayOfWeek().getAsShortText():        ")
org.joda.example.time.Examples.runDateTime : $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day as short text:    in.dayOfWeek().getAsShortText():        ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r71 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>()
org.joda.example.time.Examples.runDateTime : $r71 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r72 = virtualinvoke $r71.<org.joda.time.DateTime$Property: java.lang.String getAsShortText()>()
org.joda.example.time.Examples.runDateTime : $r72 = virtualinvoke $r71.<org.joda.time.DateTime$Property: java.lang.String getAsShortText()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72)
org.joda.example.time.Examples.runDateTime : $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r74)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r74) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r75 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r75 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r76 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r76 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r76.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r76.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day in french:        in.dayOfWeek().getAsText(Locale.FRENCH):")
org.joda.example.time.Examples.runDateTime : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Day in french:        in.dayOfWeek().getAsText(Locale.FRENCH):") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r78 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>()
org.joda.example.time.Examples.runDateTime : $r78 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r79 = <java.util.Locale: java.util.Locale FRENCH>
org.joda.example.time.Examples.runDateTime : $r79 = <java.util.Locale: java.util.Locale FRENCH> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r80 = virtualinvoke $r78.<org.joda.time.DateTime$Property: java.lang.String getAsText(java.util.Locale)>($r79)
org.joda.example.time.Examples.runDateTime : $r80 = virtualinvoke $r78.<org.joda.time.DateTime$Property: java.lang.String getAsText(java.util.Locale)>($r79) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r81 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80)
org.joda.example.time.Examples.runDateTime : $r81 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r82)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r75.<java.io.PrintStream: void println(java.lang.String)>($r82) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r83 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r83 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r84 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r84 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r84.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r84.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max allowed value:    in.dayOfWeek().getMaximumValue():       ")
org.joda.example.time.Examples.runDateTime : $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max allowed value:    in.dayOfWeek().getMaximumValue():       ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r86 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>()
org.joda.example.time.Examples.runDateTime : $r86 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $i5 = virtualinvoke $r86.<org.joda.time.DateTime$Property: int getMaximumValue()>()
org.joda.example.time.Examples.runDateTime : $i5 = virtualinvoke $r86.<org.joda.time.DateTime$Property: int getMaximumValue()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)
org.joda.example.time.Examples.runDateTime : $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>($r88)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r83.<java.io.PrintStream: void println(java.lang.String)>($r88) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r89 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r89 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r90 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r90 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r90.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r90.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Min allowed value:    in.dayOfWeek().getMinimumValue():       ")
org.joda.example.time.Examples.runDateTime : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Min allowed value:    in.dayOfWeek().getMinimumValue():       ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r92 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>()
org.joda.example.time.Examples.runDateTime : $r92 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $i6 = virtualinvoke $r92.<org.joda.time.DateTime$Property: int getMinimumValue()>()
org.joda.example.time.Examples.runDateTime : $i6 = virtualinvoke $r92.<org.joda.time.DateTime$Property: int getMinimumValue()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6)
org.joda.example.time.Examples.runDateTime : $r93 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r94)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r89.<java.io.PrintStream: void println(java.lang.String)>($r94) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r95 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r95 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r96 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r96 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r96.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copy & set to Jan:    in.monthOfYear().setCopy(1):            ")
org.joda.example.time.Examples.runDateTime : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copy & set to Jan:    in.monthOfYear().setCopy(1):            ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r98 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property monthOfYear()>()
org.joda.example.time.Examples.runDateTime : $r98 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property monthOfYear()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r99 = virtualinvoke $r98.<org.joda.time.DateTime$Property: org.joda.time.DateTime setCopy(int)>(1)
org.joda.example.time.Examples.runDateTime : $r99 = virtualinvoke $r98.<org.joda.time.DateTime$Property: org.joda.time.DateTime setCopy(int)>(1) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r100 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99)
org.joda.example.time.Examples.runDateTime : $r100 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>($r101)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r95.<java.io.PrintStream: void println(java.lang.String)>($r101) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r102 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r102 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r103 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r103 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r103.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r103.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copy & add 14 months: in.monthOfYear().addCopy(14):           ")
org.joda.example.time.Examples.runDateTime : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Copy & add 14 months: in.monthOfYear().addCopy(14):           ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r105 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property monthOfYear()>()
org.joda.example.time.Examples.runDateTime : $r105 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property monthOfYear()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r106 = virtualinvoke $r105.<org.joda.time.DateTime$Property: org.joda.time.DateTime addToCopy(int)>(14)
org.joda.example.time.Examples.runDateTime : $r106 = virtualinvoke $r105.<org.joda.time.DateTime$Property: org.joda.time.DateTime addToCopy(int)>(14) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r106)
org.joda.example.time.Examples.runDateTime : $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r106) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r102.<java.io.PrintStream: void println(java.lang.String)>($r108)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r102.<java.io.PrintStream: void println(java.lang.String)>($r108) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r109 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r109 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r110 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r110 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r110.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r110.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add 14 mnths in field:in.monthOfYear().addWrapFieldCopy(14):  ")
org.joda.example.time.Examples.runDateTime : $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Add 14 mnths in field:in.monthOfYear().addWrapFieldCopy(14):  ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r112 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property monthOfYear()>()
org.joda.example.time.Examples.runDateTime : $r112 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime$Property monthOfYear()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r113 = virtualinvoke $r112.<org.joda.time.DateTime$Property: org.joda.time.DateTime addWrapFieldToCopy(int)>(14)
org.joda.example.time.Examples.runDateTime : $r113 = virtualinvoke $r112.<org.joda.time.DateTime$Property: org.joda.time.DateTime addWrapFieldToCopy(int)>(14) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r114 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r113)
org.joda.example.time.Examples.runDateTime : $r114 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r113) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r109.<java.io.PrintStream: void println(java.lang.String)>($r115)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r109.<java.io.PrintStream: void println(java.lang.String)>($r115) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r116 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r116 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r116.<java.io.PrintStream: void println(java.lang.String)>("...")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r116.<java.io.PrintStream: void println(java.lang.String)>("...") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r117 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r117 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r118 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r118 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r118.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r118.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to Instant:   in.toInstant():           ")
org.joda.example.time.Examples.runDateTime : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to Instant:   in.toInstant():           ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r120 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.Instant toInstant()>()
org.joda.example.time.Examples.runDateTime : $r120 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.Instant toInstant()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r120)
org.joda.example.time.Examples.runDateTime : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r120) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r117.<java.io.PrintStream: void println(java.lang.String)>($r122)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r117.<java.io.PrintStream: void println(java.lang.String)>($r122) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r123 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r123 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r124 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r124 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r124.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r124.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to DateTime:  in.toDateTime():          ")
org.joda.example.time.Examples.runDateTime : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to DateTime:  in.toDateTime():          ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r126 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>()
org.joda.example.time.Examples.runDateTime : $r126 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r126)
org.joda.example.time.Examples.runDateTime : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r126) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r123.<java.io.PrintStream: void println(java.lang.String)>($r128)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r123.<java.io.PrintStream: void println(java.lang.String)>($r128) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r129 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r129 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r130 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r130 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r130.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r130.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to MutableDT: in.toMutableDateTime():   ")
org.joda.example.time.Examples.runDateTime : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to MutableDT: in.toMutableDateTime():   ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r132 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.MutableDateTime toMutableDateTime()>()
org.joda.example.time.Examples.runDateTime : $r132 = virtualinvoke r2.<org.joda.time.DateTime: org.joda.time.MutableDateTime toMutableDateTime()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r132)
org.joda.example.time.Examples.runDateTime : $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r132) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r129.<java.io.PrintStream: void println(java.lang.String)>($r134)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r129.<java.io.PrintStream: void println(java.lang.String)>($r134) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r135 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r135 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r136 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r136 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r136.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r136.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to Date:      in.toDate():              ")
org.joda.example.time.Examples.runDateTime : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to Date:      in.toDate():              ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r138 = virtualinvoke r2.<org.joda.time.DateTime: java.util.Date toDate()>()
org.joda.example.time.Examples.runDateTime : $r138 = virtualinvoke r2.<org.joda.time.DateTime: java.util.Date toDate()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r139 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r138)
org.joda.example.time.Examples.runDateTime : $r139 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r138) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r135.<java.io.PrintStream: void println(java.lang.String)>($r140)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r135.<java.io.PrintStream: void println(java.lang.String)>($r140) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r141 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r141 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r142 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r142 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r142.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r142.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to Calendar:  in.toCalendar(Locale.UK): ")
org.joda.example.time.Examples.runDateTime : $r143 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to Calendar:  in.toCalendar(Locale.UK): ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r144 = <java.util.Locale: java.util.Locale UK>
org.joda.example.time.Examples.runDateTime : $r144 = <java.util.Locale: java.util.Locale UK> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r145 = virtualinvoke r2.<org.joda.time.DateTime: java.util.Calendar toCalendar(java.util.Locale)>($r144)
org.joda.example.time.Examples.runDateTime : $r145 = virtualinvoke r2.<org.joda.time.DateTime: java.util.Calendar toCalendar(java.util.Locale)>($r144) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r146 = virtualinvoke $r145.<java.util.Calendar: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r146 = virtualinvoke $r145.<java.util.Calendar: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r147 = virtualinvoke $r146.<java.lang.String: java.lang.String substring(int,int)>(0, 46)
org.joda.example.time.Examples.runDateTime : $r147 = virtualinvoke $r146.<java.lang.String: java.lang.String substring(int,int)>(0, 46) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r148 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147)
org.joda.example.time.Examples.runDateTime : $r148 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r141.<java.io.PrintStream: void println(java.lang.String)>($r149)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r141.<java.io.PrintStream: void println(java.lang.String)>($r149) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r150 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r150 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r151 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r151 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r151.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r151.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to GregCal:   in.toGregorianCalendar(): ")
org.joda.example.time.Examples.runDateTime : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Convert to GregCal:   in.toGregorianCalendar(): ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r153 = virtualinvoke r2.<org.joda.time.DateTime: java.util.GregorianCalendar toGregorianCalendar()>()
org.joda.example.time.Examples.runDateTime : $r153 = virtualinvoke r2.<org.joda.time.DateTime: java.util.GregorianCalendar toGregorianCalendar()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r154 = virtualinvoke $r153.<java.util.GregorianCalendar: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r154 = virtualinvoke $r153.<java.util.GregorianCalendar: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r155 = virtualinvoke $r154.<java.lang.String: java.lang.String substring(int,int)>(0, 46)
org.joda.example.time.Examples.runDateTime : $r155 = virtualinvoke $r154.<java.lang.String: java.lang.String substring(int,int)>(0, 46) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r156 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155)
org.joda.example.time.Examples.runDateTime : $r156 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r155) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r150.<java.io.PrintStream: void println(java.lang.String)>($r157)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r150.<java.io.PrintStream: void println(java.lang.String)>($r157) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r158 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r158 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r158.<java.io.PrintStream: void println(java.lang.String)>("")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r158.<java.io.PrintStream: void println(java.lang.String)>("") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r159 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r159 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>("                      in2 = new DateTime(in.getMillis() + 10)")
org.joda.example.time.Examples.runDateTime : virtualinvoke $r159.<java.io.PrintStream: void println(java.lang.String)>("                      in2 = new DateTime(in.getMillis() + 10)") >>>>>>>> org.joda.example.time.Examples.runDateTime : $r160 = new org.joda.time.DateTime
org.joda.example.time.Examples.runDateTime : $r160 = new org.joda.time.DateTime >>>>>>>> org.joda.example.time.Examples.runDateTime : $l7 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>()
org.joda.example.time.Examples.runDateTime : $l7 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $l8 = $l7 + 10L
org.joda.example.time.Examples.runDateTime : $l8 = $l7 + 10L >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r160.<org.joda.time.DateTime: void <init>(long)>($l8)
org.joda.example.time.Examples.runDateTime : specialinvoke $r160.<org.joda.time.DateTime: void <init>(long)>($l8) >>>>>>>> org.joda.example.time.Examples.runDateTime : r3 = $r160
org.joda.example.time.Examples.runDateTime : r3 = $r160 >>>>>>>> org.joda.example.time.Examples.runDateTime : $r161 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r161 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r162 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r162 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r162.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r162.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Equals ms and chrono: in.equals(in2):           ")
org.joda.example.time.Examples.runDateTime : $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Equals ms and chrono: in.equals(in2):           ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $z0 = virtualinvoke r2.<org.joda.time.DateTime: boolean equals(java.lang.Object)>(r3)
org.joda.example.time.Examples.runDateTime : $z0 = virtualinvoke r2.<org.joda.time.DateTime: boolean equals(java.lang.Object)>(r3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0)
org.joda.example.time.Examples.runDateTime : $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r165 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r161.<java.io.PrintStream: void println(java.lang.String)>($r165)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r161.<java.io.PrintStream: void println(java.lang.String)>($r165) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r166 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r166 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r167 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r167 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r167.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r167.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.compareTo(in2):        ")
org.joda.example.time.Examples.runDateTime : $r168 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.compareTo(in2):        ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $i9 = virtualinvoke r2.<org.joda.time.DateTime: int compareTo(org.joda.time.ReadableInstant)>(r3)
org.joda.example.time.Examples.runDateTime : $i9 = virtualinvoke r2.<org.joda.time.DateTime: int compareTo(org.joda.time.ReadableInstant)>(r3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9)
org.joda.example.time.Examples.runDateTime : $r169 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r166.<java.io.PrintStream: void println(java.lang.String)>($r170)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r166.<java.io.PrintStream: void println(java.lang.String)>($r170) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r171 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r171 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r172 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r172 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r172.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r172.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.isEqual(in2):          ")
org.joda.example.time.Examples.runDateTime : $r173 = virtualinvoke $r172.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.isEqual(in2):          ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $z1 = virtualinvoke r2.<org.joda.time.DateTime: boolean isEqual(org.joda.time.ReadableInstant)>(r3)
org.joda.example.time.Examples.runDateTime : $z1 = virtualinvoke r2.<org.joda.time.DateTime: boolean isEqual(org.joda.time.ReadableInstant)>(r3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1)
org.joda.example.time.Examples.runDateTime : $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r175 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r171.<java.io.PrintStream: void println(java.lang.String)>($r175)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r171.<java.io.PrintStream: void println(java.lang.String)>($r175) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r176 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r176 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r177 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r177 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r177.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r177.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.isAfter(in2):          ")
org.joda.example.time.Examples.runDateTime : $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.isAfter(in2):          ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $z2 = virtualinvoke r2.<org.joda.time.DateTime: boolean isAfter(org.joda.time.ReadableInstant)>(r3)
org.joda.example.time.Examples.runDateTime : $z2 = virtualinvoke r2.<org.joda.time.DateTime: boolean isAfter(org.joda.time.ReadableInstant)>(r3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2)
org.joda.example.time.Examples.runDateTime : $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r180 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r176.<java.io.PrintStream: void println(java.lang.String)>($r180)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r176.<java.io.PrintStream: void println(java.lang.String)>($r180) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r181 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.Examples.runDateTime : $r181 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.Examples.runDateTime : $r182 = new java.lang.StringBuilder
org.joda.example.time.Examples.runDateTime : $r182 = new java.lang.StringBuilder >>>>>>>> org.joda.example.time.Examples.runDateTime : specialinvoke $r182.<java.lang.StringBuilder: void <init>()>()
org.joda.example.time.Examples.runDateTime : specialinvoke $r182.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.isBefore(in2):         ")
org.joda.example.time.Examples.runDateTime : $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Compare millisecond:  in.isBefore(in2):         ") >>>>>>>> org.joda.example.time.Examples.runDateTime : $z3 = virtualinvoke r2.<org.joda.time.DateTime: boolean isBefore(org.joda.time.ReadableInstant)>(r3)
org.joda.example.time.Examples.runDateTime : $z3 = virtualinvoke r2.<org.joda.time.DateTime: boolean isBefore(org.joda.time.ReadableInstant)>(r3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3)
org.joda.example.time.Examples.runDateTime : $r184 = virtualinvoke $r183.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3) >>>>>>>> org.joda.example.time.Examples.runDateTime : $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.example.time.Examples.runDateTime : $r185 = virtualinvoke $r184.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.example.time.Examples.runDateTime : virtualinvoke $r181.<java.io.PrintStream: void println(java.lang.String)>($r185)
org.joda.example.time.Examples.runDateTime : virtualinvoke $r181.<java.io.PrintStream: void println(java.lang.String)>($r185) >>>>>>>> org.joda.example.time.Examples.runDateTime : return
