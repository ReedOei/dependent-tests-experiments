org.joda.time.DateTimeComparator.getInstance : if r0 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : if r1 != null
org.joda.time.DateTimeComparator.getInstance : if r0 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>()
org.joda.time.DateTimeComparator.getInstance : $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>() >>>>>>>> org.joda.time.DateTimeComparator.getInstance : if r0 != $r2
org.joda.time.DateTimeComparator.getInstance : if r0 != $r2 >>>>>>>> org.joda.time.DateTimeComparator.getInstance : if r1 != null
org.joda.time.DateTimeComparator.getInstance : if r0 != $r2 >>>>>>>> org.joda.time.DateTimeComparator.getInstance : if r0 != null
org.joda.time.DateTimeComparator.getInstance : if r0 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>()
org.joda.time.DateTimeComparator.getInstance : if r0 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r7 = new org.joda.time.DateTimeComparator
org.joda.time.DateTimeComparator.getInstance : $r7 = new org.joda.time.DateTimeComparator >>>>>>>> org.joda.time.DateTimeComparator.getInstance : specialinvoke $r7.<org.joda.time.DateTimeComparator: void <init>(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)>(r0, r1)
org.joda.time.DateTimeComparator.getInstance : specialinvoke $r7.<org.joda.time.DateTimeComparator: void <init>(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)>(r0, r1) >>>>>>>> org.joda.time.DateTimeComparator.getInstance : return $r7
org.joda.time.DateTimeComparator.getInstance : $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>() >>>>>>>> org.joda.time.DateTimeComparator.getInstance : if r1 != $r5
org.joda.time.DateTimeComparator.getInstance : if r1 != $r5 >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r6 = <org.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator TIME_INSTANCE>
org.joda.time.DateTimeComparator.getInstance : if r1 != $r5 >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r7 = new org.joda.time.DateTimeComparator
org.joda.time.DateTimeComparator.getInstance : $r6 = <org.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator TIME_INSTANCE> >>>>>>>> org.joda.time.DateTimeComparator.getInstance : return $r6
org.joda.time.DateTimeComparator.getInstance : if r1 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r4 = <org.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator DATE_INSTANCE>
org.joda.time.DateTimeComparator.getInstance : if r1 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : if r0 != null
org.joda.time.DateTimeComparator.getInstance : $r4 = <org.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator DATE_INSTANCE> >>>>>>>> org.joda.time.DateTimeComparator.getInstance : return $r4
org.joda.time.DateTimeComparator.getInstance : if r1 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r3 = <org.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator ALL_INSTANCE>
org.joda.time.DateTimeComparator.getInstance : if r1 != null >>>>>>>> org.joda.time.DateTimeComparator.getInstance : $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>()
org.joda.time.DateTimeComparator.getInstance : $r3 = <org.joda.time.DateTimeComparator: org.joda.time.DateTimeComparator ALL_INSTANCE> >>>>>>>> org.joda.time.DateTimeComparator.getInstance : return $r3
