org.joda.time.base.AbstractInterval.isAfter : if r1 != null >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>()
org.joda.time.base.AbstractInterval.isAfter : if r1 != null >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : l0 = interfaceinvoke r1.<org.joda.time.ReadableInterval: long getEndMillis()>()
org.joda.time.base.AbstractInterval.isAfter : l0 = interfaceinvoke r1.<org.joda.time.ReadableInterval: long getEndMillis()>() >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>()
org.joda.time.base.AbstractInterval.isAfter : $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>() >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : $b2 = $l1 cmp l0
org.joda.time.base.AbstractInterval.isAfter : $b2 = $l1 cmp l0 >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : if $b2 < 0
org.joda.time.base.AbstractInterval.isAfter : if $b2 < 0 >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : $z0 = 1
org.joda.time.base.AbstractInterval.isAfter : if $b2 < 0 >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : $z0 = 0
org.joda.time.base.AbstractInterval.isAfter : $z0 = 0 >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : return $z0
org.joda.time.base.AbstractInterval.isAfter : $z0 = 1 >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : goto [?= return $z0]
org.joda.time.base.AbstractInterval.isAfter : goto [?= return $z0] >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : return $z0
org.joda.time.base.AbstractInterval.isAfter : l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>() >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : goto [?= $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>()]
org.joda.time.base.AbstractInterval.isAfter : goto [?= $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>()] >>>>>>>> org.joda.time.base.AbstractInterval.isAfter : $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>()
