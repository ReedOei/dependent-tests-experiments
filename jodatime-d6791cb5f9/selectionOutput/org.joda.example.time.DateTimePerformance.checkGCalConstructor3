org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i0 = <org.joda.example.time.DateTimePerformance: int COUNT_SLOW> >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $r2 = new java.util.GregorianCalendar
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $r2 = new java.util.GregorianCalendar >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke $r2.<java.util.GregorianCalendar: void <init>(int,int,int)>(1972, 10, 1)
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke $r2.<java.util.GregorianCalendar: void <init>(int,int,int)>(1972, 10, 1) >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : r1 = $r2
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : r1 = $r2 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i1 = 0
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i1 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE> >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i1 >= $i3
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i1 >= $i3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("GCal", "new(YMD)")
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i1 >= $i3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : return
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("GCal", "new(YMD)") >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i2 = 0
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i2 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $r3 = new java.util.GregorianCalendar
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0)
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0) >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i1 = i1 + 1
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i1 = i1 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : goto [?= $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>]
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : goto [?= $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>] >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $r3 = new java.util.GregorianCalendar >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke $r3.<java.util.GregorianCalendar: void <init>(int,int,int)>(1972, 10, 1)
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : specialinvoke $r3.<java.util.GregorianCalendar: void <init>(int,int,int)>(1972, 10, 1) >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : r4 = $r3
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : r4 = $r3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if r4 != null
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if r4 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $r5 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if r4 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i2 = i2 + 1
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i2 = i2 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : goto [?= (branch)]
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : goto [?= (branch)] >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : $r5 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise")
org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise") >>>>>>>> org.joda.example.time.DateTimePerformance.checkGCalConstructor3 : i2 = i2 + 1
