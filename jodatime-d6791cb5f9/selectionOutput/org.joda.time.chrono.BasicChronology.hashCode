org.joda.time.chrono.BasicChronology.hashCode : $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()
org.joda.time.chrono.BasicChronology.hashCode : $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.joda.time.chrono.BasicChronology.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $i1 = $i0 * 11
org.joda.time.chrono.BasicChronology.hashCode : $i1 = $i0 * 11 >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $r3 = virtualinvoke r0.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.BasicChronology.hashCode : $r3 = virtualinvoke r0.<org.joda.time.chrono.BasicChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $i2 = virtualinvoke $r3.<org.joda.time.DateTimeZone: int hashCode()>()
org.joda.time.chrono.BasicChronology.hashCode : $i2 = virtualinvoke $r3.<org.joda.time.DateTimeZone: int hashCode()>() >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $i3 = $i1 + $i2
org.joda.time.chrono.BasicChronology.hashCode : $i3 = $i1 + $i2 >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $i4 = virtualinvoke r0.<org.joda.time.chrono.BasicChronology: int getMinimumDaysInFirstWeek()>()
org.joda.time.chrono.BasicChronology.hashCode : $i4 = virtualinvoke r0.<org.joda.time.chrono.BasicChronology: int getMinimumDaysInFirstWeek()>() >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : $i5 = $i3 + $i4
org.joda.time.chrono.BasicChronology.hashCode : $i5 = $i3 + $i4 >>>>>>>> org.joda.time.chrono.BasicChronology.hashCode : return $i5
