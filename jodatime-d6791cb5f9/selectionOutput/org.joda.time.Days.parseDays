org.joda.time.Days.parseDays : if r0 != null >>>>>>>> org.joda.time.Days.parseDays : $r2 = <org.joda.time.Days: org.joda.time.Days ZERO>
org.joda.time.Days.parseDays : if r0 != null >>>>>>>> org.joda.time.Days.parseDays : $r3 = <org.joda.time.Days: org.joda.time.format.PeriodFormatter PARSER>
org.joda.time.Days.parseDays : $r3 = <org.joda.time.Days: org.joda.time.format.PeriodFormatter PARSER> >>>>>>>> org.joda.time.Days.parseDays : r1 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatter: org.joda.time.Period parsePeriod(java.lang.String)>(r0)
org.joda.time.Days.parseDays : r1 = virtualinvoke $r3.<org.joda.time.format.PeriodFormatter: org.joda.time.Period parsePeriod(java.lang.String)>(r0) >>>>>>>> org.joda.time.Days.parseDays : $i0 = virtualinvoke r1.<org.joda.time.Period: int getDays()>()
org.joda.time.Days.parseDays : $i0 = virtualinvoke r1.<org.joda.time.Period: int getDays()>() >>>>>>>> org.joda.time.Days.parseDays : $r4 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i0)
org.joda.time.Days.parseDays : $r4 = staticinvoke <org.joda.time.Days: org.joda.time.Days days(int)>($i0) >>>>>>>> org.joda.time.Days.parseDays : return $r4
org.joda.time.Days.parseDays : $r2 = <org.joda.time.Days: org.joda.time.Days ZERO> >>>>>>>> org.joda.time.Days.parseDays : return $r2
