org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$SimpleAffix: java.lang.String iText> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : i1 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : i1 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r2, 0, i1)
org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : $z0 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i0, r2, 0, i1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : if $z0 == 0
org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : $i2 = i0 + i1
org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : if $z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : $i3 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : $i3 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : return $i3
org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : $i2 = i0 + i1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse : return $i2
