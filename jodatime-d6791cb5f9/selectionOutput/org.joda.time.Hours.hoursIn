org.joda.time.Hours.hoursIn : if r0 != null >>>>>>>> org.joda.time.Hours.hoursIn : $r2 = <org.joda.time.Hours: org.joda.time.Hours ZERO>
org.joda.time.Hours.hoursIn : if r0 != null >>>>>>>> org.joda.time.Hours.hoursIn : $r3 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getStart()>()
org.joda.time.Hours.hoursIn : $r3 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getStart()>() >>>>>>>> org.joda.time.Hours.hoursIn : $r4 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getEnd()>()
org.joda.time.Hours.hoursIn : $r4 = interfaceinvoke r0.<org.joda.time.ReadableInterval: org.joda.time.DateTime getEnd()>() >>>>>>>> org.joda.time.Hours.hoursIn : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>()
org.joda.time.Hours.hoursIn : $r1 = staticinvoke <org.joda.time.DurationFieldType: org.joda.time.DurationFieldType hours()>() >>>>>>>> org.joda.time.Hours.hoursIn : i0 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)>($r3, $r4, $r1)
org.joda.time.Hours.hoursIn : i0 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)>($r3, $r4, $r1) >>>>>>>> org.joda.time.Hours.hoursIn : $r5 = staticinvoke <org.joda.time.Hours: org.joda.time.Hours hours(int)>(i0)
org.joda.time.Hours.hoursIn : $r5 = staticinvoke <org.joda.time.Hours: org.joda.time.Hours hours(int)>(i0) >>>>>>>> org.joda.time.Hours.hoursIn : return $r5
org.joda.time.Hours.hoursIn : $r2 = <org.joda.time.Hours: org.joda.time.Hours ZERO> >>>>>>>> org.joda.time.Hours.hoursIn : return $r2
