org.joda.time.chrono.BuddhistChronology.getInstance : if r0 != null >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
org.joda.time.chrono.BuddhistChronology.getInstance : if r0 != null >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r3 = <org.joda.time.chrono.BuddhistChronology: java.util.Map cCache>
org.joda.time.chrono.BuddhistChronology.getInstance : $r3 = <org.joda.time.chrono.BuddhistChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.joda.time.chrono.BuddhistChronology.getInstance : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : r1 = (org.joda.time.chrono.BuddhistChronology) $r4
org.joda.time.chrono.BuddhistChronology.getInstance : r1 = (org.joda.time.chrono.BuddhistChronology) $r4 >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : if r1 != null
org.joda.time.chrono.BuddhistChronology.getInstance : if r1 != null >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r5 = new org.joda.time.chrono.BuddhistChronology
org.joda.time.chrono.BuddhistChronology.getInstance : if r1 != null >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : return r1
org.joda.time.chrono.BuddhistChronology.getInstance : $r5 = new org.joda.time.chrono.BuddhistChronology >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r6 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant)>(r0, null)
org.joda.time.chrono.BuddhistChronology.getInstance : $r6 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant)>(r0, null) >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : specialinvoke $r5.<org.joda.time.chrono.BuddhistChronology: void <init>(org.joda.time.Chronology,java.lang.Object)>($r6, null)
org.joda.time.chrono.BuddhistChronology.getInstance : specialinvoke $r5.<org.joda.time.chrono.BuddhistChronology: void <init>(org.joda.time.Chronology,java.lang.Object)>($r6, null) >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : r7 = $r5
org.joda.time.chrono.BuddhistChronology.getInstance : r7 = $r5 >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r8 = new org.joda.time.DateTime
org.joda.time.chrono.BuddhistChronology.getInstance : $r8 = new org.joda.time.DateTime >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : specialinvoke $r8.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>(1, 1, 1, 0, 0, 0, 0, r7)
org.joda.time.chrono.BuddhistChronology.getInstance : specialinvoke $r8.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>(1, 1, 1, 0, 0, 0, 0, r7) >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : r2 = $r8
org.joda.time.chrono.BuddhistChronology.getInstance : r2 = $r8 >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r9 = new org.joda.time.chrono.BuddhistChronology
org.joda.time.chrono.BuddhistChronology.getInstance : $r9 = new org.joda.time.chrono.BuddhistChronology >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r10 = staticinvoke <org.joda.time.chrono.LimitChronology: org.joda.time.chrono.LimitChronology getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)>(r7, r2, null)
org.joda.time.chrono.BuddhistChronology.getInstance : $r10 = staticinvoke <org.joda.time.chrono.LimitChronology: org.joda.time.chrono.LimitChronology getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)>(r7, r2, null) >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : specialinvoke $r9.<org.joda.time.chrono.BuddhistChronology: void <init>(org.joda.time.Chronology,java.lang.Object)>($r10, "")
org.joda.time.chrono.BuddhistChronology.getInstance : specialinvoke $r9.<org.joda.time.chrono.BuddhistChronology: void <init>(org.joda.time.Chronology,java.lang.Object)>($r10, "") >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : r1 = $r9
org.joda.time.chrono.BuddhistChronology.getInstance : r1 = $r9 >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r11 = <org.joda.time.chrono.BuddhistChronology: java.util.Map cCache>
org.joda.time.chrono.BuddhistChronology.getInstance : $r11 = <org.joda.time.chrono.BuddhistChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)
org.joda.time.chrono.BuddhistChronology.getInstance : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1) >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : return r1
org.joda.time.chrono.BuddhistChronology.getInstance : r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.getInstance : $r3 = <org.joda.time.chrono.BuddhistChronology: java.util.Map cCache>
