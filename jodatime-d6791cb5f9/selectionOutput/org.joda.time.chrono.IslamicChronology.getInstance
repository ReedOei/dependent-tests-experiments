org.joda.time.chrono.IslamicChronology.getInstance : if r0 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
org.joda.time.chrono.IslamicChronology.getInstance : if r0 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r7 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache>
org.joda.time.chrono.IslamicChronology.getInstance : $r7 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r2 = $r7
org.joda.time.chrono.IslamicChronology.getInstance : r2 = $r7 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : entermonitor $r7
org.joda.time.chrono.IslamicChronology.getInstance : entermonitor $r7 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r8 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache>
org.joda.time.chrono.IslamicChronology.getInstance : entermonitor $r7 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r6 = $r22 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2
org.joda.time.chrono.IslamicChronology.getInstance : r6 = $r22 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : throw r6
org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r8 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
org.joda.time.chrono.IslamicChronology.getInstance : $r8 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r3 = (org.joda.time.chrono.IslamicChronology[]) $r9
org.joda.time.chrono.IslamicChronology.getInstance : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r3 = (org.joda.time.chrono.IslamicChronology[]) $r9 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : if r3 != null
org.joda.time.chrono.IslamicChronology.getInstance : r3 = (org.joda.time.chrono.IslamicChronology[]) $r9 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : if r3 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r3 = newarray (org.joda.time.chrono.IslamicChronology)[4]
org.joda.time.chrono.IslamicChronology.getInstance : if r3 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $b0 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>
org.joda.time.chrono.IslamicChronology.getInstance : if r3 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $b0 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r4 = r3[$b0]
org.joda.time.chrono.IslamicChronology.getInstance : $b0 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r4 = r3[$b0] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : if r4 != null
org.joda.time.chrono.IslamicChronology.getInstance : r4 = r3[$b0] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : if r4 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r12 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>
org.joda.time.chrono.IslamicChronology.getInstance : if r4 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2
org.joda.time.chrono.IslamicChronology.getInstance : if r4 != null >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : goto [?= return r4]
org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : goto [?= return r4] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : return r4
org.joda.time.chrono.IslamicChronology.getInstance : $r12 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : if r0 != $r12
org.joda.time.chrono.IslamicChronology.getInstance : $r12 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : if r0 != $r12 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r13 = new org.joda.time.chrono.IslamicChronology
org.joda.time.chrono.IslamicChronology.getInstance : if r0 != $r12 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r18 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>
org.joda.time.chrono.IslamicChronology.getInstance : if r0 != $r12 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r18 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r19 = staticinvoke <org.joda.time.chrono.IslamicChronology: org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r18, r1)
org.joda.time.chrono.IslamicChronology.getInstance : $r18 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r19 = staticinvoke <org.joda.time.chrono.IslamicChronology: org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r18, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r20 = new org.joda.time.chrono.IslamicChronology
org.joda.time.chrono.IslamicChronology.getInstance : r19 = staticinvoke <org.joda.time.chrono.IslamicChronology: org.joda.time.chrono.IslamicChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r18, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r20 = new org.joda.time.chrono.IslamicChronology >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r21 = staticinvoke <org.joda.time.chrono.ZonedChronology: org.joda.time.chrono.ZonedChronology getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)>(r19, r0)
org.joda.time.chrono.IslamicChronology.getInstance : $r20 = new org.joda.time.chrono.IslamicChronology >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r21 = staticinvoke <org.joda.time.chrono.ZonedChronology: org.joda.time.chrono.ZonedChronology getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)>(r19, r0) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r20.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r21, null, r1)
org.joda.time.chrono.IslamicChronology.getInstance : $r21 = staticinvoke <org.joda.time.chrono.ZonedChronology: org.joda.time.chrono.ZonedChronology getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)>(r19, r0) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r20.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r21, null, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r4 = $r20
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r20.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r21, null, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r4 = $r20 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>
org.joda.time.chrono.IslamicChronology.getInstance : r4 = $r20 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r3[$b1] = r4
org.joda.time.chrono.IslamicChronology.getInstance : $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r3[$b1] = r4 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : exitmonitor r2
org.joda.time.chrono.IslamicChronology.getInstance : r3[$b1] = r4 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r13 = new org.joda.time.chrono.IslamicChronology >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r13.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>(null, null, r1)
org.joda.time.chrono.IslamicChronology.getInstance : $r13 = new org.joda.time.chrono.IslamicChronology >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r13.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>(null, null, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r14 = $r13
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r13.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>(null, null, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r14 = $r13 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r15 = new org.joda.time.DateTime
org.joda.time.chrono.IslamicChronology.getInstance : r14 = $r13 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r15 = new org.joda.time.DateTime >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r15.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>(1, 1, 1, 0, 0, 0, 0, r14)
org.joda.time.chrono.IslamicChronology.getInstance : $r15 = new org.joda.time.DateTime >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r15.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>(1, 1, 1, 0, 0, 0, 0, r14) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r5 = $r15
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r15.<org.joda.time.DateTime: void <init>(int,int,int,int,int,int,int,org.joda.time.Chronology)>(1, 1, 1, 0, 0, 0, 0, r14) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r5 = $r15 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r16 = new org.joda.time.chrono.IslamicChronology
org.joda.time.chrono.IslamicChronology.getInstance : r5 = $r15 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r16 = new org.joda.time.chrono.IslamicChronology >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r17 = staticinvoke <org.joda.time.chrono.LimitChronology: org.joda.time.chrono.LimitChronology getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)>(r14, r5, null)
org.joda.time.chrono.IslamicChronology.getInstance : $r16 = new org.joda.time.chrono.IslamicChronology >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r17 = staticinvoke <org.joda.time.chrono.LimitChronology: org.joda.time.chrono.LimitChronology getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)>(r14, r5, null) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r16.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r17, null, r1)
org.joda.time.chrono.IslamicChronology.getInstance : $r17 = staticinvoke <org.joda.time.chrono.LimitChronology: org.joda.time.chrono.LimitChronology getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)>(r14, r5, null) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r16.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r17, null, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : r4 = $r16
org.joda.time.chrono.IslamicChronology.getInstance : specialinvoke $r16.<org.joda.time.chrono.IslamicChronology: void <init>(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)>($r17, null, r1) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r4 = $r16 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : goto [?= $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>]
org.joda.time.chrono.IslamicChronology.getInstance : r4 = $r16 >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : goto [?= $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>
org.joda.time.chrono.IslamicChronology.getInstance : goto [?= $b1 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r3 = newarray (org.joda.time.chrono.IslamicChronology)[4] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r10 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache>
org.joda.time.chrono.IslamicChronology.getInstance : r3 = newarray (org.joda.time.chrono.IslamicChronology)[4] >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : $r10 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3)
org.joda.time.chrono.IslamicChronology.getInstance : $r10 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache> >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $b0 = r1.<org.joda.time.chrono.IslamicChronology$LeapYearPatternType: byte index>
org.joda.time.chrono.IslamicChronology.getInstance : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r3) >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r22 := @caughtexception
org.joda.time.chrono.IslamicChronology.getInstance : r0 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>() >>>>>>>> org.joda.time.chrono.IslamicChronology.getInstance : $r7 = <org.joda.time.chrono.IslamicChronology: java.util.Map cCache>
