org.joda.time.base.AbstractInterval.toString : r1 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>() >>>>>>>> org.joda.time.base.AbstractInterval.toString : $r3 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: org.joda.time.Chronology getChronology()>()
org.joda.time.base.AbstractInterval.toString : $r3 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.base.AbstractInterval.toString : r4 = virtualinvoke r1.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r3)
org.joda.time.base.AbstractInterval.toString : r4 = virtualinvoke r1.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withChronology(org.joda.time.Chronology)>($r3) >>>>>>>> org.joda.time.base.AbstractInterval.toString : $r5 = new java.lang.StringBuffer
org.joda.time.base.AbstractInterval.toString : $r5 = new java.lang.StringBuffer >>>>>>>> org.joda.time.base.AbstractInterval.toString : specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(48)
org.joda.time.base.AbstractInterval.toString : specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(48) >>>>>>>> org.joda.time.base.AbstractInterval.toString : r2 = $r5
org.joda.time.base.AbstractInterval.toString : r2 = $r5 >>>>>>>> org.joda.time.base.AbstractInterval.toString : $l0 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>()
org.joda.time.base.AbstractInterval.toString : $l0 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getStartMillis()>() >>>>>>>> org.joda.time.base.AbstractInterval.toString : virtualinvoke r4.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>(r2, $l0)
org.joda.time.base.AbstractInterval.toString : virtualinvoke r4.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>(r2, $l0) >>>>>>>> org.joda.time.base.AbstractInterval.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47)
org.joda.time.base.AbstractInterval.toString : virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47) >>>>>>>> org.joda.time.base.AbstractInterval.toString : $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getEndMillis()>()
org.joda.time.base.AbstractInterval.toString : $l1 = virtualinvoke r0.<org.joda.time.base.AbstractInterval: long getEndMillis()>() >>>>>>>> org.joda.time.base.AbstractInterval.toString : virtualinvoke r4.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>(r2, $l1)
org.joda.time.base.AbstractInterval.toString : virtualinvoke r4.<org.joda.time.format.DateTimeFormatter: void printTo(java.lang.StringBuffer,long)>(r2, $l1) >>>>>>>> org.joda.time.base.AbstractInterval.toString : $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>()
org.joda.time.base.AbstractInterval.toString : $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.joda.time.base.AbstractInterval.toString : return $r7
