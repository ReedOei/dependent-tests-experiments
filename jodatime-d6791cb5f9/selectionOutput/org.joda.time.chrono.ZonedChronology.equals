org.joda.time.chrono.ZonedChronology.equals : if r0 != r1 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : return 1
org.joda.time.chrono.ZonedChronology.equals : if r0 != r1 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $z0 = r1 instanceof org.joda.time.chrono.ZonedChronology
org.joda.time.chrono.ZonedChronology.equals : $z0 = r1 instanceof org.joda.time.chrono.ZonedChronology >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : if $z0 != 0
org.joda.time.chrono.ZonedChronology.equals : if $z0 != 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : return 0
org.joda.time.chrono.ZonedChronology.equals : if $z0 != 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : r2 = (org.joda.time.chrono.ZonedChronology) r1
org.joda.time.chrono.ZonedChronology.equals : r2 = (org.joda.time.chrono.ZonedChronology) r1 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $r3 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.ZonedChronology.equals : $r3 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $r4 = virtualinvoke r2.<org.joda.time.chrono.ZonedChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.ZonedChronology.equals : $r4 = virtualinvoke r2.<org.joda.time.chrono.ZonedChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.joda.time.chrono.ZonedChronology.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : if $z1 == 0
org.joda.time.chrono.ZonedChronology.equals : if $z1 == 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $r5 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.ZonedChronology.equals : if $z1 == 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $z3 = 0
org.joda.time.chrono.ZonedChronology.equals : $z3 = 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : return $z3
org.joda.time.chrono.ZonedChronology.equals : $r5 = virtualinvoke r0.<org.joda.time.chrono.ZonedChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $r6 = virtualinvoke r2.<org.joda.time.chrono.ZonedChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.ZonedChronology.equals : $r6 = virtualinvoke r2.<org.joda.time.chrono.ZonedChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $z2 = virtualinvoke $r5.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r6)
org.joda.time.chrono.ZonedChronology.equals : $z2 = virtualinvoke $r5.<org.joda.time.DateTimeZone: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : if $z2 == 0
org.joda.time.chrono.ZonedChronology.equals : if $z2 == 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $z3 = 1
org.joda.time.chrono.ZonedChronology.equals : if $z2 == 0 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : $z3 = 0
org.joda.time.chrono.ZonedChronology.equals : $z3 = 1 >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : goto [?= return $z3]
org.joda.time.chrono.ZonedChronology.equals : goto [?= return $z3] >>>>>>>> org.joda.time.chrono.ZonedChronology.equals : return $z3
