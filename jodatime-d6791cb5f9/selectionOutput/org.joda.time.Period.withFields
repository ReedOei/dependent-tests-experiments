org.joda.time.Period.withFields : if r1 != null >>>>>>>> org.joda.time.Period.withFields : return r0
org.joda.time.Period.withFields : if r1 != null >>>>>>>> org.joda.time.Period.withFields : r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>()
org.joda.time.Period.withFields : r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>() >>>>>>>> org.joda.time.Period.withFields : r3 = specialinvoke r0.<org.joda.time.base.BasePeriod: int[] mergePeriodInto(int[],org.joda.time.ReadablePeriod)>(r2, r1)
org.joda.time.Period.withFields : r3 = specialinvoke r0.<org.joda.time.base.BasePeriod: int[] mergePeriodInto(int[],org.joda.time.ReadablePeriod)>(r2, r1) >>>>>>>> org.joda.time.Period.withFields : $r4 = new org.joda.time.Period
org.joda.time.Period.withFields : $r4 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.withFields : $r5 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.Period.withFields : $r5 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>() >>>>>>>> org.joda.time.Period.withFields : specialinvoke $r4.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r3, $r5)
org.joda.time.Period.withFields : specialinvoke $r4.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r3, $r5) >>>>>>>> org.joda.time.Period.withFields : return $r4
