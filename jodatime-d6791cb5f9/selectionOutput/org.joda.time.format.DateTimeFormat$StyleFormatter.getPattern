org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = null >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType>
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType> >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : tableswitch($i0) {     case 0:
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : tableswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i1 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : tableswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i2 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : tableswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i3 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : tableswitch($i0) {     case 0: >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $z0 = r2 instanceof java.text.SimpleDateFormat
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $z0 = r2 instanceof java.text.SimpleDateFormat >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : if $z0 != 0
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : if $z0 != 0 >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r3 = new java.lang.IllegalArgumentException
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : if $z0 != 0 >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r8 = (java.text.SimpleDateFormat) r2
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r8 = (java.text.SimpleDateFormat) r2 >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r9 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.lang.String toPattern()>()
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r9 = virtualinvoke $r8.<java.text.SimpleDateFormat: java.lang.String toPattern()>() >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : return $r9
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r4 = new java.lang.StringBuilder
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r4 = new java.lang.StringBuilder >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No datetime pattern for locale: ")
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No datetime pattern for locale: ") >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : throw $r3
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i3 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle> >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i4 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i4 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle> >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>($i3, $i4, r1)
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>($i3, $i4, r1) >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $z0 = r2 instanceof java.text.SimpleDateFormat
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i2 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle> >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i2, r1)
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i2, r1) >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : goto [?= $z0 = r2 instanceof java.text.SimpleDateFormat]
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : goto [?= $z0 = r2 instanceof java.text.SimpleDateFormat] >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $z0 = r2 instanceof java.text.SimpleDateFormat
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $i1 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle> >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i1, r1)
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i1, r1) >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : goto [?= $z0 = r2 instanceof java.text.SimpleDateFormat]
org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : goto [?= $z0 = r2 instanceof java.text.SimpleDateFormat] >>>>>>>> org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern : $z0 = r2 instanceof java.text.SimpleDateFormat
