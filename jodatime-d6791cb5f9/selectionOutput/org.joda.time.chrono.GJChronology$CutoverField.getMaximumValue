org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : r3 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstanceUTC()>() >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : l0 = 0L
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : l0 = 0L >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i1 = 0
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i1 = 0 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i2 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int size()>()
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i2 = interfaceinvoke r1.<org.joda.time.ReadablePartial: int size()>() >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if i1 >= i2
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if i1 >= i2 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $r5 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i1)
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if i1 >= i2 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i6 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$CutoverField: int getMaximumValue(long)>(l0)
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i6 = virtualinvoke r0.<org.joda.time.chrono.GJChronology$CutoverField: int getMaximumValue(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : return $i6
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $r5 = interfaceinvoke r1.<org.joda.time.ReadablePartial: org.joda.time.DateTimeFieldType getFieldType(int)>(i1) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : r4 = virtualinvoke $r5.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r3)
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : r4 = virtualinvoke $r5.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>(r3) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i3 = r2[i1]
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i3 = r2[i1] >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i4 = virtualinvoke r4.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0)
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i4 = virtualinvoke r4.<org.joda.time.DateTimeField: int getMaximumValue(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if $i3 > $i4
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if $i3 > $i4 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i5 = r2[i1]
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if $i3 > $i4 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i1 = i1 + 1
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i1 = i1 + 1 >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : goto [?= (branch)]
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : goto [?= (branch)] >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : if i1 >= i2
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : $i5 = r2[i1] >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : l0 = virtualinvoke r4.<org.joda.time.DateTimeField: long set(long,int)>(l0, $i5)
org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : l0 = virtualinvoke r4.<org.joda.time.DateTimeField: long set(long,int)>(l0, $i5) >>>>>>>> org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue : i1 = i1 + 1
