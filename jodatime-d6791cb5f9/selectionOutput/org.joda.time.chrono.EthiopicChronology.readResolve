org.joda.time.chrono.EthiopicChronology.readResolve : r1 = virtualinvoke r0.<org.joda.time.chrono.EthiopicChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : if r1 != null
org.joda.time.chrono.EthiopicChronology.readResolve : if r1 != null >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>
org.joda.time.chrono.EthiopicChronology.readResolve : if r1 != null >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.EthiopicChronology.readResolve : $r4 = virtualinvoke r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : $i1 = virtualinvoke r0.<org.joda.time.chrono.EthiopicChronology: int getMinimumDaysInFirstWeek()>()
org.joda.time.chrono.EthiopicChronology.readResolve : $i1 = virtualinvoke r0.<org.joda.time.chrono.EthiopicChronology: int getMinimumDaysInFirstWeek()>() >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : $r3 = staticinvoke <org.joda.time.chrono.EthiopicChronology: org.joda.time.chrono.EthiopicChronology getInstance(org.joda.time.DateTimeZone,int)>($r4, $i1)
org.joda.time.chrono.EthiopicChronology.readResolve : $r3 = staticinvoke <org.joda.time.chrono.EthiopicChronology: org.joda.time.chrono.EthiopicChronology getInstance(org.joda.time.DateTimeZone,int)>($r4, $i1) >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : return $r3
org.joda.time.chrono.EthiopicChronology.readResolve : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : $i0 = virtualinvoke r0.<org.joda.time.chrono.EthiopicChronology: int getMinimumDaysInFirstWeek()>()
org.joda.time.chrono.EthiopicChronology.readResolve : $i0 = virtualinvoke r0.<org.joda.time.chrono.EthiopicChronology: int getMinimumDaysInFirstWeek()>() >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : $r3 = staticinvoke <org.joda.time.chrono.EthiopicChronology: org.joda.time.chrono.EthiopicChronology getInstance(org.joda.time.DateTimeZone,int)>($r2, $i0)
org.joda.time.chrono.EthiopicChronology.readResolve : $r3 = staticinvoke <org.joda.time.chrono.EthiopicChronology: org.joda.time.chrono.EthiopicChronology getInstance(org.joda.time.DateTimeZone,int)>($r2, $i0) >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : goto [?= return $r3]
org.joda.time.chrono.EthiopicChronology.readResolve : goto [?= return $r3] >>>>>>>> org.joda.time.chrono.EthiopicChronology.readResolve : return $r3
