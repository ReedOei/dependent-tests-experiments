org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : i2 = specialinvoke r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int getOffsetToAdd(long)>(l1) >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $r1 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: org.joda.time.DateTimeField iField>
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $r1 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: org.joda.time.DateTimeField iField> >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $z0 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean iTimeField>
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $z0 = r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: boolean iTimeField> >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : if $z0 == 0
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : if $z0 == 0 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $i4 = i2
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : if $z0 == 0 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $i4 = specialinvoke r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int getOffsetToAdd(long)>(l0)
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $i4 = specialinvoke r0.<org.joda.time.chrono.ZonedChronology$ZonedDateTimeField: int getOffsetToAdd(long)>(l0) >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l5 = (long) $i4
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l5 = (long) $i4 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l6 = l0 + $l5
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l6 = l0 + $l5 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l7 = (long) i2
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l7 = (long) i2 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l8 = l1 + $l7
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l8 = l1 + $l7 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l9 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l6, $l8)
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l9 = virtualinvoke $r1.<org.joda.time.DateTimeField: long getDifferenceAsLong(long,long)>($l6, $l8) >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : return $l9
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $i4 = i2 >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : goto [?= $l5 = (long) $i4]
org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : goto [?= $l5 = (long) $i4] >>>>>>>> org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong : $l5 = (long) $i4
