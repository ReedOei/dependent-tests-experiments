org.joda.time.chrono.ISOChronology.writeReplace : $r1 = new org.joda.time.chrono.ISOChronology$Stub >>>>>>>> org.joda.time.chrono.ISOChronology.writeReplace : $r2 = virtualinvoke r0.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.ISOChronology.writeReplace : $r2 = virtualinvoke r0.<org.joda.time.chrono.ISOChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.ISOChronology.writeReplace : specialinvoke $r1.<org.joda.time.chrono.ISOChronology$Stub: void <init>(org.joda.time.DateTimeZone)>($r2)
org.joda.time.chrono.ISOChronology.writeReplace : specialinvoke $r1.<org.joda.time.chrono.ISOChronology$Stub: void <init>(org.joda.time.DateTimeZone)>($r2) >>>>>>>> org.joda.time.chrono.ISOChronology.writeReplace : return $r1
