org.joda.example.time.DateTimePerformance.checkDateGetMonth : i0 = <org.joda.example.time.DateTimePerformance: int COUNT_FAST> >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : $r2 = new java.util.Date
org.joda.example.time.DateTimePerformance.checkDateGetMonth : $r2 = new java.util.Date >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : specialinvoke $r2.<java.util.Date: void <init>()>()
org.joda.example.time.DateTimePerformance.checkDateGetMonth : specialinvoke $r2.<java.util.Date: void <init>()>() >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : r1 = $r2
org.joda.example.time.DateTimePerformance.checkDateGetMonth : r1 = $r2 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : i1 = 0
org.joda.example.time.DateTimePerformance.checkDateGetMonth : i1 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkDateGetMonth : $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE> >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i1 >= $i4
org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i1 >= $i4 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("Date", "getMonth")
org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i1 >= $i4 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : return
org.joda.example.time.DateTimePerformance.checkDateGetMonth : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("Date", "getMonth") >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : i2 = 0
org.joda.example.time.DateTimePerformance.checkDateGetMonth : i2 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : i3 = virtualinvoke r1.<java.util.Date: int getMonth()>()
org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0)
org.joda.example.time.DateTimePerformance.checkDateGetMonth : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0) >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : i1 = i1 + 1
org.joda.example.time.DateTimePerformance.checkDateGetMonth : i1 = i1 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : goto [?= $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>]
org.joda.example.time.DateTimePerformance.checkDateGetMonth : goto [?= $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>] >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : $i4 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkDateGetMonth : i3 = virtualinvoke r1.<java.util.Date: int getMonth()>() >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i3 != 0
org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i3 != 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : $r3 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i3 != 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : i2 = i2 + 1
org.joda.example.time.DateTimePerformance.checkDateGetMonth : i2 = i2 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : goto [?= (branch)]
org.joda.example.time.DateTimePerformance.checkDateGetMonth : goto [?= (branch)] >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkDateGetMonth : $r3 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise")
org.joda.example.time.DateTimePerformance.checkDateGetMonth : virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise") >>>>>>>> org.joda.example.time.DateTimePerformance.checkDateGetMonth : i2 = i2 + 1
