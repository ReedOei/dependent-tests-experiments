org.joda.time.chrono.BuddhistChronology.assemble : $r5 = virtualinvoke r0.<org.joda.time.chrono.BuddhistChronology: java.lang.Object getParam()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : if $r5 != null
org.joda.time.chrono.BuddhistChronology.assemble : if $r5 != null >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r2 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year>
org.joda.time.chrono.BuddhistChronology.assemble : if $r5 != null >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : return
org.joda.time.chrono.BuddhistChronology.assemble : r2 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r3 = new org.joda.time.field.OffsetDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r3 = new org.joda.time.field.OffsetDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r4 = new org.joda.time.field.SkipUndoDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r4 = new org.joda.time.field.SkipUndoDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r4.<org.joda.time.field.SkipUndoDateTimeField: void <init>(org.joda.time.Chronology,org.joda.time.DateTimeField)>(r0, r2)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r4.<org.joda.time.field.SkipUndoDateTimeField: void <init>(org.joda.time.Chronology,org.joda.time.DateTimeField)>(r0, r2) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r3.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,int)>($r4, 543)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r3.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,int)>($r4, 543) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> = $r3
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> = $r3 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r6 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra>
org.joda.time.chrono.BuddhistChronology.assemble : r6 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r7 = new org.joda.time.field.DelegatedDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r7 = new org.joda.time.field.DelegatedDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r8 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year>
org.joda.time.chrono.BuddhistChronology.assemble : $r8 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r9 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType yearOfEra()>()
org.joda.time.chrono.BuddhistChronology.assemble : $r9 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType yearOfEra()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r7.<org.joda.time.field.DelegatedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)>($r8, $r9)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r7.<org.joda.time.field.DelegatedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)>($r8, $r9) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> = $r7
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> = $r7 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r10 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear>
org.joda.time.chrono.BuddhistChronology.assemble : r10 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r11 = new org.joda.time.field.OffsetDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r11 = new org.joda.time.field.OffsetDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r12 = new org.joda.time.field.SkipUndoDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r12 = new org.joda.time.field.SkipUndoDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r12.<org.joda.time.field.SkipUndoDateTimeField: void <init>(org.joda.time.Chronology,org.joda.time.DateTimeField)>(r0, r10)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r12.<org.joda.time.field.SkipUndoDateTimeField: void <init>(org.joda.time.Chronology,org.joda.time.DateTimeField)>(r0, r10) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r11.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,int)>($r12, 543)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r11.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,int)>($r12, 543) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> = $r11
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> = $r11 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r13 = new org.joda.time.field.OffsetDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r13 = new org.joda.time.field.OffsetDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r14 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra>
org.joda.time.chrono.BuddhistChronology.assemble : $r14 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r13.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,int)>($r14, 99)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r13.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,int)>($r14, 99) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r15 = $r13
org.joda.time.chrono.BuddhistChronology.assemble : r15 = $r13 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r16 = new org.joda.time.field.DividedDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r16 = new org.joda.time.field.DividedDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r17 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType centuryOfEra()>()
org.joda.time.chrono.BuddhistChronology.assemble : $r17 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType centuryOfEra()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r16.<org.joda.time.field.DividedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>(r15, $r17, 100)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r16.<org.joda.time.field.DividedDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>(r15, $r17, 100) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r16
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r16 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r18 = new org.joda.time.field.RemainderDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r18 = new org.joda.time.field.RemainderDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r19 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra>
org.joda.time.chrono.BuddhistChronology.assemble : $r19 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r20 = (org.joda.time.field.DividedDateTimeField) $r19
org.joda.time.chrono.BuddhistChronology.assemble : $r20 = (org.joda.time.field.DividedDateTimeField) $r19 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r18.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.field.DividedDateTimeField)>($r20)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r18.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.field.DividedDateTimeField)>($r20) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r21 = $r18
org.joda.time.chrono.BuddhistChronology.assemble : r21 = $r18 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r22 = new org.joda.time.field.OffsetDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r22 = new org.joda.time.field.OffsetDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r23 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType yearOfCentury()>()
org.joda.time.chrono.BuddhistChronology.assemble : $r23 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType yearOfCentury()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r22.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>(r21, $r23, 1)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r22.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>(r21, $r23, 1) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r22
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r22 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r24 = new org.joda.time.field.RemainderDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r24 = new org.joda.time.field.RemainderDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r25 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear>
org.joda.time.chrono.BuddhistChronology.assemble : $r25 = r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r26 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyearOfCentury()>()
org.joda.time.chrono.BuddhistChronology.assemble : $r26 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyearOfCentury()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r24.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>($r25, $r26, 100)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r24.<org.joda.time.field.RemainderDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>($r25, $r26, 100) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r27 = $r24
org.joda.time.chrono.BuddhistChronology.assemble : r27 = $r24 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r28 = new org.joda.time.field.OffsetDateTimeField
org.joda.time.chrono.BuddhistChronology.assemble : $r28 = new org.joda.time.field.OffsetDateTimeField >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r29 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyearOfCentury()>()
org.joda.time.chrono.BuddhistChronology.assemble : $r29 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyearOfCentury()>() >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r28.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>(r27, $r29, 1)
org.joda.time.chrono.BuddhistChronology.assemble : specialinvoke $r28.<org.joda.time.field.OffsetDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)>(r27, $r29, 1) >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r28
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r28 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : $r30 = <org.joda.time.chrono.BuddhistChronology: org.joda.time.DateTimeField ERA_FIELD>
org.joda.time.chrono.BuddhistChronology.assemble : $r30 = <org.joda.time.chrono.BuddhistChronology: org.joda.time.DateTimeField ERA_FIELD> >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era> = $r30
org.joda.time.chrono.BuddhistChronology.assemble : r1.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era> = $r30 >>>>>>>> org.joda.time.chrono.BuddhistChronology.assemble : return
