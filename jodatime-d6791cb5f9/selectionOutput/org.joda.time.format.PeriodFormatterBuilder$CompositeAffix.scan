org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $r2 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iLeft> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, i0)
org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : i1 = interfaceinvoke $r2.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, i0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : if i1 < 0
org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : if i1 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight>
org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : if i1 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $i3 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $i3 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : return $i3
org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $r3 = r0.<org.joda.time.format.PeriodFormatterBuilder$CompositeAffix: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iRight> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $i2 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, i1)
org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : $i2 = interfaceinvoke $r3.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r1, i1) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan : return $i2
