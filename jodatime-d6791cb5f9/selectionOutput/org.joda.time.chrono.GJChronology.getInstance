org.joda.time.chrono.GJChronology.getInstance : $r1 = <org.joda.time.chrono.GJChronology: org.joda.time.Instant DEFAULT_CUTOVER> >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : $l2 = virtualinvoke $r1.<org.joda.time.Instant: long getMillis()>()
org.joda.time.chrono.GJChronology.getInstance : $l2 = virtualinvoke $r1.<org.joda.time.Instant: long getMillis()>() >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : $b3 = l0 cmp $l2
org.joda.time.chrono.GJChronology.getInstance : $b3 = l0 cmp $l2 >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : if $b3 != 0
org.joda.time.chrono.GJChronology.getInstance : if $b3 != 0 >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : r2 = null
org.joda.time.chrono.GJChronology.getInstance : if $b3 != 0 >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : $r3 = new org.joda.time.Instant
org.joda.time.chrono.GJChronology.getInstance : $r3 = new org.joda.time.Instant >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : specialinvoke $r3.<org.joda.time.Instant: void <init>(long)>(l0)
org.joda.time.chrono.GJChronology.getInstance : specialinvoke $r3.<org.joda.time.Instant: void <init>(long)>(l0) >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : r2 = $r3
org.joda.time.chrono.GJChronology.getInstance : r2 = $r3 >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : $r4 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)>(r0, r2, i1)
org.joda.time.chrono.GJChronology.getInstance : $r4 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)>(r0, r2, i1) >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : return $r4
org.joda.time.chrono.GJChronology.getInstance : r2 = null >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : goto [?= $r4 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)>(r0, r2, i1)]
org.joda.time.chrono.GJChronology.getInstance : goto [?= $r4 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)>(r0, r2, i1)] >>>>>>>> org.joda.time.chrono.GJChronology.getInstance : $r4 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)>(r0, r2, i1)
