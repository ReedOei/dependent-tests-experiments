org.joda.time.chrono.LimitChronology.equals : if r0 != r1 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : return 1
org.joda.time.chrono.LimitChronology.equals : if r0 != r1 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z0 = r1 instanceof org.joda.time.chrono.LimitChronology
org.joda.time.chrono.LimitChronology.equals : $z0 = r1 instanceof org.joda.time.chrono.LimitChronology >>>>>>>> org.joda.time.chrono.LimitChronology.equals : if $z0 != 0
org.joda.time.chrono.LimitChronology.equals : if $z0 != 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : return 0
org.joda.time.chrono.LimitChronology.equals : if $z0 != 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : r2 = (org.joda.time.chrono.LimitChronology) r1
org.joda.time.chrono.LimitChronology.equals : r2 = (org.joda.time.chrono.LimitChronology) r1 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.LimitChronology.equals : $r3 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $r4 = virtualinvoke r2.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.LimitChronology.equals : $r4 = virtualinvoke r2.<org.joda.time.chrono.LimitChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.joda.time.chrono.LimitChronology.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.joda.time.chrono.LimitChronology.equals : if $z1 == 0
org.joda.time.chrono.LimitChronology.equals : if $z1 == 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $r5 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getLowerLimit()>()
org.joda.time.chrono.LimitChronology.equals : if $z1 == 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z4 = 0
org.joda.time.chrono.LimitChronology.equals : $z4 = 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : return $z4
org.joda.time.chrono.LimitChronology.equals : $r5 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getLowerLimit()>() >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $r6 = virtualinvoke r2.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getLowerLimit()>()
org.joda.time.chrono.LimitChronology.equals : $r6 = virtualinvoke r2.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getLowerLimit()>() >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z2 = staticinvoke <org.joda.time.field.FieldUtils: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6)
org.joda.time.chrono.LimitChronology.equals : $z2 = staticinvoke <org.joda.time.field.FieldUtils: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.joda.time.chrono.LimitChronology.equals : if $z2 == 0
org.joda.time.chrono.LimitChronology.equals : if $z2 == 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $r7 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getUpperLimit()>()
org.joda.time.chrono.LimitChronology.equals : if $z2 == 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z4 = 0
org.joda.time.chrono.LimitChronology.equals : $r7 = virtualinvoke r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getUpperLimit()>() >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $r8 = virtualinvoke r2.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getUpperLimit()>()
org.joda.time.chrono.LimitChronology.equals : $r8 = virtualinvoke r2.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime getUpperLimit()>() >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z3 = staticinvoke <org.joda.time.field.FieldUtils: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8)
org.joda.time.chrono.LimitChronology.equals : $z3 = staticinvoke <org.joda.time.field.FieldUtils: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.joda.time.chrono.LimitChronology.equals : if $z3 == 0
org.joda.time.chrono.LimitChronology.equals : if $z3 == 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z4 = 1
org.joda.time.chrono.LimitChronology.equals : if $z3 == 0 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : $z4 = 0
org.joda.time.chrono.LimitChronology.equals : $z4 = 1 >>>>>>>> org.joda.time.chrono.LimitChronology.equals : goto [?= return $z4]
org.joda.time.chrono.LimitChronology.equals : goto [?= return $z4] >>>>>>>> org.joda.time.chrono.LimitChronology.equals : return $z4
