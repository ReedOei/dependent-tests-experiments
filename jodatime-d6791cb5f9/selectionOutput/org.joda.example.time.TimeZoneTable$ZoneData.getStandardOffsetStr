org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : l0 = <org.joda.example.time.TimeZoneTable: long cNow> >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r1 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r1 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone> >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $i2 = virtualinvoke $r1.<org.joda.time.DateTimeZone: int getOffset(long)>(l0)
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $i2 = virtualinvoke $r1.<org.joda.time.DateTimeZone: int getOffset(long)>(l0) >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r2 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r2 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone> >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $i3 = virtualinvoke $r2.<org.joda.time.DateTimeZone: int getStandardOffset(long)>(l0)
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $i3 = virtualinvoke $r2.<org.joda.time.DateTimeZone: int getStandardOffset(long)>(l0) >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : if $i2 == $i3
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : if $i2 == $i3 >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r3 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : if $i2 == $i3 >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r4 = <org.joda.example.time.TimeZoneTable: org.joda.time.format.DateTimeFormatter cOffsetFormatter>
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r4 = <org.joda.example.time.TimeZoneTable: org.joda.time.format.DateTimeFormatter cOffsetFormatter> >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r5 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r5 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone> >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>($r5)
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r6 = virtualinvoke $r4.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZone(org.joda.time.DateTimeZone)>($r5) >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatter: java.lang.String print(long)>(l0)
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r7 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatter: java.lang.String print(long)>(l0) >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : return $r7
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r3 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone> >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : l1 = virtualinvoke $r3.<org.joda.time.DateTimeZone: long nextTransition(long)>(l0)
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : l1 = virtualinvoke $r3.<org.joda.time.DateTimeZone: long nextTransition(long)>(l0) >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $b4 = l1 cmp l0
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $b4 = l1 cmp l0 >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : if $b4 != 0
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : if $b4 != 0 >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : goto [?= $r4 = <org.joda.example.time.TimeZoneTable: org.joda.time.format.DateTimeFormatter cOffsetFormatter>]
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : if $b4 != 0 >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : l0 = l1
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : l0 = l1 >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : goto [?= $r1 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>]
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : goto [?= $r1 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>] >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r1 = r0.<org.joda.example.time.TimeZoneTable$ZoneData: org.joda.time.DateTimeZone iZone>
org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : goto [?= $r4 = <org.joda.example.time.TimeZoneTable: org.joda.time.format.DateTimeFormatter cOffsetFormatter>] >>>>>>>> org.joda.example.time.TimeZoneTable$ZoneData.getStandardOffsetStr : $r4 = <org.joda.example.time.TimeZoneTable: org.joda.time.format.DateTimeFormatter cOffsetFormatter>
