org.joda.time.DateTimeZone.getOffset : if r1 != null >>>>>>>> org.joda.time.DateTimeZone.getOffset : $l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>()
org.joda.time.DateTimeZone.getOffset : if r1 != null >>>>>>>> org.joda.time.DateTimeZone.getOffset : $l2 = interfaceinvoke r1.<org.joda.time.ReadableInstant: long getMillis()>()
org.joda.time.DateTimeZone.getOffset : $l2 = interfaceinvoke r1.<org.joda.time.ReadableInstant: long getMillis()>() >>>>>>>> org.joda.time.DateTimeZone.getOffset : $i3 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l2)
org.joda.time.DateTimeZone.getOffset : $i3 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l2) >>>>>>>> org.joda.time.DateTimeZone.getOffset : return $i3
org.joda.time.DateTimeZone.getOffset : $l0 = staticinvoke <org.joda.time.DateTimeUtils: long currentTimeMillis()>() >>>>>>>> org.joda.time.DateTimeZone.getOffset : $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l0)
org.joda.time.DateTimeZone.getOffset : $i1 = virtualinvoke r0.<org.joda.time.DateTimeZone: int getOffset(long)>($l0) >>>>>>>> org.joda.time.DateTimeZone.getOffset : return $i1
