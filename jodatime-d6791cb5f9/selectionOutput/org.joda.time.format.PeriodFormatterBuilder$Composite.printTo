org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$Composite: org.joda.time.format.PeriodPrinter[] iPrinters> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i0 = lengthof r4
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i0 = lengthof r4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i1 = 0
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i1 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : if i1 >= i0
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : if i1 >= i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : $r5 = r4[i1]
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : if i1 >= i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : return
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : $r5 = r4[i1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : interfaceinvoke $r5.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3)
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : interfaceinvoke $r5.<org.joda.time.format.PeriodPrinter: void printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)>(r1, r2, r3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i1 = i1 + 1
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : i1 = i1 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$Composite.printTo : if i1 >= i0
