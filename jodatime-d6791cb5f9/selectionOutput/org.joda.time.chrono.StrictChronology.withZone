org.joda.time.chrono.StrictChronology.withZone : if r1 != null >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>()
org.joda.time.chrono.StrictChronology.withZone : if r1 != null >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>
org.joda.time.chrono.StrictChronology.withZone : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC> >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : if r1 != $r2
org.joda.time.chrono.StrictChronology.withZone : if r1 != $r2 >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r3 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology withUTC()>()
org.joda.time.chrono.StrictChronology.withZone : if r1 != $r2 >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r4 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeZone getZone()>()
org.joda.time.chrono.StrictChronology.withZone : $r4 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : if r1 != $r4
org.joda.time.chrono.StrictChronology.withZone : if r1 != $r4 >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : return r0
org.joda.time.chrono.StrictChronology.withZone : if r1 != $r4 >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r5 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>()
org.joda.time.chrono.StrictChronology.withZone : $r5 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>() >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r6 = virtualinvoke $r5.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r1)
org.joda.time.chrono.StrictChronology.withZone : $r6 = virtualinvoke $r5.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r1) >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r7 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.chrono.StrictChronology getInstance(org.joda.time.Chronology)>($r6)
org.joda.time.chrono.StrictChronology.withZone : $r7 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.chrono.StrictChronology getInstance(org.joda.time.Chronology)>($r6) >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : return $r7
org.joda.time.chrono.StrictChronology.withZone : $r3 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology withUTC()>() >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : return $r3
org.joda.time.chrono.StrictChronology.withZone : r1 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>() >>>>>>>> org.joda.time.chrono.StrictChronology.withZone : $r2 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>
