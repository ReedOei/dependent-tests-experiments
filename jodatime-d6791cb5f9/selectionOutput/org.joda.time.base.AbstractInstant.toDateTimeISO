org.joda.time.base.AbstractInstant.toDateTimeISO : $r1 = new org.joda.time.DateTime >>>>>>>> org.joda.time.base.AbstractInstant.toDateTimeISO : $l0 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: long getMillis()>()
org.joda.time.base.AbstractInstant.toDateTimeISO : $l0 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: long getMillis()>() >>>>>>>> org.joda.time.base.AbstractInstant.toDateTimeISO : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: org.joda.time.DateTimeZone getZone()>()
org.joda.time.base.AbstractInstant.toDateTimeISO : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: org.joda.time.DateTimeZone getZone()>() >>>>>>>> org.joda.time.base.AbstractInstant.toDateTimeISO : $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>($r2)
org.joda.time.base.AbstractInstant.toDateTimeISO : $r3 = staticinvoke <org.joda.time.chrono.ISOChronology: org.joda.time.chrono.ISOChronology getInstance(org.joda.time.DateTimeZone)>($r2) >>>>>>>> org.joda.time.base.AbstractInstant.toDateTimeISO : specialinvoke $r1.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l0, $r3)
org.joda.time.base.AbstractInstant.toDateTimeISO : specialinvoke $r1.<org.joda.time.DateTime: void <init>(long,org.joda.time.Chronology)>($l0, $r3) >>>>>>>> org.joda.time.base.AbstractInstant.toDateTimeISO : return $r1
