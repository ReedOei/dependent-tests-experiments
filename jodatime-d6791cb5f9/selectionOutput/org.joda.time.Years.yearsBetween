org.joda.time.Years.yearsBetween : $z0 = r0 instanceof org.joda.time.LocalDate >>>>>>>> org.joda.time.Years.yearsBetween : if $z0 == 0
org.joda.time.Years.yearsBetween : if $z0 == 0 >>>>>>>> org.joda.time.Years.yearsBetween : $z1 = r1 instanceof org.joda.time.LocalDate
org.joda.time.Years.yearsBetween : if $z0 == 0 >>>>>>>> org.joda.time.Years.yearsBetween : $r3 = <org.joda.time.Years: org.joda.time.Years ZERO>
org.joda.time.Years.yearsBetween : $r3 = <org.joda.time.Years: org.joda.time.Years ZERO> >>>>>>>> org.joda.time.Years.yearsBetween : i3 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)>(r0, r1, $r3)
org.joda.time.Years.yearsBetween : i3 = staticinvoke <org.joda.time.base.BaseSingleFieldPeriod: int between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)>(r0, r1, $r3) >>>>>>>> org.joda.time.Years.yearsBetween : $r9 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>(i3)
org.joda.time.Years.yearsBetween : $r9 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>(i3) >>>>>>>> org.joda.time.Years.yearsBetween : return $r9
org.joda.time.Years.yearsBetween : $z1 = r1 instanceof org.joda.time.LocalDate >>>>>>>> org.joda.time.Years.yearsBetween : if $z1 == 0
org.joda.time.Years.yearsBetween : if $z1 == 0 >>>>>>>> org.joda.time.Years.yearsBetween : $r4 = interfaceinvoke r0.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>()
org.joda.time.Years.yearsBetween : if $z1 == 0 >>>>>>>> org.joda.time.Years.yearsBetween : $r3 = <org.joda.time.Years: org.joda.time.Years ZERO>
org.joda.time.Years.yearsBetween : $r4 = interfaceinvoke r0.<org.joda.time.ReadablePartial: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.Years.yearsBetween : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>($r4)
org.joda.time.Years.yearsBetween : r2 = staticinvoke <org.joda.time.DateTimeUtils: org.joda.time.Chronology getChronology(org.joda.time.Chronology)>($r4) >>>>>>>> org.joda.time.Years.yearsBetween : $r5 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DurationField years()>()
org.joda.time.Years.yearsBetween : $r5 = virtualinvoke r2.<org.joda.time.Chronology: org.joda.time.DurationField years()>() >>>>>>>> org.joda.time.Years.yearsBetween : $r6 = (org.joda.time.LocalDate) r1
org.joda.time.Years.yearsBetween : $r6 = (org.joda.time.LocalDate) r1 >>>>>>>> org.joda.time.Years.yearsBetween : $l1 = virtualinvoke $r6.<org.joda.time.LocalDate: long getLocalMillis()>()
org.joda.time.Years.yearsBetween : $l1 = virtualinvoke $r6.<org.joda.time.LocalDate: long getLocalMillis()>() >>>>>>>> org.joda.time.Years.yearsBetween : $r7 = (org.joda.time.LocalDate) r0
org.joda.time.Years.yearsBetween : $r7 = (org.joda.time.LocalDate) r0 >>>>>>>> org.joda.time.Years.yearsBetween : $l2 = virtualinvoke $r7.<org.joda.time.LocalDate: long getLocalMillis()>()
org.joda.time.Years.yearsBetween : $l2 = virtualinvoke $r7.<org.joda.time.LocalDate: long getLocalMillis()>() >>>>>>>> org.joda.time.Years.yearsBetween : i0 = virtualinvoke $r5.<org.joda.time.DurationField: int getDifference(long,long)>($l1, $l2)
org.joda.time.Years.yearsBetween : i0 = virtualinvoke $r5.<org.joda.time.DurationField: int getDifference(long,long)>($l1, $l2) >>>>>>>> org.joda.time.Years.yearsBetween : $r8 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>(i0)
org.joda.time.Years.yearsBetween : $r8 = staticinvoke <org.joda.time.Years: org.joda.time.Years years(int)>(i0) >>>>>>>> org.joda.time.Years.yearsBetween : return $r8
