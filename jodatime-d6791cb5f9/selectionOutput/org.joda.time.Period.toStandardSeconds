org.joda.time.Period.toStandardSeconds : specialinvoke r0.<org.joda.time.Period: void checkYearsAndMonths(java.lang.String)>("Seconds") >>>>>>>> org.joda.time.Period.toStandardSeconds : $i1 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>()
org.joda.time.Period.toStandardSeconds : $i1 = virtualinvoke r0.<org.joda.time.Period: int getMillis()>() >>>>>>>> org.joda.time.Period.toStandardSeconds : $i2 = $i1 / 1000
org.joda.time.Period.toStandardSeconds : $i2 = $i1 / 1000 >>>>>>>> org.joda.time.Period.toStandardSeconds : l0 = (long) $i2
org.joda.time.Period.toStandardSeconds : l0 = (long) $i2 >>>>>>>> org.joda.time.Period.toStandardSeconds : $i3 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>()
org.joda.time.Period.toStandardSeconds : $i3 = virtualinvoke r0.<org.joda.time.Period: int getSeconds()>() >>>>>>>> org.joda.time.Period.toStandardSeconds : $l4 = (long) $i3
org.joda.time.Period.toStandardSeconds : $l4 = (long) $i3 >>>>>>>> org.joda.time.Period.toStandardSeconds : l5 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l0, $l4)
org.joda.time.Period.toStandardSeconds : l5 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l0, $l4) >>>>>>>> org.joda.time.Period.toStandardSeconds : $i6 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>()
org.joda.time.Period.toStandardSeconds : $i6 = virtualinvoke r0.<org.joda.time.Period: int getMinutes()>() >>>>>>>> org.joda.time.Period.toStandardSeconds : $l7 = (long) $i6
org.joda.time.Period.toStandardSeconds : $l7 = (long) $i6 >>>>>>>> org.joda.time.Period.toStandardSeconds : $l8 = $l7 * 60L
org.joda.time.Period.toStandardSeconds : $l8 = $l7 * 60L >>>>>>>> org.joda.time.Period.toStandardSeconds : l9 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l5, $l8)
org.joda.time.Period.toStandardSeconds : l9 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l5, $l8) >>>>>>>> org.joda.time.Period.toStandardSeconds : $i10 = virtualinvoke r0.<org.joda.time.Period: int getHours()>()
org.joda.time.Period.toStandardSeconds : $i10 = virtualinvoke r0.<org.joda.time.Period: int getHours()>() >>>>>>>> org.joda.time.Period.toStandardSeconds : $l11 = (long) $i10
org.joda.time.Period.toStandardSeconds : $l11 = (long) $i10 >>>>>>>> org.joda.time.Period.toStandardSeconds : $l12 = $l11 * 3600L
org.joda.time.Period.toStandardSeconds : $l12 = $l11 * 3600L >>>>>>>> org.joda.time.Period.toStandardSeconds : l13 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l9, $l12)
org.joda.time.Period.toStandardSeconds : l13 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l9, $l12) >>>>>>>> org.joda.time.Period.toStandardSeconds : $i14 = virtualinvoke r0.<org.joda.time.Period: int getDays()>()
org.joda.time.Period.toStandardSeconds : $i14 = virtualinvoke r0.<org.joda.time.Period: int getDays()>() >>>>>>>> org.joda.time.Period.toStandardSeconds : $l15 = (long) $i14
org.joda.time.Period.toStandardSeconds : $l15 = (long) $i14 >>>>>>>> org.joda.time.Period.toStandardSeconds : $l16 = $l15 * 86400L
org.joda.time.Period.toStandardSeconds : $l16 = $l15 * 86400L >>>>>>>> org.joda.time.Period.toStandardSeconds : l17 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l13, $l16)
org.joda.time.Period.toStandardSeconds : l17 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l13, $l16) >>>>>>>> org.joda.time.Period.toStandardSeconds : $i18 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>()
org.joda.time.Period.toStandardSeconds : $i18 = virtualinvoke r0.<org.joda.time.Period: int getWeeks()>() >>>>>>>> org.joda.time.Period.toStandardSeconds : $l19 = (long) $i18
org.joda.time.Period.toStandardSeconds : $l19 = (long) $i18 >>>>>>>> org.joda.time.Period.toStandardSeconds : $l20 = $l19 * 604800L
org.joda.time.Period.toStandardSeconds : $l20 = $l19 * 604800L >>>>>>>> org.joda.time.Period.toStandardSeconds : l21 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l17, $l20)
org.joda.time.Period.toStandardSeconds : l21 = staticinvoke <org.joda.time.field.FieldUtils: long safeAdd(long,long)>(l17, $l20) >>>>>>>> org.joda.time.Period.toStandardSeconds : $i22 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l21)
org.joda.time.Period.toStandardSeconds : $i22 = staticinvoke <org.joda.time.field.FieldUtils: int safeToInt(long)>(l21) >>>>>>>> org.joda.time.Period.toStandardSeconds : $r1 = staticinvoke <org.joda.time.Seconds: org.joda.time.Seconds seconds(int)>($i22)
org.joda.time.Period.toStandardSeconds : $r1 = staticinvoke <org.joda.time.Seconds: org.joda.time.Seconds seconds(int)>($i22) >>>>>>>> org.joda.time.Period.toStandardSeconds : return $r1
