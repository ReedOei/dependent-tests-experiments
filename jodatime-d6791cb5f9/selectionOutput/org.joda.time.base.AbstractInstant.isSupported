org.joda.time.base.AbstractInstant.isSupported : if r1 != null >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : return 0
org.joda.time.base.AbstractInstant.isSupported : if r1 != null >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: org.joda.time.Chronology getChronology()>()
org.joda.time.base.AbstractInstant.isSupported : $r2 = virtualinvoke r0.<org.joda.time.base.AbstractInstant: org.joda.time.Chronology getChronology()>() >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : $r3 = virtualinvoke r1.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r2)
org.joda.time.base.AbstractInstant.isSupported : $r3 = virtualinvoke r1.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r2) >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : $z0 = virtualinvoke $r3.<org.joda.time.DateTimeField: boolean isSupported()>()
org.joda.time.base.AbstractInstant.isSupported : $z0 = virtualinvoke $r3.<org.joda.time.DateTimeField: boolean isSupported()>() >>>>>>>> org.joda.time.base.AbstractInstant.isSupported : return $z0
