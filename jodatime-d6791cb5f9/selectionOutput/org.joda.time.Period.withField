org.joda.time.Period.withField : if r1 != null >>>>>>>> org.joda.time.Period.withField : $r3 = new java.lang.IllegalArgumentException
org.joda.time.Period.withField : if r1 != null >>>>>>>> org.joda.time.Period.withField : r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>()
org.joda.time.Period.withField : r2 = virtualinvoke r0.<org.joda.time.Period: int[] getValues()>() >>>>>>>> org.joda.time.Period.withField : specialinvoke r0.<org.joda.time.base.BasePeriod: void setFieldInto(int[],org.joda.time.DurationFieldType,int)>(r2, r1, i0)
org.joda.time.Period.withField : specialinvoke r0.<org.joda.time.base.BasePeriod: void setFieldInto(int[],org.joda.time.DurationFieldType,int)>(r2, r1, i0) >>>>>>>> org.joda.time.Period.withField : $r4 = new org.joda.time.Period
org.joda.time.Period.withField : $r4 = new org.joda.time.Period >>>>>>>> org.joda.time.Period.withField : $r5 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.Period.withField : $r5 = virtualinvoke r0.<org.joda.time.Period: org.joda.time.PeriodType getPeriodType()>() >>>>>>>> org.joda.time.Period.withField : specialinvoke $r4.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r2, $r5)
org.joda.time.Period.withField : specialinvoke $r4.<org.joda.time.Period: void <init>(int[],org.joda.time.PeriodType)>(r2, $r5) >>>>>>>> org.joda.time.Period.withField : return $r4
org.joda.time.Period.withField : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.joda.time.Period.withField : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field must not be null")
org.joda.time.Period.withField : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field must not be null") >>>>>>>> org.joda.time.Period.withField : throw $r3
