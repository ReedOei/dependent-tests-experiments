org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iPrintZeroSetting> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i7 != 4
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i7 != 4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z3 = 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i7 != 4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z3 = 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z3 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = $z3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = $z3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i8 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i8 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i0 < $i8
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i0 < $i8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 == 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i0 < $i8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r4 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r4 == null
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r4 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r4 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i1 = -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i1 = -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r6 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r6 == null
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r6 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r6 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r8 = interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: org.joda.time.PeriodType getPeriodType()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 <= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 <= 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i13 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 <= 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i15 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i15 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i16 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i16 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i17 = $i16 - i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i17 = $i16 - i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i17)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i17) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i4 = -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i4 = -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z1 = 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z1 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 >= i2
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 >= i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i18 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 >= i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i33 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 < 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i34 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i35 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i35 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i35 == 8
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i35 == 8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i36 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i35 == 8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 >= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 >= 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i39 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i0, i3)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 >= 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i40 = i4 - i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i40 = i4 - i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i41 = $i40 - 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i41 = $i40 - 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i42 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i0, $i41)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i42 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i0, $i41) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 6, i42)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 6, i42) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i43 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i43 = i0 + i3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i44 = $i43 - i4
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i44 = $i43 - i4 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 > 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 > 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 > 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 < 3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 < 3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i4, 3)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 < 3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i45 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i4, i44)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i45 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i4, i44) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 != 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 != 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = i45 * 100
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i44 != 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = i45 * 10
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = i45 * 10 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i42 >= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i42 >= 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = neg i6
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i42 >= 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i6)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i6) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i46 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i46 = i0 + i3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i46 < 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i46 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i46 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i46
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r9 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r9 == null
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r9 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $r9 == null >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i46
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r10 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i46 = interfaceinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r2, i46)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i46 = interfaceinvoke $r10.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r2, i46) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i46
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = neg i6 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i6)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = i45 * 100 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i42 >= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i4, 3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i42 >= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i6 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i6)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i6)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, i6)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i39 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i0, i3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 6, $i39)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 6, $i39) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, 0)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, 7, 0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i46 = i0 + i3]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i46 = i0 + i3] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i46 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i36 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i36 == 9
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i36 == 9 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i37 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i36 == 9 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 >= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i37 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i38 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i0, i3)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i38 = specialinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int parseInt(java.lang.String,int,int)>(r2, i0, i3) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, $i37, $i38)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: void setFieldValue(org.joda.time.ReadWritablePeriod,int,int)>(r1, $i37, $i38) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i46 = i0 + i3]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i46 = i0 + i3] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i46 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i34 = i0 + i3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i34 == i1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i34 == i1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i34 == i1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i35 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i33 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return $i33
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i18 = i0 + i3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i18)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i18) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 45
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 < 48
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 < 48 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 > 57
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 < 48 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 46
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 46 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 44
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 46 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i27 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i27 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i27 == 8
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i27 == 8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i28 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i27 == 8 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 < 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i29 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i29 = i0 + i3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i4 = $i29 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i4 = $i29 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i30 = i2 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i30 = i2 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i31 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i31 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i32 = $i31 - i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i32 = $i31 - i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i30, $i32)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i30, $i32) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = i3 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = i3 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 >= i2
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i28 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i28 != 9
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i28 != 9 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i4 < 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i28 != 9 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 44 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i27 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 44 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 > 57 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z1 = 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 > 57 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 46
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z1 = 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i3 = i3 + 1]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i3 = i3 + 1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = i3 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 45 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 43
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 == 45 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $z5 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $z5 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 45
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $z5 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 < 48
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 45 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z6 = 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 45 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z6 = 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z6 = 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z2 = $z6
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z2 = $z6 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i19 = i3 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i19 = i3 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i19 >= i2
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i19 >= i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i20 = i0 + i3
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $i19 >= i2 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i20 = i0 + i3 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i21 = $i20 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i21 = $i20 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $c22 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i21)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $c22 = virtualinvoke r2.<java.lang.String: char charAt(int)>($i21) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : c23 = $c22
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : c23 = $c22 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $c22 < 48
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $c22 < 48 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c23 <= 57
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $c22 < 48 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c23 <= 57 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c23 <= 57 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z2 == 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z2 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = i3 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z2 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i0 = i0 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i0 = i0 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i24 = i2 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i24 = i2 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i25 = virtualinvoke r2.<java.lang.String: int length()>()
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i25 = virtualinvoke r2.<java.lang.String: int length()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i26 = $i25 - i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i26 = $i25 - i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i24, $i26)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i24, $i26) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i3 >= i2
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = i3 + 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= $i24 = i2 + 1]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= $i24 = i2 + 1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i24 = i2 + 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z1 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z6 = 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= z2 = $z6]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= z2 = $z6] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z2 = $z6
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 43 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean iRejectSignedValues>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 != 43 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if c5 < 48
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i13 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iMaxParsedDigits> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i14 = i1 - i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i14 = i1 - i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i2 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i3 = 0]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i3 = 0] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i3 = 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r8 = interfaceinvoke r1.<org.joda.time.ReadWritablePeriod: org.joda.time.PeriodType getPeriodType()>() >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i12 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i12 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: int iFieldType> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r8, $i12)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z4 = virtualinvoke r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: boolean isSupported(org.joda.time.PeriodType,int)>($r8, $i12) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $z4 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $z4 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if $z4 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 <= 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix>
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r7 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iSuffix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i1 = interfaceinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r2, i0)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i1 = interfaceinvoke $r7.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int scan(java.lang.String,int)>(r2, i0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 < 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i1 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i11 = i1 ^ -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i11 = i1 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return $i11
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= (branch)] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $r5 = r0.<org.joda.time.format.PeriodFormatterBuilder$FieldFormatter: org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix iPrefix> >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i0 = interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r2, i0)
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i0 = interfaceinvoke $r5.<org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix: int parse(java.lang.String,int)>(r2, i0) >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i0 < 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i0 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = 1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if i0 < 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i10 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 != 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i10 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return $i10
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i1 = -1]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= i1 = -1] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : i1 = -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i9 = i0 ^ -1
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : if z0 == 0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i9 = i0
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i9 = i0 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return $i9
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $i9 = i0 ^ -1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= return $i9]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= return $i9] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : return $i9
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : $z3 = 1 >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= z0 = $z3]
org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : goto [?= z0 = $z3] >>>>>>>> org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto : z0 = $z3
