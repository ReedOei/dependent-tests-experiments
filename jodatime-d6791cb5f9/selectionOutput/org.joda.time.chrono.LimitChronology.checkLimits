org.joda.time.chrono.LimitChronology.checkLimits : $r3 = r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime iLowerLimit> >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : r2 = $r3
org.joda.time.chrono.LimitChronology.checkLimits : r2 = $r3 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : if $r3 == null
org.joda.time.chrono.LimitChronology.checkLimits : if $r3 == null >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $l1 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>()
org.joda.time.chrono.LimitChronology.checkLimits : if $r3 == null >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $r5 = r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime iUpperLimit>
org.joda.time.chrono.LimitChronology.checkLimits : $r5 = r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime iUpperLimit> >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : r6 = $r5
org.joda.time.chrono.LimitChronology.checkLimits : r6 = $r5 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : if $r5 == null
org.joda.time.chrono.LimitChronology.checkLimits : if $r5 == null >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $l3 = virtualinvoke r6.<org.joda.time.DateTime: long getMillis()>()
org.joda.time.chrono.LimitChronology.checkLimits : if $r5 == null >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : return
org.joda.time.chrono.LimitChronology.checkLimits : $l3 = virtualinvoke r6.<org.joda.time.DateTime: long getMillis()>() >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $b4 = l0 cmp $l3
org.joda.time.chrono.LimitChronology.checkLimits : $b4 = l0 cmp $l3 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : if $b4 < 0
org.joda.time.chrono.LimitChronology.checkLimits : if $b4 < 0 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $r7 = new org.joda.time.chrono.LimitChronology$LimitException
org.joda.time.chrono.LimitChronology.checkLimits : if $b4 < 0 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : return
org.joda.time.chrono.LimitChronology.checkLimits : $r7 = new org.joda.time.chrono.LimitChronology$LimitException >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : specialinvoke $r7.<org.joda.time.chrono.LimitChronology$LimitException: void <init>(org.joda.time.chrono.LimitChronology,java.lang.String,boolean)>(r0, r1, 0)
org.joda.time.chrono.LimitChronology.checkLimits : specialinvoke $r7.<org.joda.time.chrono.LimitChronology$LimitException: void <init>(org.joda.time.chrono.LimitChronology,java.lang.String,boolean)>(r0, r1, 0) >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : throw $r7
org.joda.time.chrono.LimitChronology.checkLimits : $l1 = virtualinvoke r2.<org.joda.time.DateTime: long getMillis()>() >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $b2 = l0 cmp $l1
org.joda.time.chrono.LimitChronology.checkLimits : $b2 = l0 cmp $l1 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : if $b2 >= 0
org.joda.time.chrono.LimitChronology.checkLimits : if $b2 >= 0 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $r4 = new org.joda.time.chrono.LimitChronology$LimitException
org.joda.time.chrono.LimitChronology.checkLimits : if $b2 >= 0 >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : $r5 = r0.<org.joda.time.chrono.LimitChronology: org.joda.time.DateTime iUpperLimit>
org.joda.time.chrono.LimitChronology.checkLimits : $r4 = new org.joda.time.chrono.LimitChronology$LimitException >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : specialinvoke $r4.<org.joda.time.chrono.LimitChronology$LimitException: void <init>(org.joda.time.chrono.LimitChronology,java.lang.String,boolean)>(r0, r1, 1)
org.joda.time.chrono.LimitChronology.checkLimits : specialinvoke $r4.<org.joda.time.chrono.LimitChronology$LimitException: void <init>(org.joda.time.chrono.LimitChronology,java.lang.String,boolean)>(r0, r1, 1) >>>>>>>> org.joda.time.chrono.LimitChronology.checkLimits : throw $r4
