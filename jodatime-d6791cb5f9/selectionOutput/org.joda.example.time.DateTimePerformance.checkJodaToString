org.joda.example.time.DateTimePerformance.checkJodaToString : i0 = <org.joda.example.time.DateTimePerformance: int COUNT_SLOW> >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : $r5 = new org.joda.time.DateTime
org.joda.example.time.DateTimePerformance.checkJodaToString : $r5 = new org.joda.time.DateTime >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : $r1 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance()>()
org.joda.example.time.DateTimePerformance.checkJodaToString : $r1 = staticinvoke <org.joda.time.chrono.GJChronology: org.joda.time.chrono.GJChronology getInstance()>() >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : specialinvoke $r5.<org.joda.time.DateTime: void <init>(org.joda.time.Chronology)>($r1)
org.joda.example.time.DateTimePerformance.checkJodaToString : specialinvoke $r5.<org.joda.time.DateTime: void <init>(org.joda.time.Chronology)>($r1) >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : r2 = $r5
org.joda.example.time.DateTimePerformance.checkJodaToString : r2 = $r5 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>("dd MMM yyyy")
org.joda.example.time.DateTimePerformance.checkJodaToString : staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>("dd MMM yyyy") >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : i1 = 0
org.joda.example.time.DateTimePerformance.checkJodaToString : i1 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkJodaToString : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE> >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : if i1 >= $i3
org.joda.example.time.DateTimePerformance.checkJodaToString : if i1 >= $i3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("Joda", "toString")
org.joda.example.time.DateTimePerformance.checkJodaToString : if i1 >= $i3 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : return
org.joda.example.time.DateTimePerformance.checkJodaToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void start(java.lang.String,java.lang.String)>("Joda", "toString") >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : i2 = 0
org.joda.example.time.DateTimePerformance.checkJodaToString : i2 = 0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkJodaToString : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : r4 = virtualinvoke r2.<org.joda.time.DateTime: java.lang.String toString(java.lang.String)>("dd MMM yyyy")
org.joda.example.time.DateTimePerformance.checkJodaToString : if i2 >= i0 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0)
org.joda.example.time.DateTimePerformance.checkJodaToString : specialinvoke r0.<org.joda.example.time.DateTimePerformance: void end(int)>(i0) >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : i1 = i1 + 1
org.joda.example.time.DateTimePerformance.checkJodaToString : i1 = i1 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : goto [?= $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>]
org.joda.example.time.DateTimePerformance.checkJodaToString : goto [?= $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>] >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : $i3 = <org.joda.example.time.DateTimePerformance: int AVERAGE>
org.joda.example.time.DateTimePerformance.checkJodaToString : r4 = virtualinvoke r2.<org.joda.time.DateTime: java.lang.String toString(java.lang.String)>("dd MMM yyyy") >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : if r4 != null
org.joda.example.time.DateTimePerformance.checkJodaToString : if r4 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : $r6 = <java.lang.System: java.io.PrintStream out>
org.joda.example.time.DateTimePerformance.checkJodaToString : if r4 != null >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : i2 = i2 + 1
org.joda.example.time.DateTimePerformance.checkJodaToString : i2 = i2 + 1 >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : goto [?= (branch)]
org.joda.example.time.DateTimePerformance.checkJodaToString : goto [?= (branch)] >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : if i2 >= i0
org.joda.example.time.DateTimePerformance.checkJodaToString : $r6 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise")
org.joda.example.time.DateTimePerformance.checkJodaToString : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Anti optimise") >>>>>>>> org.joda.example.time.DateTimePerformance.checkJodaToString : i2 = i2 + 1
