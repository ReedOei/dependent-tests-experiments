com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r4 = <com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor: org.slf4j.Logger log> >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r5 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: java.lang.String getKey()>()
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r5 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: java.lang.String getKey()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot instantiation class \'{}\', use default \'{}\' class.", r2, $r5)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot instantiation class \'{}\', use default \'{}\' class.", r2, $r5) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r6 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: java.lang.String getDefaultValue()>()
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot instantiation class \'{}\', use default \'{}\' class.", r2, $r5) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r9 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r10 = new com.dangdang.ddframe.job.exception.JobSystemException >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : specialinvoke $r10.<com.dangdang.ddframe.job.exception.JobSystemException: void <init>(java.lang.Throwable)>($r9)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : specialinvoke $r10.<com.dangdang.ddframe.job.exception.JobSystemException: void <init>(java.lang.Throwable)>($r9) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : throw $r10
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r6 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: java.lang.String getDefaultValue()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6)
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r6 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: java.lang.String getDefaultValue()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r9 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>()
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r6) >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r9 := @caughtexception
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : return $r8
com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> com.dangdang.ddframe.job.executor.AbstractElasticJobExecutor.getDefaultHandler : $r9 := @caughtexception
