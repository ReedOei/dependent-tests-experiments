com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r2 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: java.lang.String getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r3 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("")
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r3 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("") >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r2, $r3)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r2, $r3) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r4 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: java.lang.String getJobParameter()>()
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r4 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: java.lang.String getJobParameter()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r5 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("")
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r5 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("") >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r4, $r5)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r4, $r5) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: boolean isFailover()>()
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: boolean isFailover()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $z1 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: boolean isMisfire()>()
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $z1 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: boolean isMisfire()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r6 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: java.lang.String getDescription()>()
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r6 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: java.lang.String getDescription()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r7 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("")
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r7 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("") >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r7)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r6, $r7) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: com.dangdang.ddframe.job.executor.handler.JobProperties getJobProperties()>()
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.config.JobCoreConfiguration: com.dangdang.ddframe.job.executor.handler.JobProperties getJobProperties()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r9 = <com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum JOB_EXCEPTION_HANDLER>
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r9 = <com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum: com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum JOB_EXCEPTION_HANDLER> >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r10 = virtualinvoke $r8.<com.dangdang.ddframe.job.executor.handler.JobProperties: java.lang.String get(com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum)>($r9)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r10 = virtualinvoke $r8.<com.dangdang.ddframe.job.executor.handler.JobProperties: java.lang.String get(com.dangdang.ddframe.job.executor.handler.JobProperties$JobPropertiesEnum)>($r9) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r11 = class "Lcom/dangdang/ddframe/job/executor/handler/impl/DefaultJobExceptionHandler;"
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r11 = class "Lcom/dangdang/ddframe/job/executor/handler/impl/DefaultJobExceptionHandler;" >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>()
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r13 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r12)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : $r13 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>($r12) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r10, $r13)
com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r10, $r13) >>>>>>>> com.dangdang.ddframe.job.config.JobCoreConfigurationTest.assertDefaultValues : return
