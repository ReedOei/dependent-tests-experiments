com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r5 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void prepareForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r5, r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void prepareForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r5, r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r6 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.Stubber doThrow(java.lang.Class)>(class "Ljava/lang/RuntimeException;")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r6 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.Stubber doThrow(java.lang.Class)>(class "Ljava/lang/RuntimeException;") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r7 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r7 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r8 = interfaceinvoke $r6.<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>($r7)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r8 = interfaceinvoke $r6.<org.mockito.stubbing.Stubber: java.lang.Object when(java.lang.Object)>($r7) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r9 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r8
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r9 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r8 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r9.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r9.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r10 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.type.SimpleJobExecutor simpleJobExecutor>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r9.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r59 := @caughtexception
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r60 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r61 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r60)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r61 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r60) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r62 = (com.dangdang.ddframe.job.executor.JobFacade) $r61
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r62 = (com.dangdang.ddframe.job.executor.JobFacade) $r61 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r63 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r63 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r64 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r64 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r62.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r63, $r64, "Job \'test_job\' execute begin.")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r62.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r63, $r64, "Job \'test_job\' execute begin.") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r65 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r65 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r66 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r65)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r66 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r65) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r67 = (com.dangdang.ddframe.job.executor.JobFacade) $r66
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r67 = (com.dangdang.ddframe.job.executor.JobFacade) $r66 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r68 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r68 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r69 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_RUNNING>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r69 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_RUNNING> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r67.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r68, $r69, "")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r67.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r68, $r69, "") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r70 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r70 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i2 = interfaceinvoke $r70.<java.util.Map: int size()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i2 = interfaceinvoke $r70.<java.util.Map: int size()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : if 1 != $i2
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : if 1 != $i2 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r104 = new java.lang.StringBuilder
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : if 1 != $i2 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r71 = new java.lang.StringBuilder
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r71 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 1=java.lang.RuntimeException")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 1=java.lang.RuntimeException") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r109 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r109 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r77 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r77 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r78 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r77)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r78 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r77) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r79 = (com.dangdang.ddframe.job.executor.JobFacade) $r78
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r79 = (com.dangdang.ddframe.job.executor.JobFacade) $r78 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r80 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r80 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r81 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_ERROR>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r81 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_ERROR> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r79.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r80, $r81, r109)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r79.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r80, $r81, r109) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r82 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r82 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r83 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r82)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r83 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r82) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r84 = (com.dangdang.ddframe.job.executor.JobFacade) $r83
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r84 = (com.dangdang.ddframe.job.executor.JobFacade) $r83 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r84.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r84.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r85 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r85 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r86 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r85)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r86 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r85) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r87 = (com.dangdang.ddframe.job.executor.JobFacade) $r86
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r87 = (com.dangdang.ddframe.job.executor.JobFacade) $r86 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r87.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r87.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r89 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r89 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r90 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r89)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r90 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r89) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r91 = (com.dangdang.ddframe.job.executor.JobFacade) $r90
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r91 = (com.dangdang.ddframe.job.executor.JobFacade) $r90 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r92 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r92 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r93 = interfaceinvoke $r92.<java.util.Map: java.util.Set keySet()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r93 = interfaceinvoke $r92.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r91.<com.dangdang.ddframe.job.executor.JobFacade: boolean misfireIfRunning(java.util.Collection)>($r93)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r91.<com.dangdang.ddframe.job.executor.JobFacade: boolean misfireIfRunning(java.util.Collection)>($r93) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r94 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r94 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r95 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r94)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r95 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r94) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r96 = (com.dangdang.ddframe.job.executor.JobFacade) $r95
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r96 = (com.dangdang.ddframe.job.executor.JobFacade) $r95 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r96.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobBegin(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r96.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobBegin(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r97 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r97 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i3 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: int getShardingTotalCount()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i3 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: int getShardingTotalCount()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r98 = staticinvoke <org.mockito.Mockito: org.mockito.verification.VerificationMode times(int)>($i3)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r98 = staticinvoke <org.mockito.Mockito: org.mockito.verification.VerificationMode times(int)>($i3) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r99 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>($r97, $r98)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r99 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>($r97, $r98) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r100 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r99
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r100 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r99 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r100.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r100.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r101 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r101 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r102 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r101)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r102 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r101) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r103 = (com.dangdang.ddframe.job.executor.JobFacade) $r102
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r103 = (com.dangdang.ddframe.job.executor.JobFacade) $r102 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r103.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobCompleted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r103.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobCompleted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : throw $r59
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r104 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r104.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r104.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r109 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : goto [?= $r77 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>]
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : goto [?= $r77 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>] >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r77 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r10 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.type.SimpleJobExecutor simpleJobExecutor> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : virtualinvoke $r10.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutor: void execute()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r10 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.type.SimpleJobExecutor simpleJobExecutor> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r59 := @caughtexception
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : virtualinvoke $r10.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutor: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r11 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : virtualinvoke $r10.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutor: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r59 := @caughtexception
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r11 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r11)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r11) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r13 = (com.dangdang.ddframe.job.executor.JobFacade) $r12
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r13 = (com.dangdang.ddframe.job.executor.JobFacade) $r12 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r15 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r15 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r13.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r14, $r15, "Job \'test_job\' execute begin.")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r13.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r14, $r15, "Job \'test_job\' execute begin.") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r16 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r16 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r16)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r16) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r18 = (com.dangdang.ddframe.job.executor.JobFacade) $r17
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r18 = (com.dangdang.ddframe.job.executor.JobFacade) $r17 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r19 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r19 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r20 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_RUNNING>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r20 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_RUNNING> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r18.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r19, $r20, "")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r18.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r19, $r20, "") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r21 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r21 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i0 = interfaceinvoke $r21.<java.util.Map: int size()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i0 = interfaceinvoke $r21.<java.util.Map: int size()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : if 1 != $i0
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : if 1 != $i0 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r55 = new java.lang.StringBuilder
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : if 1 != $i0 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r22 = new java.lang.StringBuilder
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r22 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 1=java.lang.RuntimeException")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", 1=java.lang.RuntimeException") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r108 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r108 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r28 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r28 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r29 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r28)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r29 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r28) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r30 = (com.dangdang.ddframe.job.executor.JobFacade) $r29
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r30 = (com.dangdang.ddframe.job.executor.JobFacade) $r29 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r31 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r31 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r32 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_ERROR>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r32 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_ERROR> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r30.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r31, $r32, r108)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r30.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r31, $r32, r108) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r33 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r33 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r34 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r33)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r34 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r33) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r35 = (com.dangdang.ddframe.job.executor.JobFacade) $r34
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r35 = (com.dangdang.ddframe.job.executor.JobFacade) $r34 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r35.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r35.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r36 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r36 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r37 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r36)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r37 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r36) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r38 = (com.dangdang.ddframe.job.executor.JobFacade) $r37
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r38 = (com.dangdang.ddframe.job.executor.JobFacade) $r37 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r38.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r38.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r40 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r40 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r40)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r41 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r40) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r42 = (com.dangdang.ddframe.job.executor.JobFacade) $r41
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r42 = (com.dangdang.ddframe.job.executor.JobFacade) $r41 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r43 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r43 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r44 = interfaceinvoke $r43.<java.util.Map: java.util.Set keySet()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r44 = interfaceinvoke $r43.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r42.<com.dangdang.ddframe.job.executor.JobFacade: boolean misfireIfRunning(java.util.Collection)>($r44)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r42.<com.dangdang.ddframe.job.executor.JobFacade: boolean misfireIfRunning(java.util.Collection)>($r44) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r45 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r45 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r46 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r45)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r46 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r45) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r47 = (com.dangdang.ddframe.job.executor.JobFacade) $r46
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r47 = (com.dangdang.ddframe.job.executor.JobFacade) $r46 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r47.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobBegin(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r47.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobBegin(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r48 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r48 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i1 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: int getShardingTotalCount()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $i1 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: int getShardingTotalCount()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r49 = staticinvoke <org.mockito.Mockito: org.mockito.verification.VerificationMode times(int)>($i1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r49 = staticinvoke <org.mockito.Mockito: org.mockito.verification.VerificationMode times(int)>($i1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r50 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>($r48, $r49)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r50 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>($r48, $r49) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r51 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r50
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r51 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r50 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r51.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r51.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r52 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r52 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r53 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r52)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r53 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r52) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r54 = (com.dangdang.ddframe.job.executor.JobFacade) $r53
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r54 = (com.dangdang.ddframe.job.executor.JobFacade) $r53 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r54.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobCompleted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : interfaceinvoke $r54.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobCompleted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : goto [?= return]
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : return
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r55 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{0=java.lang.RuntimeException") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r108 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : r108 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : goto [?= $r28 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>]
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : goto [?= $r28 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>] >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceAndThrowException : $r28 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
