com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.ShardingContexts shardingContexts> = r1 >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r2 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r2 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r3 = interfaceinvoke $r2.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.config.JobRootConfiguration loadJobRootConfiguration(boolean)>(1)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r3 = interfaceinvoke $r2.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.config.JobRootConfiguration loadJobRootConfiguration(boolean)>(1) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r4 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r3)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r4 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r3) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r5 = new com.dangdang.ddframe.job.fixture.config.TestDataflowJobConfiguration
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r5 = new com.dangdang.ddframe.job.fixture.config.TestDataflowJobConfiguration >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : specialinvoke $r5.<com.dangdang.ddframe.job.fixture.config.TestDataflowJobConfiguration: void <init>(boolean)>(z0)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : specialinvoke $r5.<com.dangdang.ddframe.job.fixture.config.TestDataflowJobConfiguration: void <init>(boolean)>(z0) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : interfaceinvoke $r4.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r5)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : interfaceinvoke $r4.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>($r5) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r7 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r7 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r8 = interfaceinvoke $r7.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>()
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r8 = interfaceinvoke $r7.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r9 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r8)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r9 = staticinvoke <org.mockito.Mockito: org.mockito.stubbing.OngoingStubbing when(java.lang.Object)>($r8) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r1)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : interfaceinvoke $r9.<org.mockito.stubbing.OngoingStubbing: org.mockito.stubbing.OngoingStubbing thenReturn(java.lang.Object)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r11 = new com.dangdang.ddframe.job.executor.type.DataflowJobExecutor
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r11 = new com.dangdang.ddframe.job.executor.type.DataflowJobExecutor >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r12 = new com.dangdang.ddframe.job.fixture.job.TestDataflowJob
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r12 = new com.dangdang.ddframe.job.fixture.job.TestDataflowJob >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r13 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller>
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r13 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller> >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : specialinvoke $r12.<com.dangdang.ddframe.job.fixture.job.TestDataflowJob: void <init>(com.dangdang.ddframe.job.fixture.job.JobCaller)>($r13)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : specialinvoke $r12.<com.dangdang.ddframe.job.fixture.job.TestDataflowJob: void <init>(com.dangdang.ddframe.job.fixture.job.JobCaller)>($r13) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r14 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r14 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : specialinvoke $r11.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutor: void <init>(com.dangdang.ddframe.job.api.dataflow.DataflowJob,com.dangdang.ddframe.job.executor.JobFacade)>($r12, $r14)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : specialinvoke $r11.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutor: void <init>(com.dangdang.ddframe.job.api.dataflow.DataflowJob,com.dangdang.ddframe.job.executor.JobFacade)>($r12, $r14) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.type.DataflowJobExecutor dataflowJobExecutor> = $r11
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.type.DataflowJobExecutor dataflowJobExecutor> = $r11 >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r15 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : $r15 = r0.<com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void prepareForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r15, r1)
com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void prepareForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r15, r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.DataflowJobExecutorTest.setUp : return
