com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r29 = new java.lang.RuntimeException >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r28)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r28) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : throw $r29
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r3 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r4 = (com.dangdang.ddframe.job.executor.JobFacade) $r3
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r3 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r28 := @caughtexception
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r4 = (com.dangdang.ddframe.job.executor.JobFacade) $r3 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r4.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r4 = (com.dangdang.ddframe.job.executor.JobFacade) $r3 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r28 := @caughtexception
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r4.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : goto [?= $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)]
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r4.<com.dangdang.ddframe.job.executor.JobFacade: void checkJobExecutionEnvironment()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r28 := @caughtexception
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : goto [?= $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)] >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r6 = (com.dangdang.ddframe.job.executor.JobFacade) $r5
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r6 = (com.dangdang.ddframe.job.executor.JobFacade) $r5 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r6.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r6.<com.dangdang.ddframe.job.executor.JobFacade: com.dangdang.ddframe.job.executor.ShardingContexts getShardingContexts()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r8 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r9 = (com.dangdang.ddframe.job.executor.JobFacade) $r8
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r9 = (com.dangdang.ddframe.job.executor.JobFacade) $r8 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r11 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r11 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r9.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r10, $r11, "Job \'test_job\' execute begin.")
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r9.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r10, $r11, "Job \'test_job\' execute begin.") >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r13 = (com.dangdang.ddframe.job.executor.JobFacade) $r12
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r13 = (com.dangdang.ddframe.job.executor.JobFacade) $r12 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r13.<com.dangdang.ddframe.job.executor.JobFacade: boolean misfireIfRunning(java.util.Collection)>($r15)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r13.<com.dangdang.ddframe.job.executor.JobFacade: boolean misfireIfRunning(java.util.Collection)>($r15) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r16 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r17 = (com.dangdang.ddframe.job.executor.JobFacade) $r16
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r17 = (com.dangdang.ddframe.job.executor.JobFacade) $r16 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r17.<com.dangdang.ddframe.job.executor.JobFacade: void beforeJobExecuted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r17.<com.dangdang.ddframe.job.executor.JobFacade: void beforeJobExecuted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r18 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r18 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r19 = (com.dangdang.ddframe.job.executor.JobFacade) $r18
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r19 = (com.dangdang.ddframe.job.executor.JobFacade) $r18 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r19.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobBegin(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r19.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobBegin(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r20 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r20 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r21 = (com.dangdang.ddframe.job.executor.JobFacade) $r20
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r21 = (com.dangdang.ddframe.job.executor.JobFacade) $r20 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r21.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobCompleted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r21.<com.dangdang.ddframe.job.executor.JobFacade: void registerJobCompleted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r22 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r23 = (com.dangdang.ddframe.job.executor.JobFacade) $r22
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r23 = (com.dangdang.ddframe.job.executor.JobFacade) $r22 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r24 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r24 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.util.Map getShardingItemParameters()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r25 = interfaceinvoke $r24.<java.util.Map: java.util.Set keySet()>()
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r25 = interfaceinvoke $r24.<java.util.Map: java.util.Set keySet()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r23.<com.dangdang.ddframe.job.executor.JobFacade: boolean isExecuteMisfired(java.util.Collection)>($r25)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r23.<com.dangdang.ddframe.job.executor.JobFacade: boolean isExecuteMisfired(java.util.Collection)>($r25) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r26 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r26 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r27 = (com.dangdang.ddframe.job.executor.JobFacade) $r26
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : $r27 = (com.dangdang.ddframe.job.executor.JobFacade) $r26 >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r27.<com.dangdang.ddframe.job.executor.JobFacade: void afterJobExecuted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1)
com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : interfaceinvoke $r27.<com.dangdang.ddframe.job.executor.JobFacade: void afterJobExecuted(com.dangdang.ddframe.job.executor.ShardingContexts)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.ElasticJobVerify.verifyForIsNotMisfire : return
