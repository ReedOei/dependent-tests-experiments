com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r6 = new java.lang.RuntimeException
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r6 = new java.lang.RuntimeException >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported database:")
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported database:") >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : throw $r6
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12
