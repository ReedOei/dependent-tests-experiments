com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r3 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: org.slf4j.Logger access$000()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r4 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: java.lang.String val$identity>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r4 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: java.lang.String val$identity> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Elastic job: {} has leadership", $r4)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Elastic job: {} has leadership", $r4) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r5 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.base.ElectionCandidate val$electionCandidate>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r5 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.base.ElectionCandidate val$electionCandidate> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r5.<com.dangdang.ddframe.job.reg.base.ElectionCandidate: void startLeadership()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r5 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.base.ElectionCandidate val$electionCandidate> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r12 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: org.slf4j.Logger access$000()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Elastic job: Starting error", $r11)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Elastic job: Starting error", $r11) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : staticinvoke <java.lang.System: void exit(int)>(1)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : staticinvoke <java.lang.System: void exit(int)>(1) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : return
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r5.<com.dangdang.ddframe.job.reg.base.ElectionCandidate: void startLeadership()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r6 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService this$0>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r5.<com.dangdang.ddframe.job.reg.base.ElectionCandidate: void startLeadership()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r6 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService this$0> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r7 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: java.util.concurrent.CountDownLatch access$100(com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService)>($r6)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r6 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService this$0> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r7 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: java.util.concurrent.CountDownLatch access$100(com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService)>($r6) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void await()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r7 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: java.util.concurrent.CountDownLatch access$100(com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService)>($r6) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r8 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: org.slf4j.Logger access$000()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void await()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r8 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: org.slf4j.Logger access$000()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r9 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: java.lang.String val$identity>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r8 = staticinvoke <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService: org.slf4j.Logger access$000()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r9 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: java.lang.String val$identity> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Elastic job: {} lost leadership.", $r9)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r9 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: java.lang.String val$identity> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Elastic job: {} lost leadership.", $r9) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r10 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.base.ElectionCandidate val$electionCandidate>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Elastic job: {} lost leadership.", $r9) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r10 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.base.ElectionCandidate val$electionCandidate> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r10.<com.dangdang.ddframe.job.reg.base.ElectionCandidate: void stopLeadership()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r10 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1: com.dangdang.ddframe.job.reg.base.ElectionCandidate val$electionCandidate> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r10.<com.dangdang.ddframe.job.reg.base.ElectionCandidate: void stopLeadership()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : goto [?= return]
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : interfaceinvoke $r10.<com.dangdang.ddframe.job.reg.base.ElectionCandidate: void stopLeadership()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : $r11 := @caughtexception
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperElectionService$1.takeLeadership : return
