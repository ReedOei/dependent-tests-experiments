com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r2 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void prepareForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r2, r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void prepareForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r2, r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r3 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.type.SimpleJobExecutor simpleJobExecutor>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r3 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.type.SimpleJobExecutor simpleJobExecutor> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : virtualinvoke $r3.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutor: void execute()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : virtualinvoke $r3.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutor: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r4 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r4 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r4)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r5 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r4) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r6 = (com.dangdang.ddframe.job.executor.JobFacade) $r5
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r6 = (com.dangdang.ddframe.job.executor.JobFacade) $r5 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r7 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r7 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r8 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r8 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : interfaceinvoke $r6.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r7, $r8, "Job \'test_job\' execute begin.")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : interfaceinvoke $r6.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r7, $r8, "Job \'test_job\' execute begin.") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r9 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r9 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r10 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r9)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r10 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($r9) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r11 = (com.dangdang.ddframe.job.executor.JobFacade) $r10
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r11 = (com.dangdang.ddframe.job.executor.JobFacade) $r10 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r13 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_FINISHED>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r13 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_FINISHED> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : interfaceinvoke $r11.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r12, $r13, "")
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : interfaceinvoke $r11.<com.dangdang.ddframe.job.executor.JobFacade: void postJobStatusTraceEvent(java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r12, $r13, "") >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r14 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r14 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.executor.JobFacade jobFacade> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void verifyForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r14, r1)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : staticinvoke <com.dangdang.ddframe.job.executor.type.ElasticJobVerify: void verifyForIsNotMisfire(com.dangdang.ddframe.job.executor.JobFacade,com.dangdang.ddframe.job.executor.ShardingContexts)>($r14, r1) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r15 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller>
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r15 = r0.<com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest: com.dangdang.ddframe.job.fixture.job.JobCaller jobCaller> >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: int getShardingTotalCount()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.executor.ShardingContexts: int getShardingTotalCount()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r16 = staticinvoke <org.mockito.Mockito: org.mockito.verification.VerificationMode times(int)>($i0)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r16 = staticinvoke <org.mockito.Mockito: org.mockito.verification.VerificationMode times(int)>($i0) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>($r15, $r16)
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r17 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>($r15, $r16) >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r18 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r17
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : $r18 = (com.dangdang.ddframe.job.fixture.job.JobCaller) $r17 >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : interfaceinvoke $r18.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>()
com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : interfaceinvoke $r18.<com.dangdang.ddframe.job.fixture.job.JobCaller: void execute()>() >>>>>>>> com.dangdang.ddframe.job.executor.type.SimpleJobExecutorTest.assertExecuteWhenRunOnceSuccess : return
