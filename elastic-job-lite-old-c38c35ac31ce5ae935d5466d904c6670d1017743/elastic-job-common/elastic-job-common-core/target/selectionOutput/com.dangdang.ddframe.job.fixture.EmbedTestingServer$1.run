com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : staticinvoke <com.dangdang.ddframe.job.reg.exception.RegExceptionHandler: void handleException(java.lang.Exception)>($r3) >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : return
com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : $r2 = staticinvoke <com.dangdang.ddframe.job.fixture.EmbedTestingServer: org.apache.curator.test.TestingServer access$000()>() >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : virtualinvoke $r2.<org.apache.curator.test.TestingServer: void close()>()
com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : $r2 = staticinvoke <com.dangdang.ddframe.job.fixture.EmbedTestingServer: org.apache.curator.test.TestingServer access$000()>() >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : $r3 := @caughtexception
com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : virtualinvoke $r2.<org.apache.curator.test.TestingServer: void close()>() >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : goto [?= return]
com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : virtualinvoke $r2.<org.apache.curator.test.TestingServer: void close()>() >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : $r3 := @caughtexception
com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer$1.run : return
