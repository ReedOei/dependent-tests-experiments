com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r2 = new com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r3 = new java.lang.StringBuilder
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r3 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inner-job-")
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inner-job-") >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i0 = virtualinvoke $r7.<java.lang.Runtime: int availableProcessors()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i0 = virtualinvoke $r7.<java.lang.Runtime: int availableProcessors()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i1 = $i0 * 2
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i1 = $i0 * 2 >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: void <init>(java.lang.String,int)>($r6, $i1)
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: void <init>(java.lang.String,int)>($r6, $i1) >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r8 = virtualinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ExecutorService createExecutorService()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r8 = virtualinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ExecutorService createExecutorService()>() >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r1 = r0.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ThreadPoolExecutor threadPoolExecutor>
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r1 = r0.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ThreadPoolExecutor threadPoolExecutor> >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)>($r1)
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)>($r1) >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r2)
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r2) >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : return $r3
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : return $r3 >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : return $r8
