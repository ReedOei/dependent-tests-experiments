com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : $r4 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r9 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r9 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r3 = staticinvoke <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] values()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r3 = staticinvoke <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] values()>() >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r0 = <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] $VALUES>
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r0 = <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r2 = (com.dangdang.ddframe.job.statistics.StatisticInterval[]) $r1
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r2 = (com.dangdang.ddframe.job.statistics.StatisticInterval[]) $r1 >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : return $r2
com.dangdang.ddframe.job.statistics.StatisticInterval.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i0 = lengthof r3
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i0 = lengthof r3 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if i1 >= i0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if i1 >= i0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r4 = r3[i1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r4 = r3[i1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r8 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r8 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r5 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r11, $r12)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r5 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r11, $r12) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r17 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r17 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTable(java.sql.Connection,com.dangdang.ddframe.job.statistics.StatisticInterval)>(r1, r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTable(java.sql.Connection,com.dangdang.ddframe.job.statistics.StatisticInterval)>(r1, r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE `TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE `TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`id` BIGINT NOT NULL AUTO_INCREMENT, `success_count` INT(11),`failed_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`id` BIGINT NOT NULL AUTO_INCREMENT, `success_count` INT(11),`failed_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r15 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r15 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : if r4 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : if r4 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if r5 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if r5 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= i1 = i1 + 1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= i1 = i1 + 1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = i1 + 1
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = i1 + 1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= (branch)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "TASK_RUNNING_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "TASK_RUNNING_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `TASK_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `TASK_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_RUNNING_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_RUNNING_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_REGISTER_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_REGISTER_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_REGISTER_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `registered_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_REGISTER_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `registered_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : if r1 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : if r1 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : interfaceinvoke r1.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : interfaceinvoke r1.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r11 = new com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r11 = new com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r12 = new java.util.Date
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r12 = new java.util.Date >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r12.<java.util.Date: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r12.<java.util.Date: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r11.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: void <init>(int,int,com.dangdang.ddframe.job.statistics.StatisticInterval,java.util.Date)>(0, 0, r2, $r12)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r11.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: void <init>(int,int,com.dangdang.ddframe.job.statistics.StatisticInterval,java.util.Date)>(0, 0, r2, $r12) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r37 = $r11
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r37 = $r11 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r13 = new java.text.SimpleDateFormat
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r13 = new java.text.SimpleDateFormat >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r14 = newarray (java.lang.Object)[2]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r14 = newarray (java.lang.Object)[2] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r15 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r15 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r14[0] = $r18
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r14[0] = $r18 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r19 = virtualinvoke $r13.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r19 = virtualinvoke $r13.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r14[1] = $r19
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r14[1] = $r19 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT sum(success_count), sum(failed_count) FROM %s WHERE statistics_time >= \'%s\'", $r14)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT sum(success_count), sum(failed_count) FROM %s WHERE statistics_time >= \'%s\'", $r14) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r20 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r20 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r38 = interfaceinvoke $r20.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r38 = interfaceinvoke $r20.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r39 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r39 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r40 = interfaceinvoke r38.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r40 = interfaceinvoke r38.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r41 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r41 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r42 = interfaceinvoke r40.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r42 = interfaceinvoke r40.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r43 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r43 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $z0 = interfaceinvoke r42.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $z0 = interfaceinvoke r42.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if $z0 == 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r21 = new com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r21 = new com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $i0 = interfaceinvoke r42.<java.sql.ResultSet: int getInt(int)>(1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $i0 = interfaceinvoke r42.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $i1 = interfaceinvoke r42.<java.sql.ResultSet: int getInt(int)>(2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $i1 = interfaceinvoke r42.<java.sql.ResultSet: int getInt(int)>(2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r22 = new java.util.Date
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : $r22 = new java.util.Date >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r22.<java.util.Date: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r22.<java.util.Date: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r21.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: void <init>(int,int,com.dangdang.ddframe.job.statistics.StatisticInterval,java.util.Date)>($i0, $i1, r2, $r22)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : specialinvoke $r21.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: void <init>(int,int,com.dangdang.ddframe.job.statistics.StatisticInterval,java.util.Date)>($i0, $i1, r2, $r22) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r37 = $r21
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : r37 = $r21 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= $z0 = interfaceinvoke r42.<java.sql.ResultSet: boolean next()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= $z0 = interfaceinvoke r42.<java.sql.ResultSet: boolean next()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if r42 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if r42 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= interfaceinvoke r42.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= interfaceinvoke r42.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : interfaceinvoke r42.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : interfaceinvoke r42.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= (branch)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if r40 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if r40 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= interfaceinvoke r40.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= interfaceinvoke r40.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : interfaceinvoke r40.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : interfaceinvoke r40.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if r38 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : if r38 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= interfaceinvoke r38.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= interfaceinvoke r38.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : interfaceinvoke r38.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : interfaceinvoke r38.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= return r37]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : goto [?= return r37] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : return r37
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.getSummedTaskResultStatistics : return r37 >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int successCount>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int successCount> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : return $i0
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : return $i0 >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int failedCount>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int failedCount> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : return $i0
