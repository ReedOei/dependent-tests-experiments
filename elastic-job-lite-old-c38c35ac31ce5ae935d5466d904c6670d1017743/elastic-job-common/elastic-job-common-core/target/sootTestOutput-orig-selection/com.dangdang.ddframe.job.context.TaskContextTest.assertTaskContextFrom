com.dangdang.ddframe.job.fixture.context.TaskNode.builder : $r0 = new com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.builder : specialinvoke $r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: void <init>()>()
com.dangdang.ddframe.job.fixture.context.TaskNode.builder : specialinvoke $r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.builder : return $r0
com.dangdang.ddframe.job.fixture.context.TaskNode.builder : return $r0 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r1 = new com.dangdang.ddframe.job.fixture.context.TaskNode
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r1 = new com.dangdang.ddframe.job.fixture.context.TaskNode >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r5 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: java.lang.String jobName>
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r5 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $i0 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: int shardingItem>
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $i0 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: int shardingItem> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r4 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: com.dangdang.ddframe.job.context.ExecutionType type>
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r4 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: com.dangdang.ddframe.job.context.ExecutionType type> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r3 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: java.lang.String slaveId>
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r3 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: java.lang.String slaveId> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r2 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: java.lang.String uuid>
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : $r2 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder: java.lang.String uuid> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : specialinvoke $r1.<com.dangdang.ddframe.job.fixture.context.TaskNode: void <init>(java.lang.String,int,com.dangdang.ddframe.job.context.ExecutionType,java.lang.String,java.lang.String)>($r5, $i0, $r4, $r3, $r2)
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : specialinvoke $r1.<com.dangdang.ddframe.job.fixture.context.TaskNode: void <init>(java.lang.String,int,com.dangdang.ddframe.job.context.ExecutionType,java.lang.String,java.lang.String)>($r5, $i0, $r4, $r3, $r2) >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : return $r1
com.dangdang.ddframe.job.fixture.context.TaskNode$TaskNodeBuilder.build : return $r1 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r3 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("@-@")
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r3 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("@-@") >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r4 = virtualinvoke r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String getTaskNodePath()>()
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r4 = virtualinvoke r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String getTaskNodePath()>() >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r1 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("@-@")
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r1 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>("@-@") >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r2 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String jobName>
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r2 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : if null != $r2
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : if null != $r2 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r6 = "test_job"
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r6 = "test_job" >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : goto [?= $i0 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: int shardingItem>]
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : goto [?= $i0 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: int shardingItem>] >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $i0 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: int shardingItem>
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $i0 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: int shardingItem> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r4 = newarray (java.lang.Object)[0]
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r4 = newarray (java.lang.Object)[0] >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r5 = virtualinvoke $r1.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>($r6, $r3, $r4)
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : $r5 = virtualinvoke $r1.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>($r6, $r3, $r4) >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : return $r5
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodePath : return $r5 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r1 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: com.dangdang.ddframe.job.context.ExecutionType type>
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r1 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: com.dangdang.ddframe.job.context.ExecutionType type> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : if null != $r1
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : if null != $r1 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r5 = <com.dangdang.ddframe.job.context.ExecutionType: com.dangdang.ddframe.job.context.ExecutionType READY>
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r5 = <com.dangdang.ddframe.job.context.ExecutionType: com.dangdang.ddframe.job.context.ExecutionType READY> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : goto [?= $r6 = newarray (java.lang.Object)[2]]
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : goto [?= $r6 = newarray (java.lang.Object)[2]] >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r6 = newarray (java.lang.Object)[2]
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r6 = newarray (java.lang.Object)[2] >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r2 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String slaveId>
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r2 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String slaveId> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : if null != $r2
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : if null != $r2 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r7 = "slave-S0"
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r7 = "slave-S0" >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : goto [?= $r6[0] = $r7]
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : goto [?= $r6[0] = $r7] >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r6[0] = $r7
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r6[0] = $r7 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r8 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String uuid>
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r8 = r0.<com.dangdang.ddframe.job.fixture.context.TaskNode: java.lang.String uuid> >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : if null != $r8
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : if null != $r8 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r9 = "0"
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r9 = "0" >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : goto [?= $r6[1] = $r9]
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : goto [?= $r6[1] = $r9] >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r6[1] = $r9
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r6[1] = $r9 >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r10 = virtualinvoke $r3.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>($r4, $r5, $r6)
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : $r10 = virtualinvoke $r3.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>($r4, $r5, $r6) >>>>>>>> com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : return $r10
com.dangdang.ddframe.job.fixture.context.TaskNode.getTaskNodeValue : return $r10 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("@-@")
com.dangdang.ddframe.job.context.TaskContext.from : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("@-@") >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $i0 = lengthof r1
com.dangdang.ddframe.job.context.TaskContext.from : $i0 = lengthof r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : if 5 != $i0
com.dangdang.ddframe.job.context.TaskContext.from : if 5 != $i0 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $z0 = 1
com.dangdang.ddframe.job.context.TaskContext.from : $z0 = 1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0)]
com.dangdang.ddframe.job.context.TaskContext.from : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0)] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0)
com.dangdang.ddframe.job.context.TaskContext.from : staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r2 = new com.dangdang.ddframe.job.context.TaskContext
com.dangdang.ddframe.job.context.TaskContext.from : $r2 = new com.dangdang.ddframe.job.context.TaskContext >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r3 = new java.lang.StringBuilder
com.dangdang.ddframe.job.context.TaskContext.from : $r3 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.context.TaskContext.from : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r4 = r1[0]
com.dangdang.ddframe.job.context.TaskContext.from : $r4 = r1[0] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
com.dangdang.ddframe.job.context.TaskContext.from : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@-@")
com.dangdang.ddframe.job.context.TaskContext.from : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@-@") >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r7 = r1[1]
com.dangdang.ddframe.job.context.TaskContext.from : $r7 = r1[1] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
com.dangdang.ddframe.job.context.TaskContext.from : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.context.TaskContext.from : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r10 = staticinvoke <com.dangdang.ddframe.job.context.TaskContext$MetaInfo: com.dangdang.ddframe.job.context.TaskContext$MetaInfo 'from'(java.lang.String)>($r9)
com.dangdang.ddframe.job.context.TaskContext.from : $r10 = staticinvoke <com.dangdang.ddframe.job.context.TaskContext$MetaInfo: com.dangdang.ddframe.job.context.TaskContext$MetaInfo 'from'(java.lang.String)>($r9) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("@-@")
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("@-@") >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $i0 = lengthof r1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $i0 = lengthof r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if 1 == $i0
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if 1 == $i0 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $i2 = lengthof r1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $i2 = lengthof r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if 2 == $i2
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if 2 == $i2 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $z1 = 1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $z1 = 1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1)]
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : goto [?= staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1)] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z1) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r2 = new com.dangdang.ddframe.job.context.TaskContext$MetaInfo
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r2 = new com.dangdang.ddframe.job.context.TaskContext$MetaInfo >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r3 = r1[0]
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r3 = r1[0] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $i1 = lengthof r1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $i1 = lengthof r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if 1 == $i1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if 1 == $i1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r5 = ""
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r5 = "" >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r4 = r1[1]
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r4 = r1[1] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if $z0 == 0
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r6 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(",")
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r6 = staticinvoke <com.google.common.base.Splitter: com.google.common.base.Splitter on(java.lang.String)>(",") >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r7 = r1[1]
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r7 = r1[1] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r8 = virtualinvoke $r6.<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>($r7)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r8 = virtualinvoke $r6.<com.google.common.base.Splitter: java.util.List splitToList(java.lang.CharSequence)>($r7) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r9 = new com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r9 = new com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : specialinvoke $r9.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1: void <init>()>()
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : specialinvoke $r9.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r10 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r8, $r9)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : $r10 = staticinvoke <com.google.common.collect.Lists: java.util.List transform(java.util.List,com.google.common.base.Function)>($r8, $r9) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : specialinvoke $r2.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo: void <init>(java.lang.String,java.util.List)>($r3, $r10)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : specialinvoke $r2.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo: void <init>(java.lang.String,java.util.List)>($r3, $r10) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : return $r2
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.from : return $r2 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r11 = r1[2]
com.dangdang.ddframe.job.context.TaskContext.from : $r11 = r1[2] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r12 = staticinvoke <com.dangdang.ddframe.job.context.ExecutionType: com.dangdang.ddframe.job.context.ExecutionType valueOf(java.lang.String)>($r11)
com.dangdang.ddframe.job.context.TaskContext.from : $r12 = staticinvoke <com.dangdang.ddframe.job.context.ExecutionType: com.dangdang.ddframe.job.context.ExecutionType valueOf(java.lang.String)>($r11) >>>>>>>> com.dangdang.ddframe.job.context.ExecutionType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/dangdang/ddframe/job/context/ExecutionType;", r0)
com.dangdang.ddframe.job.context.ExecutionType.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/dangdang/ddframe/job/context/ExecutionType;", r0) >>>>>>>> com.dangdang.ddframe.job.context.ExecutionType.valueOf : $r2 = (com.dangdang.ddframe.job.context.ExecutionType) $r1
com.dangdang.ddframe.job.context.ExecutionType.valueOf : $r2 = (com.dangdang.ddframe.job.context.ExecutionType) $r1 >>>>>>>> com.dangdang.ddframe.job.context.ExecutionType.valueOf : return $r2
com.dangdang.ddframe.job.context.ExecutionType.valueOf : return $r2 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : $r13 = r1[3]
com.dangdang.ddframe.job.context.TaskContext.from : $r13 = r1[3] >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : specialinvoke $r2.<com.dangdang.ddframe.job.context.TaskContext: void <init>(java.lang.String,com.dangdang.ddframe.job.context.TaskContext$MetaInfo,com.dangdang.ddframe.job.context.ExecutionType,java.lang.String)>(r0, $r10, $r12, $r13)
com.dangdang.ddframe.job.context.TaskContext.from : specialinvoke $r2.<com.dangdang.ddframe.job.context.TaskContext: void <init>(java.lang.String,com.dangdang.ddframe.job.context.TaskContext$MetaInfo,com.dangdang.ddframe.job.context.ExecutionType,java.lang.String)>(r0, $r10, $r12, $r13) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.from : return $r2
com.dangdang.ddframe.job.context.TaskContext.from : return $r2 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getId : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: java.lang.String id>
com.dangdang.ddframe.job.context.TaskContext.getId : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: java.lang.String id> >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getId : return $r1
com.dangdang.ddframe.job.context.TaskContext.getId : return $r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getMetaInfo : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: com.dangdang.ddframe.job.context.TaskContext$MetaInfo metaInfo>
com.dangdang.ddframe.job.context.TaskContext.getMetaInfo : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: com.dangdang.ddframe.job.context.TaskContext$MetaInfo metaInfo> >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getMetaInfo : return $r1
com.dangdang.ddframe.job.context.TaskContext.getMetaInfo : return $r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getJobName : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo: java.lang.String jobName>
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getJobName : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getJobName : return $r1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getJobName : return $r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getShardingItems : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo: java.util.List shardingItems>
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getShardingItems : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo: java.util.List shardingItems> >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getShardingItems : return $r1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo.getShardingItems : return $r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $r2 = (java.lang.String) r1
com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $r2 = (java.lang.String) r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $r3 = virtualinvoke r0.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1: java.lang.Integer apply(java.lang.String)>($r2)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $r3 = virtualinvoke r0.<com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1: java.lang.Integer apply(java.lang.String)>($r2) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : return $r2
com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : return $r2 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : return $r3
com.dangdang.ddframe.job.context.TaskContext$MetaInfo$1.apply : return $r3 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getType : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: com.dangdang.ddframe.job.context.ExecutionType type>
com.dangdang.ddframe.job.context.TaskContext.getType : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: com.dangdang.ddframe.job.context.ExecutionType type> >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getType : return $r1
com.dangdang.ddframe.job.context.TaskContext.getType : return $r1 >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getSlaveId : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: java.lang.String slaveId>
com.dangdang.ddframe.job.context.TaskContext.getSlaveId : $r1 = r0.<com.dangdang.ddframe.job.context.TaskContext: java.lang.String slaveId> >>>>>>>> com.dangdang.ddframe.job.context.TaskContext.getSlaveId : return $r1
