com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.remove : $r1 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.remove : interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.remove : interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r2 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.concurrent.CyclicBarrier barrier>
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r2 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.concurrent.CyclicBarrier barrier> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : virtualinvoke $r2.<java.util.concurrent.CyclicBarrier: int await()>()
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : virtualinvoke $r2.<java.util.concurrent.CyclicBarrier: int await()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : goto [?= $r4 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.Set set>]
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : goto [?= $r4 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.Set set>] >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r4 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.Set set>
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r4 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.Set set> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r3 = new com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r3 = new com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : specialinvoke $r3.<com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler: void <init>()>()
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : specialinvoke $r3.<com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r5 = staticinvoke <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.concurrent.ExecutorService getExecutorServiceHandler(java.lang.String,com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandler)>("test_job", $r3)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r5 = staticinvoke <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.concurrent.ExecutorService getExecutorServiceHandler(java.lang.String,com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandler)>("test_job", $r3) >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r2 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY>
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r2 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : if $z0 != 0
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r6 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY>
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r6 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r7 = interfaceinvoke r1.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandler: java.util.concurrent.ExecutorService createExecutorService(java.lang.String)>(r0)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r7 = interfaceinvoke r1.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandler: java.util.concurrent.ExecutorService createExecutorService(java.lang.String)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r2 = new com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r2 = new com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r3 = new java.lang.StringBuilder
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r3 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inner-job-")
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("inner-job-") >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r7 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i0 = virtualinvoke $r7.<java.lang.Runtime: int availableProcessors()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i0 = virtualinvoke $r7.<java.lang.Runtime: int availableProcessors()>() >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i1 = $i0 * 2
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $i1 = $i0 * 2 >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: void <init>(java.lang.String,int)>($r6, $i1)
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : specialinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: void <init>(java.lang.String,int)>($r6, $i1) >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r8 = virtualinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ExecutorService createExecutorService()>()
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : $r8 = virtualinvoke $r2.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ExecutorService createExecutorService()>() >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r1 = r0.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ThreadPoolExecutor threadPoolExecutor>
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r1 = r0.<com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject: java.util.concurrent.ThreadPoolExecutor threadPoolExecutor> >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)>($r1)
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r2 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)>($r1) >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r2)
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : $r3 = staticinvoke <com.google.common.util.concurrent.MoreExecutors: com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)>($r2) >>>>>>>> com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : return $r3
com.dangdang.ddframe.job.util.concurrent.ExecutorServiceObject.createExecutorService : return $r3 >>>>>>>> com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : return $r8
com.dangdang.ddframe.job.executor.handler.impl.DefaultExecutorServiceHandler.createExecutorService : return $r8 >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r7) >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r3 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY>
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r3 = <com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry: java.util.Map REGISTRY> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0) >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r5 = (java.util.concurrent.ExecutorService) $r4
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : $r5 = (java.util.concurrent.ExecutorService) $r4 >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : return $r5
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistry.getExecutorServiceHandler : return $r5 >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5)
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r5) >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r6 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.concurrent.CountDownLatch latch>
com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : $r6 = r0.<com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask: java.util.concurrent.CountDownLatch latch> >>>>>>>> com.dangdang.ddframe.job.executor.handler.ExecutorServiceHandlerRegistryTest$GetExecutorServiceHandlerTask.run : virtualinvoke $r6.<java.util.concurrent.CountDownLatch: void countDown()>()
