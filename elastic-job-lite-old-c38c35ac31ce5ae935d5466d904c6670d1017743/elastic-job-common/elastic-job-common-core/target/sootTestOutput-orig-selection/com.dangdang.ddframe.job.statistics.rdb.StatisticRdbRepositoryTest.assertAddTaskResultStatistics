com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r0 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(":") >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3181)
com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3181) >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r2 = newarray (java.lang.Object)[0]
com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r2 = newarray (java.lang.Object)[0] >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r3 = virtualinvoke $r0.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>("localhost", $r1, $r2)
com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : $r3 = virtualinvoke $r0.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>("localhost", $r1, $r2) >>>>>>>> com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : return $r3
com.dangdang.ddframe.job.fixture.EmbedTestingServer.getConnectionString : return $r3 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : $r4 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : $r4 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r9 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r9 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r3 = staticinvoke <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] values()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r3 = staticinvoke <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] values()>() >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r0 = <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] $VALUES>
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r0 = <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r2 = (com.dangdang.ddframe.job.statistics.StatisticInterval[]) $r1
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r2 = (com.dangdang.ddframe.job.statistics.StatisticInterval[]) $r1 >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : return $r2
com.dangdang.ddframe.job.statistics.StatisticInterval.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i0 = lengthof r3
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i0 = lengthof r3 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if i1 >= i0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if i1 >= i0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r4 = r3[i1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r4 = r3[i1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r8 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r8 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r5 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r11, $r12)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r5 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r11, $r12) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r17 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r17 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTable(java.sql.Connection,com.dangdang.ddframe.job.statistics.StatisticInterval)>(r1, r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTable(java.sql.Connection,com.dangdang.ddframe.job.statistics.StatisticInterval)>(r1, r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE `TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE `TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`id` BIGINT NOT NULL AUTO_INCREMENT, `success_count` INT(11),`failed_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`id` BIGINT NOT NULL AUTO_INCREMENT, `success_count` INT(11),`failed_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r15 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r15 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : if r4 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : if r4 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if r5 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if r5 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= i1 = i1 + 1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= i1 = i1 + 1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = i1 + 1
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = i1 + 1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= (branch)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "TASK_RUNNING_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "TASK_RUNNING_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `TASK_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `TASK_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_RUNNING_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_RUNNING_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_REGISTER_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_REGISTER_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_REGISTER_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `registered_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_REGISTER_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `registered_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : if r1 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : if r1 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : interfaceinvoke r1.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : interfaceinvoke r1.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : z1 = 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT INTO `TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSERT INTO `TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: com.dangdang.ddframe.job.statistics.StatisticInterval getStatisticInterval()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: com.dangdang.ddframe.job.statistics.StatisticInterval getStatisticInterval()>() >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticInterval : $r1 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: com.dangdang.ddframe.job.statistics.StatisticInterval statisticInterval>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticInterval : $r1 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: com.dangdang.ddframe.job.statistics.StatisticInterval statisticInterval> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticInterval : return $r1
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticInterval : return $r1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`success_count`, `failed_count`, `statistics_time`, `creation_time`) VALUES (?, ?, ?, ?);")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`success_count`, `failed_count`, `statistics_time`, `creation_time`) VALUES (?, ?, ?, ?);") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r12 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r12 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r27 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r27 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r28 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r28 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r29 = interfaceinvoke r27.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r29 = interfaceinvoke r27.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r30 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : r30 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int getSuccessCount()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int getSuccessCount()>() >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int successCount>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int successCount> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : return $i0
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getSuccessCount : return $i0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setInt(int,int)>(1, $i0)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setInt(int,int)>(1, $i0) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $i1 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int getFailedCount()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $i1 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int getFailedCount()>() >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int failedCount>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : $i0 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: int failedCount> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : return $i0
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getFailedCount : return $i0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setInt(int,int)>(2, $i1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setInt(int,int)>(2, $i1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r13 = new java.sql.Timestamp
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r13 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date getStatisticsTime()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date getStatisticsTime()>() >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticsTime : $r1 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date statisticsTime>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticsTime : $r1 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date statisticsTime> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticsTime : return $r1
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getStatisticsTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $l2 = virtualinvoke $r14.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $l2 = virtualinvoke $r14.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : specialinvoke $r13.<java.sql.Timestamp: void <init>(long)>($l2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : specialinvoke $r13.<java.sql.Timestamp: void <init>(long)>($l2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(3, $r13)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(3, $r13) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r15 = new java.sql.Timestamp
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r15 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date getCreationTime()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date getCreationTime()>() >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getCreationTime : $r1 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date creationTime>
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getCreationTime : $r1 = r0.<com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics: java.util.Date creationTime> >>>>>>>> com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getCreationTime : return $r1
com.dangdang.ddframe.job.statistics.type.task.TaskResultStatistics.getCreationTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $l3 = virtualinvoke $r16.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : $l3 = virtualinvoke $r16.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l3)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l3) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(4, $r15)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(4, $r15) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : z1 = 1
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : z1 = 1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : if r29 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : if r29 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= interfaceinvoke r29.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= interfaceinvoke r29.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r29.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= (branch)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : if r27 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : if r27 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= interfaceinvoke r27.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= interfaceinvoke r27.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r27.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : interfaceinvoke r27.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= return z1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : goto [?= return z1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.add : return z1
