com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r1 = new org.apache.commons.dbcp.BasicDataSource >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : specialinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : specialinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r2 = class "Lorg/h2/Driver;"
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r2 = class "Lorg/h2/Driver;" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setDriverClassName(java.lang.String)>($r3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setDriverClassName(java.lang.String)>($r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setUrl(java.lang.String)>("jdbc:h2:mem:")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setUrl(java.lang.String)>("jdbc:h2:mem:") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setUsername(java.lang.String)>("sa")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setUsername(java.lang.String)>("sa") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setPassword(java.lang.String)>("")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : virtualinvoke $r1.<org.apache.commons.dbcp.BasicDataSource: void setPassword(java.lang.String)>("") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r4 = new com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r4 = new com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : specialinvoke $r4.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void <init>(javax.sql.DataSource)>($r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : specialinvoke $r4.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void <init>(javax.sql.DataSource)>($r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r4 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r4 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r12 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r12 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTableAndIndexIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTableAndIndexIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_EXECUTION_LOG", $r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_EXECUTION_LOG", $r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r11 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_EXECUTION_LOG` (`id` VARCHAR(40) NOT NULL, `job_name` VARCHAR(100) NOT NULL, `task_id` VARCHAR(255) NOT NULL, `hostname` VARCHAR(255) NOT NULL, `ip` VARCHAR(50) NOT NULL, `sharding_item` INT NOT NULL, `execution_source` VARCHAR(20) NOT NULL, `failure_cause` VARCHAR(4000) NULL, `is_success` INT NOT NULL, `start_time` TIMESTAMP NULL, `complete_time` TIMESTAMP NULL, PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_EXECUTION_LOG` (`id` VARCHAR(40) NOT NULL, `job_name` VARCHAR(100) NOT NULL, `task_id` VARCHAR(255) NOT NULL, `hostname` VARCHAR(255) NOT NULL, `ip` VARCHAR(50) NOT NULL, `sharding_item` INT NOT NULL, `execution_source` VARCHAR(20) NOT NULL, `failure_cause` VARCHAR(4000) NULL, `is_success` INT NOT NULL, `start_time` TIMESTAMP NULL, `complete_time` TIMESTAMP NULL, PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : r10 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTableAndIndexIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTableAndIndexIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_STATUS_TRACE_LOG", $r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_STATUS_TRACE_LOG", $r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r11 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_STATUS_TRACE_LOG` (`id` VARCHAR(40) NOT NULL, `job_name` VARCHAR(100) NOT NULL, `original_task_id` VARCHAR(255) NOT NULL, `task_id` VARCHAR(255) NOT NULL, `slave_id` VARCHAR(50) NOT NULL, `source` VARCHAR(50) NOT NULL, `execution_type` VARCHAR(20) NOT NULL, `sharding_item` VARCHAR(100) NOT NULL, `state` VARCHAR(20) NOT NULL, `message` VARCHAR(4000) NULL, `creation_time` TIMESTAMP NULL, PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_STATUS_TRACE_LOG` (`id` VARCHAR(40) NOT NULL, `job_name` VARCHAR(100) NOT NULL, `original_task_id` VARCHAR(255) NOT NULL, `task_id` VARCHAR(255) NOT NULL, `slave_id` VARCHAR(50) NOT NULL, `source` VARCHAR(50) NOT NULL, `execution_type` VARCHAR(20) NOT NULL, `sharding_item` VARCHAR(100) NOT NULL, `state` VARCHAR(20) NOT NULL, `message` VARCHAR(4000) NULL, `creation_time` TIMESTAMP NULL, PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : r10 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r5 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(null, null, r2, 0, 0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r5 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(null, null, r2, 0, 0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r13 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r13 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z2 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z2 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $r8 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("INDEX_NAME")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $r8 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("INDEX_NAME") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if z1 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if z1 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdAndStateIndex(java.sql.Connection,java.lang.String)>(r1, r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdAndStateIndex(java.sql.Connection,java.lang.String)>(r1, r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE INDEX TASK_ID_STATE_INDEX ON ")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE INDEX TASK_ID_STATE_INDEX ON ") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (`task_id`, `state`);")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (`task_id`, `state`);") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : r15 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : r15 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : if r4 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : if r4 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdAndStateIndex : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if r5 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if r5 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r5 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r5 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r6 = interfaceinvoke $r5.<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r6 = interfaceinvoke $r5.<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r7 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType valueFrom(java.lang.String)>($r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r7 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType valueFrom(java.lang.String)>($r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r0 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] $VALUES>
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r0 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType[]) $r1
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType[]) $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : return $r2
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) r1
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: boolean apply(com.dangdang.ddframe.job.event.rdb.DatabaseType)>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: boolean apply(com.dangdang.ddframe.job.event.rdb.DatabaseType)>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String access$000(com.dangdang.ddframe.job.event.rdb.DatabaseType)>(r1)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String access$000(com.dangdang.ddframe.job.event.rdb.DatabaseType)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String productName>
com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String productName> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : return $r1
com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r3 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: java.lang.String val$databaseProductName>
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r3 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: java.lang.String val$databaseProductName> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : return $z0
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : return $z0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> = $r7
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> = $r7 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : if r1 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : if r1 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : interfaceinvoke r1.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : interfaceinvoke r1.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage> = $r4
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage> = $r4 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r5 = new com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : $r5 = new com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: void <init>(javax.sql.DataSource)>($r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: void <init>(javax.sql.DataSource)>($r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch repository> = $r5
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch repository> = $r5 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : staticinvoke <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: void initStorage()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.setUpClass : staticinvoke <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: void initStorage()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : i1 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : i1 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : if i1 > 500
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : if i1 > 500 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r2 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r2 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r3 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r3 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("test_job_")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("test_job_") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r7 = <com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource NORMAL_TRIGGER>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r7 = <com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource NORMAL_TRIGGER> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int)>("fake_task_id", $r6, $r7, 0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int)>("fake_task_id", $r6, $r7, 0) >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>()
com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>() >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>()
com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>() >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getHostName : return $r2
com.dangdang.ddframe.job.util.env.IpUtils.getHostName : return $r2 >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r5 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress>
com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r5 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress> >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : if null == $r5
com.dangdang.ddframe.job.util.env.IpUtils.getIp : if null == $r5 >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r8 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress>
com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r8 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress> >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : return $r8
com.dangdang.ddframe.job.util.env.IpUtils.getIp : return $r8 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r8 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r8 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : virtualinvoke $r8.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean addJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>($r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : virtualinvoke $r8.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean addJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $r2 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $r2 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if null != $r2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if null != $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z3 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean insertJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z3 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean insertJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : z3 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : z3 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r28 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r28 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r29 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r29 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r30 = interfaceinvoke r28.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_EXECUTION_LOG` (`id`, `job_name`, `task_id`, `hostname`, `ip`, `sharding_item`, `execution_source`, `is_success`, `start_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r30 = interfaceinvoke r28.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_EXECUTION_LOG` (`id`, `job_name`, `task_id`, `hostname`, `ip`, `sharding_item`, `execution_source`, `is_success`, `start_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r31 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r31 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getJobName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getJobName()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r9)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r9) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r11 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getHostname()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r11 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getHostname()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getIp()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getIp()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r12)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r12) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int getShardingItem()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int getShardingItem()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : return $i0
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : return $i0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setInt(int,int)>(6, $i0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setInt(int,int)>(6, $i0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource getSource()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource getSource()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r14 = virtualinvoke $r13.<com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r14 = virtualinvoke $r13.<com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r14)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r14) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : return $z0
com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : return $z0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(8, $z0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(8, $z0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r15 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r15 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getStartTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getStartTime()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $l1 = virtualinvoke $r16.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $l1 = virtualinvoke $r16.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(9, $r15)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(9, $r15) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : z3 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : z3 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r30 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r30 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= interfaceinvoke r30.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= interfaceinvoke r30.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r28 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r28 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= interfaceinvoke r28.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= interfaceinvoke r28.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r28.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r28.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= return z3]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= return z3] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : return z3
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : return z3 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z3
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z3 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $i0 = i1 % 2
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $i0 = i1 % 2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : if $i0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : if $i0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r11 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r11 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r9 = new com.dangdang.ddframe.job.event.type.JobStatusTraceEvent
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r9 = new com.dangdang.ddframe.job.event.type.JobStatusTraceEvent >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r10 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r10 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("test_job_")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("test_job_") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r17 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source LITE_EXECUTOR>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r17 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source LITE_EXECUTOR> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r16 = <com.dangdang.ddframe.job.context.ExecutionType: com.dangdang.ddframe.job.context.ExecutionType FAILOVER>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r16 = <com.dangdang.ddframe.job.context.ExecutionType: com.dangdang.ddframe.job.context.ExecutionType FAILOVER> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r15 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_FAILED>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r15 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_FAILED> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r9.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source,com.dangdang.ddframe.job.context.ExecutionType,java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r14, "fake_failed_failover_task_id", "fake_slave_id", $r17, $r16, "0", $r15, "message is empty.")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : specialinvoke $r9.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source,com.dangdang.ddframe.job.context.ExecutionType,java.lang.String,com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State,java.lang.String)>($r14, "fake_failed_failover_task_id", "fake_slave_id", $r17, $r16, "0", $r15, "message is empty.") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : virtualinvoke $r11.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean addJobStatusTraceEvent(com.dangdang.ddframe.job.event.type.JobStatusTraceEvent)>($r9)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : virtualinvoke $r11.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean addJobStatusTraceEvent(com.dangdang.ddframe.job.event.type.JobStatusTraceEvent)>($r9) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getOriginalTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getOriginalTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String originalTaskId>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String originalTaskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r7 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r7 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State state>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State state> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if $r7 == $r8
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if $r7 == $r8 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r26 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r26 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String taskId>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String taskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String getOriginalTaskId(java.lang.String)>($r26)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String getOriginalTaskId(java.lang.String)>($r26) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10 = newarray (java.lang.Object)[3]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10 = newarray (java.lang.Object)[3] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[0] = "JOB_STATUS_TRACE_LOG"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[0] = "JOB_STATUS_TRACE_LOG" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[1] = r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[1] = r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r11 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r11 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[2] = $r11
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[2] = $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT original_task_id FROM %s WHERE task_id = \'%s\' and state=\'%s\'", $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT original_task_id FROM %s WHERE task_id = \'%s\' and state=\'%s\'", $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r12 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r12 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r31 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r31 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r32 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r32 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r33 = interfaceinvoke r31.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r33 = interfaceinvoke r31.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r34 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r34 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r35 = interfaceinvoke r33.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r35 = interfaceinvoke r33.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r36 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r36 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $z0 = interfaceinvoke r35.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $z0 = interfaceinvoke r35.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r35 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r35 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r35.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r35.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r35.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r35.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r33 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r33 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r33.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r33.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r33.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r33.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r31 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r31 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r31.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r31.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r31.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r31.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= return ""]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= return ""] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : return ""
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : return "" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r9 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r9 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r39 = interfaceinvoke $r9.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r39 = interfaceinvoke $r9.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r40 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r40 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r41 = interfaceinvoke r39.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_STATUS_TRACE_LOG` (`id`, `job_name`, `original_task_id`, `task_id`, `slave_id`, `source`, `execution_type`, `sharding_item`,  `state`, `message`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r41 = interfaceinvoke r39.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_STATUS_TRACE_LOG` (`id`, `job_name`, `original_task_id`, `task_id`, `slave_id`, `source`, `execution_type`, `sharding_item`,  `state`, `message`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r42 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r42 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r11 = virtualinvoke $r10.<java.util.UUID: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r11 = virtualinvoke $r10.<java.util.UUID: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getJobName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getJobName()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String jobName>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r12)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r12) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, r38)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, r38) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r13)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r13) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getSlaveId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getSlaveId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String slaveId>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String slaveId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r14)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r14) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r15 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source getSource()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r15 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source getSource()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source source>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source source> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r16 = virtualinvoke $r15.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r16 = virtualinvoke $r15.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(6, $r16)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(6, $r16) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r17 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType getExecutionType()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r17 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType getExecutionType()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType executionType>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType executionType> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r18 = virtualinvoke $r17.<com.dangdang.ddframe.job.context.ExecutionType: java.lang.String name()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r18 = virtualinvoke $r17.<com.dangdang.ddframe.job.context.ExecutionType: java.lang.String name()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r18)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r18) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r19 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getShardingItems()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r19 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getShardingItems()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String shardingItems>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String shardingItems> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(8, $r19)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(8, $r19) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r20 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r20 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r21 = virtualinvoke $r20.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r21 = virtualinvoke $r20.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(9, $r21)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(9, $r21) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r22 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getMessage()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r22 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getMessage()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String message>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String message> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r23 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String truncateString(java.lang.String)>($r22)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r23 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String truncateString(java.lang.String)>($r22) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $i0 <= 4000
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $i0 <= 4000 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $r2 = r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $r2 = r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : return $r2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(10, $r23)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(10, $r23) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r24 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r24 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r25 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date getCreationTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r25 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date getCreationTime()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date creationTime>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date creationTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $l0 = virtualinvoke $r25.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $l0 = virtualinvoke $r25.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : specialinvoke $r24.<java.sql.Timestamp: void <init>(long)>($l0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : specialinvoke $r24.<java.sql.Timestamp: void <init>(long)>($l0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(11, $r24)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(11, $r24) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r41 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r41 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r41.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r41.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r39 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r39 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r39.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r39.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r39.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r39.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= return z1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= return z1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : return z1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : return z1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : i1 = i1 + 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : i1 = i1 + 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : r1 = virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : r1 = virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent executionSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r2 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r2 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r11 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r11 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r10 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r10 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r9 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r9 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r8 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r8 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r6 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r6 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r5 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r5 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r4 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r4 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r3 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable failureCause>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r3 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable failureCause> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int,java.util.Date,java.util.Date,boolean,com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable)>($r11, $r10, $r9, $r8, $r7, $r6, $i0, $r5, $r4, $z0, $r3)
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int,java.util.Date,java.util.Date,boolean,com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable)>($r11, $r10, $r9, $r8, $r7, $r6, $i0, $r5, $r4, $z0, $r3) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r12 = new java.util.Date
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r12 = new java.util.Date >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r12.<java.util.Date: void <init>()>()
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r12.<java.util.Date: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setCompleteTime(java.util.Date)>($r12)
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setCompleteTime(java.util.Date)>($r12) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.setCompleteTime : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> = r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.setCompleteTime : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> = r1 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setSuccess(boolean)>(1)
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setSuccess(boolean)>(1) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.setSuccess : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> = z0
com.dangdang.ddframe.job.event.type.JobExecutionEvent.setSuccess : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> = z0 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : return $r2
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r18 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : $r18 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest: com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage storage> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : virtualinvoke $r18.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean addJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearchTest.initStorage : virtualinvoke $r18.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean addJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean updateJobExecutionEventWhenSuccess(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean updateJobExecutionEventWhenSuccess(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r24 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r24 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r25 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r25 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r26 = interfaceinvoke r24.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("UPDATE `JOB_EXECUTION_LOG` SET `is_success` = ?, `complete_time` = ? WHERE id = ?")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r26 = interfaceinvoke r24.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("UPDATE `JOB_EXECUTION_LOG` SET `is_success` = ?, `complete_time` = ? WHERE id = ?") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r27 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r27 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(1, $z0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(1, $z0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r8 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r8 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : specialinvoke $r8.<java.sql.Timestamp: void <init>(long)>($l0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : specialinvoke $r8.<java.sql.Timestamp: void <init>(long)>($l0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(2, $r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(2, $r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $i1 = interfaceinvoke r26.<java.sql.PreparedStatement: int executeUpdate()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $i1 = interfaceinvoke r26.<java.sql.PreparedStatement: int executeUpdate()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if 0 != $i1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if 0 != $i1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z1 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z1 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r26 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r26 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r26.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r26.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r24 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r24 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r24.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r24.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r24.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r24.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= return z1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= return z1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : return z1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : return z1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r2 = new com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r2 = new com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r3 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.util.List FIELDS_JOB_EXECUTION_LOG>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r3 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.util.List FIELDS_JOB_EXECUTION_LOG> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $i0 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: int getEventCount(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>("JOB_EXECUTION_LOG", $r3, r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $i0 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: int getEventCount(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>("JOB_EXECUTION_LOG", $r3, r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : i0 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : i0 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : $r10 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : $r10 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r25 = interfaceinvoke $r10.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r25 = interfaceinvoke $r10.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r26 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r26 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r27 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.sql.PreparedStatement createCountPreparedStatement(java.sql.Connection,java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r25, r1, r2, r3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r27 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.sql.PreparedStatement createCountPreparedStatement(java.sql.Connection,java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r25, r1, r2, r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildCountSql(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r2, r3, r4)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildCountSql(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r2, r3, r4) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildSelectCount(java.lang.String)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildSelectCount(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : $r2 = newarray (java.lang.Object)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : $r2 = newarray (java.lang.Object)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : $r2[0] = r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : $r2[0] = r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(1) FROM %s", $r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT COUNT(1) FROM %s", $r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : return $r3
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelectCount : return $r3 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : r6 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildWhere(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r1, r2, r3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : r6 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildWhere(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r1, r2, r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r8 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r8 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE 1=1")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE 1=1") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r10 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Map getFields()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r10 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Map getFields()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getFields : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Map fields>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getFields : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Map fields> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getFields : return $r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getFields : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : if null == $r10
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : if null == $r10 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r33 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getStartTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r33 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getStartTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getStartTime : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date startTime>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getStartTime : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date startTime> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getStartTime : return $r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getStartTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : if null == $r33
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : if null == $r33 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r11 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getEndTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r11 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getEndTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getEndTime : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date endTime>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getEndTime : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date endTime> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getEndTime : return $r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getEndTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : if null == $r11
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : if null == $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : return $r12
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildWhere : return $r12 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : return $r10
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildCountSql : return $r10 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : r6 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : r6 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: void setBindValue(java.sql.PreparedStatement,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r6, r3, r4)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: void setBindValue(java.sql.PreparedStatement,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r6, r3, r4) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : i4 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : i4 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : $r7 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Map getFields()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : $r7 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Map getFields()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : if null == $r7
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : if null == $r7 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : $r24 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getStartTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : $r24 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getStartTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : if null == $r24
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : if null == $r24 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : $r8 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getEndTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : $r8 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.util.Date getEndTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : if null == $r8
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.setBindValue : if null == $r8 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : return r6
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createCountPreparedStatement : return r6 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r28 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r28 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r29 = interfaceinvoke r27.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r29 = interfaceinvoke r27.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r30 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : r30 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r29.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r29.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : i0 = interfaceinvoke r29.<java.sql.ResultSet: int getInt(int)>(1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : i0 = interfaceinvoke r29.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : if r29 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : if r29 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= interfaceinvoke r29.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= interfaceinvoke r29.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r29.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r29.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : if r27 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : if r27 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= interfaceinvoke r27.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= interfaceinvoke r27.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r27.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r27.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : if r25 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : if r25 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= interfaceinvoke r25.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= interfaceinvoke r25.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r25.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : interfaceinvoke r25.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= return i0]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : goto [?= return i0] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : return i0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getEventCount : return i0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.util.List getJobExecutionEvents(com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : $r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.util.List getJobExecutionEvents(com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r9 = new java.util.LinkedList
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r9 = new java.util.LinkedList >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r9.<java.util.LinkedList: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r9.<java.util.LinkedList: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r10 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r10 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r42 = interfaceinvoke $r10.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r42 = interfaceinvoke $r10.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r43 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r43 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r11 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.util.List FIELDS_JOB_EXECUTION_LOG>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r11 = <com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.util.List FIELDS_JOB_EXECUTION_LOG> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r44 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.sql.PreparedStatement createDataPreparedStatement(java.sql.Connection,java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r42, "JOB_EXECUTION_LOG", $r11, r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r44 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.sql.PreparedStatement createDataPreparedStatement(java.sql.Connection,java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r42, "JOB_EXECUTION_LOG", $r11, r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildDataSql(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r2, r3, r4)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildDataSql(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r2, r3, r4) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r9 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r9 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildSelect(java.lang.String,java.util.Collection)>(r1, r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r5 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildSelect(java.lang.String,java.util.Collection)>(r1, r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r6 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r6 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT ") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : r5 = (java.lang.String) $r12
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : r5 = (java.lang.String) $r12 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $i0 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $i0 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $i1 = $i0 - 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $i1 = $i0 - 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : return $r11
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildSelect : return $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r6 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildWhere(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r1, r2, r3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r6 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildWhere(java.lang.String,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r1, r2, r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r10 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String getSort()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r10 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String getSort()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getSort : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String sort>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getSort : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String sort> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getSort : return $r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getSort : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r11 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String getOrder()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r11 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String getOrder()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getOrder : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String order>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getOrder : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: java.lang.String order> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getOrder : return $r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getOrder : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r7 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildOrder(java.util.Collection,java.lang.String,java.lang.String)>(r2, $r10, $r11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r7 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildOrder(java.util.Collection,java.lang.String,java.lang.String)>(r2, $r10, $r11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildOrder : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildOrder : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildOrder : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildOrder : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildOrder : return ""
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildOrder : return "" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $i0 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int getPage()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $i0 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int getPage()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPage : $i0 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int page>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPage : $i0 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int page> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPage : return $i0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPage : return $i0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $i1 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int getPerPage()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $i1 = virtualinvoke r3.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int getPerPage()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPerPage : $i0 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int perPage>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPerPage : $i0 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition: int perPage> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPerPage : return $i0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition.getPerPage : return $i0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r8 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildLimit(int,int)>($i0, $i1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : r8 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: java.lang.String buildLimit(int,int)>($i0, $i1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r2 = new java.lang.StringBuilder
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r2 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : if i0 <= 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : if i0 <= 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : if i1 <= 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : if i1 <= 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT ")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT ") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $i2 = i0 - 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $i2 = i0 - 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $i3 = $i2 * i1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $i3 = $i2 * i1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : goto [?= $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : goto [?= $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : return $r9
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildLimit : return $r9 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : return $r16
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.buildDataSql : return $r16 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : r6 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : r6 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: void setBindValue(java.sql.PreparedStatement,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r6, r3, r4)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch: void setBindValue(java.sql.PreparedStatement,java.util.Collection,com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Condition)>(r6, r3, r4) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : return r6
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.createDataPreparedStatement : return r6 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r45 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r45 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r46 = interfaceinvoke r44.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r46 = interfaceinvoke r44.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r47 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : r47 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $z0 = interfaceinvoke r46.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $z0 = interfaceinvoke r46.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r12 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r12 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r13 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r13 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r14 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r14 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r15 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(3)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r15 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r16 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(4)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r16 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(4) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r17 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r17 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r18 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r18 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r19 = staticinvoke <com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource valueOf(java.lang.String)>($r18)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r19 = staticinvoke <com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource valueOf(java.lang.String)>($r18) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/dangdang/ddframe/job/event/type/JobExecutionEvent$ExecutionSource;", r0)
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.valueOf : $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/dangdang/ddframe/job/event/type/JobExecutionEvent$ExecutionSource;", r0) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : $r0 = <com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource[] $VALUES>
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : $r0 = <com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : $r2 = (com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource[]) $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : $r2 = (com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource[]) $r1 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : return $r2
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.valueOf : $r2 = (com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource) $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.valueOf : $r2 = (com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource) $r1 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.valueOf : return $r2
com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource.valueOf : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r20 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(7)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r20 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(7) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r20)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r20) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $i0 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $i0 = virtualinvoke $r21.<java.lang.Integer: int intValue()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r22 = new java.util.Date
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r22 = new java.util.Date >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r23 = interfaceinvoke r46.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r23 = interfaceinvoke r46.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $l1 = virtualinvoke $r23.<java.sql.Timestamp: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $l1 = virtualinvoke $r23.<java.sql.Timestamp: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r22.<java.util.Date: void <init>(long)>($l1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r22.<java.util.Date: void <init>(long)>($l1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r24 = interfaceinvoke r46.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(9)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r24 = interfaceinvoke r46.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(9) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if $r24 != null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if $r24 != null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r48 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r48 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= $z1 = interfaceinvoke r46.<java.sql.ResultSet: boolean getBoolean(int)>(10)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= $z1 = interfaceinvoke r46.<java.sql.ResultSet: boolean getBoolean(int)>(10)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $z1 = interfaceinvoke r46.<java.sql.ResultSet: boolean getBoolean(int)>(10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $z1 = interfaceinvoke r46.<java.sql.ResultSet: boolean getBoolean(int)>(10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r26 = new com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r26 = new com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r27 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r27 = interfaceinvoke r46.<java.sql.ResultSet: java.lang.String getString(int)>(11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r26.<com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable: void <init>(java.lang.Throwable,java.lang.String)>(null, $r27)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r26.<com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable: void <init>(java.lang.Throwable,java.lang.String)>(null, $r27) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r12.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int,java.util.Date,java.util.Date,boolean,com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable)>($r13, $r14, $r15, $r16, $r17, $r19, $i0, $r22, $r48, $z1, $r26)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r12.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int,java.util.Date,java.util.Date,boolean,com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable)>($r13, $r14, $r15, $r16, $r17, $r19, $i0, $r22, $r48, $z1, $r26) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r12) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= $z0 = interfaceinvoke r46.<java.sql.ResultSet: boolean next()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= $z0 = interfaceinvoke r46.<java.sql.ResultSet: boolean next()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r48 = new java.util.Date
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r48 = new java.util.Date >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r25 = interfaceinvoke r46.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(9)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $r25 = interfaceinvoke r46.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(int)>(9) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $l2 = virtualinvoke $r25.<java.sql.Timestamp: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : $l2 = virtualinvoke $r25.<java.sql.Timestamp: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r48.<java.util.Date: void <init>(long)>($l2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : specialinvoke $r48.<java.util.Date: void <init>(long)>($l2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if r46 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if r46 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= interfaceinvoke r46.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= interfaceinvoke r46.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke r46.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke r46.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if r44 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if r44 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= interfaceinvoke r44.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= interfaceinvoke r44.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke r44.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke r44.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if r42 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : if r42 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= interfaceinvoke r42.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= interfaceinvoke r42.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke r42.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : interfaceinvoke r42.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= return $r9]
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : goto [?= return $r9] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : return $r9
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.getJobExecutionEvents : return $r9 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : specialinvoke $r2.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result: void <init>(java.lang.Integer,java.util.List)>($r4, $r5)
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : specialinvoke $r2.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result: void <init>(java.lang.Integer,java.util.List)>($r4, $r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : return $r2
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch.findJobExecutionEvents : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getTotal : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result: java.lang.Integer total>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getTotal : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result: java.lang.Integer total> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getTotal : return $r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getTotal : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getRows : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result: java.util.List rows>
com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getRows : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result: java.util.List rows> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbSearch$Result.getRows : return $r1
