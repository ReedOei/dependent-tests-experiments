com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r4 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r12 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r12 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTableAndIndexIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTableAndIndexIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_EXECUTION_LOG", $r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_EXECUTION_LOG", $r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r11 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTableAndIndexIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTableAndIndexIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_STATUS_TRACE_LOG", $r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_STATUS_TRACE_LOG", $r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r11 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r5 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(null, null, r2, 0, 0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r5 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(null, null, r2, 0, 0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r13 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r13 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z2 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z2 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $r8 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("INDEX_NAME")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $r8 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("INDEX_NAME") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if z1 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if z1 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if r5 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if r5 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r5 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r5 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r6 = interfaceinvoke $r5.<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r6 = interfaceinvoke $r5.<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r7 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType valueFrom(java.lang.String)>($r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r7 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType valueFrom(java.lang.String)>($r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r0 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] $VALUES>
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r0 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType[]) $r1
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType[]) $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : return $r2
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) r1
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: boolean apply(com.dangdang.ddframe.job.event.rdb.DatabaseType)>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: boolean apply(com.dangdang.ddframe.job.event.rdb.DatabaseType)>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String access$000(com.dangdang.ddframe.job.event.rdb.DatabaseType)>(r1)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String access$000(com.dangdang.ddframe.job.event.rdb.DatabaseType)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String productName>
com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String productName> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : return $r1
com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r3 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: java.lang.String val$databaseProductName>
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r3 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: java.lang.String val$databaseProductName> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : return $z0
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : return $z0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> = $r7
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> = $r7 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : if r1 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : if r1 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : interfaceinvoke r1.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : interfaceinvoke r1.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getOriginalTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getOriginalTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String originalTaskId>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String originalTaskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getOriginalTaskId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r7 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r7 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State state>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State state> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getState : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if $r7 == $r8
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if $r7 == $r8 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r26 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r26 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String taskId>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String taskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getTaskId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String getOriginalTaskId(java.lang.String)>($r26)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r38 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String getOriginalTaskId(java.lang.String)>($r26) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10 = newarray (java.lang.Object)[3]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10 = newarray (java.lang.Object)[3] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[0] = "JOB_STATUS_TRACE_LOG"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[0] = "JOB_STATUS_TRACE_LOG" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[1] = r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[1] = r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r11 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r11 = <com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State TASK_STAGING> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[2] = $r11
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r10[2] = $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT original_task_id FROM %s WHERE task_id = \'%s\' and state=\'%s\'", $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT original_task_id FROM %s WHERE task_id = \'%s\' and state=\'%s\'", $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r12 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $r12 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r31 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r31 = interfaceinvoke $r12.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r32 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r32 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r33 = interfaceinvoke r31.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r33 = interfaceinvoke r31.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r34 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r34 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r35 = interfaceinvoke r33.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r35 = interfaceinvoke r33.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r36 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : r36 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $z0 = interfaceinvoke r35.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : $z0 = interfaceinvoke r35.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r35 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r35 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r35.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r35.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r35.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r35.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r33 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r33 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r33.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r33.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r33.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r33.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r31 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : if r31 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r31.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= interfaceinvoke r31.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r31.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : interfaceinvoke r31.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= return ""]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : goto [?= return ""] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : return ""
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.getOriginalTaskId : return "" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r9 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r9 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r39 = interfaceinvoke $r9.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r39 = interfaceinvoke $r9.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r40 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r40 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r41 = interfaceinvoke r39.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_STATUS_TRACE_LOG` (`id`, `job_name`, `original_task_id`, `task_id`, `slave_id`, `source`, `execution_type`, `sharding_item`,  `state`, `message`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r41 = interfaceinvoke r39.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_STATUS_TRACE_LOG` (`id`, `job_name`, `original_task_id`, `task_id`, `slave_id`, `source`, `execution_type`, `sharding_item`,  `state`, `message`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r42 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : r42 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r10 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r11 = virtualinvoke $r10.<java.util.UUID: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r11 = virtualinvoke $r10.<java.util.UUID: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getJobName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getJobName()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String jobName>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getJobName : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r12)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r12) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, r38)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, r38) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r13)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r13) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getSlaveId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r14 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getSlaveId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String slaveId>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String slaveId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSlaveId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r14)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r14) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r15 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source getSource()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r15 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source getSource()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source source>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source source> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getSource : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r16 = virtualinvoke $r15.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r16 = virtualinvoke $r15.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$Source: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(6, $r16)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(6, $r16) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r17 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType getExecutionType()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r17 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType getExecutionType()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType executionType>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.context.ExecutionType executionType> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getExecutionType : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r18 = virtualinvoke $r17.<com.dangdang.ddframe.job.context.ExecutionType: java.lang.String name()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r18 = virtualinvoke $r17.<com.dangdang.ddframe.job.context.ExecutionType: java.lang.String name()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r18)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r18) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r19 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getShardingItems()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r19 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getShardingItems()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String shardingItems>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String shardingItems> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getShardingItems : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(8, $r19)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(8, $r19) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r20 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r20 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State getState()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r21 = virtualinvoke $r20.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r21 = virtualinvoke $r20.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent$State: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(9, $r21)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(9, $r21) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r22 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getMessage()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r22 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String getMessage()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String message>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.lang.String message> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getMessage : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r23 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String truncateString(java.lang.String)>($r22)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r23 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: java.lang.String truncateString(java.lang.String)>($r22) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $z0 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $i0 <= 4000
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : if $i0 <= 4000 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $r2 = r1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : $r2 = r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : return $r2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.truncateString : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(10, $r23)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(10, $r23) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r24 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r24 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r25 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date getCreationTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $r25 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date getCreationTime()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date creationTime>
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobStatusTraceEvent: java.util.Date creationTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : return $r1
com.dangdang.ddframe.job.event.type.JobStatusTraceEvent.getCreationTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $l0 = virtualinvoke $r25.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : $l0 = virtualinvoke $r25.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : specialinvoke $r24.<java.sql.Timestamp: void <init>(long)>($l0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : specialinvoke $r24.<java.sql.Timestamp: void <init>(long)>($l0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(11, $r24)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(11, $r24) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : z1 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r41 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r41 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r41.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r41.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r41.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r39 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : if r39 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r39.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= interfaceinvoke r39.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r39.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : interfaceinvoke r39.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= return z1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : goto [?= return z1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobStatusTraceEvent : return z1
