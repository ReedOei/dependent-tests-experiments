com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : $r4 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r9 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : r9 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r3 = staticinvoke <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] values()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r3 = staticinvoke <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] values()>() >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r0 = <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] $VALUES>
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r0 = <com.dangdang.ddframe.job.statistics.StatisticInterval: com.dangdang.ddframe.job.statistics.StatisticInterval[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r2 = (com.dangdang.ddframe.job.statistics.StatisticInterval[]) $r1
com.dangdang.ddframe.job.statistics.StatisticInterval.values : $r2 = (com.dangdang.ddframe.job.statistics.StatisticInterval[]) $r1 >>>>>>>> com.dangdang.ddframe.job.statistics.StatisticInterval.values : return $r2
com.dangdang.ddframe.job.statistics.StatisticInterval.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i0 = lengthof r3
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i0 = lengthof r3 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if i1 >= i0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if i1 >= i0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r4 = r3[i1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r4 = r3[i1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r8 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r8 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $r12[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r5 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r11, $r12)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r5 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r11, $r12) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r17 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : r17 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : $z0 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTable(java.sql.Connection,com.dangdang.ddframe.job.statistics.StatisticInterval)>(r1, r4)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskResultTable(java.sql.Connection,com.dangdang.ddframe.job.statistics.StatisticInterval)>(r1, r4) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r7 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r7 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE `TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE `TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`id` BIGINT NOT NULL AUTO_INCREMENT, `success_count` INT(11),`failed_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` (`id` BIGINT NOT NULL AUTO_INCREMENT, `success_count` INT(11),`failed_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r3) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r15 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : r15 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : if r4 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : if r4 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : interfaceinvoke r4.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if r5 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : if r5 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= i1 = i1 + 1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= i1 = i1 + 1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = i1 + 1
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : i1 = i1 + 1 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= (branch)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskResultTableIfNeeded : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "TASK_RUNNING_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "TASK_RUNNING_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createTaskRunningTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `TASK_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `TASK_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createTaskRunningTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_RUNNING_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_RUNNING_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRunningTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_RUNNING_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `running_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRunningTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTableIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTableIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_REGISTER_STATISTICS", $r6)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_REGISTER_STATISTICS", $r6) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r11 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTable(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: void createJobRegisterTable(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_REGISTER_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `registered_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r3 = interfaceinvoke r1.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("CREATE TABLE `JOB_REGISTER_STATISTICS` (`id` BIGINT NOT NULL AUTO_INCREMENT, `registered_count` INT(11),`statistics_time` TIMESTAMP NOT NULL,`creation_time` TIMESTAMP NOT NULL,PRIMARY KEY (`id`));") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r10 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : r10 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : interfaceinvoke r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTable : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if r3 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.createJobRegisterTableIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : if r1 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : if r1 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : interfaceinvoke r1.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : interfaceinvoke r1.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= return]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.initTables : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r35 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r35 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r9 = newarray (java.lang.Object)[1]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r9 = newarray (java.lang.Object)[1] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r10 = new java.lang.StringBuilder
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r10 = new java.lang.StringBuilder >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_")
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TASK_RESULT_STATISTICS_") >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r9[0] = $r13
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r9[0] = $r13 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT id, success_count, failed_count, statistics_time, creation_time FROM %s order by id DESC LIMIT 1", $r9)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("SELECT id, success_count, failed_count, statistics_time, creation_time FROM %s order by id DESC LIMIT 1", $r9) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r14 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r14 = r0.<com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r36 = interfaceinvoke $r14.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r36 = interfaceinvoke $r14.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r37 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r37 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r38 = interfaceinvoke r36.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r38 = interfaceinvoke r36.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(r2) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r39 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r39 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r40 = interfaceinvoke r38.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r40 = interfaceinvoke r38.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r41 = null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : r41 = null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $z0 = interfaceinvoke r40.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $z0 = interfaceinvoke r40.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if $z0 == 0
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if r40 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if r40 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= interfaceinvoke r40.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= interfaceinvoke r40.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : interfaceinvoke r40.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : interfaceinvoke r40.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= (branch)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if r38 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if r38 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= interfaceinvoke r38.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= interfaceinvoke r38.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : interfaceinvoke r38.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : interfaceinvoke r38.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if r36 == null
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : if r36 == null >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= interfaceinvoke r36.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= interfaceinvoke r36.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : interfaceinvoke r36.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : interfaceinvoke r36.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= $r15 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r35)]
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : goto [?= $r15 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r35)] >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r15 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r35)
com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : $r15 = staticinvoke <com.google.common.base.Optional: com.google.common.base.Optional fromNullable(java.lang.Object)>(r35) >>>>>>>> com.dangdang.ddframe.job.statistics.rdb.StatisticRdbRepository.findLatestTaskResultStatistics : return $r15
