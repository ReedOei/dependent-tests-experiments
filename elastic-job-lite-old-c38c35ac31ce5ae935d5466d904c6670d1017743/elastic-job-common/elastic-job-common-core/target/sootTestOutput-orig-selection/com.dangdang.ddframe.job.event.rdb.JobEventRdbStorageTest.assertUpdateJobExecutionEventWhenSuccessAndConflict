com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r4 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r1 = interfaceinvoke $r4.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r12 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r12 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTableAndIndexIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobExecutionTableAndIndexIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_EXECUTION_LOG", $r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_EXECUTION_LOG", $r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r11 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobExecutionTableAndIndexIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTableAndIndexIfNeeded(java.sql.Connection)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createJobStatusTraceTableAndIndexIfNeeded(java.sql.Connection)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r2 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6 = newarray (java.lang.String)[1] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6[0] = "TABLE"
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $r6[0] = "TABLE" >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_STATUS_TRACE_LOG", $r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r3 = interfaceinvoke r2.<java.sql.DatabaseMetaData: java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, "JOB_STATUS_TRACE_LOG", $r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r11 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : r11 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : $z0 = interfaceinvoke r3.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if $z0 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if r3 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : if r3 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= interfaceinvoke r3.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : interfaceinvoke r3.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : goto [?= specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createJobStatusTraceTableAndIndexIfNeeded : specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: void createTaskIdIndexIfNeeded(java.sql.Connection,java.lang.String,java.lang.String)>(r1, "JOB_STATUS_TRACE_LOG", "TASK_ID_STATE_INDEX") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r4 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r5 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(null, null, r2, 0, 0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r5 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(null, null, r2, 0, 0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r13 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : r13 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z2 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z2 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $r8 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("INDEX_NAME")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $r8 = interfaceinvoke r5.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("INDEX_NAME") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : z1 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= $z2 = interfaceinvoke r5.<java.sql.ResultSet: boolean next()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if z1 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if z1 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if r5 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : if r5 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= interfaceinvoke r5.<java.sql.ResultSet: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : interfaceinvoke r5.<java.sql.ResultSet: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.createTaskIdIndexIfNeeded : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r5 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r5 = interfaceinvoke r1.<java.sql.Connection: java.sql.DatabaseMetaData getMetaData()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r6 = interfaceinvoke $r5.<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r6 = interfaceinvoke $r5.<java.sql.DatabaseMetaData: java.lang.String getDatabaseProductName()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r7 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType valueFrom(java.lang.String)>($r6)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : $r7 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType valueFrom(java.lang.String)>($r6) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] values()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r0 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] $VALUES>
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r0 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType[] $VALUES> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType[]) $r1
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType[]) $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.values : return $r2
com.dangdang.ddframe.job.event.rdb.DatabaseType.values : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r5 = new com.dangdang.ddframe.job.event.rdb.DatabaseType$1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : specialinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: void <init>(java.lang.String)>(r0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5)
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : r1 = staticinvoke <com.google.common.collect.Iterators: com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate)>($r4, $r5) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) r1
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: boolean apply(com.dangdang.ddframe.job.event.rdb.DatabaseType)>($r2)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: boolean apply(com.dangdang.ddframe.job.event.rdb.DatabaseType)>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String access$000(com.dangdang.ddframe.job.event.rdb.DatabaseType)>(r1)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r2 = staticinvoke <com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String access$000(com.dangdang.ddframe.job.event.rdb.DatabaseType)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String productName>
com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : $r1 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType: java.lang.String productName> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : return $r1
com.dangdang.ddframe.job.event.rdb.DatabaseType.access$000 : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r3 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: java.lang.String val$databaseProductName>
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $r3 = r0.<com.dangdang.ddframe.job.event.rdb.DatabaseType$1: java.lang.String val$databaseProductName> >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3)
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : return $z0
com.dangdang.ddframe.job.event.rdb.DatabaseType$1.apply : return $z0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $z0 = virtualinvoke r1.<com.google.common.base.Optional: boolean isPresent()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>()
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r11 = virtualinvoke r1.<com.google.common.base.Optional: java.lang.Object get()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : $r12 = (com.dangdang.ddframe.job.event.rdb.DatabaseType) $r11 >>>>>>>> com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12
com.dangdang.ddframe.job.event.rdb.DatabaseType.valueFrom : return $r12 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> = $r7
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> = $r7 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : if r1 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : if r1 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= interfaceinvoke r1.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : interfaceinvoke r1.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : interfaceinvoke r1.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= return]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.initTablesAndIndexes : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>()
com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r1 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>() >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>()
com.dangdang.ddframe.job.util.env.IpUtils.getHostName : $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>() >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getHostName : return $r2
com.dangdang.ddframe.job.util.env.IpUtils.getHostName : return $r2 >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r5 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress>
com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r5 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress> >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : if null == $r5
com.dangdang.ddframe.job.util.env.IpUtils.getIp : if null == $r5 >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r8 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress>
com.dangdang.ddframe.job.util.env.IpUtils.getIp : $r8 = <com.dangdang.ddframe.job.util.env.IpUtils: java.lang.String cachedIpAddress> >>>>>>>> com.dangdang.ddframe.job.util.env.IpUtils.getIp : return $r8
com.dangdang.ddframe.job.util.env.IpUtils.getIp : return $r8 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r2 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r2 = new com.dangdang.ddframe.job.event.type.JobExecutionEvent >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r11 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r11 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r10 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r10 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r9 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r9 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r8 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r8 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r6 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r6 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r5 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r5 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r4 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r4 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r3 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable failureCause>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r3 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable failureCause> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int,java.util.Date,java.util.Date,boolean,com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable)>($r11, $r10, $r9, $r8, $r7, $r6, $i0, $r5, $r4, $z0, $r3)
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource,int,java.util.Date,java.util.Date,boolean,com.dangdang.ddframe.job.event.type.JobExecutionEventThrowable)>($r11, $r10, $r9, $r8, $r7, $r6, $i0, $r5, $r4, $z0, $r3) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r12 = new java.util.Date
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : $r12 = new java.util.Date >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r12.<java.util.Date: void <init>()>()
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : specialinvoke $r12.<java.util.Date: void <init>()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setCompleteTime(java.util.Date)>($r12)
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setCompleteTime(java.util.Date)>($r12) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.setCompleteTime : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> = r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.setCompleteTime : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> = r1 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setSuccess(boolean)>(1)
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : virtualinvoke $r2.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: void setSuccess(boolean)>(1) >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.setSuccess : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> = z0
com.dangdang.ddframe.job.event.type.JobExecutionEvent.setSuccess : r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> = z0 >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : return $r2
com.dangdang.ddframe.job.event.type.JobExecutionEvent.executionSuccess : return $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $r2 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $r2 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date completeTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getCompleteTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if null != $r2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if null != $r2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : $z0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean success> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : return $z0
com.dangdang.ddframe.job.event.type.JobExecutionEvent.isSuccess : return $z0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean updateJobExecutionEventWhenSuccess(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean updateJobExecutionEventWhenSuccess(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z1 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z1 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r24 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r24 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r25 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r25 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r26 = interfaceinvoke r24.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("UPDATE `JOB_EXECUTION_LOG` SET `is_success` = ?, `complete_time` = ? WHERE id = ?")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r26 = interfaceinvoke r24.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("UPDATE `JOB_EXECUTION_LOG` SET `is_success` = ?, `complete_time` = ? WHERE id = ?") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r27 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : r27 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(1, $z0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(1, $z0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r8 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r8 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $l0 = virtualinvoke $r9.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : specialinvoke $r8.<java.sql.Timestamp: void <init>(long)>($l0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : specialinvoke $r8.<java.sql.Timestamp: void <init>(long)>($l0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(2, $r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(2, $r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String id> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $i1 = interfaceinvoke r26.<java.sql.PreparedStatement: int executeUpdate()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : $i1 = interfaceinvoke r26.<java.sql.PreparedStatement: int executeUpdate()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if 0 != $i1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if 0 != $i1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean insertJobExecutionEventWhenSuccess(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean insertJobExecutionEventWhenSuccess(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : z4 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : z4 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r30 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r30 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r31 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r31 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r32 = interfaceinvoke r30.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_EXECUTION_LOG` (`id`, `job_name`, `task_id`, `hostname`, `ip`, `sharding_item`, `execution_source`, `is_success`, `start_time`, `complete_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r32 = interfaceinvoke r30.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_EXECUTION_LOG` (`id`, `job_name`, `task_id`, `hostname`, `ip`, `sharding_item`, `execution_source`, `is_success`, `start_time`, `complete_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r33 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : r33 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getJobName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getJobName()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String jobName> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getJobName : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r9)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r9) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String taskId> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getTaskId : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r11 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getHostname()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r11 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getHostname()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String hostname> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getHostname : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getIp()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getIp()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String ip> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getIp : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r12)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r12) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int getShardingItem()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int getShardingItem()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : $i0 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int shardingItem> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : return $i0
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getShardingItem : return $i0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setInt(int,int)>(6, $i0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setInt(int,int)>(6, $i0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource getSource()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource getSource()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource source> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getSource : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r14 = virtualinvoke $r13.<com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r14 = virtualinvoke $r13.<com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r14)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r14) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(8, $z0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(8, $z0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r15 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r15 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getStartTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getStartTime()>() >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime>
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : $r1 = r0.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date startTime> >>>>>>>> com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : return $r1
com.dangdang.ddframe.job.event.type.JobExecutionEvent.getStartTime : return $r1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $l1 = virtualinvoke $r16.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $l1 = virtualinvoke $r16.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(9, $r15)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(9, $r15) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r17 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r17 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r18 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $r18 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getCompleteTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $l2 = virtualinvoke $r18.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : $l2 = virtualinvoke $r18.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : specialinvoke $r17.<java.sql.Timestamp: void <init>(long)>($l2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : specialinvoke $r17.<java.sql.Timestamp: void <init>(long)>($l2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(10, $r17)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(10, $r17) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : z4 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : z4 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : if r32 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : if r32 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r32.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r32.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r32.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= (branch)]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= (branch)] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : if r30 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : if r30 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r30.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r30.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r30.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : interfaceinvoke r30.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= return z4]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : goto [?= return z4] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : return z4
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEventWhenSuccess : return z4 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r26 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r26 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r26.<java.sql.PreparedStatement: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r26.<java.sql.PreparedStatement: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r26.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r24 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : if r24 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r24.<java.sql.Connection: void close()>()]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : goto [?= interfaceinvoke r24.<java.sql.Connection: void close()>()] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r24.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : interfaceinvoke r24.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : return z2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.updateJobExecutionEventWhenSuccess : return z2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z2
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z2 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z3 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean insertJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : $z3 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean insertJobExecutionEvent(com.dangdang.ddframe.job.event.type.JobExecutionEvent)>(r1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : z3 = 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : z3 = 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r7 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: javax.sql.DataSource dataSource> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r28 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r28 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r29 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r29 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r30 = interfaceinvoke r28.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_EXECUTION_LOG` (`id`, `job_name`, `task_id`, `hostname`, `ip`, `sharding_item`, `execution_source`, `is_success`, `start_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);")
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r30 = interfaceinvoke r28.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>("INSERT INTO `JOB_EXECUTION_LOG` (`id`, `job_name`, `task_id`, `hostname`, `ip`, `sharding_item`, `execution_source`, `is_success`, `start_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);") >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r31 = null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r31 = null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r8 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getId()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, $r8) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getJobName()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r9 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getJobName()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r9)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(2, $r9) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getTaskId()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r10 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getTaskId()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(3, $r10) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r11 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getHostname()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r11 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getHostname()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r11)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(4, $r11) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getIp()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r12 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.lang.String getIp()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r12)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(5, $r12) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int getShardingItem()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $i0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: int getShardingItem()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setInt(int,int)>(6, $i0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setInt(int,int)>(6, $i0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource getSource()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r13 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource getSource()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r14 = virtualinvoke $r13.<com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: java.lang.String toString()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r14 = virtualinvoke $r13.<com.dangdang.ddframe.job.event.type.JobExecutionEvent$ExecutionSource: java.lang.String toString()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r14)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(7, $r14) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $z0 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: boolean isSuccess()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(8, $z0)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setBoolean(int,boolean)>(8, $z0) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r15 = new java.sql.Timestamp
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r15 = new java.sql.Timestamp >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getStartTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $r16 = virtualinvoke r1.<com.dangdang.ddframe.job.event.type.JobExecutionEvent: java.util.Date getStartTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $l1 = virtualinvoke $r16.<java.util.Date: long getTime()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $l1 = virtualinvoke $r16.<java.util.Date: long getTime()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l1)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : specialinvoke $r15.<java.sql.Timestamp: void <init>(long)>($l1) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(9, $r15)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void setTimestamp(int,java.sql.Timestamp)>(9, $r15) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: boolean execute()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: boolean execute()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r31 = $r23
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r31 = $r23 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r23
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r23 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r30 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r30 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r31 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r31 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r30.<java.sql.PreparedStatement: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= throw $r18]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= throw $r18] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r18
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r18 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r29 = $r17
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : r29 = $r17 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r17
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r17 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r28 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r28 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r29 == null
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if r29 == null >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r28.<java.sql.Connection: void close()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : interfaceinvoke r28.<java.sql.Connection: void close()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= throw $r22]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : goto [?= throw $r22] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r22
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : throw $r22 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean isDuplicateRecord(java.sql.SQLException)>($r25)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : $z2 = specialinvoke r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: boolean isDuplicateRecord(java.sql.SQLException)>($r25) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r3 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType MySQL>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r3 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType MySQL> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r2 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r2 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $z0 = virtualinvoke $r3.<com.dangdang.ddframe.job.event.rdb.DatabaseType: boolean equals(java.lang.Object)>($r2)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $z0 = virtualinvoke $r3.<com.dangdang.ddframe.job.event.rdb.DatabaseType: boolean equals(java.lang.Object)>($r2) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : if $z0 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r5 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType H2>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r5 = <com.dangdang.ddframe.job.event.rdb.DatabaseType: com.dangdang.ddframe.job.event.rdb.DatabaseType H2> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r4 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType>
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $r4 = r0.<com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage: com.dangdang.ddframe.job.event.rdb.DatabaseType databaseType> >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $z1 = virtualinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType: boolean equals(java.lang.Object)>($r4)
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $z1 = virtualinvoke $r5.<com.dangdang.ddframe.job.event.rdb.DatabaseType: boolean equals(java.lang.Object)>($r4) >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : if $z1 == 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : if $z1 == 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $i4 = virtualinvoke r1.<java.sql.SQLException: int getErrorCode()>()
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $i4 = virtualinvoke r1.<java.sql.SQLException: int getErrorCode()>() >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : if 23505 == $i4
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : if 23505 == $i4 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $z6 = 1
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : $z6 = 1 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : goto [?= return $z6]
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : goto [?= return $z6] >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : return $z6
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.isDuplicateRecord : return $z6 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if $z2 != 0
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : if $z2 != 0 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : return z3
com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.insertJobExecutionEvent : return z3 >>>>>>>> com.dangdang.ddframe.job.event.rdb.JobEventRdbStorage.addJobExecutionEvent : return $z3
