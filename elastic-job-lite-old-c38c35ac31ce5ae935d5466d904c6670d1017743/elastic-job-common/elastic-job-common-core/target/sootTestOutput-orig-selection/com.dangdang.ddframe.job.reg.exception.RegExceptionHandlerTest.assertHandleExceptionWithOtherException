com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest.tearDown : $r0 = <com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest: com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter zkRegCenter> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest.tearDown : virtualinvoke $r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: void close()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenterQueryWithCacheTest.tearDown : virtualinvoke $r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: void close()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r3 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: java.util.Map caches>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r3 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: java.util.Map caches> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : if $z0 == 0
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : if $z0 == 0 >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : r2 = (java.util.Map$Entry) $r6
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : r2 = (java.util.Map$Entry) $r6 >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r8 = (org.apache.curator.framework.recipes.cache.TreeCache) $r7
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r8 = (org.apache.curator.framework.recipes.cache.TreeCache) $r7 >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : virtualinvoke $r8.<org.apache.curator.framework.recipes.cache.TreeCache: void close()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : virtualinvoke $r8.<org.apache.curator.framework.recipes.cache.TreeCache: void close()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : specialinvoke r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: void waitForCacheClose()>()
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : specialinvoke r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: void waitForCacheClose()>() >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.waitForCacheClose : staticinvoke <java.lang.Thread: void sleep(long)>(500L)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.waitForCacheClose : staticinvoke <java.lang.Thread: void sleep(long)>(500L) >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.waitForCacheClose : goto [?= return]
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.waitForCacheClose : goto [?= return] >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r5 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: org.apache.curator.framework.CuratorFramework client>
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : $r5 = r0.<com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter: org.apache.curator.framework.CuratorFramework client> >>>>>>>> com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : staticinvoke <org.apache.curator.utils.CloseableUtils: void closeQuietly(java.io.Closeable)>($r5)
com.dangdang.ddframe.job.reg.zookeeper.ZookeeperRegistryCenter.close : staticinvoke <org.apache.curator.utils.CloseableUtils: void closeQuietly(java.io.Closeable)>($r5) >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $z0 = staticinvoke <com.dangdang.ddframe.job.reg.exception.RegExceptionHandler: boolean isIgnoredException(java.lang.Throwable)>(r0)
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $z0 = staticinvoke <com.dangdang.ddframe.job.reg.exception.RegExceptionHandler: boolean isIgnoredException(java.lang.Throwable)>(r0) >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if null == r0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if null == r0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z0 = r0 instanceof org.apache.zookeeper.KeeperException$ConnectionLossException
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z0 = r0 instanceof org.apache.zookeeper.KeeperException$ConnectionLossException >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if $z0 != 0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z1 = r0 instanceof org.apache.zookeeper.KeeperException$NoNodeException
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z1 = r0 instanceof org.apache.zookeeper.KeeperException$NoNodeException >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if $z1 != 0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if $z1 != 0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z2 = r0 instanceof org.apache.zookeeper.KeeperException$NodeExistsException
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z2 = r0 instanceof org.apache.zookeeper.KeeperException$NodeExistsException >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if $z2 == 0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : if $z2 == 0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z3 = 0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : $z3 = 0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : return $z3
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.isIgnoredException : return $z3 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : if $z0 != 0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : if $z0 != 0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $r3 = virtualinvoke r0.<java.lang.Exception: java.lang.Throwable getCause()>()
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $r3 = virtualinvoke r0.<java.lang.Exception: java.lang.Throwable getCause()>() >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : if null == $r3
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : if null == $r3 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $z1 = r0 instanceof java.lang.InterruptedException
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $z1 = r0 instanceof java.lang.InterruptedException >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : if $z1 == 0
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : if $z1 == 0 >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $r4 = new com.dangdang.ddframe.job.reg.exception.RegException
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : $r4 = new com.dangdang.ddframe.job.reg.exception.RegException >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : specialinvoke $r4.<com.dangdang.ddframe.job.reg.exception.RegException: void <init>(java.lang.Exception)>(r0)
com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : specialinvoke $r4.<com.dangdang.ddframe.job.reg.exception.RegException: void <init>(java.lang.Exception)>(r0) >>>>>>>> com.dangdang.ddframe.job.reg.exception.RegExceptionHandler.handleException : throw $r4
