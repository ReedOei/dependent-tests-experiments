org.apache.activemq.camel.component.broker.BrokerProducer.process : r3 = $r4 >>>>>>>> org.apache.activemq.camel.component.broker.BrokerProducer.process : interfaceinvoke r1.<org.apache.camel.Exchange: void setException(java.lang.Throwable)>(r3)
org.apache.activemq.camel.component.broker.BrokerProducer.process : interfaceinvoke r1.<org.apache.camel.Exchange: void setException(java.lang.Throwable)>(r3) >>>>>>>> org.apache.activemq.camel.component.broker.BrokerProducer.process : interfaceinvoke r2.<org.apache.camel.AsyncCallback: void done(boolean)>(1)
org.apache.activemq.camel.component.broker.BrokerProducer.process : interfaceinvoke r2.<org.apache.camel.AsyncCallback: void done(boolean)>(1) >>>>>>>> org.apache.activemq.camel.component.broker.BrokerProducer.process : return 1
org.apache.activemq.camel.component.broker.BrokerProducer.process : $z0 = virtualinvoke r0.<org.apache.activemq.camel.component.broker.BrokerProducer: boolean processInOnly(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)>(r1, r2) >>>>>>>> org.apache.activemq.camel.component.broker.BrokerProducer.process : return $z0
org.apache.activemq.camel.component.broker.BrokerProducer.process : $z0 = virtualinvoke r0.<org.apache.activemq.camel.component.broker.BrokerProducer: boolean processInOnly(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)>(r1, r2) >>>>>>>> org.apache.activemq.camel.component.broker.BrokerProducer.process : $r4 := @caughtexception
