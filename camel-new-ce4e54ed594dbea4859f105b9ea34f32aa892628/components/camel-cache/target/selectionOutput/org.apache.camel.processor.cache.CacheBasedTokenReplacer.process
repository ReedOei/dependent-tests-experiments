org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r8 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.apache.camel.Expression key> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r9 = interfaceinvoke $r8.<org.apache.camel.Expression: java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)>(r1, class "Ljava/lang/String;")
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r9 = interfaceinvoke $r8.<org.apache.camel.Expression: java.lang.Object evaluate(org.apache.camel.Exchange,java.lang.Class)>(r1, class "Ljava/lang/String;") >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r2 = (java.lang.String) $r9
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r2 = (java.lang.String) $r9 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r11 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r11 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r10 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r10 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $z0 = virtualinvoke r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: boolean isValid(net.sf.ehcache.CacheManager,java.lang.String,java.lang.String)>($r11, $r10, r2)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $z0 = virtualinvoke r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: boolean isValid(net.sf.ehcache.CacheManager,java.lang.String,java.lang.String)>($r11, $r10, r2) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : if $z0 == 0
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : if $z0 == 0 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r13 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: net.sf.ehcache.CacheManager cacheManager>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : if $z0 == 0 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : return
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r13 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: net.sf.ehcache.CacheManager cacheManager> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r12 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r12 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r3 = virtualinvoke $r13.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>($r12)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r3 = virtualinvoke $r13.<net.sf.ehcache.CacheManager: net.sf.ehcache.Cache getCache(java.lang.String)>($r12) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r14 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r14 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $z1 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $z1 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : if $z1 == 0
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : if $z1 == 0 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r34 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : if $z1 == 0 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r15 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r15 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r15.<org.apache.camel.Message: void setHeader(java.lang.String,java.lang.Object)>("CamelCacheKey", r2)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r15.<org.apache.camel.Message: void setHeader(java.lang.String,java.lang.Object)>("CamelCacheKey", r2) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r16 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r16 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r4 = interfaceinvoke $r16.<org.apache.camel.Message: java.lang.Object getBody()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r4 = interfaceinvoke $r16.<org.apache.camel.Message: java.lang.Object getBody()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r17 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.CamelContext getContext()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r17 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.CamelContext getContext()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r18 = interfaceinvoke $r17.<org.apache.camel.CamelContext: org.apache.camel.TypeConverter getTypeConverter()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r18 = interfaceinvoke $r17.<org.apache.camel.CamelContext: org.apache.camel.TypeConverter getTypeConverter()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r19 = interfaceinvoke $r18.<org.apache.camel.TypeConverter: java.lang.Object convertTo(java.lang.Class,java.lang.Object)>(class "Ljava/io/InputStream;", r4)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r19 = interfaceinvoke $r18.<org.apache.camel.TypeConverter: java.lang.Object convertTo(java.lang.Class,java.lang.Object)>(class "Ljava/io/InputStream;", r4) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r5 = (java.io.InputStream) $r19
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r5 = (java.io.InputStream) $r19 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r6 = staticinvoke <org.apache.camel.converter.IOConverter: byte[] toBytes(java.io.InputStream)>(r5)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r5 = (java.io.InputStream) $r19 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r35 := @caughtexception
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r36 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : staticinvoke <org.apache.camel.util.IOHelper: void close(java.io.Closeable,java.lang.String,org.slf4j.Logger)>(r5, "is", $r36)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : staticinvoke <org.apache.camel.util.IOHelper: void close(java.io.Closeable,java.lang.String,org.slf4j.Logger)>(r5, "is", $r36) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : throw $r35
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r6 = staticinvoke <org.apache.camel.converter.IOConverter: byte[] toBytes(java.io.InputStream)>(r5) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r20 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r6 = staticinvoke <org.apache.camel.converter.IOConverter: byte[] toBytes(java.io.InputStream)>(r5) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r35 := @caughtexception
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r20 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : staticinvoke <org.apache.camel.util.IOHelper: void close(java.io.Closeable,java.lang.String,org.slf4j.Logger)>(r5, "is", $r20)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : staticinvoke <org.apache.camel.util.IOHelper: void close(java.io.Closeable,java.lang.String,org.slf4j.Logger)>(r5, "is", $r20) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : goto [?= $r21 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.CamelContext getContext()>()]
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : goto [?= $r21 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.CamelContext getContext()>()] >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r21 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.CamelContext getContext()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r21 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.CamelContext getContext()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r22 = interfaceinvoke $r21.<org.apache.camel.CamelContext: org.apache.camel.TypeConverter getTypeConverter()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r22 = interfaceinvoke $r21.<org.apache.camel.CamelContext: org.apache.camel.TypeConverter getTypeConverter()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r23 = interfaceinvoke r3.<net.sf.ehcache.Ehcache: net.sf.ehcache.Element get(java.io.Serializable)>(r2)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r23 = interfaceinvoke r3.<net.sf.ehcache.Ehcache: net.sf.ehcache.Element get(java.io.Serializable)>(r2) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r24 = virtualinvoke $r23.<net.sf.ehcache.Element: java.lang.Object getObjectValue()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r24 = virtualinvoke $r23.<net.sf.ehcache.Element: java.lang.Object getObjectValue()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r25 = interfaceinvoke $r22.<org.apache.camel.TypeConverter: java.lang.Object convertTo(java.lang.Class,java.lang.Object)>(class "Ljava/lang/String;", $r24)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r25 = interfaceinvoke $r22.<org.apache.camel.TypeConverter: java.lang.Object convertTo(java.lang.Class,java.lang.Object)>(class "Ljava/lang/String;", $r24) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r38 = (java.lang.String) $r25
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r38 = (java.lang.String) $r25 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r26 = new java.lang.String
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r26 = new java.lang.String >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : specialinvoke $r26.<java.lang.String: void <init>(byte[])>(r6)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : specialinvoke $r26.<java.lang.String: void <init>(byte[])>(r6) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r27 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String replacementToken>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r27 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String replacementToken> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r7 = virtualinvoke $r26.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r27, r38)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : r7 = virtualinvoke $r26.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r27, r38) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r28 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r28 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("replacedTokenString = {}", r7)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r28.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object)>("replacedTokenString = {}", r7) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r29 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r29 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r30 = virtualinvoke r7.<java.lang.String: byte[] getBytes()>()
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r30 = virtualinvoke r7.<java.lang.String: byte[] getBytes()>() >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r29.<org.apache.camel.Message: void setBody(java.lang.Object)>($r30)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r29.<org.apache.camel.Message: void setBody(java.lang.Object)>($r30) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : return
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r34 = <org.apache.camel.processor.cache.CacheBasedTokenReplacer: org.slf4j.Logger LOG> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31 = newarray (java.lang.Object)[3]
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r32 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String replacementToken>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r32 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String replacementToken> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31[0] = $r32
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31[0] = $r32 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31[1] = r2
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31[1] = r2 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r33 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName>
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r33 = r0.<org.apache.camel.processor.cache.CacheBasedTokenReplacer: java.lang.String cacheName> >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31[2] = $r33
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r31[2] = $r33 >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Replacing Token {} in Message with value stored against key {} in CacheName {}", $r31)
org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Replacing Token {} in Message with value stored against key {} in CacheName {}", $r31) >>>>>>>> org.apache.camel.processor.cache.CacheBasedTokenReplacer.process : $r15 = interfaceinvoke r1.<org.apache.camel.Exchange: org.apache.camel.Message getIn()>()
