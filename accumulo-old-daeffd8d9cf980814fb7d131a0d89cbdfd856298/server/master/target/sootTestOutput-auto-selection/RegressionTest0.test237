org.apache.accumulo.master.EventCoordinator.getListener : $r1 = new org.apache.accumulo.master.EventCoordinator$Listener >>>>>>>> org.apache.accumulo.master.EventCoordinator.getListener : specialinvoke $r1.<org.apache.accumulo.master.EventCoordinator$Listener: void <init>(org.apache.accumulo.master.EventCoordinator)>(r0)
org.apache.accumulo.master.EventCoordinator.getListener : specialinvoke $r1.<org.apache.accumulo.master.EventCoordinator$Listener: void <init>(org.apache.accumulo.master.EventCoordinator)>(r0) >>>>>>>> org.apache.accumulo.master.EventCoordinator.getListener : return $r1
org.apache.accumulo.master.EventCoordinator.getListener : return $r1 >>>>>>>> org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : z8 = 0
org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : z8 = 0 >>>>>>>> org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : if $z1 == 0
org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : return z8
org.apache.accumulo.master.recovery.RecoveryManager.recoverLogs : return z8 >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : $r3 = <org.apache.accumulo.master.EventCoordinator: org.slf4j.Logger log>
org.apache.accumulo.master.EventCoordinator.event : $r3 = <org.apache.accumulo.master.EventCoordinator: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2)
org.apache.accumulo.master.EventCoordinator.event : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2) >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r4)
org.apache.accumulo.master.EventCoordinator.event : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r4) >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : $l0 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter>
org.apache.accumulo.master.EventCoordinator.event : $l0 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter> >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : $l1 = $l0 + 1L
org.apache.accumulo.master.EventCoordinator.event : $l1 = $l0 + 1L >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter> = $l1
org.apache.accumulo.master.EventCoordinator.event : r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter> = $l1 >>>>>>>> org.apache.accumulo.master.EventCoordinator.event : virtualinvoke r0.<java.lang.Object: void notifyAll()>()
org.apache.accumulo.master.EventCoordinator.event : virtualinvoke r0.<java.lang.Object: void notifyAll()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.conf.AccumuloConfiguration conf> = r1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.conf.AccumuloConfiguration conf> = r1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> = r2
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> = r2 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.getName : return "Unordered Work Assigner"
org.apache.accumulo.master.replication.UnorderedWorkAssigner.getName : return "Unordered Work Assigner" >>>>>>>> org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : $r1 = r0.<org.apache.accumulo.master.EventCoordinator$Listener: org.apache.accumulo.master.EventCoordinator this$0>
org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : $r1 = r0.<org.apache.accumulo.master.EventCoordinator$Listener: org.apache.accumulo.master.EventCoordinator this$0> >>>>>>>> org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : $l1 = r0.<org.apache.accumulo.master.EventCoordinator$Listener: long lastEvent>
org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : $l1 = r0.<org.apache.accumulo.master.EventCoordinator$Listener: long lastEvent> >>>>>>>> org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : $l2 = virtualinvoke $r1.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(l0, $l1)
org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : $l2 = virtualinvoke $r1.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(l0, $l1) >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : $l2 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter>
org.apache.accumulo.master.EventCoordinator.waitForEvents : $l2 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter> >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : $b3 = l1 cmp $l2
org.apache.accumulo.master.EventCoordinator.waitForEvents : $b3 = l1 cmp $l2 >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : if $b3 != 0
org.apache.accumulo.master.EventCoordinator.waitForEvents : if $b3 != 0 >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : $b4 = l0 cmp 0L
org.apache.accumulo.master.EventCoordinator.waitForEvents : $b4 = l0 cmp 0L >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : if $b4 > 0
org.apache.accumulo.master.EventCoordinator.waitForEvents : if $b4 > 0 >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : virtualinvoke r0.<java.lang.Object: void wait(long)>(l0)
org.apache.accumulo.master.EventCoordinator.waitForEvents : virtualinvoke r0.<java.lang.Object: void wait(long)>(l0) >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : goto [?= $l6 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter>]
org.apache.accumulo.master.EventCoordinator.waitForEvents : goto [?= $l6 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter>] >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : $l6 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter>
org.apache.accumulo.master.EventCoordinator.waitForEvents : $l6 = r0.<org.apache.accumulo.master.EventCoordinator: long eventCounter> >>>>>>>> org.apache.accumulo.master.EventCoordinator.waitForEvents : return $l6
org.apache.accumulo.master.EventCoordinator.waitForEvents : return $l6 >>>>>>>> org.apache.accumulo.master.EventCoordinator$Listener.waitForEvents : r0.<org.apache.accumulo.master.EventCoordinator$Listener: long lastEvent> = $l2
