org.apache.accumulo.master.Master.waitForBalance : $r5 = r0.<org.apache.accumulo.master.Master: java.lang.Object balancedNotifier> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : entermonitor $r5
org.apache.accumulo.master.Master.waitForBalance : entermonitor $r5 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r12 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.waitForBalance : entermonitor $r5 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : exitmonitor $r5 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : throw $r8
org.apache.accumulo.master.Master.waitForBalance : exitmonitor $r5 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r12 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : l0 = virtualinvoke $r12.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(0L, 0L)
org.apache.accumulo.master.Master.waitForBalance : $r12 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : l0 = virtualinvoke $r12.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(0L, 0L) >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r13 = r0.<org.apache.accumulo.master.Master: java.lang.Object balancedNotifier>
org.apache.accumulo.master.Master.waitForBalance : l0 = virtualinvoke $r12.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(0L, 0L) >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r13 = r0.<org.apache.accumulo.master.Master: java.lang.Object balancedNotifier> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r9 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r13 = r0.<org.apache.accumulo.master.Master: java.lang.Object balancedNotifier> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r13 = r0.<org.apache.accumulo.master.Master: java.lang.Object balancedNotifier> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : virtualinvoke $r13.<java.lang.Object: void wait()>()
org.apache.accumulo.master.Master.waitForBalance : virtualinvoke $r13.<java.lang.Object: void wait()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r9 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : virtualinvoke $r13.<java.lang.Object: void wait()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : virtualinvoke $r13.<java.lang.Object: void wait()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : goto [?= $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>()]
org.apache.accumulo.master.Master.waitForBalance : goto [?= $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>()] >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>()
org.apache.accumulo.master.Master.waitForBalance : goto [?= $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>()] >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : if $i1 > 0
org.apache.accumulo.master.Master.waitForBalance : $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : if $i1 > 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r6 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>
org.apache.accumulo.master.Master.waitForBalance : if $i1 > 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r12 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.waitForBalance : if $i1 > 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r6 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $i2 = interfaceinvoke $r6.<java.util.SortedMap: int size()>()
org.apache.accumulo.master.Master.waitForBalance : $r6 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $i2 = interfaceinvoke $r6.<java.util.SortedMap: int size()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : if $i2 > 0
org.apache.accumulo.master.Master.waitForBalance : $i2 = interfaceinvoke $r6.<java.util.SortedMap: int size()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : if $i2 > 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r7 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.waitForBalance : if $i2 > 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r12 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.waitForBalance : if $i2 > 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r7 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $l3 = virtualinvoke $r7.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(0L, 0L)
org.apache.accumulo.master.Master.waitForBalance : $r7 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $l3 = virtualinvoke $r7.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(0L, 0L) >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $b4 = l0 cmp $l3
org.apache.accumulo.master.Master.waitForBalance : $l3 = virtualinvoke $r7.<org.apache.accumulo.master.EventCoordinator: long waitForEvents(long,long)>(0L, 0L) >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $b4 = l0 cmp $l3 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : if $b4 != 0
org.apache.accumulo.master.Master.waitForBalance : $b4 = l0 cmp $l3 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : if $b4 != 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : exitmonitor $r5
org.apache.accumulo.master.Master.waitForBalance : if $b4 != 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r12 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.waitForBalance : if $b4 != 0 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : exitmonitor $r5 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : goto [?= return]
org.apache.accumulo.master.Master.waitForBalance : exitmonitor $r5 >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : goto [?= return] >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : return
org.apache.accumulo.master.Master.waitForBalance : $r10 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r11 = virtualinvoke $r9.<java.lang.InterruptedException: java.lang.String toString()>()
org.apache.accumulo.master.Master.waitForBalance : $r10 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : $r11 = virtualinvoke $r9.<java.lang.InterruptedException: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r11, $r9)
org.apache.accumulo.master.Master.waitForBalance : $r11 = virtualinvoke $r9.<java.lang.InterruptedException: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
org.apache.accumulo.master.Master.waitForBalance : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r11, $r9) >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $i1 = virtualinvoke r0.<org.apache.accumulo.master.Master: int displayUnassigned()>()
org.apache.accumulo.master.Master.waitForBalance : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r11, $r9) >>>>>>>> org.apache.accumulo.master.Master.waitForBalance : $r8 := @caughtexception
