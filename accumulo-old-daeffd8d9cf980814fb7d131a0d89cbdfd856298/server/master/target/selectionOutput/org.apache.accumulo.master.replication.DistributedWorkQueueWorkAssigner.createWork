org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r14 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r1 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTable: org.apache.accumulo.core.client.Scanner getScanner(org.apache.accumulo.core.client.Connector)>($r14)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r14 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r50 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r1 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTable: org.apache.accumulo.core.client.Scanner getScanner(org.apache.accumulo.core.client.Connector)>($r14) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r1)]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r1 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTable: org.apache.accumulo.core.client.Scanner getScanner(org.apache.accumulo.core.client.Connector)>($r14) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r50 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r1)] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r1)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r1) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r15 = new org.apache.hadoop.io.Text
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r15 = new org.apache.hadoop.io.Text >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : specialinvoke $r15.<org.apache.hadoop.io.Text: void <init>()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : specialinvoke $r15.<org.apache.hadoop.io.Text: void <init>()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r2 = interfaceinvoke r1.<org.apache.accumulo.core.client.Scanner: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r2 = interfaceinvoke r1.<org.apache.accumulo.core.client.Scanner: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z0 == 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : return
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r16 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r3 = (java.util.Map$Entry) $r16
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r3 = (java.util.Map$Entry) $r16 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $i0 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: int getQueueSize()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $i0 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: int getQueueSize()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $i1 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: int maxQueueSize>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $i1 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: int maxQueueSize> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $i0 <= $i1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $i0 <= $i1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r41 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $i0 <= $i1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r17 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r18 = (org.apache.accumulo.core.data.Key) $r17
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r18 = (org.apache.accumulo.core.data.Key) $r17 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r4 = staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: java.lang.String getFile(org.apache.accumulo.core.data.Key,org.apache.hadoop.io.Text)>($r18, $r15)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r4 = staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: java.lang.String getFile(org.apache.accumulo.core.data.Key,org.apache.hadoop.io.Text)>($r18, $r15) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r19 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r20 = (org.apache.accumulo.core.data.Key) $r19
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r20 = (org.apache.accumulo.core.data.Key) $r19 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: void getTableId(org.apache.accumulo.core.data.Key,org.apache.hadoop.io.Text)>($r20, $r15)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$OrderSection: void getTableId(org.apache.accumulo.core.data.Key,org.apache.hadoop.io.Text)>($r20, $r15) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r5 = virtualinvoke $r15.<org.apache.hadoop.io.Text: java.lang.String toString()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r5 = virtualinvoke $r15.<org.apache.hadoop.io.Text: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r21 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r21 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Determining if {} from {} needs to be replicated", r4, r5)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r21.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Determining if {} from {} needs to be replicated", r4, r5) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r22 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r22 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r6 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTable: org.apache.accumulo.core.client.Scanner getScanner(org.apache.accumulo.core.client.Connector)>($r22)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r22 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r51 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r52 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r52.<org.slf4j.Logger: void warn(java.lang.String)>("Replication table is offline. Will retry...")
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r52.<org.slf4j.Logger: void warn(java.lang.String)>("Replication table is offline. Will retry...") >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r53 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r53 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.fate.util.UtilWaitThread: void sleepUninterruptibly(long,java.util.concurrent.TimeUnit)>(5L, $r53)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.fate.util.UtilWaitThread: void sleepUninterruptibly(long,java.util.concurrent.TimeUnit)>(5L, $r53) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : return
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r6 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTable: org.apache.accumulo.core.client.Scanner getScanner(org.apache.accumulo.core.client.Connector)>($r22) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$WorkSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r6)]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r6 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTable: org.apache.accumulo.core.client.Scanner getScanner(org.apache.accumulo.core.client.Connector)>($r22) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r51 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$WorkSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r6)] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$WorkSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r6)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$WorkSection: void limit(org.apache.accumulo.core.client.ScannerBase)>(r6) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r23 = staticinvoke <org.apache.accumulo.core.data.Range: org.apache.accumulo.core.data.Range exact(java.lang.CharSequence)>(r4)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r23 = staticinvoke <org.apache.accumulo.core.data.Range: org.apache.accumulo.core.data.Range exact(java.lang.CharSequence)>(r4) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke r6.<org.apache.accumulo.core.client.Scanner: void setRange(org.apache.accumulo.core.data.Range)>($r23)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke r6.<org.apache.accumulo.core.client.Scanner: void setRange(org.apache.accumulo.core.data.Range)>($r23) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i3 = 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i3 = 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i4 = 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i4 = 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r7 = interfaceinvoke r6.<org.apache.accumulo.core.client.Scanner: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r7 = interfaceinvoke r6.<org.apache.accumulo.core.client.Scanner: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z7 == 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z7 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z7 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r24 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r24 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Read {} replication entries from the WorkSection of the replication table", $r25)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r24.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Read {} replication entries from the WorkSection of the replication table", $r25) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r26 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r26 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Assigned {} replication work entries for {}", $r27, r4)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Assigned {} replication work entries for {}", $r27, r4) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r28 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r8 = (java.util.Map$Entry) $r28
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r8 = (java.util.Map$Entry) $r28 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i4 = i4 + 1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i4 = i4 + 1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r29 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i4 = i4 + 1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r43 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r45 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44 = newarray (java.lang.Object)[3]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44[0] = r4
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44[0] = r4 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r46 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r46 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r47 = (org.apache.accumulo.core.data.Key) $r46
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r47 = (org.apache.accumulo.core.data.Key) $r46 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r48 = virtualinvoke $r47.<org.apache.accumulo.core.data.Key: org.apache.hadoop.io.Text getColumnQualifier()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r48 = virtualinvoke $r47.<org.apache.accumulo.core.data.Key: org.apache.hadoop.io.Text getColumnQualifier()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r49 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.replication.ReplicationTarget 'from'(org.apache.hadoop.io.Text)>($r48)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r49 = staticinvoke <org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.replication.ReplicationTarget 'from'(org.apache.hadoop.io.Text)>($r48) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44[1] = $r49
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44[1] = $r49 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44[2] = $r43
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r44[2] = $r43 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not deserialize protobuf from work entry for {} to {}, will retry", $r44)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r45.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not deserialize protobuf from work entry for {} to {}, will retry", $r44) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r29 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r30 = (org.apache.accumulo.core.data.Value) $r29
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r29 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r43 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r30 = (org.apache.accumulo.core.data.Value) $r29 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r9 = staticinvoke <org.apache.accumulo.server.replication.StatusUtil: org.apache.accumulo.server.replication.proto.Replication$Status fromValue(org.apache.accumulo.core.data.Value)>($r30)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r30 = (org.apache.accumulo.core.data.Value) $r29 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r43 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r9 = staticinvoke <org.apache.accumulo.server.replication.StatusUtil: org.apache.accumulo.server.replication.proto.Replication$Status fromValue(org.apache.accumulo.core.data.Value)>($r30) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $r31 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r9 = staticinvoke <org.apache.accumulo.server.replication.StatusUtil: org.apache.accumulo.server.replication.proto.Replication$Status fromValue(org.apache.accumulo.core.data.Value)>($r30) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r43 := @caughtexception
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $r31 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r31 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r31 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r32 = (org.apache.accumulo.core.data.Key) $r31
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r32 = (org.apache.accumulo.core.data.Key) $r31 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r58 = staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$WorkSection: org.apache.accumulo.core.replication.ReplicationTarget getTarget(org.apache.accumulo.core.data.Key,org.apache.hadoop.io.Text)>($r32, $r15)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r58 = staticinvoke <org.apache.accumulo.core.replication.ReplicationSchema$WorkSection: org.apache.accumulo.core.replication.ReplicationTarget getTarget(org.apache.accumulo.core.data.Key,org.apache.hadoop.io.Text)>($r32, $r15) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r10 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: java.util.Set getQueuedWork(org.apache.accumulo.core.replication.ReplicationTarget)>(r58)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r10 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: java.util.Set getQueuedWork(org.apache.accumulo.core.replication.ReplicationTarget)>(r58) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r33 = new org.apache.hadoop.fs.Path
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r33 = new org.apache.hadoop.fs.Path >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : specialinvoke $r33.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r4)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : specialinvoke $r33.<org.apache.hadoop.fs.Path: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r12 = virtualinvoke $r33.<org.apache.hadoop.fs.Path: java.lang.String getName()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r12 = virtualinvoke $r33.<org.apache.hadoop.fs.Path: java.lang.String getName()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r13 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.lang.String getQueueKey(java.lang.String,org.apache.accumulo.core.replication.ReplicationTarget)>(r12, r58)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : r13 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.lang.String getQueueKey(java.lang.String,org.apache.accumulo.core.replication.ReplicationTarget)>(r12, r58) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z1 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean shouldQueueWork(org.apache.accumulo.core.replication.ReplicationTarget)>(r58)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z1 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean shouldQueueWork(org.apache.accumulo.core.replication.ReplicationTarget)>(r58) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z1 != 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z1 != 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z5 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean isWorkRequired(org.apache.accumulo.server.replication.proto.Replication$Status)>(r9)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z1 != 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z2 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean isWorkRequired(org.apache.accumulo.server.replication.proto.Replication$Status)>(r9)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z2 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean isWorkRequired(org.apache.accumulo.server.replication.proto.Replication$Status)>(r9) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z2 == 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z4 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean queueWork(org.apache.hadoop.fs.Path,org.apache.accumulo.core.replication.ReplicationTarget)>($r33, r58)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r35 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r35 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34 = newarray (java.lang.Object)[3]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34[0] = r4
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34[0] = r4 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34[1] = r58
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34[1] = r58 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r36 = staticinvoke <org.apache.accumulo.core.protobuf.ProtobufUtil: java.lang.String toString(com.google.protobuf.GeneratedMessage)>(r9)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r36 = staticinvoke <org.apache.accumulo.core.protobuf.ProtobufUtil: java.lang.String toString(com.google.protobuf.GeneratedMessage)>(r9) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34[2] = $r36
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r34[2] = $r36 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Not queueing work for {} to {} because {} doesn\'t need replication", $r34)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Not queueing work for {} to {} because {} doesn\'t need replication", $r34) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z3 = interfaceinvoke r10.<java.util.Collection: boolean contains(java.lang.Object)>(r13)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z3 = interfaceinvoke r10.<java.util.Collection: boolean contains(java.lang.Object)>(r13) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z3 == 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z3 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r37 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z3 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r37 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r38 = virtualinvoke r58.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r38 = virtualinvoke r58.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r37.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Removing {} from replication state to {} because replication is complete", r13, $r38)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r37.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Removing {} from replication state to {} because replication is complete", r13, $r38) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: void removeQueuedWork(org.apache.accumulo.core.replication.ReplicationTarget,java.lang.String)>(r58, r13)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: void removeQueuedWork(org.apache.accumulo.core.replication.ReplicationTarget,java.lang.String)>(r58, r13) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z4 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean queueWork(org.apache.hadoop.fs.Path,org.apache.accumulo.core.replication.ReplicationTarget)>($r33, r58) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z4 == 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z4 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i3 = i3 + 1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z4 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : i3 = i3 + 1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= (branch)]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= (branch)] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z5 = virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: boolean isWorkRequired(org.apache.accumulo.server.replication.proto.Replication$Status)>(r9) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z5 != 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z5 != 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z6 = interfaceinvoke r10.<java.util.Collection: boolean contains(java.lang.Object)>(r13)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z5 != 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z6 = interfaceinvoke r10.<java.util.Collection: boolean contains(java.lang.Object)>(r13) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z6 == 0
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z6 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r39 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : if $z6 == 0 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r39 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r40 = virtualinvoke r58.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r40 = virtualinvoke r58.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>() >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Removing {} from replication state to {} because replication is complete", r13, $r40)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Removing {} from replication state to {} because replication is complete", r13, $r40) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: void removeQueuedWork(org.apache.accumulo.core.replication.ReplicationTarget,java.lang.String)>(r58, r13)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : virtualinvoke r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: void removeQueuedWork(org.apache.accumulo.core.replication.ReplicationTarget,java.lang.String)>(r58, r13) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : goto [?= $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r41 = <org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $i2 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: int maxQueueSize>
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $i2 = r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: int maxQueueSize> >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r41.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Queued replication work exceeds configured maximum ({}), sleeping to allow work to occur", $r42)
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : interfaceinvoke $r41.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Queued replication work exceeds configured maximum ({}), sleeping to allow work to occur", $r42) >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.createWork : return
