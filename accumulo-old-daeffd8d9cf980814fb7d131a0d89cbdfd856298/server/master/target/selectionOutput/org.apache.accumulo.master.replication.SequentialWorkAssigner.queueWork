org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r6 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String getName()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r3 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.lang.String getQueueKey(java.lang.String,org.apache.accumulo.core.replication.ReplicationTarget)>($r6, r2)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r3 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.lang.String getQueueKey(java.lang.String,org.apache.accumulo.core.replication.ReplicationTarget)>($r6, r2) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r7 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName>
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r7 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r8 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r8 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r9 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r28 = (java.util.Map) $r9
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r28 = (java.util.Map) $r9 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if null != r28
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if null != r28 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r21 = new java.util.HashMap
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if null != r28 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r10 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r10 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r11 = interfaceinvoke r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r11 = interfaceinvoke r28.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r4 = (java.lang.String) $r11
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r4 = (java.lang.String) $r11 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if null != r4
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if null != r4 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r17 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue>
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if null != r4 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r12 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String getName()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r12 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String getName()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>($r12)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>($r12) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if $z0 == 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r16 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r14 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r14 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13 = newarray (java.lang.Object)[3]
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13[0] = r1
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13[0] = r1 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13[1] = r4
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13[1] = r4 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r15 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r15 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13[2] = $r15
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r13[2] = $r15 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Not queueing {} for work as {} must be replicated to {} first", $r13)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Not queueing {} for work as {} must be replicated to {} first", $r13) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : return 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r16 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Not re-queueing work for {} as it has already been queued for replication to {}", r1, r2)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Not re-queueing work for {} as it has already been queued for replication to {}", r1, r2) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : return 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r17 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r18 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String toString()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r17 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r27 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26 = newarray (java.lang.Object)[3]
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26[0] = r1
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26[0] = r1 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26[1] = r2
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26[1] = r2 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26[2] = $r25
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r26[2] = $r25 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not queue work for {} to {}", $r26)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not queue work for {} to {}", $r26) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : return 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r18 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : virtualinvoke $r17.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: void addWork(java.lang.String,java.lang.String)>(r3, $r18)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r18 = virtualinvoke r1.<org.apache.hadoop.fs.Path: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : virtualinvoke $r17.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: void addWork(java.lang.String,java.lang.String)>(r3, $r18) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r19 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : virtualinvoke $r17.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: void addWork(java.lang.String,java.lang.String)>(r3, $r18) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r19 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r3)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r19 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r3) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : goto [?= return 1]
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, r3) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : goto [?= return 1] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : return 1
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r21 = new java.util.HashMap >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r28 = $r21
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : r28 = $r21 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r22 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName>
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r22 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r23 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r23 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r21)
org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r21) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.queueWork : $r10 = virtualinvoke r2.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>()
