org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[")
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[") >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : i4 = 0
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : i4 = 0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if $z0 == 0
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 >= i0
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 >= i0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 >= i0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]")
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : return $r7
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $i1 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $i2 = $i1 - 2
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $i2 = $i1 - 2 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $i3 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $i3 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i2, $i3)
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>($i2, $i3) >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]")
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 < i0
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 < i0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...")
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 < i0 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ")
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : i4 = i4 + 1
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : i4 = i4 + 1 >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...") >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : goto [?= (branch)]
org.apache.accumulo.master.tableOps.LoadFiles.sampleList : goto [?= (branch)] >>>>>>>> org.apache.accumulo.master.tableOps.LoadFiles.sampleList : if i4 >= i0
