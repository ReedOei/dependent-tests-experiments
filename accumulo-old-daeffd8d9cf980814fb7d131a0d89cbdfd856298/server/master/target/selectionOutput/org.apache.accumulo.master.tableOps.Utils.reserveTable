org.apache.accumulo.master.tableOps.Utils.reserveTable : $r4 = staticinvoke <org.apache.accumulo.master.tableOps.Utils: java.util.concurrent.locks.Lock getLock(org.apache.accumulo.core.client.impl.AbstractId,long,boolean)>(r0, l0, z0) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $z2 = interfaceinvoke $r4.<java.util.concurrent.locks.Lock: boolean tryLock()>()
org.apache.accumulo.master.tableOps.Utils.reserveTable : $z2 = interfaceinvoke $r4.<java.util.concurrent.locks.Lock: boolean tryLock()>() >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : if $z2 == 0
org.apache.accumulo.master.tableOps.Utils.reserveTable : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : if z1 == 0
org.apache.accumulo.master.tableOps.Utils.reserveTable : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : return 100L
org.apache.accumulo.master.tableOps.Utils.reserveTable : if z1 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : r2 = staticinvoke <org.apache.accumulo.server.client.HdfsZooInstance: org.apache.accumulo.core.client.Instance getInstance()>()
org.apache.accumulo.master.tableOps.Utils.reserveTable : if z1 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r6 = <org.apache.accumulo.master.tableOps.Utils: org.slf4j.Logger log>
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r6 = <org.apache.accumulo.master.tableOps.Utils: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5 = newarray (java.lang.Object)[4]
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[0] = r0
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[0] = r0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0)
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r8 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[1] = $r8
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[1] = $r8 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : if z0 == 0
org.apache.accumulo.master.tableOps.Utils.reserveTable : if z0 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r19 = "write"
org.apache.accumulo.master.tableOps.Utils.reserveTable : if z0 == 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r19 = "read"
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r19 = "read" >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[2] = $r19
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[2] = $r19 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[3] = r1
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[3] = r1 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("table {} ({}) locked for {} operation: {}", $r5)
org.apache.accumulo.master.tableOps.Utils.reserveTable : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("table {} ({}) locked for {} operation: {}", $r5) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : return 0L
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r19 = "write" >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : goto [?= $r5[2] = $r19]
org.apache.accumulo.master.tableOps.Utils.reserveTable : goto [?= $r5[2] = $r19] >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r5[2] = $r19
org.apache.accumulo.master.tableOps.Utils.reserveTable : r2 = staticinvoke <org.apache.accumulo.server.client.HdfsZooInstance: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : r3 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>()
org.apache.accumulo.master.tableOps.Utils.reserveTable : r3 = staticinvoke <org.apache.accumulo.server.zookeeper.ZooReaderWriter: org.apache.accumulo.server.zookeeper.ZooReaderWriter getInstance()>() >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r9 = new java.lang.StringBuilder
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.tableOps.Utils.reserveTable : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r10 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(org.apache.accumulo.core.client.Instance)>(r2)
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r10 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(org.apache.accumulo.core.client.Instance)>(r2) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tables")
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/tables") >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $z3 = interfaceinvoke r3.<org.apache.accumulo.fate.zookeeper.IZooReaderWriter: boolean exists(java.lang.String)>($r15)
org.apache.accumulo.master.tableOps.Utils.reserveTable : $z3 = interfaceinvoke r3.<org.apache.accumulo.fate.zookeeper.IZooReaderWriter: boolean exists(java.lang.String)>($r15) >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : if $z3 != 0
org.apache.accumulo.master.tableOps.Utils.reserveTable : if $z3 != 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r16 = new org.apache.accumulo.core.client.impl.AcceptableThriftTableOperationException
org.apache.accumulo.master.tableOps.Utils.reserveTable : if $z3 != 0 >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r6 = <org.apache.accumulo.master.tableOps.Utils: org.slf4j.Logger log>
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r16 = new org.apache.accumulo.core.client.impl.AcceptableThriftTableOperationException >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r17 = virtualinvoke r0.<org.apache.accumulo.core.client.impl.Table$ID: java.lang.String canonicalID()>()
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r17 = virtualinvoke r0.<org.apache.accumulo.core.client.impl.Table$ID: java.lang.String canonicalID()>() >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : $r18 = <org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType: org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType NOTFOUND>
org.apache.accumulo.master.tableOps.Utils.reserveTable : $r18 = <org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType: org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType NOTFOUND> >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : specialinvoke $r16.<org.apache.accumulo.core.client.impl.AcceptableThriftTableOperationException: void <init>(java.lang.String,java.lang.String,org.apache.accumulo.core.client.impl.thrift.TableOperation,org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType,java.lang.String)>($r17, "", r1, $r18, "Table does not exist")
org.apache.accumulo.master.tableOps.Utils.reserveTable : specialinvoke $r16.<org.apache.accumulo.core.client.impl.AcceptableThriftTableOperationException: void <init>(java.lang.String,java.lang.String,org.apache.accumulo.core.client.impl.thrift.TableOperation,org.apache.accumulo.core.client.impl.thrift.TableOperationExceptionType,java.lang.String)>($r17, "", r1, $r18, "Table does not exist") >>>>>>>> org.apache.accumulo.master.tableOps.Utils.reserveTable : throw $r16
