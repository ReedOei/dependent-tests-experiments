org.apache.accumulo.master.Master.update : $r7 = new org.apache.accumulo.server.master.state.DeadServerList >>>>>>>> org.apache.accumulo.master.Master.update : $r8 = new java.lang.StringBuilder
org.apache.accumulo.master.Master.update : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.Master.update : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.Master.update : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r9 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>()
org.apache.accumulo.master.Master.update : $r9 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r10 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(org.apache.accumulo.core.client.Instance)>($r9)
org.apache.accumulo.master.Master.update : $r10 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(org.apache.accumulo.core.client.Instance)>($r9) >>>>>>>> org.apache.accumulo.master.Master.update : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.accumulo.master.Master.update : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.accumulo.master.Master.update : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/dead/tservers")
org.apache.accumulo.master.Master.update : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/dead/tservers") >>>>>>>> org.apache.accumulo.master.Master.update : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.Master.update : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master.update : specialinvoke $r7.<org.apache.accumulo.server.master.state.DeadServerList: void <init>(java.lang.String)>($r13)
org.apache.accumulo.master.Master.update : specialinvoke $r7.<org.apache.accumulo.server.master.state.DeadServerList: void <init>(java.lang.String)>($r13) >>>>>>>> org.apache.accumulo.master.Master.update : $i0 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.accumulo.master.Master.update : $i0 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.accumulo.master.Master.update : if $i0 <= 0
org.apache.accumulo.master.Master.update : if $i0 <= 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r37 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master.update : if $i0 <= 0 >>>>>>>> org.apache.accumulo.master.Master.update : r45 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master.update : r45 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master.update : $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master.update : $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master.update : if $z10 == 0
org.apache.accumulo.master.Master.update : if $z10 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r32 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master.update : if $z10 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r14 = new java.util.HashSet
org.apache.accumulo.master.Master.update : $r14 = new java.util.HashSet >>>>>>>> org.apache.accumulo.master.Master.update : specialinvoke $r14.<java.util.HashSet: void <init>(java.util.Collection)>(r2)
org.apache.accumulo.master.Master.update : specialinvoke $r14.<java.util.HashSet: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.accumulo.master.Master.update : $r15 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r15 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke $r14.<java.util.Set: boolean removeAll(java.util.Collection)>($r15)
org.apache.accumulo.master.Master.update : interfaceinvoke $r14.<java.util.Set: boolean removeAll(java.util.Collection)>($r15) >>>>>>>> org.apache.accumulo.master.Master.update : $i1 = interfaceinvoke $r14.<java.util.Set: int size()>()
org.apache.accumulo.master.Master.update : $i1 = interfaceinvoke $r14.<java.util.Set: int size()>() >>>>>>>> org.apache.accumulo.master.Master.update : if $i1 <= 0
org.apache.accumulo.master.Master.update : if $i1 <= 0 >>>>>>>> org.apache.accumulo.master.Master.update : $z5 = virtualinvoke r0.<org.apache.accumulo.master.Master: boolean stillMaster()>()
org.apache.accumulo.master.Master.update : if $i1 <= 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r49 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r49 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke $r49.<java.util.Set: boolean removeAll(java.util.Collection)>(r2)
org.apache.accumulo.master.Master.update : interfaceinvoke $r49.<java.util.Set: boolean removeAll(java.util.Collection)>(r2) >>>>>>>> org.apache.accumulo.master.Master.update : $r50 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers>
org.apache.accumulo.master.Master.update : $r50 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers> >>>>>>>> org.apache.accumulo.master.Master.update : $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set keySet()>()
org.apache.accumulo.master.Master.update : $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke $r51.<java.util.Set: boolean removeAll(java.util.Collection)>(r2)
org.apache.accumulo.master.Master.update : interfaceinvoke $r51.<java.util.Set: boolean removeAll(java.util.Collection)>(r2) >>>>>>>> org.apache.accumulo.master.Master.update : $r52 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers>
org.apache.accumulo.master.Master.update : $r52 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers> >>>>>>>> org.apache.accumulo.master.Master.update : entermonitor $r52
org.apache.accumulo.master.Master.update : entermonitor $r52 >>>>>>>> org.apache.accumulo.master.Master.update : $r54 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers>
org.apache.accumulo.master.Master.update : entermonitor $r52 >>>>>>>> org.apache.accumulo.master.Master.update : $r41 := @caughtexception
org.apache.accumulo.master.Master.update : exitmonitor $r52 >>>>>>>> org.apache.accumulo.master.Master.update : throw $r41
org.apache.accumulo.master.Master.update : exitmonitor $r52 >>>>>>>> org.apache.accumulo.master.Master.update : $r41 := @caughtexception
org.apache.accumulo.master.Master.update : $r54 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers> >>>>>>>> org.apache.accumulo.master.Master.update : $r55 = interfaceinvoke $r54.<java.util.Map: java.util.Set keySet()>()
org.apache.accumulo.master.Master.update : $r54 = r0.<org.apache.accumulo.master.Master: java.util.Map badServers> >>>>>>>> org.apache.accumulo.master.Master.update : $r41 := @caughtexception
org.apache.accumulo.master.Master.update : $r55 = interfaceinvoke $r54.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.accumulo.master.Master.update : staticinvoke <org.apache.accumulo.master.Master: void cleanListByHostAndPort(java.util.Collection,java.util.Set,java.util.Set)>($r55, r2, r3)
org.apache.accumulo.master.Master.update : $r55 = interfaceinvoke $r54.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r41 := @caughtexception
org.apache.accumulo.master.Master.update : staticinvoke <org.apache.accumulo.master.Master: void cleanListByHostAndPort(java.util.Collection,java.util.Set,java.util.Set)>($r55, r2, r3) >>>>>>>> org.apache.accumulo.master.Master.update : exitmonitor $r52
org.apache.accumulo.master.Master.update : staticinvoke <org.apache.accumulo.master.Master: void cleanListByHostAndPort(java.util.Collection,java.util.Set,java.util.Set)>($r55, r2, r3) >>>>>>>> org.apache.accumulo.master.Master.update : $r41 := @caughtexception
org.apache.accumulo.master.Master.update : exitmonitor $r52 >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $r16 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>]
org.apache.accumulo.master.Master.update : exitmonitor $r52 >>>>>>>> org.apache.accumulo.master.Master.update : $r41 := @caughtexception
org.apache.accumulo.master.Master.update : goto [?= $r16 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>] >>>>>>>> org.apache.accumulo.master.Master.update : $r16 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r16 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master.update : entermonitor $r16
org.apache.accumulo.master.Master.update : entermonitor $r16 >>>>>>>> org.apache.accumulo.master.Master.update : $r17 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : entermonitor $r16 >>>>>>>> org.apache.accumulo.master.Master.update : $r40 := @caughtexception
org.apache.accumulo.master.Master.update : exitmonitor $r16 >>>>>>>> org.apache.accumulo.master.Master.update : throw $r40
org.apache.accumulo.master.Master.update : exitmonitor $r16 >>>>>>>> org.apache.accumulo.master.Master.update : $r40 := @caughtexception
org.apache.accumulo.master.Master.update : $r17 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master.update : staticinvoke <org.apache.accumulo.master.Master: void cleanListByHostAndPort(java.util.Collection,java.util.Set,java.util.Set)>($r17, r2, r3)
org.apache.accumulo.master.Master.update : $r17 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master.update : $r40 := @caughtexception
org.apache.accumulo.master.Master.update : staticinvoke <org.apache.accumulo.master.Master: void cleanListByHostAndPort(java.util.Collection,java.util.Set,java.util.Set)>($r17, r2, r3) >>>>>>>> org.apache.accumulo.master.Master.update : exitmonitor $r16
org.apache.accumulo.master.Master.update : staticinvoke <org.apache.accumulo.master.Master: void cleanListByHostAndPort(java.util.Collection,java.util.Set,java.util.Set)>($r17, r2, r3) >>>>>>>> org.apache.accumulo.master.Master.update : $r40 := @caughtexception
org.apache.accumulo.master.Master.update : exitmonitor $r16 >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $r18 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>]
org.apache.accumulo.master.Master.update : exitmonitor $r16 >>>>>>>> org.apache.accumulo.master.Master.update : $r40 := @caughtexception
org.apache.accumulo.master.Master.update : goto [?= $r18 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>] >>>>>>>> org.apache.accumulo.master.Master.update : $r18 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>
org.apache.accumulo.master.Master.update : $r18 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master.update : entermonitor $r18
org.apache.accumulo.master.Master.update : entermonitor $r18 >>>>>>>> org.apache.accumulo.master.Master.update : $r19 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>
org.apache.accumulo.master.Master.update : entermonitor $r18 >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : exitmonitor $r18 >>>>>>>> org.apache.accumulo.master.Master.update : throw $r42
org.apache.accumulo.master.Master.update : exitmonitor $r18 >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $r19 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master.update : $r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>()
org.apache.accumulo.master.Master.update : $r19 = r0.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>() >>>>>>>> org.apache.accumulo.master.Master.update : r59 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master.update : $r20 = interfaceinvoke $r19.<java.util.SortedMap: java.util.Set entrySet()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : r59 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master.update : $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master.update : r59 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master.update : if $z3 == 0
org.apache.accumulo.master.Master.update : $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : if $z3 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r24 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master.update : if $z3 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : exitmonitor $r18
org.apache.accumulo.master.Master.update : if $z3 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : exitmonitor $r18 >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $r22 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>]
org.apache.accumulo.master.Master.update : exitmonitor $r18 >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : goto [?= $r22 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>] >>>>>>>> org.apache.accumulo.master.Master.update : $r22 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent>
org.apache.accumulo.master.Master.update : $r22 = r0.<org.apache.accumulo.master.Master: org.apache.accumulo.master.EventCoordinator nextEvent> >>>>>>>> org.apache.accumulo.master.Master.update : $r21 = newarray (java.lang.Object)[1]
org.apache.accumulo.master.Master.update : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.accumulo.master.Master.update : $i2 = virtualinvoke r1.<org.apache.accumulo.server.master.LiveTServerSet: int size()>()
org.apache.accumulo.master.Master.update : $i2 = virtualinvoke r1.<org.apache.accumulo.server.master.LiveTServerSet: int size()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.accumulo.master.Master.update : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.accumulo.master.Master.update : $r21[0] = $r23
org.apache.accumulo.master.Master.update : $r21[0] = $r23 >>>>>>>> org.apache.accumulo.master.Master.update : virtualinvoke $r22.<org.apache.accumulo.master.EventCoordinator: void event(java.lang.String,java.lang.Object[])>("There are now %d tablet servers", $r21)
org.apache.accumulo.master.Master.update : virtualinvoke $r22.<org.apache.accumulo.master.EventCoordinator: void event(java.lang.String,java.lang.Object[])>("There are now %d tablet servers", $r21) >>>>>>>> org.apache.accumulo.master.Master.update : return
org.apache.accumulo.master.Master.update : $r24 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master.update : r60 = (java.util.Map$Entry) $r24
org.apache.accumulo.master.Master.update : $r24 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : r60 = (java.util.Map$Entry) $r24 >>>>>>>> org.apache.accumulo.master.Master.update : $r25 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.Master.update : r60 = (java.util.Map$Entry) $r24 >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $r25 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master.update : $z4 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r25)
org.apache.accumulo.master.Master.update : $r25 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $z4 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r25) >>>>>>>> org.apache.accumulo.master.Master.update : if $z4 == 0
org.apache.accumulo.master.Master.update : $z4 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r25) >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : if $z4 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r26 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master.update : if $z4 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master.update : if $z4 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : goto [?= $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master.update : $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master.update : goto [?= $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $r26 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.update : $r27 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.Master.update : $r26 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $r27 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r28 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.Master.update : $r27 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $r28 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Canceling migration of {} to {}", $r27, $r28)
org.apache.accumulo.master.Master.update : $r28 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Canceling migration of {} to {}", $r27, $r28) >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke r59.<java.util.Iterator: void remove()>()
org.apache.accumulo.master.Master.update : interfaceinvoke $r26.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Canceling migration of {} to {}", $r27, $r28) >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : interfaceinvoke r59.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master.update : interfaceinvoke r59.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r42 := @caughtexception
org.apache.accumulo.master.Master.update : $z5 = virtualinvoke r0.<org.apache.accumulo.master.Master: boolean stillMaster()>() >>>>>>>> org.apache.accumulo.master.Master.update : if $z5 == 0
org.apache.accumulo.master.Master.update : if $z5 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r29 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>()
org.apache.accumulo.master.Master.update : if $z5 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r49 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r29 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r30 = <org.apache.accumulo.core.master.thrift.MasterGoalState: org.apache.accumulo.core.master.thrift.MasterGoalState CLEAN_STOP>
org.apache.accumulo.master.Master.update : $r30 = <org.apache.accumulo.core.master.thrift.MasterGoalState: org.apache.accumulo.core.master.thrift.MasterGoalState CLEAN_STOP> >>>>>>>> org.apache.accumulo.master.Master.update : $z6 = virtualinvoke $r29.<org.apache.accumulo.core.master.thrift.MasterGoalState: boolean equals(java.lang.Object)>($r30)
org.apache.accumulo.master.Master.update : $z6 = virtualinvoke $r29.<org.apache.accumulo.core.master.thrift.MasterGoalState: boolean equals(java.lang.Object)>($r30) >>>>>>>> org.apache.accumulo.master.Master.update : if $z6 != 0
org.apache.accumulo.master.Master.update : if $z6 != 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r31 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master.update : if $z6 != 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r49 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r31 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke $r31.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Lost servers {}", $r14)
org.apache.accumulo.master.Master.update : interfaceinvoke $r31.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Lost servers {}", $r14) >>>>>>>> org.apache.accumulo.master.Master.update : $r49 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r32 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master.update : r46 = (org.apache.accumulo.server.master.state.TServerInstance) $r32
org.apache.accumulo.master.Master.update : r46 = (org.apache.accumulo.server.master.state.TServerInstance) $r32 >>>>>>>> org.apache.accumulo.master.Master.update : r47 = "unexpected failure"
org.apache.accumulo.master.Master.update : r47 = "unexpected failure" >>>>>>>> org.apache.accumulo.master.Master.update : $r33 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown>
org.apache.accumulo.master.Master.update : $r33 = r0.<org.apache.accumulo.master.Master: java.util.Set serversToShutdown> >>>>>>>> org.apache.accumulo.master.Master.update : $z7 = interfaceinvoke $r33.<java.util.Set: boolean contains(java.lang.Object)>(r46)
org.apache.accumulo.master.Master.update : $z7 = interfaceinvoke $r33.<java.util.Set: boolean contains(java.lang.Object)>(r46) >>>>>>>> org.apache.accumulo.master.Master.update : if $z7 == 0
org.apache.accumulo.master.Master.update : if $z7 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : r47 = "clean shutdown"
org.apache.accumulo.master.Master.update : if $z7 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r34 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>()
org.apache.accumulo.master.Master.update : $r34 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>() >>>>>>>> org.apache.accumulo.master.Master.update : $r35 = <org.apache.accumulo.core.master.thrift.MasterGoalState: org.apache.accumulo.core.master.thrift.MasterGoalState CLEAN_STOP>
org.apache.accumulo.master.Master.update : $r35 = <org.apache.accumulo.core.master.thrift.MasterGoalState: org.apache.accumulo.core.master.thrift.MasterGoalState CLEAN_STOP> >>>>>>>> org.apache.accumulo.master.Master.update : $z8 = virtualinvoke $r34.<org.apache.accumulo.core.master.thrift.MasterGoalState: boolean equals(java.lang.Object)>($r35)
org.apache.accumulo.master.Master.update : $z8 = virtualinvoke $r34.<org.apache.accumulo.core.master.thrift.MasterGoalState: boolean equals(java.lang.Object)>($r35) >>>>>>>> org.apache.accumulo.master.Master.update : if $z8 != 0
org.apache.accumulo.master.Master.update : if $z8 != 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r36 = virtualinvoke r46.<org.apache.accumulo.server.master.state.TServerInstance: java.lang.String hostPort()>()
org.apache.accumulo.master.Master.update : if $z8 != 0 >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master.update : goto [?= $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master.update : $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master.update : $r36 = virtualinvoke r46.<org.apache.accumulo.server.master.state.TServerInstance: java.lang.String hostPort()>() >>>>>>>> org.apache.accumulo.master.Master.update : virtualinvoke $r7.<org.apache.accumulo.server.master.state.DeadServerList: void post(java.lang.String,java.lang.String)>($r36, r47)
org.apache.accumulo.master.Master.update : virtualinvoke $r7.<org.apache.accumulo.server.master.state.DeadServerList: void post(java.lang.String,java.lang.String)>($r36, r47) >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master.update : r47 = "clean shutdown" >>>>>>>> org.apache.accumulo.master.Master.update : $r34 = virtualinvoke r0.<org.apache.accumulo.master.Master: org.apache.accumulo.core.master.thrift.MasterGoalState getMasterGoalState()>()
org.apache.accumulo.master.Master.update : $r37 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master.update : interfaceinvoke $r37.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("New servers: {}", r3)
org.apache.accumulo.master.Master.update : interfaceinvoke $r37.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("New servers: {}", r3) >>>>>>>> org.apache.accumulo.master.Master.update : r43 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master.update : r43 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master.update : $z9 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master.update : $z9 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master.update : if $z9 == 0
org.apache.accumulo.master.Master.update : if $z9 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : $r38 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master.update : if $z9 == 0 >>>>>>>> org.apache.accumulo.master.Master.update : r45 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master.update : $r38 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master.update : r44 = (org.apache.accumulo.server.master.state.TServerInstance) $r38
org.apache.accumulo.master.Master.update : r44 = (org.apache.accumulo.server.master.state.TServerInstance) $r38 >>>>>>>> org.apache.accumulo.master.Master.update : $r39 = virtualinvoke r44.<org.apache.accumulo.server.master.state.TServerInstance: java.lang.String hostPort()>()
org.apache.accumulo.master.Master.update : $r39 = virtualinvoke r44.<org.apache.accumulo.server.master.state.TServerInstance: java.lang.String hostPort()>() >>>>>>>> org.apache.accumulo.master.Master.update : virtualinvoke $r7.<org.apache.accumulo.server.master.state.DeadServerList: void delete(java.lang.String)>($r39)
org.apache.accumulo.master.Master.update : virtualinvoke $r7.<org.apache.accumulo.server.master.state.DeadServerList: void delete(java.lang.String)>($r39) >>>>>>>> org.apache.accumulo.master.Master.update : goto [?= $z9 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master.update : goto [?= $z9 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master.update : $z9 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()
