org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r7 = <org.apache.accumulo.core.security.Authorizations: org.apache.accumulo.core.security.Authorizations EMPTY> >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : r2 = virtualinvoke r1.<org.apache.accumulo.core.client.Connector: org.apache.accumulo.core.client.Scanner createScanner(java.lang.String,org.apache.accumulo.core.security.Authorizations)>("accumulo.metadata", $r7)
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : r2 = virtualinvoke r1.<org.apache.accumulo.core.client.Connector: org.apache.accumulo.core.client.Scanner createScanner(java.lang.String,org.apache.accumulo.core.security.Authorizations)>("accumulo.metadata", $r7) >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r8 = <org.apache.accumulo.core.metadata.schema.MetadataSchema$TabletsSection$TabletColumnFamily: org.apache.accumulo.core.util.ColumnFQ PREV_ROW_COLUMN>
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r8 = <org.apache.accumulo.core.metadata.schema.MetadataSchema$TabletsSection$TabletColumnFamily: org.apache.accumulo.core.util.ColumnFQ PREV_ROW_COLUMN> >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : virtualinvoke $r8.<org.apache.accumulo.core.util.ColumnFQ: void fetch(org.apache.accumulo.core.client.ScannerBase)>(r2)
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : virtualinvoke $r8.<org.apache.accumulo.core.util.ColumnFQ: void fetch(org.apache.accumulo.core.client.ScannerBase)>(r2) >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r9 = new java.util.HashSet
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r9 = new java.util.HashSet >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : r4 = interfaceinvoke r2.<org.apache.accumulo.core.client.Scanner: java.util.Iterator iterator()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : r4 = interfaceinvoke r2.<org.apache.accumulo.core.client.Scanner: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : if $z0 == 0
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r10 = r0.<org.apache.accumulo.master.Master$MigrationCleanupThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r10 = r0.<org.apache.accumulo.master.Master$MigrationCleanupThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r11 = $r10.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r11 = $r10.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r12 = interfaceinvoke $r11.<java.util.SortedMap: java.util.Set keySet()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r12 = interfaceinvoke $r11.<java.util.SortedMap: java.util.Set keySet()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : interfaceinvoke $r12.<java.util.Set: boolean retainAll(java.util.Collection)>($r9)
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : interfaceinvoke $r12.<java.util.Set: boolean retainAll(java.util.Collection)>($r9) >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : return
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : r5 = (java.util.Map$Entry) $r13
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : r5 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r14 = new org.apache.accumulo.core.data.impl.KeyExtent
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r14 = new org.apache.accumulo.core.data.impl.KeyExtent >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r16 = (org.apache.accumulo.core.data.Key) $r15
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r16 = (org.apache.accumulo.core.data.Key) $r15 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r17 = virtualinvoke $r16.<org.apache.accumulo.core.data.Key: org.apache.hadoop.io.Text getRow()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r17 = virtualinvoke $r16.<org.apache.accumulo.core.data.Key: org.apache.hadoop.io.Text getRow()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r19 = (org.apache.accumulo.core.data.Value) $r18
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r19 = (org.apache.accumulo.core.data.Value) $r18 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : specialinvoke $r14.<org.apache.accumulo.core.data.impl.KeyExtent: void <init>(org.apache.hadoop.io.Text,org.apache.accumulo.core.data.Value)>($r17, $r19)
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : specialinvoke $r14.<org.apache.accumulo.core.data.impl.KeyExtent: void <init>(org.apache.hadoop.io.Text,org.apache.accumulo.core.data.Value)>($r17, $r19) >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r20 = r0.<org.apache.accumulo.master.Master$MigrationCleanupThread: org.apache.accumulo.master.Master this$0>
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r20 = r0.<org.apache.accumulo.master.Master$MigrationCleanupThread: org.apache.accumulo.master.Master this$0> >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r21 = $r20.<org.apache.accumulo.master.Master: java.util.SortedMap migrations>
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $r21 = $r20.<org.apache.accumulo.master.Master: java.util.SortedMap migrations> >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $z2 = interfaceinvoke $r21.<java.util.SortedMap: boolean containsKey(java.lang.Object)>($r14)
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $z2 = interfaceinvoke $r21.<java.util.SortedMap: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : if $z2 == 0
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r14)
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : if $z2 == 0 >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.accumulo.master.Master$MigrationCleanupThread.cleanupNonexistentMigrations : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
