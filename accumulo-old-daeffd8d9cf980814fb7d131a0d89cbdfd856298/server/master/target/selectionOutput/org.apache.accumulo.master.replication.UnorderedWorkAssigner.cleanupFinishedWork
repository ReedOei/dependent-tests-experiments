org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r4 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: java.util.Set queuedWork> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r5 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.core.client.Connector conn>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r5 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.core.client.Connector conn> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r6 = virtualinvoke $r5.<org.apache.accumulo.core.client.Connector: org.apache.accumulo.core.client.Instance getInstance()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r6 = virtualinvoke $r5.<org.apache.accumulo.core.client.Connector: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : r2 = interfaceinvoke $r6.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : r2 = interfaceinvoke $r6.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : if $z0 == 0
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : return
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : r3 = (java.lang.String) $r7
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : r3 = (java.lang.String) $r7 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r9 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.server.zookeeper.ZooCache zooCache>
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r9 = r0.<org.apache.accumulo.master.replication.UnorderedWorkAssigner: org.apache.accumulo.server.zookeeper.ZooCache zooCache> >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r8 = new java.lang.StringBuilder
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r10 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>(r2)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r10 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>(r2) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/replication/workqueue")
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/replication/workqueue") >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r16 = virtualinvoke $r9.<org.apache.accumulo.server.zookeeper.ZooCache: byte[] get(java.lang.String)>($r15)
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $r16 = virtualinvoke $r9.<org.apache.accumulo.server.zookeeper.ZooCache: byte[] get(java.lang.String)>($r15) >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : if null != $r16
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : if null != $r16 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : interfaceinvoke r1.<java.util.Iterator: void remove()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : if null != $r16 >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : interfaceinvoke r1.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.accumulo.master.replication.UnorderedWorkAssigner.cleanupFinishedWork : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
