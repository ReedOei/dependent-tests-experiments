org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r7 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if null == $r7
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if null == $r7 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : return
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if null == $r7 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r8 = new java.util.HashMap
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r8 = new java.util.HashMap >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> = $r8
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> = $r8 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r9 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue>
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r9 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r1 = virtualinvoke $r9.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: java.util.List getWorkQueued()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r9 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r26 = new java.lang.RuntimeException >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error reading existing queued replication work", $r25)
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : specialinvoke $r26.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error reading existing queued replication work", $r25) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : throw $r26
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r1 = virtualinvoke $r9.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: java.util.List getWorkQueued()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : goto [?= $r10 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>]
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r1 = virtualinvoke $r9.<org.apache.accumulo.server.zookeeper.DistributedWorkQueue: java.util.List getWorkQueued()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r25 := @caughtexception
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : goto [?= $r10 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r10 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r10 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("Restoring replication work queue state from zookeeper")
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("Restoring replication work queue state from zookeeper") >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r28 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r28 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if $z0 == 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r11 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : return
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r11 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r2 = (java.lang.String) $r11
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r2 = (java.lang.String) $r11 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r3 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.util.Map$Entry fromQueueKey(java.lang.String)>(r2)
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r3 = staticinvoke <org.apache.accumulo.server.replication.DistributedWorkQueueWorkAssignerHelper: java.util.Map$Entry fromQueueKey(java.lang.String)>(r2) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r4 = (java.lang.String) $r12
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r4 = (java.lang.String) $r12 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r14 = (org.apache.accumulo.core.replication.ReplicationTarget) $r13
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r14 = (org.apache.accumulo.core.replication.ReplicationTarget) $r13 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r5 = virtualinvoke $r14.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r5 = virtualinvoke $r14.<org.apache.accumulo.core.replication.ReplicationTarget: java.lang.String getPeerName()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r16 = (org.apache.accumulo.core.replication.ReplicationTarget) $r15
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r16 = (org.apache.accumulo.core.replication.ReplicationTarget) $r15 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r6 = virtualinvoke $r16.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r6 = virtualinvoke $r16.<org.apache.accumulo.core.replication.ReplicationTarget: org.apache.accumulo.core.client.impl.Table$ID getSourceTableId()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r18 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r18 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17 = newarray (java.lang.Object)[3]
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17[0] = r4
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17[0] = r4 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17[1] = r6
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17[1] = r6 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17[2] = r5
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r17[2] = r5 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("In progress replication of {} from table with ID {} to peer {}", $r17)
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("In progress replication of {} from table with ID {} to peer {}", $r17) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r19 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName>
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r19 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r29 = (java.util.Map) $r20
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r29 = (java.util.Map) $r20 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if null != r29
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if null != r29 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r22 = new java.util.HashMap
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : if null != r29 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r2)
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r2) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : goto [?= $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : goto [?= $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r22 = new java.util.HashMap >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : specialinvoke $r22.<java.util.HashMap: void <init>()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : specialinvoke $r22.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r29 = $r22
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : r29 = $r22 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r23 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName>
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : $r23 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r22)
org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r22) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.initializeQueuedWork : interfaceinvoke r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r2)
