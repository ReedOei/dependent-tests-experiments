org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r3 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to get master lock", r1)
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to get master lock", r1) >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z0 = r1 instanceof org.apache.zookeeper.KeeperException$NoAuthException
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z0 = r1 instanceof org.apache.zookeeper.KeeperException$NoAuthException >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : if $z0 == 0
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r10 = <org.apache.accumulo.master.Master: org.slf4j.Logger log>
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z1 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock>
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z1 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock> >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : if $z1 == 0
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r4 = new java.lang.StringBuilder
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock> = 1
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock> = 1 >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : virtualinvoke r0.<java.lang.Object: void notifyAll()>()
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : virtualinvoke r0.<java.lang.Object: void notifyAll()>() >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : return
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zoolock in unexpected state FAL ")
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zoolock in unexpected state FAL ") >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z2 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock>
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z2 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock> >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2)
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2) >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z3 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock>
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z3 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock> >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3)
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3) >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : staticinvoke <org.apache.accumulo.server.util.Halt: void halt(java.lang.String,int)>($r9, -1)
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : staticinvoke <org.apache.accumulo.server.util.Halt: void halt(java.lang.String,int)>($r9, -1) >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean failedToAcquireLock> = 1
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $r10 = <org.apache.accumulo.master.Master: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("{} Ensure instance.secret is consistent across Accumulo configuration", "Failed to acquire master lock due to incorrect ZooKeeper authentication.", r1)
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("{} Ensure instance.secret is consistent across Accumulo configuration", "Failed to acquire master lock due to incorrect ZooKeeper authentication.", r1) >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : staticinvoke <org.apache.accumulo.server.util.Halt: void halt(java.lang.String,int)>("Failed to acquire master lock due to incorrect ZooKeeper authentication.", -1)
org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : staticinvoke <org.apache.accumulo.server.util.Halt: void halt(java.lang.String,int)>("Failed to acquire master lock due to incorrect ZooKeeper authentication.", -1) >>>>>>>> org.apache.accumulo.master.Master$MasterLockWatcher.failedToAcquireLock : $z1 = r0.<org.apache.accumulo.master.Master$MasterLockWatcher: boolean acquiredLock>
