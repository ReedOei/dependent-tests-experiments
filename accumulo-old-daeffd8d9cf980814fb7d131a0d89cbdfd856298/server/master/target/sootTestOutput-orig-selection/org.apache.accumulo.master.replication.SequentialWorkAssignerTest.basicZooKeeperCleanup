org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.conf.AccumuloConfiguration conf> = r1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> = r2
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.configure : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> = r2 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.setConnector : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> = r1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.setConnector : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.core.client.Connector conn> = r1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.setZooCache : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.server.zookeeper.ZooCache zooCache> = r1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.setZooCache : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.server.zookeeper.ZooCache zooCache> = r1 >>>>>>>> org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.setWorkQueue : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> = r1
org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner.setWorkQueue : r0.<org.apache.accumulo.master.replication.DistributedWorkQueueWorkAssigner: org.apache.accumulo.server.zookeeper.DistributedWorkQueue workQueue> = r1 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.setQueuedWork : r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> = r1
org.apache.accumulo.master.replication.SequentialWorkAssigner.setQueuedWork : r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> = r1 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r7 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName>
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r7 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: java.util.Map queuedWorkByPeerName> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r1 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r9 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.core.client.Connector conn>
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r9 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.core.client.Connector conn> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r10 = virtualinvoke $r9.<org.apache.accumulo.core.client.Connector: org.apache.accumulo.core.client.Instance getInstance()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r10 = virtualinvoke $r9.<org.apache.accumulo.core.client.Connector: org.apache.accumulo.core.client.Instance getInstance()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r2 = interfaceinvoke $r10.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r2 = interfaceinvoke $r10.<org.apache.accumulo.core.client.Instance: java.lang.String getInstanceID()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : i0 = 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : i0 = 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : if $z0 == 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : if $z0 == 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r13 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r3 = (java.util.Map$Entry) $r13
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r3 = (java.util.Map$Entry) $r13 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r14 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r4 = (java.util.Map) $r14
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r4 = (java.util.Map) $r14 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r15 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r15 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r5 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : if $z1 == 0
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : if $z1 == 0 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r6 = (java.util.Map$Entry) $r16
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : r6 = (java.util.Map$Entry) $r16 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r18 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.ZooCache zooCache>
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r18 = r0.<org.apache.accumulo.master.replication.SequentialWorkAssigner: org.apache.accumulo.server.zookeeper.ZooCache zooCache> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r17 = new java.lang.StringBuilder
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r19 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>(r2)
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r19 = staticinvoke <org.apache.accumulo.core.zookeeper.ZooUtil: java.lang.String getRoot(java.lang.String)>(r2) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/replication/workqueue")
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/replication/workqueue") >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r23 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r24 = (java.lang.String) $r23
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r24 = (java.lang.String) $r23 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r27 = virtualinvoke $r18.<org.apache.accumulo.server.zookeeper.ZooCache: byte[] get(java.lang.String)>($r26)
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r27 = virtualinvoke $r18.<org.apache.accumulo.server.zookeeper.ZooCache: byte[] get(java.lang.String)>($r26) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : if null != $r27
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : if null != $r27 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r28 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r28 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r29 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r29 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Removing {} from work assignment state", $r29)
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Removing {} from work assignment state", $r29) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : interfaceinvoke r5.<java.util.Iterator: void remove()>()
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : interfaceinvoke r5.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : i0 = i0 + 1
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : i0 = i0 + 1 >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r11 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log>
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r11 = <org.apache.accumulo.master.replication.SequentialWorkAssigner: org.slf4j.Logger log> >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.accumulo.master.replication.SequentialWorkAssigner.cleanupFinishedWork : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Removed {} elements from internal workqueue state because the work was complete", $r12)
