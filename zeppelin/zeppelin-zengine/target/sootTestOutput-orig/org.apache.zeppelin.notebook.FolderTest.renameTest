org.apache.zeppelin.notebook.Folder.setParent : $r2 = <org.apache.zeppelin.notebook.Folder: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Folder.setParent : r0.<org.apache.zeppelin.notebook.Folder: org.apache.zeppelin.notebook.Folder parent> = r1
org.apache.zeppelin.notebook.Note.getNameWithoutPath : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getNameWithoutPath : i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/")
org.apache.zeppelin.notebook.Note.getNameWithoutPath : if i0 >= 0 goto $i1 = i0 + 1
org.apache.zeppelin.notebook.Note.getNameWithoutPath : $i1 = i0 + 1
org.apache.zeppelin.notebook.Note.setName : r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.setName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = r1
org.apache.zeppelin.notebook.Note.setName : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteNameListener noteNameListener>
org.apache.zeppelin.notebook.Note.setName : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47)
org.apache.zeppelin.notebook.Note.setName : r1 = specialinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String normalizeNoteName(java.lang.String)>(r1)
org.apache.zeppelin.notebook.Folder.rename : $r12 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.rename : virtualinvoke r5.<org.apache.zeppelin.notebook.Note: void setName(java.lang.String)>(r7)
org.apache.zeppelin.notebook.Folder.rename : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: boolean isRoot()>()
org.apache.zeppelin.notebook.Folder.rename : $r16 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Folder.rename : r6 = virtualinvoke r5.<org.apache.zeppelin.notebook.Note: java.lang.String getNameWithoutPath()>()
org.apache.zeppelin.notebook.Folder.rename : $r10 = <org.apache.zeppelin.notebook.Folder: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Folder.rename : virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: void notifyRenamed(java.lang.String)>(r2)
org.apache.zeppelin.notebook.Folder.rename : $r9 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r1)
org.apache.zeppelin.notebook.Folder.rename : $r13 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.rename : exitmonitor r3
org.apache.zeppelin.notebook.Folder.rename : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.rename : $r21 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.rename : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Folder.rename : $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("/")
org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r6 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r7 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r6)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r20 = new java.lang.StringBuffer
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= $r20 = new java.lang.StringBuffer]
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r1 = new java.util.ArrayList
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r19 = <java.math.BigInteger: java.math.BigInteger ZERO>
org.apache.zeppelin.notebook.utility.IdHashes.encode : i0 = 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r15 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r17 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY>
org.apache.zeppelin.notebook.utility.IdHashes.encode : i0 = i0 + 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= staticinvoke <edu.washington.cs.dt.impact.util.Tracer: void trace(java.lang.String,java.lang.String)>("r6 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0)", "org.apache.zeppelin.notebook.utility.IdHashes.encode")]
org.apache.zeppelin.notebook.utility.IdHashes.encode : r9 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r8)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i5 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : r5 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r7)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r24 = virtualinvoke r21.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i2 = i0 - 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r10 = new java.math.BigInteger
org.apache.zeppelin.notebook.Note.getFolderId : $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)
org.apache.zeppelin.notebook.Note.getFolderId : return r2
org.apache.zeppelin.notebook.Note.getFolderId : r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.zeppelin.notebook.Note.getFolderId : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getFolderId : i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/")
org.apache.zeppelin.notebook.Note.getFolderId : if i0 >= 0 goto r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.zeppelin.notebook.Folder.isRoot : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.Folder.normalizeFolderId : return r3
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//", "/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $i1 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0)
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("///")
org.apache.zeppelin.notebook.Note.normalizeNoteName : return r4
org.apache.zeppelin.notebook.Note.normalizeNoteName : r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Note.normalizeNoteName : $i0 = virtualinvoke r4.<java.lang.String: int length()>()
org.apache.zeppelin.notebook.Note.normalizeNoteName : r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/")
org.apache.zeppelin.notebook.Note.normalizeNoteName : r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//", "/")
org.apache.zeppelin.notebook.Note.normalizeNoteName : $z0 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("///")
org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Folder.notifyRenamed : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.List listeners>
org.apache.zeppelin.notebook.Folder.getId : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.lang.String id>
org.apache.zeppelin.notebook.Note.generateId : $r1 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String generateId()>()
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.notebook.Folder.addNote : exitmonitor r3
org.apache.zeppelin.notebook.Folder.addNote : $r2 = <org.apache.zeppelin.notebook.Folder: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Folder.addNote : $r7 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.addNote : $r8 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
