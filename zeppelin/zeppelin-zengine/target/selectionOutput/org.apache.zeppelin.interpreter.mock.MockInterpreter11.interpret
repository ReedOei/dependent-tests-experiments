org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r3 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r4 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS>
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r4 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS> >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r5 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repl11: ")
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repl11: ") >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>($r4, $r8)
org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : specialinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.lang.String)>($r4, $r8) >>>>>>>> org.apache.zeppelin.interpreter.mock.MockInterpreter11.interpret : return $r3
