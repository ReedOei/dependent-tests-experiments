org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r1 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroupRef>
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r7 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroupRef> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r8)
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r8) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r2 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r2 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : return
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r3 = (java.lang.String) $r9
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r3 = (java.lang.String) $r9 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroupRef>
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroupRef> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r4 = (org.apache.zeppelin.interpreter.InterpreterGroup) $r11
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r4 = (org.apache.zeppelin.interpreter.InterpreterGroup) $r11 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r12 = new java.util.HashSet
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r12 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r13 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Set keySet()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r13 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: java.util.Set keySet()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r13)
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r13) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r5 = virtualinvoke $r12.<java.util.HashSet: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r5 = virtualinvoke $r12.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : if $z1 == 0
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r6 = (java.lang.String) $r14
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : r6 = (java.lang.String) $r14 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r15 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroupRef>
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $r15 = r0.<org.apache.zeppelin.interpreter.InterpreterSetting: java.util.Map interpreterGroupRef> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: void close(java.util.Map,java.lang.String,java.lang.String)>($r15, r3, r6)
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterGroup: void close(java.util.Map,java.lang.String,java.lang.String)>($r15, r3, r6) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterSetting.closeAndRemoveAllInterpreterGroups : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
