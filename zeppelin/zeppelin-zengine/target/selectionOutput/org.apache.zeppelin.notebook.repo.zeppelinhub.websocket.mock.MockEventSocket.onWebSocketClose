org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketClose(int,java.lang.String)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Socket Closed: [{}] {}", $r3, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Socket Closed: [{}] {}", $r3, r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketClose : return
