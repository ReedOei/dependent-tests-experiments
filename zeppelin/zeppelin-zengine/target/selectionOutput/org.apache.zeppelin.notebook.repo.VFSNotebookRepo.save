org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r3 = new com.google.gson.GsonBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r3.<com.google.gson.GsonBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r3.<com.google.gson.GsonBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r4 = $r3
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r4 = $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r4.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r4.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r5 = virtualinvoke r4.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r5 = virtualinvoke r4.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r6 = virtualinvoke r5.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r6 = virtualinvoke r5.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileObject getRootDir()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileObject getRootDir()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r13 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r13 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r8 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r8 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r9 = interfaceinvoke r7.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>($r13, $r8)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r9 = interfaceinvoke r7.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>($r13, $r8) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z0 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: boolean exists()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z0 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: boolean exists()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z0 != 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: void createFolder()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r9)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r9) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z1 != 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r14 = new java.io.IOException
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r21 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r21 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r10 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>(".note.json", $r21)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r10 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>(".note.json", $r21) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r22 = interfaceinvoke r10.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileContent getContent()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r22 = interfaceinvoke r10.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileContent getContent()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r11 = interfaceinvoke $r22.<org.apache.commons.vfs2.FileContent: java.io.OutputStream getOutputStream(boolean)>(0)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : r11 = interfaceinvoke $r22.<org.apache.commons.vfs2.FileContent: java.io.OutputStream getOutputStream(boolean)>(0) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r23 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r23 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r24 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ENCODING>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r24 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ENCODING> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r25 = virtualinvoke $r23.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r24)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r25 = virtualinvoke $r23.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r24) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r26 = virtualinvoke r6.<java.lang.String: byte[] getBytes(java.lang.String)>($r25)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r26 = virtualinvoke r6.<java.lang.String: byte[] getBytes(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r11.<java.io.OutputStream: void write(byte[])>($r26)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r11.<java.io.OutputStream: void write(byte[])>($r26) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r11.<java.io.OutputStream: void close()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : virtualinvoke r11.<java.io.OutputStream: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r27 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r27 = <org.apache.commons.vfs2.NameScope: org.apache.commons.vfs2.NameScope CHILD> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r28 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>("note.json", $r27)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r28 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String,org.apache.commons.vfs2.NameScope)>("note.json", $r27) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r10.<org.apache.commons.vfs2.FileObject: void moveTo(org.apache.commons.vfs2.FileObject)>($r28)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r10.<org.apache.commons.vfs2.FileObject: void moveTo(org.apache.commons.vfs2.FileObject)>($r28) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : return
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r14 = new java.io.IOException >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r15 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r16 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileName getName()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r16 = interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: org.apache.commons.vfs2.FileName getName()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory")
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a directory") >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r20)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : throw $r14
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : interfaceinvoke r9.<org.apache.commons.vfs2.FileObject: void createFolder()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.save : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: boolean isDirectory(org.apache.commons.vfs2.FileObject)>(r9)
