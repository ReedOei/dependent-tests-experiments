org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r5 = $r4
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r5 = $r4 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r9 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r6 = $r9
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r6 = $r9 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r10 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bundles")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bundles") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r12 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r12 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[-_]", "")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[-_]", "") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r7 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(".js")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $z0 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>(".js") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : if $z0 == 0
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i0 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : if $z0 == 0 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r15 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("import ")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r15 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("import ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r17 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from \"../")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from \"../") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("heliumBundles.push({\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("heliumBundles.push({\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r24 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id: \"")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id: \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r26 = r2[0]
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r26 = r2[0] >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r31 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r31 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name: \"")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("name: \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r33 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r33 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r38 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r38 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("icon: ")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("icon: ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r40 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: com.google.gson.Gson gson>
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r40 = r0.<org.apache.zeppelin.helium.HeliumBundleFactory: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r41 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getIcon()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r41 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getIcon()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r42 = virtualinvoke $r40.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r41)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r42 = virtualinvoke $r40.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>($r41) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r47 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r47 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r47.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type: \"")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type: \"") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r49 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: org.apache.zeppelin.helium.HeliumType getType()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r49 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: org.apache.zeppelin.helium.HeliumType getType()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r49) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\",\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r54 = new java.lang.StringBuilder
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r54 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class: ")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class: ") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})\n")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("})\n") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r61 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r61 = virtualinvoke r1.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r8 = virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageSourceDirectory(java.lang.String)>($r61)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r8 = virtualinvoke r0.<org.apache.zeppelin.helium.HeliumBundleFactory: java.io.File getHeliumPackageSourceDirectory(java.lang.String)>($r61) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r8)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r8) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r62 = new java.io.File
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r62 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r62.<java.io.File: void <init>(java.io.File,java.lang.String)>(r8, "load.js")
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : specialinvoke $r62.<java.io.File: void <init>(java.io.File,java.lang.String)>(r8, "load.js") >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r63 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r6)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r63 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r6) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r62, $r64)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>($r62, $r64) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : return
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i0 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i1 = $i0 - 3
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $i1 = $i0 - 3 >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : r3 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactory.prepareSource : $r15 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("import ")
