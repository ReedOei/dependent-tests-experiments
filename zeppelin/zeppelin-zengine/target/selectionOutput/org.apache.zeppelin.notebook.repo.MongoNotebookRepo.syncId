org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r8 = r0.<org.apache.zeppelin.notebook.repo.MongoNotebookRepo: com.mongodb.client.MongoCollection coll> >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r1 = <org.bson.BsonType: org.bson.BsonType OBJECT_ID>
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r1 = <org.bson.BsonType: org.bson.BsonType OBJECT_ID> >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r9 = staticinvoke <com.mongodb.client.model.Filters: org.bson.conversions.Bson type(java.lang.String,org.bson.BsonType)>("_id", $r1)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r9 = staticinvoke <com.mongodb.client.model.Filters: org.bson.conversions.Bson type(java.lang.String,org.bson.BsonType)>("_id", $r1) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r10 = interfaceinvoke $r8.<com.mongodb.client.MongoCollection: com.mongodb.client.FindIterable find(org.bson.conversions.Bson)>($r9)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r10 = interfaceinvoke $r8.<com.mongodb.client.MongoCollection: com.mongodb.client.FindIterable find(org.bson.conversions.Bson)>($r9) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r2 = interfaceinvoke $r10.<com.mongodb.client.FindIterable: com.mongodb.client.MongoCursor iterator()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r2 = interfaceinvoke $r10.<com.mongodb.client.FindIterable: com.mongodb.client.MongoCursor iterator()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $z0 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $z0 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : if $z0 != 0
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : return
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r11 = new java.util.LinkedList
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r11 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : specialinvoke $r11.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : specialinvoke $r11.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r3 = $r11
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r3 = $r11 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r12 = new java.util.LinkedList
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r12 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : specialinvoke $r12.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : specialinvoke $r12.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r4 = $r12
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r4 = $r12 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $z1 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $z1 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : if $z1 == 0
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r13 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: java.lang.Object next()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r15 = r0.<org.apache.zeppelin.notebook.repo.MongoNotebookRepo: com.mongodb.client.MongoCollection coll>
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r15 = r0.<org.apache.zeppelin.notebook.repo.MongoNotebookRepo: com.mongodb.client.MongoCollection coll> >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke $r15.<com.mongodb.client.MongoCollection: void insertMany(java.util.List)>(r4)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke $r15.<com.mongodb.client.MongoCollection: void insertMany(java.util.List)>(r4) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r16 = r0.<org.apache.zeppelin.notebook.repo.MongoNotebookRepo: com.mongodb.client.MongoCollection coll>
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r16 = r0.<org.apache.zeppelin.notebook.repo.MongoNotebookRepo: com.mongodb.client.MongoCollection coll> >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r17 = staticinvoke <com.mongodb.client.model.Filters: org.bson.conversions.Bson in(java.lang.String,java.lang.Iterable)>("_id", r3)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r17 = staticinvoke <com.mongodb.client.model.Filters: org.bson.conversions.Bson in(java.lang.String,java.lang.Iterable)>("_id", r3) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke $r16.<com.mongodb.client.MongoCollection: com.mongodb.client.result.DeleteResult deleteMany(org.bson.conversions.Bson)>($r17)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke $r16.<com.mongodb.client.MongoCollection: com.mongodb.client.result.DeleteResult deleteMany(org.bson.conversions.Bson)>($r17) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke r2.<com.mongodb.client.MongoCursor: void close()>()
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke r2.<com.mongodb.client.MongoCursor: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : return
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $r13 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r5 = (org.bson.Document) $r13
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r5 = (org.bson.Document) $r13 >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r6 = virtualinvoke r5.<org.bson.Document: org.bson.types.ObjectId getObjectId(java.lang.Object)>("_id")
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r6 = virtualinvoke r5.<org.bson.Document: org.bson.types.ObjectId getObjectId(java.lang.Object)>("_id") >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r7 = virtualinvoke r5.<org.bson.Document: java.lang.String getString(java.lang.Object)>("id")
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : r7 = virtualinvoke r5.<org.bson.Document: java.lang.String getString(java.lang.Object)>("id") >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : virtualinvoke r5.<org.bson.Document: java.lang.Object put(java.lang.String,java.lang.Object)>("_id", r7)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : virtualinvoke r5.<org.bson.Document: java.lang.Object put(java.lang.String,java.lang.Object)>("_id", r7) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5)
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : goto [?= $z1 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>()]
org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : goto [?= $z1 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.repo.MongoNotebookRepo.syncId : $z1 = interfaceinvoke r2.<com.mongodb.client.MongoCursor: boolean hasNext()>()
