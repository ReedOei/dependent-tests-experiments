org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : r1 = $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to close proxy client ", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : interfaceinvoke $r4.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to close proxy client ", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : return
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient: org.apache.http.impl.nio.client.CloseableHttpAsyncClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : virtualinvoke $r2.<org.apache.http.impl.nio.client.CloseableHttpAsyncClient: void close()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient: org.apache.http.impl.nio.client.CloseableHttpAsyncClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : $r3 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : virtualinvoke $r2.<org.apache.http.impl.nio.client.CloseableHttpAsyncClient: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : virtualinvoke $r2.<org.apache.http.impl.nio.client.CloseableHttpAsyncClient: void close()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : $r3 := @caughtexception
org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.rest.HttpProxyClient.stop : return
