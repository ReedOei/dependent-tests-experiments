org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r13 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note getNote()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r4 = virtualinvoke $r13.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r4 = virtualinvoke $r13.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r5 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r5 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r14 = new java.util.HashSet
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r14 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r15 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r15 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : specialinvoke $r14.<java.util.HashSet: void <init>(java.util.Collection)>($r15)
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : specialinvoke $r14.<java.util.HashSet: void <init>(java.util.Collection)>($r15) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r6 = $r14
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r6 = $r14 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if $z0 == 0
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : return r1
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r16 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r8 = (java.lang.String) $r16
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r8 = (java.lang.String) $r16 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r9 = virtualinvoke r3.<org.apache.zeppelin.display.AngularObjectRegistry: org.apache.zeppelin.display.AngularObject get(java.lang.String,java.lang.String,java.lang.String)>(r8, r4, r5)
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r9 = virtualinvoke r3.<org.apache.zeppelin.display.AngularObjectRegistry: org.apache.zeppelin.display.AngularObject get(java.lang.String,java.lang.String,java.lang.String)>(r8, r4, r5) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r10 = virtualinvoke r3.<org.apache.zeppelin.display.AngularObjectRegistry: org.apache.zeppelin.display.AngularObject get(java.lang.String,java.lang.String,java.lang.String)>(r8, r4, null)
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r10 = virtualinvoke r3.<org.apache.zeppelin.display.AngularObjectRegistry: org.apache.zeppelin.display.AngularObject get(java.lang.String,java.lang.String,java.lang.String)>(r8, r4, null) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if r9 == null
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if r9 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r17 = r9
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if r9 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r17 = r10
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r17 = r10 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r11 = $r17
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r11 = $r17 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if r11 == null
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if r11 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r8)
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : if r11 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r8) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r19 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[$][{]\\s*")
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[$][{]\\s*") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\s*(?:=[^}]+)?[}]")
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\s*(?:=[^}]+)?[}]") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r12 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r12 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r23 = virtualinvoke r11.<org.apache.zeppelin.display.AngularObject: java.lang.Object get()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r23 = virtualinvoke r11.<org.apache.zeppelin.display.AngularObject: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r24 = virtualinvoke $r23.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r1 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r12, $r24)
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r1 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r12, $r24) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : $r17 = r9 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : goto [?= r11 = $r17]
org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : goto [?= r11 = $r17] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.extractVariablesFromAngularRegistry : r11 = $r17
