org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r5 = new org.apache.commons.lang.NullArgumentException
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : if r2 != null >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r6 = new org.apache.zeppelin.interpreter.InterpreterGroup
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r6 = new org.apache.zeppelin.interpreter.InterpreterGroup >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterGroup: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r6.<org.apache.zeppelin.interpreter.InterpreterGroup: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : r3 = $r6
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : r3 = $r6 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $z0 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isRemote()>()
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $z0 = virtualinvoke r2.<org.apache.zeppelin.interpreter.InterpreterOption: boolean isRemote()>() >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : if $z0 == 0
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r7 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r9 = new org.apache.zeppelin.display.AngularObjectRegistry
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r9 = new org.apache.zeppelin.display.AngularObjectRegistry >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterFactory: org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener>
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r10 = r0.<org.apache.zeppelin.interpreter.InterpreterFactory: org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r9.<org.apache.zeppelin.display.AngularObjectRegistry: void <init>(java.lang.String,org.apache.zeppelin.display.AngularObjectRegistryListener)>(r1, $r10)
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r9.<org.apache.zeppelin.display.AngularObjectRegistry: void <init>(java.lang.String,org.apache.zeppelin.display.AngularObjectRegistryListener)>(r1, $r10) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : r4 = $r9
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : r4 = $r9 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>(r4)
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>(r4) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : return r3
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r7 = new org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r8 = r0.<org.apache.zeppelin.interpreter.InterpreterFactory: org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener>
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r8 = r0.<org.apache.zeppelin.interpreter.InterpreterFactory: org.apache.zeppelin.display.AngularObjectRegistryListener angularObjectRegistryListener> >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r7.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: void <init>(java.lang.String,org.apache.zeppelin.display.AngularObjectRegistryListener,org.apache.zeppelin.interpreter.InterpreterGroup)>(r1, $r8, r3)
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r7.<org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry: void <init>(java.lang.String,org.apache.zeppelin.display.AngularObjectRegistryListener,org.apache.zeppelin.interpreter.InterpreterGroup)>(r1, $r8, r3) >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : r4 = $r7
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : r4 = $r7 >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : goto [?= virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>(r4)]
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : goto [?= virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>(r4)] >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterGroup: void setAngularObjectRegistry(org.apache.zeppelin.display.AngularObjectRegistry)>(r4)
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : $r5 = new org.apache.commons.lang.NullArgumentException >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r5.<org.apache.commons.lang.NullArgumentException: void <init>(java.lang.String)>("option")
org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : specialinvoke $r5.<org.apache.commons.lang.NullArgumentException: void <init>(java.lang.String)>("option") >>>>>>>> org.apache.zeppelin.interpreter.InterpreterFactory.createInterpreterGroup : throw $r5
