org.apache.zeppelin.helium.Helium.loadConf : $r5 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $r5 == null
org.apache.zeppelin.helium.Helium.loadConf : if $r5 == null >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r6 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths>
org.apache.zeppelin.helium.Helium.loadConf : $r6 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z0 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.helium.Helium.loadConf : $z0 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z0 != 0
org.apache.zeppelin.helium.Helium.loadConf : if $z0 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r7 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths>
org.apache.zeppelin.helium.Helium.loadConf : $r7 = r0.<org.apache.zeppelin.helium.Helium: java.lang.String registryPaths> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r2 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.zeppelin.helium.Helium.loadConf : r2 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r3 = r2
org.apache.zeppelin.helium.Helium.loadConf : r3 = r2 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : i0 = lengthof r3
org.apache.zeppelin.helium.Helium.loadConf : i0 = lengthof r3 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : i1 = 0
org.apache.zeppelin.helium.Helium.loadConf : i1 = 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if i1 >= i0
org.apache.zeppelin.helium.Helium.loadConf : if i1 >= i0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r4 = r3[i1]
org.apache.zeppelin.helium.Helium.loadConf : r4 = r3[i1] >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("http://")
org.apache.zeppelin.helium.Helium.loadConf : $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("http://") >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z1 != 0
org.apache.zeppelin.helium.Helium.loadConf : if $z1 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("https://")
org.apache.zeppelin.helium.Helium.loadConf : $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("https://") >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z2 == 0
org.apache.zeppelin.helium.Helium.loadConf : if $z2 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r12 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger>
org.apache.zeppelin.helium.Helium.loadConf : $r12 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Add helium local registry {}", r4)
org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Add helium local registry {}", r4) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r13 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.loadConf : $r13 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r14 = new org.apache.zeppelin.helium.HeliumLocalRegistry
org.apache.zeppelin.helium.Helium.loadConf : $r14 = new org.apache.zeppelin.helium.HeliumLocalRegistry >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r14.<org.apache.zeppelin.helium.HeliumLocalRegistry: void <init>(java.lang.String,java.lang.String)>(r4, r4)
org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r14.<org.apache.zeppelin.helium.HeliumLocalRegistry: void <init>(java.lang.String,java.lang.String)>(r4, r4) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14)
org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : i1 = i1 + 1
org.apache.zeppelin.helium.Helium.loadConf : i1 = i1 + 1 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : goto [?= (branch)]
org.apache.zeppelin.helium.Helium.loadConf : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r15 = new java.io.File
org.apache.zeppelin.helium.Helium.loadConf : $r15 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r16 = $r15
org.apache.zeppelin.helium.Helium.loadConf : r16 = $r15 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $z5 = virtualinvoke r16.<java.io.File: boolean isFile()>()
org.apache.zeppelin.helium.Helium.loadConf : $z5 = virtualinvoke r16.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : if $z5 != 0
org.apache.zeppelin.helium.Helium.loadConf : if $z5 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r17 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger>
org.apache.zeppelin.helium.Helium.loadConf : $r17 = r0.<org.apache.zeppelin.helium.Helium: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} does not exists", r1)
org.apache.zeppelin.helium.Helium.loadConf : interfaceinvoke $r17.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("{} does not exists", r1) >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : $r18 = new org.apache.zeppelin.helium.HeliumConf
org.apache.zeppelin.helium.Helium.loadConf : $r18 = new org.apache.zeppelin.helium.HeliumConf >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r18.<org.apache.zeppelin.helium.HeliumConf: void <init>()>()
org.apache.zeppelin.helium.Helium.loadConf : specialinvoke $r18.<org.apache.zeppelin.helium.HeliumConf: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : r19 = $r18
org.apache.zeppelin.helium.Helium.loadConf : r19 = $r18 >>>>>>>> org.apache.zeppelin.helium.Helium.loadConf : return r19
org.apache.zeppelin.helium.Helium.loadConf : return r19 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : $r4 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.addRegistry : $r4 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : r2 = $r4
org.apache.zeppelin.helium.Helium.addRegistry : r2 = $r4 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : entermonitor $r4
org.apache.zeppelin.helium.Helium.addRegistry : entermonitor $r4 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : $r5 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.addRegistry : $r5 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.helium.Helium.addRegistry : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : exitmonitor r2
org.apache.zeppelin.helium.Helium.addRegistry : exitmonitor r2 >>>>>>>> org.apache.zeppelin.helium.Helium.addRegistry : goto [?= return]
org.apache.zeppelin.helium.Helium.addRegistry : goto [?= return] >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.add : $r2 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos>
org.apache.zeppelin.helium.HeliumTestRegistry.add : $r2 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos> >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.helium.HeliumTestRegistry.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r1 = virtualinvoke r0.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageInfo(boolean,java.lang.String)>(1, null)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r1 = virtualinvoke r0.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageInfo(boolean,java.lang.String)>(1, null) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r11 = r0.<org.apache.zeppelin.helium.Helium: org.apache.zeppelin.helium.HeliumConf heliumConf>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r11 = r0.<org.apache.zeppelin.helium.Helium: org.apache.zeppelin.helium.HeliumConf heliumConf> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r2 = virtualinvoke $r11.<org.apache.zeppelin.helium.HeliumConf: java.util.Map getEnabledPackages()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r2 = virtualinvoke $r11.<org.apache.zeppelin.helium.HeliumConf: java.util.Map getEnabledPackages()>() >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r1 = new java.util.HashMap
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r1 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r2 = r0.<org.apache.zeppelin.helium.HeliumConf: java.util.Map enabled>
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : $r2 = r0.<org.apache.zeppelin.helium.HeliumConf: java.util.Map enabled> >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2)
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : specialinvoke $r1.<java.util.HashMap: void <init>(java.util.Map)>($r2) >>>>>>>> org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : return $r1
org.apache.zeppelin.helium.HeliumConf.getEnabledPackages : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r12 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r12 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r3 = $r12
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r3 = $r12 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : entermonitor $r12
org.apache.zeppelin.helium.Helium.getAllPackageInfo : entermonitor $r12 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if z0 != 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if z0 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r14 = new java.util.HashMap
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r14 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r14.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r14.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> = $r14
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> = $r14 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r15 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r15 = r0.<org.apache.zeppelin.helium.Helium: java.util.List registry> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r4 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z3 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z3 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r16 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r5 = (org.apache.zeppelin.helium.HeliumRegistry) $r16
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r5 = (org.apache.zeppelin.helium.HeliumRegistry) $r16 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r17 = virtualinvoke r5.<org.apache.zeppelin.helium.HeliumRegistry: java.util.List getAll()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r17 = virtualinvoke r5.<org.apache.zeppelin.helium.HeliumRegistry: java.util.List getAll()>() >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r1 = new java.util.LinkedList
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r1 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r1.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r1.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r2 = $r1
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r2 = $r1 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r8 = new java.io.File
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r8 = new java.io.File >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r9 = virtualinvoke r0.<org.apache.zeppelin.helium.HeliumLocalRegistry: java.lang.String uri()>()
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : $r9 = virtualinvoke r0.<org.apache.zeppelin.helium.HeliumLocalRegistry: java.lang.String uri()>() >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.uri : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String uri>
org.apache.zeppelin.helium.HeliumRegistry.uri : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String uri> >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.uri : return $r1
org.apache.zeppelin.helium.HeliumRegistry.uri : return $r1 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9)
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r3 = $r8
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r3 = $r8 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r4 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles()>()
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r4 = virtualinvoke r3.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if r4 != null
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if r4 != null >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r5 = r4
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : r5 = r4 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i0 = lengthof r5
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i0 = lengthof r5 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i1 = 0
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : i1 = 0 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if i1 >= i0
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : if i1 >= i0 >>>>>>>> org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : return r2
org.apache.zeppelin.helium.HeliumLocalRegistry.getAll : return r2 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r6 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r6 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z4 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z4 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= (branch)]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.getAll : $r1 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos>
org.apache.zeppelin.helium.HeliumTestRegistry.getAll : $r1 = r0.<org.apache.zeppelin.helium.HeliumTestRegistry: java.util.List infos> >>>>>>>> org.apache.zeppelin.helium.HeliumTestRegistry.getAll : return $r1
org.apache.zeppelin.helium.HeliumTestRegistry.getAll : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r7 = (org.apache.zeppelin.helium.HeliumPackage) $r18
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r7 = (org.apache.zeppelin.helium.HeliumPackage) $r18 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r8 = virtualinvoke r7.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r8 = virtualinvoke r7.<org.apache.zeppelin.helium.HeliumPackage: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z5 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z5 != 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z5 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r9 = (java.lang.String) $r19
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r9 = (java.lang.String) $r19 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if r9 == null
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if r9 == null >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z8 = 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z8 = 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : z1 = $z8
org.apache.zeppelin.helium.Helium.getAllPackageInfo : z1 = $z8 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r21 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r21 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z9 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r8)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z9 = interfaceinvoke $r21.<java.util.Map: boolean containsKey(java.lang.Object)>(r8) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z9 != 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z9 != 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r22 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r22 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r23 = new java.util.LinkedList
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r23 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r23.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r23.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r23)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r23) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r25 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r25 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r27 = (java.util.List) $r26
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r27 = (java.util.List) $r26 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r28 = new org.apache.zeppelin.helium.HeliumPackageSearchResult
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r28 = new org.apache.zeppelin.helium.HeliumPackageSearchResult >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r29 = virtualinvoke r5.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r29 = virtualinvoke r5.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.name : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name>
org.apache.zeppelin.helium.HeliumRegistry.name : $r1 = r0.<org.apache.zeppelin.helium.HeliumRegistry: java.lang.String name> >>>>>>>> org.apache.zeppelin.helium.HeliumRegistry.name : return $r1
org.apache.zeppelin.helium.HeliumRegistry.name : return $r1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r28.<org.apache.zeppelin.helium.HeliumPackageSearchResult: void <init>(java.lang.String,org.apache.zeppelin.helium.HeliumPackage,boolean)>($r29, r7, z1)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r28.<org.apache.zeppelin.helium.HeliumPackageSearchResult: void <init>(java.lang.String,org.apache.zeppelin.helium.HeliumPackage,boolean)>($r29, r7, z1) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z4 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $r56 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $r56 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r56 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r56 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r57 = interfaceinvoke $r56.<java.util.Map: java.util.Set keySet()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r57 = interfaceinvoke $r56.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r58 = interfaceinvoke $r57.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r58 = interfaceinvoke $r57.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z18 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $z18 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z18 == 0
org.apache.zeppelin.helium.Helium.getAllPackageInfo : if $z18 == 0 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r60 = (java.lang.String) $r59
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r60 = (java.lang.String) $r59 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r61 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r61 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r62 = interfaceinvoke $r61.<java.util.Map: java.lang.Object get(java.lang.Object)>(r60)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r62 = interfaceinvoke $r61.<java.util.Map: java.lang.Object get(java.lang.Object)>(r60) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : r63 = (java.util.List) $r62
org.apache.zeppelin.helium.Helium.getAllPackageInfo : r63 = (java.util.List) $r62 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r64 = new org.apache.zeppelin.helium.Helium$1
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r64 = new org.apache.zeppelin.helium.Helium$1 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r64.<org.apache.zeppelin.helium.Helium$1: void <init>(org.apache.zeppelin.helium.Helium)>(r0)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : specialinvoke $r64.<org.apache.zeppelin.helium.Helium$1: void <init>(org.apache.zeppelin.helium.Helium)>(r0) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r63, $r64)
org.apache.zeppelin.helium.Helium.getAllPackageInfo : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r63, $r64) >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z18 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.helium.Helium.getAllPackageInfo : goto [?= $z18 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r65 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages>
org.apache.zeppelin.helium.Helium.getAllPackageInfo : $r65 = r0.<org.apache.zeppelin.helium.Helium: java.util.Map allPackages> >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : exitmonitor r3
org.apache.zeppelin.helium.Helium.getAllPackageInfo : exitmonitor r3 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r65
org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r65 >>>>>>>> org.apache.zeppelin.helium.Helium.getAllPackageInfo : return $r1
