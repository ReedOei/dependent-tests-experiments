org.apache.zeppelin.notebook.Paragraph.generateId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paragraph_")
org.apache.zeppelin.notebook.Paragraph.generateId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paragraph_") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)
org.apache.zeppelin.notebook.Paragraph.generateId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
org.apache.zeppelin.notebook.Paragraph.generateId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r4 = new java.util.Random
org.apache.zeppelin.notebook.Paragraph.generateId : $r4 = new java.util.Random >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r4.<java.util.Random: void <init>(long)>($l0)
org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r4.<java.util.Random: void <init>(long)>($l0) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $i2 = virtualinvoke $r4.<java.util.Random: int nextInt()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $i2 = virtualinvoke $r4.<java.util.Random: int nextInt()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
org.apache.zeppelin.notebook.Paragraph.generateId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : return $r6
org.apache.zeppelin.notebook.Paragraph.generateId : return $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : i0 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : i0 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : if i0 >= 300
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : if i0 >= 300 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient this$0>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient this$0> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$100(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>($r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$100(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>($r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$100 : $r1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openWatcherSession()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$100 : $r1 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session openWatcherSession()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r1 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r1 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : specialinvoke $r1.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : specialinvoke $r1.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r2 = $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r2 = $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r3 = staticinvoke <org.apache.zeppelin.util.WatcherSecurityKey: java.lang.String getKey()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r3 = staticinvoke <org.apache.zeppelin.util.WatcherSecurityKey: java.lang.String getKey()>() >>>>>>>> org.apache.zeppelin.util.WatcherSecurityKey.getKey : $r0 = <org.apache.zeppelin.util.WatcherSecurityKey: java.lang.String KEY>
org.apache.zeppelin.util.WatcherSecurityKey.getKey : $r0 = <org.apache.zeppelin.util.WatcherSecurityKey: java.lang.String KEY> >>>>>>>> org.apache.zeppelin.util.WatcherSecurityKey.getKey : return $r0
org.apache.zeppelin.util.WatcherSecurityKey.getKey : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : virtualinvoke r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("X-Watcher-Key", $r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : virtualinvoke r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("X-Watcher-Key", $r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : virtualinvoke r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : virtualinvoke r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setHeader(java.lang.String,java.lang.String)>("Origin", "*") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket createInstace()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket createInstace()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : $r0 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : $r0 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : specialinvoke $r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : specialinvoke $r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.createInstace : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : n0 = null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : n0 = null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r5 = null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r5 = null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.net.URI zeppelinWebsocketUrl>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r8 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: java.net.URI zeppelinWebsocketUrl> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r9 = virtualinvoke $r7.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>(r4, $r8, r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r9 = virtualinvoke $r7.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>(r4, $r8, r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r10 = interfaceinvoke r9.<java.util.concurrent.Future: java.lang.Object get()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : $r10 = interfaceinvoke r9.<java.util.concurrent.Future: java.lang.Object get()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("WatcherWebsocket connection opened")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>("WatcherWebsocket connection opened") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.eclipse.jetty.websocket.api.Session connection> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: org.eclipse.jetty.websocket.api.Session connection> = r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r5 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r3 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP WATCHER>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r3 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP WATCHER> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4 = $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4 = $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = "watcher"
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal> = "watcher" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r6 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r6 = <org.apache.zeppelin.ticket.TicketContainer: org.apache.zeppelin.ticket.TicketContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> = r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> = r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Socket Connected: ")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Socket Connected: ") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketConnect : interfaceinvoke $r2.<org.slf4j.Logger: void info(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r7 = virtualinvoke $r6.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>("watcher")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r7 = virtualinvoke $r6.<org.apache.zeppelin.ticket.TicketContainer: java.lang.String getTicket(java.lang.String)>("watcher") >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r4 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions>
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r4 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions> >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r2 = (org.apache.zeppelin.ticket.TicketContainer$Entry) $r5
org.apache.zeppelin.ticket.TicketContainer.getTicket : r2 = (org.apache.zeppelin.ticket.TicketContainer$Entry) $r5 >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : if r2 != null
org.apache.zeppelin.ticket.TicketContainer.getTicket : if r2 != null >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous")
org.apache.zeppelin.ticket.TicketContainer.getTicket : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("anonymous") >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : if $z0 == 0
org.apache.zeppelin.ticket.TicketContainer.getTicket : if $z0 == 0 >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>()
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r6 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>() >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r3 = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>()
org.apache.zeppelin.ticket.TicketContainer.getTicket : r3 = virtualinvoke $r6.<java.util.UUID: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : goto [?= $r7 = new org.apache.zeppelin.ticket.TicketContainer$Entry]
org.apache.zeppelin.ticket.TicketContainer.getTicket : goto [?= $r7 = new org.apache.zeppelin.ticket.TicketContainer$Entry] >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r7 = new org.apache.zeppelin.ticket.TicketContainer$Entry
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r7 = new org.apache.zeppelin.ticket.TicketContainer$Entry >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : specialinvoke $r7.<org.apache.zeppelin.ticket.TicketContainer$Entry: void <init>(java.lang.String)>(r3)
org.apache.zeppelin.ticket.TicketContainer.getTicket : specialinvoke $r7.<org.apache.zeppelin.ticket.TicketContainer$Entry: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r8 = $r7
org.apache.zeppelin.ticket.TicketContainer.getTicket : r8 = $r7 >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : $r9 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions>
org.apache.zeppelin.ticket.TicketContainer.getTicket : $r9 = r0.<org.apache.zeppelin.ticket.TicketContainer: java.util.Map sessions> >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8)
org.apache.zeppelin.ticket.TicketContainer.getTicket : interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r8) >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : return r3
org.apache.zeppelin.ticket.TicketContainer.getTicket : return r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> = $r7
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : r4.<org.apache.zeppelin.notebook.socket.Message: java.lang.String ticket> = $r7 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r8 = interfaceinvoke r1.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r8 = interfaceinvoke r1.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: com.google.gson.Gson GSON>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r9 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: com.google.gson.Gson GSON> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : $r10 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : interfaceinvoke $r8.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>($r10)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketConnect : interfaceinvoke $r8.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketText(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : specialinvoke r0.<org.eclipse.jetty.websocket.api.WebSocketAdapter: void onWebSocketText(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.eclipse.jetty.websocket.api.Session session> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r3 = interfaceinvoke $r2.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r3 = interfaceinvoke $r2.<org.eclipse.jetty.websocket.api.Session: org.eclipse.jetty.websocket.api.RemoteEndpoint getRemote()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r3.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r3.<org.eclipse.jetty.websocket.api.RemoteEndpoint: java.util.concurrent.Future sendStringByFuture(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : $r5 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received TEXT message: {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEventSocket.onWebSocketText : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Received TEXT message: {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: com.google.gson.Gson GSON>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket: com.google.gson.Gson GSON> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r5 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/notebook/socket/WatcherMessage")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r5 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/notebook/socket/WatcherMessage") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r5 = (org.eclipse.jetty.websocket.api.Session) $r10
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : r5 = (org.eclipse.jetty.websocket.api.Session) $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : goto [?= return r5]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : goto [?= return r5] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : return r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.openWatcherSession : return r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$100 : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$100 : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$002(org.eclipse.jetty.websocket.api.Session)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$002(org.eclipse.jetty.websocket.api.Session)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$002 : <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> = r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$002 : <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> = r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$002 : return r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$002 : return r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$000()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session access$000()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$000 : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$000 : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.api.Session watcherSession> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$000 : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.access$000 : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : if $r5 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1.run : if $r5 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : r3 = (org.apache.zeppelin.notebook.socket.WatcherMessage) $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : r3 = (org.apache.zeppelin.notebook.socket.WatcherMessage) $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r6 = r3.<org.apache.zeppelin.notebook.socket.WatcherMessage: java.lang.String noteId>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $r6 = r3.<org.apache.zeppelin.notebook.socket.WatcherMessage: java.lang.String noteId> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.WatcherWebsocket.onWebSocketText : if $z0 == 0 >>>>>>>> org.apache.zeppelin.ticket.TicketContainer.getTicket : r3 = r2.<org.apache.zeppelin.ticket.TicketContainer$Entry: java.lang.String ticket>
org.apache.zeppelin.ticket.TicketContainer.getTicket : r3 = r2.<org.apache.zeppelin.ticket.TicketContainer$Entry: java.lang.String ticket> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> = r1
org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : $r2 = virtualinvoke r1.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : $r2 = virtualinvoke r1.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> = $r2
org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> = $r2 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getRequiredReplName()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getRequiredReplName()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter getRepl(java.lang.String)>(r1)
org.apache.zeppelin.notebook.Paragraph.jobRun : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.Interpreter getRepl(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r12 = <org.apache.zeppelin.notebook.Paragraph: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r12 = <org.apache.zeppelin.notebook.Paragraph: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r13 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Paragraph.jobRun : $r13 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run paragraph {} using {} ")
org.apache.zeppelin.notebook.Paragraph.jobRun : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run paragraph {} using {} ") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)
org.apache.zeppelin.notebook.Paragraph.jobRun : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r17 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r17 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>($r16, $r17, r1)
org.apache.zeppelin.notebook.Paragraph.jobRun : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>($r16, $r17, r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if r2 != null
org.apache.zeppelin.notebook.Paragraph.jobRun : if r2 != null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r29 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r29 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r30 = virtualinvoke $r29.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r30 = virtualinvoke $r29.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSetting getInterpreterSettingById(java.lang.String)>($r30)
org.apache.zeppelin.notebook.Paragraph.jobRun : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSetting getInterpreterSettingById(java.lang.String)>($r30) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r2 = null
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r2 = null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r5 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r5 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r6 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r6 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r7 = virtualinvoke $r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r7 = virtualinvoke $r6.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r8 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r7)
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r8 = virtualinvoke $r5.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : if $z0 == 0
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r4 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r9
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r4 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r9 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r10 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $r10 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r10)
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : if $z1 == 0
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r2 = r4
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : r2 = r4 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : goto [?= return r2]
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : goto [?= return r2] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : return r2
org.apache.zeppelin.notebook.Paragraph.getInterpreterSettingById : return r2 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r31 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSetting$Status getStatus()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r31 = virtualinvoke r3.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterSetting$Status getStatus()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r32 = <org.apache.zeppelin.interpreter.InterpreterSetting$Status: org.apache.zeppelin.interpreter.InterpreterSetting$Status DOWNLOADING_DEPENDENCIES>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r32 = <org.apache.zeppelin.interpreter.InterpreterSetting$Status: org.apache.zeppelin.interpreter.InterpreterSetting$Status DOWNLOADING_DEPENDENCIES> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $z0 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterSetting$Status: boolean equals(java.lang.Object)>($r32)
org.apache.zeppelin.notebook.Paragraph.jobRun : $z0 = virtualinvoke $r31.<org.apache.zeppelin.interpreter.InterpreterSetting$Status: boolean equals(java.lang.Object)>($r32) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $z0 == 0
org.apache.zeppelin.notebook.Paragraph.jobRun : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean noteHasUser()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $z1 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean noteHasUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasUser : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user>
org.apache.zeppelin.notebook.Paragraph.noteHasUser : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasUser : if $r1 == null
org.apache.zeppelin.notebook.Paragraph.noteHasUser : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasUser : $z0 = 1
org.apache.zeppelin.notebook.Paragraph.noteHasUser : $z0 = 1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasUser : goto [?= return $z0]
org.apache.zeppelin.notebook.Paragraph.noteHasUser : goto [?= return $z0] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasUser : return $z0
org.apache.zeppelin.notebook.Paragraph.noteHasUser : return $z0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $z1 == 0
org.apache.zeppelin.notebook.Paragraph.jobRun : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $z2 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean noteHasInterpreters()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $z2 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean noteHasInterpreters()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r2 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r2 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r3 = virtualinvoke $r2.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r3 = virtualinvoke $r2.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r4 = virtualinvoke $r1.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r3)
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $r4 = virtualinvoke $r1.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r3) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : if $z0 != 0
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $z1 = 1
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : $z1 = 1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : goto [?= return $z1]
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : goto [?= return $z1] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : return $z1
org.apache.zeppelin.notebook.Paragraph.noteHasInterpreters : return $z1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $z2 == 0
org.apache.zeppelin.notebook.Paragraph.jobRun : if $z2 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if r3 == null
org.apache.zeppelin.notebook.Paragraph.jobRun : if r3 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $z3 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean interpreterHasUser(org.apache.zeppelin.interpreter.InterpreterSetting)>(r3)
org.apache.zeppelin.notebook.Paragraph.jobRun : $z3 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: boolean interpreterHasUser(org.apache.zeppelin.interpreter.InterpreterSetting)>(r3) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : $r2 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption getOption()>()
org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : $r2 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterOption getOption()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : $z0 = virtualinvoke $r2.<org.apache.zeppelin.interpreter.InterpreterOption: boolean permissionIsSet()>()
org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : $z0 = virtualinvoke $r2.<org.apache.zeppelin.interpreter.InterpreterOption: boolean permissionIsSet()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : if $z0 == 0
org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : $z1 = 0
org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : return $z1
org.apache.zeppelin.notebook.Paragraph.interpreterHasUser : return $z1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $z3 == 0
org.apache.zeppelin.notebook.Paragraph.jobRun : if $z3 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r47 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r47 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r48 = interfaceinvoke $r47.<java.util.Map: java.util.Collection values()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r48 = interfaceinvoke $r47.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r4 = interfaceinvoke $r48.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : r4 = interfaceinvoke $r48.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $z5 == 0
org.apache.zeppelin.notebook.Paragraph.jobRun : if $z5 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r51 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getScriptBody()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : r51 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getScriptBody()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r52 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r52 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r53 = <org.apache.zeppelin.interpreter.Interpreter$FormType: org.apache.zeppelin.interpreter.Interpreter$FormType NATIVE>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r53 = <org.apache.zeppelin.interpreter.Interpreter$FormType: org.apache.zeppelin.interpreter.Interpreter$FormType NATIVE> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $r52 != $r53
org.apache.zeppelin.notebook.Paragraph.jobRun : if $r52 != $r53 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r55 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r55 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.Interpreter$FormType getFormType()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r56 = <org.apache.zeppelin.interpreter.Interpreter$FormType: org.apache.zeppelin.interpreter.Interpreter$FormType SIMPLE>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r56 = <org.apache.zeppelin.interpreter.Interpreter$FormType: org.apache.zeppelin.interpreter.Interpreter$FormType SIMPLE> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $r55 != $r56
org.apache.zeppelin.notebook.Paragraph.jobRun : if $r55 != $r56 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r63 = <org.apache.zeppelin.notebook.Paragraph: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r63 = <org.apache.zeppelin.notebook.Paragraph: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r64 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Paragraph.jobRun : $r64 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : specialinvoke $r64.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RUN : ")
org.apache.zeppelin.notebook.Paragraph.jobRun : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RUN : ") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)
org.apache.zeppelin.notebook.Paragraph.jobRun : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : interfaceinvoke $r63.<org.slf4j.Logger: void debug(java.lang.String)>($r67)
org.apache.zeppelin.notebook.Paragraph.jobRun : interfaceinvoke $r63.<org.slf4j.Logger: void debug(java.lang.String)>($r67) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r68 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterContext getInterpreterContext()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : r68 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterContext getInterpreterContext()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r1 = r0
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r1 = r0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r2 = new org.apache.zeppelin.interpreter.InterpreterOutput
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r2 = new org.apache.zeppelin.interpreter.InterpreterOutput >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r3 = new org.apache.zeppelin.notebook.Paragraph$1
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r3 = new org.apache.zeppelin.notebook.Paragraph$1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r3.<org.apache.zeppelin.notebook.Paragraph$1: void <init>(org.apache.zeppelin.notebook.Paragraph,org.apache.zeppelin.notebook.Paragraph)>(r0, r1)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r3.<org.apache.zeppelin.notebook.Paragraph$1: void <init>(org.apache.zeppelin.notebook.Paragraph,org.apache.zeppelin.notebook.Paragraph)>(r0, r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r2.<org.apache.zeppelin.interpreter.InterpreterOutput: void <init>(org.apache.zeppelin.interpreter.InterpreterOutputListener)>($r3)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r2.<org.apache.zeppelin.interpreter.InterpreterOutput: void <init>(org.apache.zeppelin.interpreter.InterpreterOutputListener)>($r3) >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : r2 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List toInterpreterResultMessage()>()
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : r2 = virtualinvoke r1.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List toInterpreterResultMessage()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph$1: org.apache.zeppelin.notebook.Paragraph this$0>
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph$1: org.apache.zeppelin.notebook.Paragraph this$0> >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r4 = virtualinvoke $r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.JobListener getListener()>()
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r4 = virtualinvoke $r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.JobListener getListener()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r5 = (org.apache.zeppelin.notebook.ParagraphJobListener) $r4
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r5 = (org.apache.zeppelin.notebook.ParagraphJobListener) $r4 >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r6 = r0.<org.apache.zeppelin.notebook.Paragraph$1: org.apache.zeppelin.notebook.Paragraph val$self>
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : $r6 = r0.<org.apache.zeppelin.notebook.Paragraph$1: org.apache.zeppelin.notebook.Paragraph val$self> >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : interfaceinvoke $r5.<org.apache.zeppelin.notebook.ParagraphJobListener: void onOutputUpdateAll(org.apache.zeppelin.notebook.Paragraph,java.util.List)>($r6, r2)
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : interfaceinvoke $r5.<org.apache.zeppelin.notebook.ParagraphJobListener: void onOutputUpdateAll(org.apache.zeppelin.notebook.Paragraph,java.util.List)>($r6, r2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph$1: void updateParagraphResult(java.util.List)>(r2)
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph$1: void updateParagraphResult(java.util.List)>(r2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : $r2 = new org.apache.zeppelin.interpreter.InterpreterResult
org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : $r2 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : $r3 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS>
org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : $r3 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code SUCCESS> >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : specialinvoke $r2.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.util.List)>($r3, r1)
org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : specialinvoke $r2.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.util.List)>($r3, r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : r4 = $r2
org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : r4 = $r2 >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : $r5 = r0.<org.apache.zeppelin.notebook.Paragraph$1: org.apache.zeppelin.notebook.Paragraph this$0>
org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : $r5 = r0.<org.apache.zeppelin.notebook.Paragraph$1: org.apache.zeppelin.notebook.Paragraph this$0> >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : virtualinvoke $r5.<org.apache.zeppelin.notebook.Paragraph: void setReturn(org.apache.zeppelin.interpreter.InterpreterResult,java.lang.Throwable)>(r4, null)
org.apache.zeppelin.notebook.Paragraph$1.updateParagraphResult : virtualinvoke $r5.<org.apache.zeppelin.notebook.Paragraph: void setReturn(org.apache.zeppelin.interpreter.InterpreterResult,java.lang.Throwable)>(r4, null) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setReturn : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.Paragraph.setReturn : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setResult : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object results> = r1
org.apache.zeppelin.notebook.Paragraph.setResult : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object results> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setReturn : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setException(java.lang.Throwable)>(r2)
org.apache.zeppelin.notebook.Paragraph.setReturn : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void setException(java.lang.Throwable)>(r2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : goto [?= return]
org.apache.zeppelin.notebook.Paragraph$1.onUpdateAll : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r4 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterContext getInterpreterContext(org.apache.zeppelin.interpreter.InterpreterOutput)>($r2)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r4 = specialinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterContext getInterpreterContext(org.apache.zeppelin.interpreter.InterpreterOutput)>($r2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r2 = null
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r2 = null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r3 = null
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r3 = null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r8 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r8 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r9 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r9 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r11 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r10)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r11 = virtualinvoke $r8.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $z0 = interfaceinvoke $r11.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : if $z0 != 0
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r12 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r12 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r13 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r13 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r14 = virtualinvoke $r13.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r14 = virtualinvoke $r13.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r15 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r14)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r15 = virtualinvoke $r12.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r4 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r16
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r4 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r16 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r17 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r17 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUser : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user>
org.apache.zeppelin.notebook.Paragraph.getUser : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUser : return $r1
org.apache.zeppelin.notebook.Paragraph.getUser : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r18 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r18 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r19 = virtualinvoke $r18.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r19 = virtualinvoke $r18.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r20 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>($r17, $r19)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r20 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>($r17, $r19) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r2 = virtualinvoke $r20.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r2 = virtualinvoke $r20.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r21 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r21 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r22 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r22 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r23 = virtualinvoke $r22.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r23 = virtualinvoke $r22.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r24 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>($r21, $r23)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r24 = virtualinvoke r4.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>($r21, $r23) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r3 = virtualinvoke $r24.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r3 = virtualinvoke $r24.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.resource.ResourcePool getResourcePool()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r25 = new java.util.LinkedList
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r25 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r25.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r25.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r26 = $r25
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r26 = $r25 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r27 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r27 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r28 = virtualinvoke $r27.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r28 = virtualinvoke $r27.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r5 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r5 = interfaceinvoke $r28.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : if $z1 == 0
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r35 = r0
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r35 = r0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r36 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r36 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r37 = virtualinvoke $r36.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.user.Credentials getCredentials()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r37 = virtualinvoke $r36.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.user.Credentials getCredentials()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r38 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r38 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : if $r38 == null
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : if $r38 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r39 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r39 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r40 = virtualinvoke $r39.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r40 = virtualinvoke $r39.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r7 = virtualinvoke r37.<org.apache.zeppelin.user.Credentials: org.apache.zeppelin.user.UserCredentials getUserCredentials(java.lang.String)>($r40)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r7 = virtualinvoke r37.<org.apache.zeppelin.user.Credentials: org.apache.zeppelin.user.UserCredentials getUserCredentials(java.lang.String)>($r40) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r41 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r41 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : virtualinvoke $r41.<org.apache.zeppelin.user.AuthenticationInfo: void setUserCredentials(org.apache.zeppelin.user.UserCredentials)>(r7)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : virtualinvoke $r41.<org.apache.zeppelin.user.AuthenticationInfo: void setUserCredentials(org.apache.zeppelin.user.UserCredentials)>(r7) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r42 = new org.apache.zeppelin.interpreter.InterpreterContext
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r42 = new org.apache.zeppelin.interpreter.InterpreterContext >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r43 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r43 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Note note> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r44 = virtualinvoke $r43.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r44 = virtualinvoke $r43.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r45 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r45 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r46 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getRequiredReplName()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r46 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getRequiredReplName()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r47 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getTitle()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r47 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getTitle()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getTitle : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String title>
org.apache.zeppelin.notebook.Paragraph.getTitle : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String title> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getTitle : return $r1
org.apache.zeppelin.notebook.Paragraph.getTitle : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r48 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r48 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getText : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text>
org.apache.zeppelin.notebook.Paragraph.getText : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getText : return $r1
org.apache.zeppelin.notebook.Paragraph.getText : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r49 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo getAuthenticationInfo()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getAuthenticationInfo : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo>
org.apache.zeppelin.notebook.Paragraph.getAuthenticationInfo : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getAuthenticationInfo : return $r1
org.apache.zeppelin.notebook.Paragraph.getAuthenticationInfo : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r50 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r50 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getConfig : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map config>
org.apache.zeppelin.notebook.Paragraph.getConfig : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map config> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getConfig : return $r1
org.apache.zeppelin.notebook.Paragraph.getConfig : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r51 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : $r51 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r42.<org.apache.zeppelin.interpreter.InterpreterContext: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.zeppelin.user.AuthenticationInfo,java.util.Map,org.apache.zeppelin.display.GUI,org.apache.zeppelin.display.AngularObjectRegistry,org.apache.zeppelin.resource.ResourcePool,java.util.List,org.apache.zeppelin.interpreter.InterpreterOutput)>($r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, r2, r3, r26, r1)
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : specialinvoke $r42.<org.apache.zeppelin.interpreter.InterpreterContext: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.zeppelin.user.AuthenticationInfo,java.util.Map,org.apache.zeppelin.display.GUI,org.apache.zeppelin.display.AngularObjectRegistry,org.apache.zeppelin.resource.ResourcePool,java.util.List,org.apache.zeppelin.interpreter.InterpreterOutput)>($r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, r2, r3, r26, r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r52 = $r42
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : r52 = $r42 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : return r52
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : return r52 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : return $r4
org.apache.zeppelin.notebook.Paragraph.getInterpreterContext : return $r4 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : staticinvoke <org.apache.zeppelin.interpreter.InterpreterContext: void set(org.apache.zeppelin.interpreter.InterpreterContext)>(r68)
org.apache.zeppelin.notebook.Paragraph.jobRun : staticinvoke <org.apache.zeppelin.interpreter.InterpreterContext: void set(org.apache.zeppelin.interpreter.InterpreterContext)>(r68) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r69 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterResult interpret(java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext)>(r51, r68)
org.apache.zeppelin.notebook.Paragraph.jobRun : r69 = virtualinvoke r2.<org.apache.zeppelin.interpreter.Interpreter: org.apache.zeppelin.interpreter.InterpreterResult interpret(java.lang.String,org.apache.zeppelin.interpreter.InterpreterContext)>(r51, r68) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r70 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code KEEP_PREVIOUS_RESULT>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r70 = <org.apache.zeppelin.interpreter.InterpreterResult$Code: org.apache.zeppelin.interpreter.InterpreterResult$Code KEEP_PREVIOUS_RESULT> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r71 = virtualinvoke r69.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r71 = virtualinvoke r69.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if $r70 != $r71
org.apache.zeppelin.notebook.Paragraph.jobRun : if $r70 != $r71 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r73 = r68.<org.apache.zeppelin.interpreter.InterpreterContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r73 = r68.<org.apache.zeppelin.interpreter.InterpreterContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke $r73.<org.apache.zeppelin.interpreter.InterpreterOutput: void flush()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke $r73.<org.apache.zeppelin.interpreter.InterpreterOutput: void flush()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r74 = r68.<org.apache.zeppelin.interpreter.InterpreterContext: org.apache.zeppelin.interpreter.InterpreterOutput out>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r74 = r68.<org.apache.zeppelin.interpreter.InterpreterContext: org.apache.zeppelin.interpreter.InterpreterOutput out> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r75 = virtualinvoke $r74.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List toInterpreterResultMessage()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : r75 = virtualinvoke $r74.<org.apache.zeppelin.interpreter.InterpreterOutput: java.util.List toInterpreterResultMessage()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r76 = virtualinvoke r69.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r76 = virtualinvoke r69.<org.apache.zeppelin.interpreter.InterpreterResult: java.util.List message()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : interfaceinvoke r75.<java.util.List: boolean addAll(java.util.Collection)>($r76)
org.apache.zeppelin.notebook.Paragraph.jobRun : interfaceinvoke r75.<java.util.List: boolean addAll(java.util.Collection)>($r76) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r77 = new org.apache.zeppelin.interpreter.InterpreterResult
org.apache.zeppelin.notebook.Paragraph.jobRun : $r77 = new org.apache.zeppelin.interpreter.InterpreterResult >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r78 = virtualinvoke r69.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r78 = virtualinvoke r69.<org.apache.zeppelin.interpreter.InterpreterResult: org.apache.zeppelin.interpreter.InterpreterResult$Code code()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : specialinvoke $r77.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.util.List)>($r78, r75)
org.apache.zeppelin.notebook.Paragraph.jobRun : specialinvoke $r77.<org.apache.zeppelin.interpreter.InterpreterResult: void <init>(org.apache.zeppelin.interpreter.InterpreterResult$Code,java.util.List)>($r78, r75) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r8 = $r77
org.apache.zeppelin.notebook.Paragraph.jobRun : r8 = $r77 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r79 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r79 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Paragraph getUserParagraph(java.lang.String)>($r79)
org.apache.zeppelin.notebook.Paragraph.jobRun : r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Paragraph getUserParagraph(java.lang.String)>($r79) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap>
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : if $z0 != 0
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Paragraph cloneParagraphForUser(java.lang.String)>(r1)
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.Paragraph cloneParagraphForUser(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r2 = new org.apache.zeppelin.notebook.Paragraph
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r2 = new org.apache.zeppelin.notebook.Paragraph >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : specialinvoke $r2.<org.apache.zeppelin.notebook.Paragraph: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : specialinvoke $r2.<org.apache.zeppelin.notebook.Paragraph: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : r3 = $r2
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : r3 = $r2 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r4 = r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r4 = r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r5 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r5 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r6 = virtualinvoke $r5.<org.apache.zeppelin.display.GUI: java.util.Map getParams()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r6 = virtualinvoke $r5.<org.apache.zeppelin.display.GUI: java.util.Map getParams()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r7 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>($r6)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r7 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>($r6) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke $r4.<org.apache.zeppelin.display.GUI: void setParams(java.util.Map)>($r7)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke $r4.<org.apache.zeppelin.display.GUI: void setParams(java.util.Map)>($r7) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r8 = r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r8 = r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r9 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r9 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r10 = virtualinvoke $r9.<org.apache.zeppelin.display.GUI: java.util.LinkedHashMap getForms()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r10 = virtualinvoke $r9.<org.apache.zeppelin.display.GUI: java.util.LinkedHashMap getForms()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r11 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap(java.util.Map)>($r10)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r11 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap(java.util.Map)>($r10) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke $r8.<org.apache.zeppelin.display.GUI: void setForms(java.util.LinkedHashMap)>($r11)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke $r8.<org.apache.zeppelin.display.GUI: void setForms(java.util.LinkedHashMap)>($r11) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r12 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map config>
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r12 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map config> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r13 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>($r12)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r13 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap(java.util.Map)>($r12) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setConfig(java.util.Map)>($r13)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setConfig(java.util.Map)>($r13) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setConfig : r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map config> = r1
org.apache.zeppelin.notebook.Paragraph.setConfig : r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map config> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r14 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getTitle()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r14 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getTitle()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setTitle(java.lang.String)>($r14)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setTitle(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setTitle : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String title> = r1
org.apache.zeppelin.notebook.Paragraph.setTitle : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String title> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r15 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>($r15)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> = r1
org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : $r2 = new java.util.Date
org.apache.zeppelin.notebook.Paragraph.setText : $r2 = new java.util.Date >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : specialinvoke $r2.<java.util.Date: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.setText : specialinvoke $r2.<java.util.Date: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Date dateUpdated> = $r2
org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Date dateUpdated> = $r2 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r16 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object getReturn()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r16 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object getReturn()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getReturn : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object results>
org.apache.zeppelin.notebook.Paragraph.getReturn : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.Object results> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getReturn : return $r1
org.apache.zeppelin.notebook.Paragraph.getReturn : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>($r16)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>($r16) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r17 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status READY>
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r17 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status READY> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r17)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setStatus(org.apache.zeppelin.scheduler.Job$Status)>($r17) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : $r18 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setId(java.lang.String)>($r18)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setId(java.lang.String)>($r18) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void addUser(org.apache.zeppelin.notebook.Paragraph,java.lang.String)>(r3, r1)
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: void addUser(org.apache.zeppelin.notebook.Paragraph,java.lang.String)>(r3, r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.addUser : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap>
org.apache.zeppelin.notebook.Paragraph.addUser : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.addUser : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.zeppelin.notebook.Paragraph.addUser : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : return r3
org.apache.zeppelin.notebook.Paragraph.cloneParagraphForUser : return r3 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap>
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r6 = (org.apache.zeppelin.notebook.Paragraph) $r5
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : $r6 = (org.apache.zeppelin.notebook.Paragraph) $r5 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUserParagraph : return $r6
org.apache.zeppelin.notebook.Paragraph.getUserParagraph : return $r6 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : if null == r9
org.apache.zeppelin.notebook.Paragraph.jobRun : if null == r9 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke r9.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r8)
org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke r9.<org.apache.zeppelin.notebook.Paragraph: void setResult(java.lang.Object)>(r8) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r80 = r9.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r80 = r9.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r81 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings>
org.apache.zeppelin.notebook.Paragraph.jobRun : $r81 = r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.display.GUI settings> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r82 = virtualinvoke $r81.<org.apache.zeppelin.display.GUI: java.util.Map getParams()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r82 = virtualinvoke $r81.<org.apache.zeppelin.display.GUI: java.util.Map getParams()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke $r80.<org.apache.zeppelin.display.GUI: void setParams(java.util.Map)>($r82)
org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke $r80.<org.apache.zeppelin.display.GUI: void setParams(java.util.Map)>($r82) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r10 = r8
org.apache.zeppelin.notebook.Paragraph.jobRun : r10 = r8 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : staticinvoke <org.apache.zeppelin.interpreter.InterpreterContext: void remove()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : staticinvoke <org.apache.zeppelin.interpreter.InterpreterContext: void remove()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : return r10
org.apache.zeppelin.notebook.Paragraph.jobRun : return r10 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r49 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r49 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : r5 = (org.apache.zeppelin.notebook.Paragraph) $r49
org.apache.zeppelin.notebook.Paragraph.jobRun : r5 = (org.apache.zeppelin.notebook.Paragraph) $r49 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : $r50 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
org.apache.zeppelin.notebook.Paragraph.jobRun : $r50 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke r5.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>($r50)
org.apache.zeppelin.notebook.Paragraph.jobRun : virtualinvoke r5.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>($r50) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.jobRun : goto [?= $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
