org.apache.zeppelin.helium.HeliumBundleFactoryTest.beforeAll : $r0 = <org.apache.zeppelin.helium.HeliumBundleFactoryTest: java.io.File nodeInstallationDir> >>>>>>>> org.apache.zeppelin.helium.HeliumBundleFactoryTest.beforeAll : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r0)
org.apache.zeppelin.helium.HeliumBundleFactoryTest.beforeAll : staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>($r0) >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r0 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/notebook/repo/NotebookRepo")
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r0 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/notebook/repo/NotebookRepo") >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r1 = (org.apache.zeppelin.notebook.repo.NotebookRepo) $r0
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r1 = (org.apache.zeppelin.notebook.repo.NotebookRepo) $r0 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock> = $r1
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock> = $r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterFactory")
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterFactory") >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r3 = (org.apache.zeppelin.interpreter.InterpreterFactory) $r2
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r3 = (org.apache.zeppelin.interpreter.InterpreterFactory) $r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory> = $r3
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory> = $r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterSettingManager")
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterSettingManager") >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r5 = (org.apache.zeppelin.interpreter.InterpreterSettingManager) $r4
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r5 = (org.apache.zeppelin.interpreter.InterpreterSettingManager) $r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> = $r5
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> = $r5 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : r3 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Note newNote(java.lang.String)>(r1)
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : r3 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Note newNote(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r2 = new org.apache.zeppelin.notebook.Note
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r2 = new org.apache.zeppelin.notebook.Note >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r3 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r3 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r4 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r4 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r5 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r5 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r7 = r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.search.SearchService noteSearchService>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r7 = r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.search.SearchService noteSearchService> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : specialinvoke $r2.<org.apache.zeppelin.notebook.Note: void <init>(org.apache.zeppelin.notebook.repo.NotebookRepo,org.apache.zeppelin.interpreter.InterpreterFactory,org.apache.zeppelin.interpreter.InterpreterSettingManager,org.apache.zeppelin.notebook.JobListenerFactory,org.apache.zeppelin.search.SearchService,org.apache.zeppelin.user.Credentials,org.apache.zeppelin.notebook.NoteEventListener)>($r3, $r4, $r5, null, $r7, null, null)
org.apache.zeppelin.search.LuceneSearchTest.newNote : specialinvoke $r2.<org.apache.zeppelin.notebook.Note: void <init>(org.apache.zeppelin.notebook.repo.NotebookRepo,org.apache.zeppelin.interpreter.InterpreterFactory,org.apache.zeppelin.interpreter.InterpreterSettingManager,org.apache.zeppelin.notebook.JobListenerFactory,org.apache.zeppelin.search.SearchService,org.apache.zeppelin.user.Credentials,org.apache.zeppelin.notebook.NoteEventListener)>($r3, $r4, $r5, null, $r7, null, null) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : r1 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : r1 = virtualinvoke $r5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r6 = class "org/apache/zeppelin/conf/ZeppelinConfiguration"
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r6 = class "org/apache/zeppelin/conf/ZeppelinConfiguration" >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : r2 = virtualinvoke $r6.<java.lang.Class: java.net.URL getResource(java.lang.String)>("zeppelin-site.xml")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : r2 = virtualinvoke $r6.<java.lang.Class: java.net.URL getResource(java.lang.String)>("zeppelin-site.xml") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if r2 != null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if r2 != null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r7 = class "org/apache/zeppelin/conf/ZeppelinConfiguration"
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r7 = class "org/apache/zeppelin/conf/ZeppelinConfiguration" >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : r3 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : r3 = virtualinvoke $r7.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : r2 = virtualinvoke r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("zeppelin-site.xml")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : r2 = virtualinvoke r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("zeppelin-site.xml") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : r2 = virtualinvoke r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("zeppelin-site.xml")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : r2 = virtualinvoke r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("zeppelin-site.xml") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r8 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r8 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to load configuration, proceeding with a default")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to load configuration, proceeding with a default") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r9 = new org.apache.zeppelin.conf.ZeppelinConfiguration
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r9 = new org.apache.zeppelin.conf.ZeppelinConfiguration >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r9.<org.apache.zeppelin.conf.ZeppelinConfiguration: void <init>()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r9.<org.apache.zeppelin.conf.ZeppelinConfiguration: void <init>()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[] $VALUES>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[] $VALUES> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r2 = (org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[]) $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r2 = (org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[]) $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : return $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars$VarType type>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars$VarType type> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : $i0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: int intValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : $i0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: int intValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : return $i0
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : return $i0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> = $r9
org.apache.zeppelin.conf.ZeppelinConfiguration.create : <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> = $r9 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : goto [?= $r25 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>]
org.apache.zeppelin.conf.ZeppelinConfiguration.create : goto [?= $r25 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r25 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r25 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r26 = new java.lang.StringBuilder
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server Host: ")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server Host: ") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r28 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r28 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r29 = virtualinvoke $r28.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getServerAddress()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r29 = virtualinvoke $r28.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getServerAddress()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerAddress : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ADDR>
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerAddress : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ADDR> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerAddress : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerAddress : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r8 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getStringValue(java.lang.String,java.lang.String)>(r2, r3)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r8 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getStringValue(java.lang.String,java.lang.String)>(r2, r3) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r6 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r6 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r3 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r3 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z0 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r8 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r8 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $r8 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $r8 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r9 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r9 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z2 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z2 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : return r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : return r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r8
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r8 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerAddress : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerAddress : return $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>($r31)
org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>($r31) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r32 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r32 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $z0 = virtualinvoke $r32.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $z0 = virtualinvoke $r32.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SSL>
org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SSL> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBooleanValue(java.lang.String,boolean)>(r2, z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBooleanValue(java.lang.String,boolean)>(r2, z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if r2 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if r2 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z2 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z2 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $r7 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $r7 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z3 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z3 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : return z0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : return z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z3
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z3 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : return $z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $z0 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $z0 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r33 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r33 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r34 = new java.lang.StringBuilder
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r34 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server Port: ")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server Port: ") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r36 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r36 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $i0 = virtualinvoke $r36.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getServerPort()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $i0 = virtualinvoke $r36.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getServerPort()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerPort : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_PORT>
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerPort : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_PORT> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerPort : $i0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getInt(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerPort : $i0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getInt(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: int getIntValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: int getIntValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getInt(java.lang.String,java.lang.String,int)>($r2, $r3, $i0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getInt(java.lang.String,java.lang.String,int)>($r2, $r3, $i0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r5 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r5 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getIntValue(java.lang.String,int)>(r2, i0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getIntValue(java.lang.String,int)>(r2, i0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if r2 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if r2 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z0 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $r7 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $r7 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z2 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z2 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : return i0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : return i0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : return $i3
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : return $i3 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : return $i1
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : return $i1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerPort : return $i0
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerPort : return $i0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>($r38)
org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r33.<org.slf4j.Logger: void info(java.lang.String)>($r38) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : goto [?= $r45 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>]
org.apache.zeppelin.conf.ZeppelinConfiguration.create : goto [?= $r45 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r45 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r45 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r46 = new java.lang.StringBuilder
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r46 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r46.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Context Path: ")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Context Path: ") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r48 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r48 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r49 = virtualinvoke $r48.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getServerContextPath()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r49 = virtualinvoke $r48.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getServerContextPath()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerContextPath : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SERVER_CONTEXT_PATH>
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerContextPath : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SERVER_CONTEXT_PATH> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerContextPath : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerContextPath : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getServerContextPath : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getServerContextPath : return $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49)
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r45.<org.slf4j.Logger: void info(java.lang.String)>($r51)
org.apache.zeppelin.conf.ZeppelinConfiguration.create : interfaceinvoke $r45.<org.slf4j.Logger: void info(java.lang.String)>($r51) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r52 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r52 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r53 = new java.lang.StringBuilder
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r53 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.create : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zeppelin Version: ")
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zeppelin Version: ") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r55 = staticinvoke <org.apache.zeppelin.util.Util: java.lang.String getVersion()>()
