org.apache.zeppelin.search.LuceneSearch.close : $r2 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.close : virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void close()>()
org.apache.zeppelin.search.LuceneSearch.close : virtualinvoke $r2.<org.apache.lucene.index.IndexWriter: void close()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.close : goto [?= return]
org.apache.zeppelin.search.LuceneSearch.close : goto [?= return] >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r0 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/notebook/repo/NotebookRepo")
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r0 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/notebook/repo/NotebookRepo") >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r1 = (org.apache.zeppelin.notebook.repo.NotebookRepo) $r0
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r1 = (org.apache.zeppelin.notebook.repo.NotebookRepo) $r0 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock> = $r1
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock> = $r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterFactory")
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r2 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterFactory") >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r3 = (org.apache.zeppelin.interpreter.InterpreterFactory) $r2
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r3 = (org.apache.zeppelin.interpreter.InterpreterFactory) $r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory> = $r3
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory> = $r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterSettingManager")
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r4 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "org/apache/zeppelin/interpreter/InterpreterSettingManager") >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r5 = (org.apache.zeppelin.interpreter.InterpreterSettingManager) $r4
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : $r5 = (org.apache.zeppelin.interpreter.InterpreterSettingManager) $r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> = $r5
org.apache.zeppelin.search.LuceneSearchTest.beforeStartUp : <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> = $r5 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : r3 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Note newNote(java.lang.String)>(r1)
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : r3 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Note newNote(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r2 = new org.apache.zeppelin.notebook.Note
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r2 = new org.apache.zeppelin.notebook.Note >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r3 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r3 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.repo.NotebookRepo notebookRepoMock> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r4 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r4 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterFactory interpreterFactory> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r5 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r5 = <org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : $r7 = r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.search.SearchService noteSearchService>
org.apache.zeppelin.search.LuceneSearchTest.newNote : $r7 = r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.search.SearchService noteSearchService> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : specialinvoke $r2.<org.apache.zeppelin.notebook.Note: void <init>(org.apache.zeppelin.notebook.repo.NotebookRepo,org.apache.zeppelin.interpreter.InterpreterFactory,org.apache.zeppelin.interpreter.InterpreterSettingManager,org.apache.zeppelin.notebook.JobListenerFactory,org.apache.zeppelin.search.SearchService,org.apache.zeppelin.user.Credentials,org.apache.zeppelin.notebook.NoteEventListener)>($r3, $r4, $r5, null, $r7, null, null)
org.apache.zeppelin.search.LuceneSearchTest.newNote : specialinvoke $r2.<org.apache.zeppelin.notebook.Note: void <init>(org.apache.zeppelin.notebook.repo.NotebookRepo,org.apache.zeppelin.interpreter.InterpreterFactory,org.apache.zeppelin.interpreter.InterpreterSettingManager,org.apache.zeppelin.notebook.JobListenerFactory,org.apache.zeppelin.search.SearchService,org.apache.zeppelin.user.Credentials,org.apache.zeppelin.notebook.NoteEventListener)>($r3, $r4, $r5, null, $r7, null, null) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.generateId : $r1 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String generateId()>()
org.apache.zeppelin.notebook.Note.generateId : $r1 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String generateId()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $r0 = new java.util.Random
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $r0 = new java.util.Random >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : specialinvoke $r0.<java.util.Random: void <init>()>()
org.apache.zeppelin.notebook.utility.IdHashes.generateId : specialinvoke $r0.<java.util.Random: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>()
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l2 = (long) $i1
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l2 = (long) $i1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l3 = $l0 + $l2
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $l3 = $l0 + $l2 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3)
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : $r2 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String encode(java.lang.Long)>($r1)
org.apache.zeppelin.notebook.utility.IdHashes.generateId : $r2 = staticinvoke <org.apache.zeppelin.notebook.utility.IdHashes: java.lang.String encode(java.lang.Long)>($r1) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r1 = new java.util.ArrayList
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r1 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r1.<java.util.ArrayList: void <init>()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r1.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r2 = $r1
org.apache.zeppelin.notebook.utility.IdHashes.encode : r2 = $r1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r10 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r10 = new java.math.BigInteger >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("")
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r11 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("") >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r12 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r12 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY> >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $i1 = lengthof $r12
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i1 = lengthof $r12 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r10.<java.math.BigInteger: void <init>(java.lang.String)>($r14)
org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r10.<java.math.BigInteger: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r4 = $r10
org.apache.zeppelin.notebook.utility.IdHashes.encode : r4 = $r10 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : i0 = 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : i0 = 1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r15 = new java.math.BigInteger
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r15 = new java.math.BigInteger >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r16 = virtualinvoke r0.<java.lang.Long: java.lang.String toString()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r16 = virtualinvoke r0.<java.lang.Long: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r15.<java.math.BigInteger: void <init>(java.lang.String)>($r16)
org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r15.<java.math.BigInteger: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r5 = $r15
org.apache.zeppelin.notebook.utility.IdHashes.encode : r5 = $r15 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r6 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r6 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r7 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r6)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r7 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>(r6) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $i2 = i0 - 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i2 = i0 - 1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r8 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r8 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>($i2) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r9 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r8)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r9 = virtualinvoke r7.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>(r8) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r17 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r17 = <org.apache.zeppelin.notebook.utility.IdHashes: char[] DICTIONARY> >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $i3 = virtualinvoke r9.<java.math.BigInteger: int intValue()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i3 = virtualinvoke r9.<java.math.BigInteger: int intValue()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $c4 = $r17[$i3]
org.apache.zeppelin.notebook.utility.IdHashes.encode : $c4 = $r17[$i3] >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r18 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r18 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c4) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18)
org.apache.zeppelin.notebook.utility.IdHashes.encode : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r5 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r7)
org.apache.zeppelin.notebook.utility.IdHashes.encode : r5 = virtualinvoke r5.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>(r7) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r19 = <java.math.BigInteger: java.math.BigInteger ZERO>
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r19 = <java.math.BigInteger: java.math.BigInteger ZERO> >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $z1 = virtualinvoke r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r19)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $z1 = virtualinvoke r5.<java.math.BigInteger: boolean equals(java.lang.Object)>($r19) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : if $z1 == 0
org.apache.zeppelin.notebook.utility.IdHashes.encode : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : i0 = i0 + 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : i0 = i0 + 1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= r6 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0)]
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= r6 = virtualinvoke r4.<java.math.BigInteger: java.math.BigInteger pow(int)>(i0)] >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= $r20 = new java.lang.StringBuffer]
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= $r20 = new java.lang.StringBuffer] >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r20 = new java.lang.StringBuffer
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r20 = new java.lang.StringBuffer >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r20.<java.lang.StringBuffer: void <init>()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : specialinvoke $r20.<java.lang.StringBuffer: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : r21 = $r20
org.apache.zeppelin.notebook.utility.IdHashes.encode : r21 = $r20 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $i5 = interfaceinvoke r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $i5 = interfaceinvoke r2.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : i6 = $i5 - 1
org.apache.zeppelin.notebook.utility.IdHashes.encode : i6 = $i5 - 1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : if i6 < 0
org.apache.zeppelin.notebook.utility.IdHashes.encode : if i6 < 0 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6)
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r22 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : virtualinvoke r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r22)
org.apache.zeppelin.notebook.utility.IdHashes.encode : virtualinvoke r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r22) >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : i6 = i6 + -1
org.apache.zeppelin.notebook.utility.IdHashes.encode : i6 = i6 + -1 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= (branch)]
org.apache.zeppelin.notebook.utility.IdHashes.encode : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : $r24 = virtualinvoke r21.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.zeppelin.notebook.utility.IdHashes.encode : $r24 = virtualinvoke r21.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.encode : return $r24
org.apache.zeppelin.notebook.utility.IdHashes.encode : return $r24 >>>>>>>> org.apache.zeppelin.notebook.utility.IdHashes.generateId : return $r2
org.apache.zeppelin.notebook.utility.IdHashes.generateId : return $r2 >>>>>>>> org.apache.zeppelin.notebook.Note.generateId : r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> = $r1
org.apache.zeppelin.notebook.Note.generateId : r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> = $r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : r6 = $r2
org.apache.zeppelin.search.LuceneSearchTest.newNote : r6 = $r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : virtualinvoke r6.<org.apache.zeppelin.notebook.Note: void setName(java.lang.String)>(r1)
org.apache.zeppelin.search.LuceneSearchTest.newNote : virtualinvoke r6.<org.apache.zeppelin.notebook.Note: void setName(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Note.setName : r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.setName : r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.setName : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47)
org.apache.zeppelin.notebook.Note.setName : $i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(47) >>>>>>>> org.apache.zeppelin.notebook.Note.setName : if $i0 >= 0
org.apache.zeppelin.notebook.Note.setName : if $i0 >= 0 >>>>>>>> org.apache.zeppelin.notebook.Note.setName : $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(92)
org.apache.zeppelin.notebook.Note.setName : $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(92) >>>>>>>> org.apache.zeppelin.notebook.Note.setName : if $i1 < 0
org.apache.zeppelin.notebook.Note.setName : if $i1 < 0 >>>>>>>> org.apache.zeppelin.notebook.Note.setName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = r1
org.apache.zeppelin.notebook.Note.setName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = r1 >>>>>>>> org.apache.zeppelin.notebook.Note.setName : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteNameListener noteNameListener>
org.apache.zeppelin.notebook.Note.setName : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteNameListener noteNameListener> >>>>>>>> org.apache.zeppelin.notebook.Note.setName : if $r3 == null
org.apache.zeppelin.notebook.Note.setName : if $r3 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNote : return r6
org.apache.zeppelin.search.LuceneSearchTest.newNote : return r6 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Paragraph addParagraphWithText(org.apache.zeppelin.notebook.Note,java.lang.String)>(r3, r2)
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Paragraph addParagraphWithText(org.apache.zeppelin.notebook.Note,java.lang.String)>(r3, r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : $r3 = <org.apache.zeppelin.user.AuthenticationInfo: org.apache.zeppelin.user.AuthenticationInfo ANONYMOUS>
org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : $r3 = <org.apache.zeppelin.user.AuthenticationInfo: org.apache.zeppelin.user.AuthenticationInfo ANONYMOUS> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph addNewParagraph(org.apache.zeppelin.user.AuthenticationInfo)>($r3)
org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph addNewParagraph(org.apache.zeppelin.user.AuthenticationInfo)>($r3) >>>>>>>> org.apache.zeppelin.notebook.Note.addNewParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.addNewParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.addNewParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.addNewParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.addNewParagraph : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph insertNewParagraph(int,org.apache.zeppelin.user.AuthenticationInfo)>($i0, r1)
org.apache.zeppelin.notebook.Note.addNewParagraph : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph insertNewParagraph(int,org.apache.zeppelin.user.AuthenticationInfo)>($i0, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.insertNewParagraph : r2 = specialinvoke r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph createParagraph(int,org.apache.zeppelin.user.AuthenticationInfo)>(i0, r1)
org.apache.zeppelin.notebook.Note.insertNewParagraph : r2 = specialinvoke r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.Paragraph createParagraph(int,org.apache.zeppelin.user.AuthenticationInfo)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : $r2 = new org.apache.zeppelin.notebook.Paragraph
org.apache.zeppelin.notebook.Note.createParagraph : $r2 = new org.apache.zeppelin.notebook.Paragraph >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterFactory factory>
org.apache.zeppelin.notebook.Note.createParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterFactory factory> >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.notebook.Note.createParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : specialinvoke $r2.<org.apache.zeppelin.notebook.Paragraph: void <init>(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.scheduler.JobListener,org.apache.zeppelin.interpreter.InterpreterFactory,org.apache.zeppelin.interpreter.InterpreterSettingManager)>(r0, r0, $r4, $r5)
org.apache.zeppelin.notebook.Note.createParagraph : specialinvoke $r2.<org.apache.zeppelin.notebook.Paragraph: void <init>(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.scheduler.JobListener,org.apache.zeppelin.interpreter.InterpreterFactory,org.apache.zeppelin.interpreter.InterpreterSettingManager)>(r0, r0, $r4, $r5) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r0 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.Paragraph.generateId : $r0 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paragraph_")
org.apache.zeppelin.notebook.Paragraph.generateId : $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("paragraph_") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)
org.apache.zeppelin.notebook.Paragraph.generateId : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
org.apache.zeppelin.notebook.Paragraph.generateId : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r4 = new java.util.Random
org.apache.zeppelin.notebook.Paragraph.generateId : $r4 = new java.util.Random >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r4.<java.util.Random: void <init>(long)>($l0)
org.apache.zeppelin.notebook.Paragraph.generateId : specialinvoke $r4.<java.util.Random: void <init>(long)>($l0) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $i2 = virtualinvoke $r4.<java.util.Random: int nextInt()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $i2 = virtualinvoke $r4.<java.util.Random: int nextInt()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)
org.apache.zeppelin.notebook.Paragraph.generateId : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.Paragraph.generateId : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.generateId : return $r6
org.apache.zeppelin.notebook.Paragraph.generateId : return $r6 >>>>>>>> org.apache.zeppelin.notebook.Note.beforeStatusChange : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory>
org.apache.zeppelin.notebook.Note.beforeStatusChange : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory> >>>>>>>> org.apache.zeppelin.notebook.Note.beforeStatusChange : if $r5 == null
org.apache.zeppelin.notebook.Note.beforeStatusChange : if $r5 == null >>>>>>>> org.apache.zeppelin.notebook.Note.afterStatusChange : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory>
org.apache.zeppelin.notebook.Note.afterStatusChange : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory> >>>>>>>> org.apache.zeppelin.notebook.Note.afterStatusChange : if $r5 == null
org.apache.zeppelin.notebook.Note.afterStatusChange : if $r5 == null >>>>>>>> org.apache.zeppelin.notebook.Note.afterStatusChange : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>
org.apache.zeppelin.notebook.Note.afterStatusChange : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener> >>>>>>>> org.apache.zeppelin.notebook.Note.afterStatusChange : if $r7 == null
org.apache.zeppelin.notebook.Note.afterStatusChange : if $r7 == null >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : r3 = $r2
org.apache.zeppelin.notebook.Note.createParagraph : r3 = $r2 >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setAuthenticationInfo(org.apache.zeppelin.user.AuthenticationInfo)>(r1)
org.apache.zeppelin.notebook.Note.createParagraph : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void setAuthenticationInfo(org.apache.zeppelin.user.AuthenticationInfo)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> = r1
org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.user.AuthenticationInfo authenticationInfo> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : $r2 = virtualinvoke r1.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : $r2 = virtualinvoke r1.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> = $r2
org.apache.zeppelin.notebook.Paragraph.setAuthenticationInfo : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> = $r2 >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : $r6 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>()
org.apache.zeppelin.notebook.Note.createParagraph : $r6 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUser : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user>
org.apache.zeppelin.notebook.Paragraph.getUser : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String user> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getUser : return $r1
org.apache.zeppelin.notebook.Paragraph.getUser : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void addUser(org.apache.zeppelin.notebook.Paragraph,java.lang.String)>(r3, $r6)
org.apache.zeppelin.notebook.Note.createParagraph : virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: void addUser(org.apache.zeppelin.notebook.Paragraph,java.lang.String)>(r3, $r6) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.addUser : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap>
org.apache.zeppelin.notebook.Paragraph.addUser : $r3 = r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Map userParagraphMap> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.addUser : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.zeppelin.notebook.Paragraph.addUser : interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : specialinvoke r0.<org.apache.zeppelin.notebook.Note: void setParagraphMagic(org.apache.zeppelin.notebook.Paragraph,int)>(r3, i0)
org.apache.zeppelin.notebook.Note.createParagraph : specialinvoke r0.<org.apache.zeppelin.notebook.Note: void setParagraphMagic(org.apache.zeppelin.notebook.Paragraph,int)>(r3, i0) >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.setParagraphMagic : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $i1 = interfaceinvoke $r3.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.setParagraphMagic : $i1 = interfaceinvoke $r3.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : if $i1 <= 0
org.apache.zeppelin.notebook.Note.setParagraphMagic : if $i1 <= 0 >>>>>>>> org.apache.zeppelin.notebook.Note.createParagraph : return r3
org.apache.zeppelin.notebook.Note.createParagraph : return r3 >>>>>>>> org.apache.zeppelin.notebook.Note.insertNewParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r2, i0)
org.apache.zeppelin.notebook.Note.insertNewParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r2, i0) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4
org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4
org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1)
org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2
org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>]
org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>] >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>
org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null
org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null >>>>>>>> org.apache.zeppelin.notebook.Note.insertNewParagraph : return r2
org.apache.zeppelin.notebook.Note.insertNewParagraph : return r2 >>>>>>>> org.apache.zeppelin.notebook.Note.addNewParagraph : return $r3
org.apache.zeppelin.notebook.Note.addNewParagraph : return $r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : virtualinvoke r4.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>(r2)
org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : virtualinvoke r4.<org.apache.zeppelin.notebook.Paragraph: void setText(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> = r1
org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> = r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : $r2 = new java.util.Date
org.apache.zeppelin.notebook.Paragraph.setText : $r2 = new java.util.Date >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : specialinvoke $r2.<java.util.Date: void <init>()>()
org.apache.zeppelin.notebook.Paragraph.setText : specialinvoke $r2.<java.util.Date: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Date dateUpdated> = $r2
org.apache.zeppelin.notebook.Paragraph.setText : r0.<org.apache.zeppelin.notebook.Paragraph: java.util.Date dateUpdated> = $r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : return r4
org.apache.zeppelin.search.LuceneSearchTest.addParagraphWithText : return r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : return r3
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraph : return r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : r3 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Note newNote(java.lang.String)>(r1)
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : r3 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Note newNote(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : r4 = r2
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : r4 = r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : i0 = lengthof r4
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : i0 = lengthof r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : i1 = 0
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : i1 = 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : if i1 >= i0
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : if i1 >= i0 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : r5 = r4[i1]
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : r5 = r4[i1] >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Paragraph addParagraphWithText(org.apache.zeppelin.notebook.Note,java.lang.String)>(r3, r5)
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.notebook.Paragraph addParagraphWithText(org.apache.zeppelin.notebook.Note,java.lang.String)>(r3, r5) >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : i1 = i1 + 1
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : i1 = i1 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : goto [?= (branch)]
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : if i0 != 0
org.apache.zeppelin.notebook.Note.setParagraphMagic : if i0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $r7 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.setParagraphMagic : $r7 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $i2 = i0 - 1
org.apache.zeppelin.notebook.Note.setParagraphMagic : $i2 = i0 - 1 >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2)
org.apache.zeppelin.notebook.Note.setParagraphMagic : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2) >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $r9 = (org.apache.zeppelin.notebook.Paragraph) $r8
org.apache.zeppelin.notebook.Note.setParagraphMagic : $r9 = (org.apache.zeppelin.notebook.Paragraph) $r8 >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : r2 = virtualinvoke $r9.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getMagic()>()
org.apache.zeppelin.notebook.Note.setParagraphMagic : r2 = virtualinvoke $r9.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getMagic()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getMagic : r1 = ""
org.apache.zeppelin.notebook.Paragraph.getMagic : r1 = "" >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getMagic : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
org.apache.zeppelin.notebook.Paragraph.getMagic : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getText : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text>
org.apache.zeppelin.notebook.Paragraph.getText : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String text> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getText : return $r1
org.apache.zeppelin.notebook.Paragraph.getText : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getMagic : if r2 == null
org.apache.zeppelin.notebook.Paragraph.getMagic : if r2 == null >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getMagic : $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("%")
org.apache.zeppelin.notebook.Paragraph.getMagic : $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("%") >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getMagic : if $z0 == 0
org.apache.zeppelin.notebook.Paragraph.getMagic : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getMagic : return r1
org.apache.zeppelin.notebook.Paragraph.getMagic : return r1 >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r2)
org.apache.zeppelin.notebook.Note.setParagraphMagic : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.Note.setParagraphMagic : if $z0 == 0
org.apache.zeppelin.notebook.Note.setParagraphMagic : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : return r3
org.apache.zeppelin.search.LuceneSearchTest.newNoteWithParagraphs : return r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i0 = 0
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i0 = 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l1 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l1 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r3 = (org.apache.zeppelin.notebook.Note) $r7
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : r3 = (org.apache.zeppelin.notebook.Note) $r7 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void addIndexDocAsync(org.apache.zeppelin.notebook.Note)>(r3)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void addIndexDocAsync(org.apache.zeppelin.notebook.Note)>(r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r4 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r4 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r5 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r5 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> >>>>>>>> org.apache.zeppelin.notebook.Note.getId : return $r1
org.apache.zeppelin.notebook.Note.getId : return $r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r6 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r6 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>()
org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Note.isNameEmpty : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.notebook.Note.isNameEmpty : $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : return $z0
org.apache.zeppelin.notebook.Note.isNameEmpty : return $z0 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : if $z0 == 0
org.apache.zeppelin.notebook.Note.getName : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.getName : return $r2
org.apache.zeppelin.notebook.Note.getName : return $r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void indexNoteName(org.apache.lucene.index.IndexWriter,java.lang.String,java.lang.String)>($r4, $r5, $r6)
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void indexNoteName(org.apache.lucene.index.IndexWriter,java.lang.String,java.lang.String)>($r4, $r5, $r6) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexNoteName : $r4 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.indexNoteName : $r4 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexNoteName : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing Notebook {}, \'{}\'", r2, r3)
org.apache.zeppelin.search.LuceneSearch.indexNoteName : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing Notebook {}, \'{}\'", r2, r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexNoteName : if null == r3
org.apache.zeppelin.search.LuceneSearch.indexNoteName : if null == r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexNoteName : $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.search.LuceneSearch.indexNoteName : $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexNoteName : if $z0 == 0
org.apache.zeppelin.search.LuceneSearch.indexNoteName : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexNoteName : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void indexDoc(org.apache.lucene.index.IndexWriter,java.lang.String,java.lang.String,org.apache.zeppelin.notebook.Paragraph)>(r1, r2, r3, null)
org.apache.zeppelin.search.LuceneSearch.indexNoteName : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void indexDoc(org.apache.lucene.index.IndexWriter,java.lang.String,java.lang.String,org.apache.zeppelin.notebook.Paragraph)>(r1, r2, r3, null) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexDoc : r5 = staticinvoke <org.apache.zeppelin.search.LuceneSearch: java.lang.String formatId(java.lang.String,org.apache.zeppelin.notebook.Paragraph)>(r2, r4)
org.apache.zeppelin.search.LuceneSearch.indexDoc : r5 = staticinvoke <org.apache.zeppelin.search.LuceneSearch: java.lang.String formatId(java.lang.String,org.apache.zeppelin.notebook.Paragraph)>(r2, r4) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : r2 = r0
org.apache.zeppelin.search.LuceneSearch.formatId : r2 = r0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : if null == r1
org.apache.zeppelin.search.LuceneSearch.formatId : if null == r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : return r2
org.apache.zeppelin.search.LuceneSearch.formatId : return r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexDoc : r6 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.document.Document newDocument(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.Paragraph)>(r5, r3, r4)
org.apache.zeppelin.search.LuceneSearch.indexDoc : r6 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.document.Document newDocument(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.Paragraph)>(r5, r3, r4) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r4 = new org.apache.lucene.document.Document
org.apache.zeppelin.search.LuceneSearch.newDocument : $r4 = new org.apache.lucene.document.Document >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r4.<org.apache.lucene.document.Document: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r4.<org.apache.lucene.document.Document: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : r5 = $r4
org.apache.zeppelin.search.LuceneSearch.newDocument : r5 = $r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r11 = new org.apache.lucene.document.StringField
org.apache.zeppelin.search.LuceneSearch.newDocument : $r11 = new org.apache.lucene.document.StringField >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r6 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES>
org.apache.zeppelin.search.LuceneSearch.newDocument : $r6 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r11.<org.apache.lucene.document.StringField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("id", r1, $r6)
org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r11.<org.apache.lucene.document.StringField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("id", r1, $r6) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : r7 = $r11
org.apache.zeppelin.search.LuceneSearch.newDocument : r7 = $r11 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>(r7)
org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>(r7) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r12 = new org.apache.lucene.document.StringField
org.apache.zeppelin.search.LuceneSearch.newDocument : $r12 = new org.apache.lucene.document.StringField >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r8 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES>
org.apache.zeppelin.search.LuceneSearch.newDocument : $r8 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r12.<org.apache.lucene.document.StringField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("title", r2, $r8)
org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r12.<org.apache.lucene.document.StringField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("title", r2, $r8) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r12)
org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r12) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : if null == r3
org.apache.zeppelin.search.LuceneSearch.newDocument : if null == r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r23 = new org.apache.lucene.document.TextField
org.apache.zeppelin.search.LuceneSearch.newDocument : $r23 = new org.apache.lucene.document.TextField >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r24 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES>
org.apache.zeppelin.search.LuceneSearch.newDocument : $r24 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r23.<org.apache.lucene.document.TextField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("contents", r2, $r24)
org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r23.<org.apache.lucene.document.TextField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("contents", r2, $r24) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r23)
org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r23) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : return r5
org.apache.zeppelin.search.LuceneSearch.newDocument : return r5 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.indexDoc : virtualinvoke r1.<org.apache.lucene.index.IndexWriter: void addDocument(java.lang.Iterable)>(r6)
org.apache.zeppelin.search.LuceneSearch.indexDoc : virtualinvoke r1.<org.apache.lucene.index.IndexWriter: void addDocument(java.lang.Iterable)>(r6) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r7 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r7 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getParagraphs : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : r1 = $r3
org.apache.zeppelin.notebook.Note.getParagraphs : r1 = $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : entermonitor $r3
org.apache.zeppelin.notebook.Note.getParagraphs : entermonitor $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r4 = new java.util.LinkedList
org.apache.zeppelin.notebook.Note.getParagraphs : $r4 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getParagraphs : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r5)
org.apache.zeppelin.notebook.Note.getParagraphs : specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : exitmonitor r1
org.apache.zeppelin.notebook.Note.getParagraphs : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : return $r4
org.apache.zeppelin.notebook.Note.getParagraphs : return $r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : if $z0 == 0
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : r3 = (org.apache.zeppelin.notebook.Paragraph) $r8
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : r3 = (org.apache.zeppelin.notebook.Paragraph) $r8 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r9 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r9 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : if $r9 != null
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : if $r9 != null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r11 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r11 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r12 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r12 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r13 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : $r13 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void indexDoc(org.apache.lucene.index.IndexWriter,java.lang.String,java.lang.String,org.apache.zeppelin.notebook.Paragraph)>($r11, $r12, $r13, r3)
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void indexDoc(org.apache.lucene.index.IndexWriter,java.lang.String,java.lang.String,org.apache.zeppelin.notebook.Paragraph)>($r11, $r12, $r13, r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : $r3 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(47)
org.apache.zeppelin.search.LuceneSearch.formatId : $r3 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(47) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : $r4 = newarray (java.lang.Object)[1]
org.apache.zeppelin.search.LuceneSearch.formatId : $r4 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : $r5 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>()
org.apache.zeppelin.search.LuceneSearch.formatId : $r5 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : $r4[0] = $r5
org.apache.zeppelin.search.LuceneSearch.formatId : $r4[0] = $r5 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatId : r2 = virtualinvoke $r3.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>(r2, "paragraph", $r4)
org.apache.zeppelin.search.LuceneSearch.formatId : r2 = virtualinvoke $r3.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>(r2, "paragraph", $r4) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r13 = new org.apache.lucene.document.TextField
org.apache.zeppelin.search.LuceneSearch.newDocument : $r13 = new org.apache.lucene.document.TextField >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r14 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
org.apache.zeppelin.search.LuceneSearch.newDocument : $r14 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r15 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES>
org.apache.zeppelin.search.LuceneSearch.newDocument : $r15 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store YES> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r13.<org.apache.lucene.document.TextField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("contents", $r14, $r15)
org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r13.<org.apache.lucene.document.TextField: void <init>(java.lang.String,java.lang.String,org.apache.lucene.document.Field$Store)>("contents", $r14, $r15) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r13)
org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r13) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r16 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getTitle()>()
org.apache.zeppelin.search.LuceneSearch.newDocument : $r16 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getTitle()>() >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getTitle : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String title>
org.apache.zeppelin.notebook.Paragraph.getTitle : $r1 = r0.<org.apache.zeppelin.notebook.Paragraph: java.lang.String title> >>>>>>>> org.apache.zeppelin.notebook.Paragraph.getTitle : return $r1
org.apache.zeppelin.notebook.Paragraph.getTitle : return $r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : if $r16 == null
org.apache.zeppelin.search.LuceneSearch.newDocument : if $r16 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r20 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateStarted()>()
org.apache.zeppelin.search.LuceneSearch.newDocument : $r20 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateStarted()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : if $r20 == null
org.apache.zeppelin.search.LuceneSearch.newDocument : if $r20 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r21 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateCreated()>()
org.apache.zeppelin.search.LuceneSearch.newDocument : $r21 = virtualinvoke r3.<org.apache.zeppelin.notebook.Paragraph: java.util.Date getDateCreated()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : r9 = $r21
org.apache.zeppelin.search.LuceneSearch.newDocument : r9 = $r21 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r22 = new org.apache.lucene.document.LongField
org.apache.zeppelin.search.LuceneSearch.newDocument : $r22 = new org.apache.lucene.document.LongField >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $l0 = virtualinvoke r9.<java.util.Date: long getTime()>()
org.apache.zeppelin.search.LuceneSearch.newDocument : $l0 = virtualinvoke r9.<java.util.Date: long getTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : $r10 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store NO>
org.apache.zeppelin.search.LuceneSearch.newDocument : $r10 = <org.apache.lucene.document.Field$Store: org.apache.lucene.document.Field$Store NO> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r22.<org.apache.lucene.document.LongField: void <init>(java.lang.String,long,org.apache.lucene.document.Field$Store)>("modified", $l0, $r10)
org.apache.zeppelin.search.LuceneSearch.newDocument : specialinvoke $r22.<org.apache.lucene.document.LongField: void <init>(java.lang.String,long,org.apache.lucene.document.Field$Store)>("modified", $l0, $r10) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r22)
org.apache.zeppelin.search.LuceneSearch.newDocument : virtualinvoke r5.<org.apache.lucene.document.Document: void add(org.apache.lucene.index.IndexableField)>($r22) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.newDocument : goto [?= return r5]
org.apache.zeppelin.search.LuceneSearch.newDocument : goto [?= return r5] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocAsync : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i0 = i0 + 1
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : i0 = i0 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r8 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r8 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r8.<org.apache.lucene.index.IndexWriter: void commit()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : virtualinvoke $r8.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l2 = staticinvoke <java.lang.System: long nanoTime()>()]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= l2 = staticinvoke <java.lang.System: long nanoTime()>()] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l2 = staticinvoke <java.lang.System: long nanoTime()>()
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : l2 = staticinvoke <java.lang.System: long nanoTime()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r12 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r12 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l3 = l2 - l1
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l3 = l2 - l1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l4 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $l4 = virtualinvoke $r4.<java.util.concurrent.TimeUnit: long toMillis(long)>($l3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r13, $r14)
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing {} notebooks took {}ms", $r13, $r14) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= return]
org.apache.zeppelin.search.LuceneSearch.addIndexDocs : goto [?= return] >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.resultForQuery : $r2 = r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.search.SearchService noteSearchService>
org.apache.zeppelin.search.LuceneSearchTest.resultForQuery : $r2 = r0.<org.apache.zeppelin.search.LuceneSearchTest: org.apache.zeppelin.search.SearchService noteSearchService> >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.resultForQuery : $r3 = interfaceinvoke $r2.<org.apache.zeppelin.search.SearchService: java.util.List query(java.lang.String)>(r1)
org.apache.zeppelin.search.LuceneSearchTest.resultForQuery : $r3 = interfaceinvoke $r2.<org.apache.zeppelin.search.SearchService: java.util.List query(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r13 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory>
org.apache.zeppelin.search.LuceneSearch.query : $r13 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : if null != $r13
org.apache.zeppelin.search.LuceneSearch.query : if null != $r13 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.search.LuceneSearch.query : r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r15 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory>
org.apache.zeppelin.search.LuceneSearch.query : $r15 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r3 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>($r15)
org.apache.zeppelin.search.LuceneSearch.query : r3 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>($r15) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r4 = null
org.apache.zeppelin.search.LuceneSearch.query : r4 = null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r16 = new org.apache.lucene.search.IndexSearcher
org.apache.zeppelin.search.LuceneSearch.query : $r16 = new org.apache.lucene.search.IndexSearcher >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r16.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReader)>(r3)
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r16.<org.apache.lucene.search.IndexSearcher: void <init>(org.apache.lucene.index.IndexReader)>(r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r5 = $r16
org.apache.zeppelin.search.LuceneSearch.query : r5 = $r16 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r17 = new org.apache.lucene.analysis.standard.StandardAnalyzer
org.apache.zeppelin.search.LuceneSearch.query : $r17 = new org.apache.lucene.analysis.standard.StandardAnalyzer >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r17.<org.apache.lucene.analysis.standard.StandardAnalyzer: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r17.<org.apache.lucene.analysis.standard.StandardAnalyzer: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r6 = $r17
org.apache.zeppelin.search.LuceneSearch.query : r6 = $r17 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r18 = new org.apache.lucene.queryparser.classic.MultiFieldQueryParser
org.apache.zeppelin.search.LuceneSearch.query : $r18 = new org.apache.lucene.queryparser.classic.MultiFieldQueryParser >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r19 = newarray (java.lang.String)[2]
org.apache.zeppelin.search.LuceneSearch.query : $r19 = newarray (java.lang.String)[2] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r19[0] = "contents"
org.apache.zeppelin.search.LuceneSearch.query : $r19[0] = "contents" >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r19[1] = "header"
org.apache.zeppelin.search.LuceneSearch.query : $r19[1] = "header" >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r18.<org.apache.lucene.queryparser.classic.MultiFieldQueryParser: void <init>(java.lang.String[],org.apache.lucene.analysis.Analyzer)>($r19, r6)
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r18.<org.apache.lucene.queryparser.classic.MultiFieldQueryParser: void <init>(java.lang.String[],org.apache.lucene.analysis.Analyzer)>($r19, r6) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r7 = $r18
org.apache.zeppelin.search.LuceneSearch.query : r7 = $r18 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r8 = virtualinvoke r7.<org.apache.lucene.queryparser.classic.MultiFieldQueryParser: org.apache.lucene.search.Query parse(java.lang.String)>(r1)
org.apache.zeppelin.search.LuceneSearch.query : r8 = virtualinvoke r7.<org.apache.lucene.queryparser.classic.MultiFieldQueryParser: org.apache.lucene.search.Query parse(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r20 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.query : $r20 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r21 = new java.lang.StringBuilder
org.apache.zeppelin.search.LuceneSearch.query : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Searching for: ")
org.apache.zeppelin.search.LuceneSearch.query : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Searching for: ") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r23 = virtualinvoke r8.<org.apache.lucene.search.Query: java.lang.String toString(java.lang.String)>("contents")
org.apache.zeppelin.search.LuceneSearch.query : $r23 = virtualinvoke r8.<org.apache.lucene.search.Query: java.lang.String toString(java.lang.String)>("contents") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.zeppelin.search.LuceneSearch.query : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.search.LuceneSearch.query : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r25)
org.apache.zeppelin.search.LuceneSearch.query : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r26 = new org.apache.lucene.search.highlight.SimpleHTMLFormatter
org.apache.zeppelin.search.LuceneSearch.query : $r26 = new org.apache.lucene.search.highlight.SimpleHTMLFormatter >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r26.<org.apache.lucene.search.highlight.SimpleHTMLFormatter: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r26.<org.apache.lucene.search.highlight.SimpleHTMLFormatter: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r9 = $r26
org.apache.zeppelin.search.LuceneSearch.query : r9 = $r26 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r27 = new org.apache.lucene.search.highlight.Highlighter
org.apache.zeppelin.search.LuceneSearch.query : $r27 = new org.apache.lucene.search.highlight.Highlighter >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r28 = new org.apache.lucene.search.highlight.QueryScorer
org.apache.zeppelin.search.LuceneSearch.query : $r28 = new org.apache.lucene.search.highlight.QueryScorer >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r28.<org.apache.lucene.search.highlight.QueryScorer: void <init>(org.apache.lucene.search.Query)>(r8)
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r28.<org.apache.lucene.search.highlight.QueryScorer: void <init>(org.apache.lucene.search.Query)>(r8) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r27.<org.apache.lucene.search.highlight.Highlighter: void <init>(org.apache.lucene.search.highlight.Formatter,org.apache.lucene.search.highlight.Scorer)>(r9, $r28)
org.apache.zeppelin.search.LuceneSearch.query : specialinvoke $r27.<org.apache.lucene.search.highlight.Highlighter: void <init>(org.apache.lucene.search.highlight.Formatter,org.apache.lucene.search.highlight.Scorer)>(r9, $r28) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r10 = $r27
org.apache.zeppelin.search.LuceneSearch.query : r10 = $r27 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r2 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: java.util.List doSearch(org.apache.lucene.search.IndexSearcher,org.apache.lucene.search.Query,org.apache.lucene.analysis.Analyzer,org.apache.lucene.search.highlight.Highlighter)>(r5, r8, r6, r10)
org.apache.zeppelin.search.LuceneSearch.query : r2 = specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: java.util.List doSearch(org.apache.lucene.search.IndexSearcher,org.apache.lucene.search.Query,org.apache.lucene.analysis.Analyzer,org.apache.lucene.search.highlight.Highlighter)>(r5, r8, r6, r10) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : r5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r15 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,int)>(r2, 20)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r15 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TopDocs search(org.apache.lucene.search.Query,int)>(r2, 20) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r6 = $r15.<org.apache.lucene.search.TopDocs: org.apache.lucene.search.ScoreDoc[] scoreDocs>
org.apache.zeppelin.search.LuceneSearch.doSearch : r6 = $r15.<org.apache.lucene.search.TopDocs: org.apache.lucene.search.ScoreDoc[] scoreDocs> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : i0 = 0
org.apache.zeppelin.search.LuceneSearch.doSearch : i0 = 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $i3 = lengthof r6
org.apache.zeppelin.search.LuceneSearch.doSearch : $i3 = lengthof r6 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if i0 >= $i3
org.apache.zeppelin.search.LuceneSearch.doSearch : if i0 >= $i3 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r16 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.doSearch : $r16 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r17 = r6[i0]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r17 = r6[i0] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $i4 = $r17.<org.apache.lucene.search.ScoreDoc: int doc>
org.apache.zeppelin.search.LuceneSearch.doSearch : $i4 = $r17.<org.apache.lucene.search.ScoreDoc: int doc> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r19 = r6[i0]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r19 = r6[i0] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $f0 = $r19.<org.apache.lucene.search.ScoreDoc: float score>
org.apache.zeppelin.search.LuceneSearch.doSearch : $f0 = $r19.<org.apache.lucene.search.ScoreDoc: float score> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r20 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("doc={} score={}", $r18, $r20)
org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("doc={} score={}", $r18, $r20) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r21 = r6[i0]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r21 = r6[i0] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : i1 = $r21.<org.apache.lucene.search.ScoreDoc: int doc>
org.apache.zeppelin.search.LuceneSearch.doSearch : i1 = $r21.<org.apache.lucene.search.ScoreDoc: int doc> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r7 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.document.Document doc(int)>(i1)
org.apache.zeppelin.search.LuceneSearch.doSearch : r7 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.document.Document doc(int)>(i1) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r8 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("id")
org.apache.zeppelin.search.LuceneSearch.doSearch : r8 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("id") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if r8 == null
org.apache.zeppelin.search.LuceneSearch.doSearch : if r8 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r22 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.doSearch : $r22 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r23 = new java.lang.StringBuilder
org.apache.zeppelin.search.LuceneSearch.doSearch : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $i5 = i0 + 1
org.apache.zeppelin.search.LuceneSearch.doSearch : $i5 = i0 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ")
org.apache.zeppelin.search.LuceneSearch.doSearch : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>($r27)
org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r22.<org.slf4j.Logger: void debug(java.lang.String)>($r27) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r9 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("title")
org.apache.zeppelin.search.LuceneSearch.doSearch : r9 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("title") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if r9 == null
org.apache.zeppelin.search.LuceneSearch.doSearch : if r9 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r28 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.doSearch : $r28 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r29 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("title")
org.apache.zeppelin.search.LuceneSearch.doSearch : $r29 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("title") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("   Title: {}", $r29)
org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("   Title: {}", $r29) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r10 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("contents")
org.apache.zeppelin.search.LuceneSearch.doSearch : r10 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("contents") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r11 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("header")
org.apache.zeppelin.search.LuceneSearch.doSearch : r11 = virtualinvoke r7.<org.apache.lucene.document.Document: java.lang.String get(java.lang.String)>("header") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r12 = ""
org.apache.zeppelin.search.LuceneSearch.doSearch : r12 = "" >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if r10 == null
org.apache.zeppelin.search.LuceneSearch.doSearch : if r10 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r30 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : $r30 = virtualinvoke r1.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReader getIndexReader()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r13 = staticinvoke <org.apache.lucene.search.highlight.TokenSources: org.apache.lucene.analysis.TokenStream getTokenStream(org.apache.lucene.index.IndexReader,int,java.lang.String,org.apache.lucene.analysis.Analyzer)>($r30, i1, "contents", r3)
org.apache.zeppelin.search.LuceneSearch.doSearch : r13 = staticinvoke <org.apache.lucene.search.highlight.TokenSources: org.apache.lucene.analysis.TokenStream getTokenStream(org.apache.lucene.index.IndexReader,int,java.lang.String,org.apache.lucene.analysis.Analyzer)>($r30, i1, "contents", r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r14 = virtualinvoke r4.<org.apache.lucene.search.highlight.Highlighter: org.apache.lucene.search.highlight.TextFragment[] getBestTextFragments(org.apache.lucene.analysis.TokenStream,java.lang.String,boolean,int)>(r13, r10, 1, 3)
org.apache.zeppelin.search.LuceneSearch.doSearch : r14 = virtualinvoke r4.<org.apache.lucene.search.highlight.Highlighter: org.apache.lucene.search.highlight.TextFragment[] getBestTextFragments(org.apache.lucene.analysis.TokenStream,java.lang.String,boolean,int)>(r13, r10, 1, 3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r31 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.doSearch : $r31 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $i6 = lengthof r14
org.apache.zeppelin.search.LuceneSearch.doSearch : $i6 = lengthof r14 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("    {} fragments found for query \'{}\'", $r32, r2)
org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r31.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("    {} fragments found for query \'{}\'", $r32, r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : i2 = 0
org.apache.zeppelin.search.LuceneSearch.doSearch : i2 = 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $i7 = lengthof r14
org.apache.zeppelin.search.LuceneSearch.doSearch : $i7 = lengthof r14 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if i2 >= $i7
org.apache.zeppelin.search.LuceneSearch.doSearch : if i2 >= $i7 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r33 = r14[i2]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r33 = r14[i2] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if $r33 == null
org.apache.zeppelin.search.LuceneSearch.doSearch : if $r33 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r34 = r14[i2]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r34 = r14[i2] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $f1 = virtualinvoke $r34.<org.apache.lucene.search.highlight.TextFragment: float getScore()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : $f1 = virtualinvoke $r34.<org.apache.lucene.search.highlight.TextFragment: float getScore()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $b8 = $f1 cmpl 0.0F
org.apache.zeppelin.search.LuceneSearch.doSearch : $b8 = $f1 cmpl 0.0F >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if $b8 <= 0
org.apache.zeppelin.search.LuceneSearch.doSearch : if $b8 <= 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r35 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.doSearch : $r35 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r36 = r14[i2]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r36 = r14[i2] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r37 = virtualinvoke $r36.<org.apache.lucene.search.highlight.TextFragment: java.lang.String toString()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : $r37 = virtualinvoke $r36.<org.apache.lucene.search.highlight.TextFragment: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("    Fragment: {}", $r37)
org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("    Fragment: {}", $r37) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : i2 = i2 + 1
org.apache.zeppelin.search.LuceneSearch.doSearch : i2 = i2 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= $i7 = lengthof r14]
org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= $i7 = lengthof r14] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if r14 == null
org.apache.zeppelin.search.LuceneSearch.doSearch : if r14 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $i9 = lengthof r14
org.apache.zeppelin.search.LuceneSearch.doSearch : $i9 = lengthof r14 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if $i9 <= 0
org.apache.zeppelin.search.LuceneSearch.doSearch : if $i9 <= 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r38 = r14[0]
org.apache.zeppelin.search.LuceneSearch.doSearch : $r38 = r14[0] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r39 = virtualinvoke $r38.<org.apache.lucene.search.highlight.TextFragment: java.lang.String toString()>()
org.apache.zeppelin.search.LuceneSearch.doSearch : $r39 = virtualinvoke $r38.<org.apache.lucene.search.highlight.TextFragment: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= r12 = $r39]
org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= r12 = $r39] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r12 = $r39
org.apache.zeppelin.search.LuceneSearch.doSearch : r12 = $r39 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : if r11 == null
org.apache.zeppelin.search.LuceneSearch.doSearch : if r11 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : r45 = ""
org.apache.zeppelin.search.LuceneSearch.doSearch : r45 = "" >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : $r46 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("id", r8, "name", r9, "snippet", r12, "text", r10, "header", r45)
org.apache.zeppelin.search.LuceneSearch.doSearch : $r46 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("id", r8, "name", r9, "snippet", r12, "text", r10, "header", r45) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r46)
org.apache.zeppelin.search.LuceneSearch.doSearch : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r46) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= i0 = i0 + 1]
org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= i0 = i0 + 1] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : i0 = i0 + 1
org.apache.zeppelin.search.LuceneSearch.doSearch : i0 = i0 + 1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= $i3 = lengthof r6]
org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= $i3 = lengthof r6] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= return r5]
org.apache.zeppelin.search.LuceneSearch.doSearch : goto [?= return r5] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.doSearch : return r5
org.apache.zeppelin.search.LuceneSearch.doSearch : return r5 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : virtualinvoke r3.<org.apache.lucene.index.IndexReader: void close()>()
org.apache.zeppelin.search.LuceneSearch.query : virtualinvoke r3.<org.apache.lucene.index.IndexReader: void close()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : if r3 == null
org.apache.zeppelin.search.LuceneSearch.query : if r3 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : if r4 == null
org.apache.zeppelin.search.LuceneSearch.query : if r4 == null >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : goto [?= (branch)]
org.apache.zeppelin.search.LuceneSearch.query : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : goto [?= return r2]
org.apache.zeppelin.search.LuceneSearch.query : goto [?= return r2] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : return r2
org.apache.zeppelin.search.LuceneSearch.query : return r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearchTest.resultForQuery : return $r3
org.apache.zeppelin.search.LuceneSearchTest.resultForQuery : return $r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void deleteDoc(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>(r1, null)
org.apache.zeppelin.search.LuceneSearch.deleteIndexDocs : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void deleteDoc(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>(r1, null) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : if null != r1
org.apache.zeppelin.search.LuceneSearch.deleteDoc : if null != r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r8 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r8 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : r3 = staticinvoke <org.apache.zeppelin.search.LuceneSearch: java.lang.String formatDeleteId(java.lang.String,org.apache.zeppelin.notebook.Paragraph)>($r8, r2)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : r3 = staticinvoke <org.apache.zeppelin.search.LuceneSearch: java.lang.String formatDeleteId(java.lang.String,org.apache.zeppelin.notebook.Paragraph)>($r8, r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : r2 = r0
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : r2 = r0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : if null == r1
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : if null == r1 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : $r7 = new java.lang.StringBuilder
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*")
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.formatDeleteId : return r6
org.apache.zeppelin.search.LuceneSearch.formatDeleteId : return r6 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r9 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r9 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r10 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r10 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r11 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r11 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $i0 = virtualinvoke $r11.<org.apache.lucene.index.IndexWriter: int numDocs()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $i0 = virtualinvoke $r11.<org.apache.lucene.index.IndexWriter: int numDocs()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Deleting note {}, out of: {}", $r10, $r12)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Deleting note {}, out of: {}", $r10, $r12) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r13 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r13 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r14 = newarray (org.apache.lucene.search.Query)[1]
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r14 = newarray (org.apache.lucene.search.Query)[1] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r4 = new org.apache.lucene.search.WildcardQuery
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r4 = new org.apache.lucene.search.WildcardQuery >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r5 = new org.apache.lucene.index.Term
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r5 = new org.apache.lucene.index.Term >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : specialinvoke $r5.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>("id", r3)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : specialinvoke $r5.<org.apache.lucene.index.Term: void <init>(java.lang.String,java.lang.String)>("id", r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : specialinvoke $r4.<org.apache.lucene.search.WildcardQuery: void <init>(org.apache.lucene.index.Term)>($r5)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : specialinvoke $r4.<org.apache.lucene.search.WildcardQuery: void <init>(org.apache.lucene.index.Term)>($r5) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r14[0] = $r4
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r14[0] = $r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : virtualinvoke $r13.<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.search.Query[])>($r14)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : virtualinvoke $r13.<org.apache.lucene.index.IndexWriter: void deleteDocuments(org.apache.lucene.search.Query[])>($r14) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r15 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r15 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : virtualinvoke $r15.<org.apache.lucene.index.IndexWriter: void commit()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : virtualinvoke $r15.<org.apache.lucene.index.IndexWriter: void commit()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : goto [?= $r19 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>]
org.apache.zeppelin.search.LuceneSearch.deleteDoc : goto [?= $r19 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r19 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r19 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r20 = new java.lang.StringBuilder
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r20 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done, index contains {} docs now")
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done, index contains {} docs now") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r22 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer>
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r22 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.index.IndexWriter writer> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $i1 = virtualinvoke $r22.<org.apache.lucene.index.IndexWriter: int numDocs()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $i1 = virtualinvoke $r22.<org.apache.lucene.index.IndexWriter: int numDocs()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.search.LuceneSearch.deleteDoc : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.deleteDoc : interfaceinvoke $r19.<org.slf4j.Logger: void debug(java.lang.String)>($r24)
