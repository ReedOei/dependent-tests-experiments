org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Stopping mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.stop : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : virtualinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : interfaceinvoke $r1.<org.slf4j.Logger: void info(java.lang.String)>("Starting mock echo websocket server") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r2.<org.eclipse.jetty.server.Server: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor> = $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor> = $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r2 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8090)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : specialinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: void <init>(int)>(8090) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> = $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer echoServer> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClientTest.startWebsocketServer : interfaceinvoke $r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : r1 = $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : r1 = $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Couldn\'t start mock echo websocket server", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.run : interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Couldn\'t start mock echo websocket server", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : if $r4 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : if $r4 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : $r6 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : return $r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.initialize : return $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient zeppelinhubClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r2.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : virtualinvoke $r2.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : virtualinvoke $r2.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 23)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 23) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l2 = (long) i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $l3 = (long) i1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l2, $l3, $r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.add : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r1, $l2, $l3, $r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.start : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r3 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : $r4 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient zeppelinClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client.start : virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.eclipse.jetty.websocket.client.WebSocketClient wsClient> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r3.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : virtualinvoke $r3.<org.eclipse.jetty.websocket.client.WebSocketClient: void start()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: void addRoutines()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService schedulerService> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat newInstance(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: void add(java.lang.Runnable,int,int)>($r2, 10, 60) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r3 = new java.util.Timer
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r3 = new java.util.Timer >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r3.<java.util.Timer: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r3.<java.util.Timer: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r4 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : $r4 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : specialinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r4, 5000L)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.addRoutines : virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r4, 5000L) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= (branch)]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= return]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinClient.start : goto [?= return] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Running paragraph with noteId {}", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Running paragraph with noteId {}", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r9 = new com.amazonaws.util.json.JSONObject
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r9 = new com.amazonaws.util.json.JSONObject >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r9.<com.amazonaws.util.json.JSONObject: void <init>(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r9.<com.amazonaws.util.json.JSONObject: void <init>(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer: org.eclipse.jetty.server.Server server> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.mock.MockEchoWebsocketServer.start : virtualinvoke $r3.<org.eclipse.jetty.server.Server: void join()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r4 = $r9
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r4 = $r9 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r10 = <com.amazonaws.util.json.JSONObject: java.lang.Object NULL>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r10 = <com.amazonaws.util.json.JSONObject: java.lang.Object NULL> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r10)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z0 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r11 = virtualinvoke r4.<com.amazonaws.util.json.JSONObject: java.lang.Object get(java.lang.String)>("data")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r11 = virtualinvoke r4.<com.amazonaws.util.json.JSONObject: java.lang.Object get(java.lang.String)>("data") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z1 = $r11 instanceof com.amazonaws.util.json.JSONArray
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z1 = $r11 instanceof com.amazonaws.util.json.JSONArray >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z1 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.Client getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if r5 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if r5 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r14 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r14 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r15 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP RUN_PARAGRAPH>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r15 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP RUN_PARAGRAPH> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r14.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r15)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r14.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r15) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r6 = $r14
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r6 = $r14 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r7 = virtualinvoke r4.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONArray getJSONArray(java.lang.String)>("data")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r7 = virtualinvoke r4.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONArray getJSONArray(java.lang.String)>("data") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r16 = virtualinvoke r4.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONObject getJSONObject(java.lang.String)>("meta")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r16 = virtualinvoke r4.<com.amazonaws.util.json.JSONObject: com.amazonaws.util.json.JSONObject getJSONObject(java.lang.String)>("meta") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r8 = virtualinvoke $r16.<com.amazonaws.util.json.JSONObject: java.lang.String getString(java.lang.String)>("owner")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : r8 = virtualinvoke $r16.<com.amazonaws.util.json.JSONObject: java.lang.String getString(java.lang.String)>("owner") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : i0 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : i0 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $i1 = virtualinvoke r7.<com.amazonaws.util.json.JSONArray: int length()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $i1 = virtualinvoke r7.<com.amazonaws.util.json.JSONArray: int length()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if i0 >= $i1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if i0 >= $i1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r17 = virtualinvoke r7.<com.amazonaws.util.json.JSONArray: java.lang.Object get(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r17 = virtualinvoke r7.<com.amazonaws.util.json.JSONArray: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z4 = $r17 instanceof com.amazonaws.util.json.JSONObject
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $z4 = $r17 instanceof com.amazonaws.util.json.JSONObject >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z4 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : if $z4 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r19 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r19 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r20 = virtualinvoke r7.<com.amazonaws.util.json.JSONArray: java.lang.String getString(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r20 = virtualinvoke r7.<com.amazonaws.util.json.JSONArray: java.lang.String getString(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r21 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : $r21 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.runAllParagraph : specialinvoke $r21.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient$1: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
