org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r11 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r11 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z0 = virtualinvoke $r11.<java.io.File: boolean isFile()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z0 = virtualinvoke $r11.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z0 != 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r18 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r18 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r18)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r18) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+(\\S+)\\s+(.*)")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+(\\S+)\\s+(.*)") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r5 = r3
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r5 = r3 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i1 = lengthof r5
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i1 = lengthof r5 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if i2 >= i1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if i2 >= i1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r6 = r5[i2]
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r6 = r5[i2] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = i0 + 1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = i0 + 1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if r6 == null
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i3 = virtualinvoke r6.<java.lang.String: int length()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i3 = virtualinvoke r6.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i3 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("#")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("#") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z1 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r7 = virtualinvoke r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r7 = virtualinvoke r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i4 = virtualinvoke r7.<java.util.regex.Matcher: int groupCount()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i4 = virtualinvoke r7.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i4 == 3
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i4 == 3 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : virtualinvoke r7.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : virtualinvoke r7.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r8 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r8 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r9 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r9 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r10 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r10 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r26 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r26 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r27 = new org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r27 = new org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : specialinvoke $r27.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : specialinvoke $r27.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r27)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = i2 + 1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = i2 + 1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : goto [?= (branch)]
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r3 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r3 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : if $z0 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : r2 = (org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo) $r4
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : r2 = (org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo) $r4 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r5 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String name>
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r5 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String name> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r6 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String artifact>
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : $r6 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String artifact> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : virtualinvoke r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: void install(java.lang.String,java.lang.String)>($r5, $r6)
org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : virtualinvoke r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: void install(java.lang.String,java.lang.String)>($r5, $r6) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r3 = new org.apache.zeppelin.dep.DependencyResolver
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r3 = new org.apache.zeppelin.dep.DependencyResolver >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r7 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.lang.String localRepoDir>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r7 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.lang.String localRepoDir> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r3.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r3.<org.apache.zeppelin.dep.DependencyResolver: void <init>(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r4 = $r3
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r4 = $r3 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r8 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.net.URL proxyUrl>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r8 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.net.URL proxyUrl> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $r8 == null
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $r8 == null >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r12 = new java.io.File
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r12 = new java.io.File >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r13 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterBaseDir>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r13 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterBaseDir> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, r1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r13, r1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r5 = $r12
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : r5 = $r12 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z0 = virtualinvoke r5.<java.io.File: boolean exists()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $z0 = virtualinvoke r5.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $z0 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r22 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r22 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r23 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r29 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r29 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ... ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r32)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r32) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke r4.<org.apache.zeppelin.dep.DependencyResolver: java.util.List load(java.lang.String,java.io.File)>(r2, r5)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke r4.<org.apache.zeppelin.dep.DependencyResolver: java.util.List load(java.lang.String,java.io.File)>(r2, r5) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r34 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r34 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r35 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r35 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : specialinvoke $r35.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Interpreter ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installed under ")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" installed under ") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r39 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r39 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r42)
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r42) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : staticinvoke <org.apache.zeppelin.interpreter.install.InstallInterpreter: void startTip()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : staticinvoke <org.apache.zeppelin.interpreter.install.InstallInterpreter: void startTip()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : $r0 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : $r0 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("\n1. Restart Zeppelin\n2. Create interpreter setting in \'Interpreter\' menu on Zeppelin GUI\n3. Then you can bind the interpreter on your note")
org.apache.zeppelin.interpreter.install.InstallInterpreter.startTip : virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("\n1. Restart Zeppelin\n2. Create interpreter setting in \'Interpreter\' menu on Zeppelin GUI\n3. Then you can bind the interpreter on your note") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.install : goto [?= return]
org.apache.zeppelin.interpreter.install.InstallInterpreter.install : goto [?= return] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.installAll : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
