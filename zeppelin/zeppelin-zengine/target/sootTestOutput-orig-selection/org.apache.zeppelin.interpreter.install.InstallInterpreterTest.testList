org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r11 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r11 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z0 = virtualinvoke $r11.<java.io.File: boolean isFile()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z0 = virtualinvoke $r11.<java.io.File: boolean isFile()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z0 != 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z0 != 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r18 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r18 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.io.File interpreterListFile> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r18)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r18) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+(\\S+)\\s+(.*)")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\S+)\\s+(\\S+)\\s+(.*)") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r5 = r3
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r5 = r3 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i1 = lengthof r5
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i1 = lengthof r5 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if i2 >= i1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if i2 >= i1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r6 = r5[i2]
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r6 = r5[i2] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = i0 + 1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i0 = i0 + 1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if r6 == null
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if r6 == null >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i3 = virtualinvoke r6.<java.lang.String: int length()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i3 = virtualinvoke r6.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i3 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i3 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("#")
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("#") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z1 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $z1 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r7 = virtualinvoke r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r7 = virtualinvoke r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i4 = virtualinvoke r7.<java.util.regex.Matcher: int groupCount()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $i4 = virtualinvoke r7.<java.util.regex.Matcher: int groupCount()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i4 == 3
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : if $i4 == 3 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : virtualinvoke r7.<java.util.regex.Matcher: boolean find()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : virtualinvoke r7.<java.util.regex.Matcher: boolean find()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r8 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r8 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(1) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r9 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(2)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r9 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(2) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r10 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(3)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : r10 = virtualinvoke r7.<java.util.regex.Matcher: java.lang.String group(int)>(3) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r26 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r26 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r27 = new org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : $r27 = new org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : specialinvoke $r27.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : specialinvoke $r27.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r8, r9, r10) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r27)
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r27) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = i2 + 1
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : i2 = i2 + 1 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : goto [?= (branch)]
org.apache.zeppelin.interpreter.install.InstallInterpreter.readAvailableInterpreters : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r4 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r4 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : if $z0 == 0
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : if $z0 == 0 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : r2 = (org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo) $r5
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : r2 = (org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo) $r5 >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r6 = <java.lang.System: java.io.PrintStream out>
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r6 = <java.lang.System: java.io.PrintStream out> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r7 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String name>
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r7 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String name> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t\t")
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t\t") >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r10 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String description>
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r10 = r2.<org.apache.zeppelin.interpreter.install.InstallInterpreter$AvailableInterpreterInfo: java.lang.String description> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12)
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r12) >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r13 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters>
org.apache.zeppelin.interpreter.install.InstallInterpreter.list : $r13 = r0.<org.apache.zeppelin.interpreter.install.InstallInterpreter: java.util.List availableInterpreters> >>>>>>>> org.apache.zeppelin.interpreter.install.InstallInterpreter.list : return $r13
