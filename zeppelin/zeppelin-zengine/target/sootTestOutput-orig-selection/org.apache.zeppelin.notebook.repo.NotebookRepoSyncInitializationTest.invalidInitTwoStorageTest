org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z2
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r7
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r7 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getMaxRepoNum : return 2
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getMaxRepoNum : return 2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookDir : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_NOTEBOOK_DIR>
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookDir : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_NOTEBOOK_DIR> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookDir : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookDir : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookDir : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookDir : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r3 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r3 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isWindowsPath(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isWindowsPath(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^[A-Za-z]:\\\\.*")
org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^[A-Za-z]:\\\\.*") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : return $z0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : if $z0 == 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r6 = new java.net.URI
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r6 = new java.net.URI >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : specialinvoke $r6.<java.net.URI: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : specialinvoke $r6.<java.net.URI: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> = $r6
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> = $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : goto [?= $r9 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>]
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : goto [?= $r9 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>] >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r9 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r9 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r10 = virtualinvoke $r9.<java.net.URI: java.lang.String getScheme()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r10 = virtualinvoke $r9.<java.net.URI: java.lang.String getScheme()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : if $r10 != null
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : if $r10 != null >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r11 = new java.io.File
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r11 = new java.io.File >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r12 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r12 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r13 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r13 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r14 = virtualinvoke $r13.<java.net.URI: java.lang.String getPath()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r14 = virtualinvoke $r13.<java.net.URI: java.lang.String getPath()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r15 = virtualinvoke $r12.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getRelativeDir(java.lang.String)>($r14)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r15 = virtualinvoke $r12.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getRelativeDir(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if r1 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if r1 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if $z0 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if $z0 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : return r1
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : return r1 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r15)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r16 = $r11
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r16 = $r11 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r17 = virtualinvoke r16.<java.io.File: java.net.URI toURI()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r17 = virtualinvoke r16.<java.io.File: java.net.URI toURI()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> = $r17
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> = $r17 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r18 = staticinvoke <org.apache.commons.vfs2.VFS: org.apache.commons.vfs2.FileSystemManager getManager()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r18 = staticinvoke <org.apache.commons.vfs2.VFS: org.apache.commons.vfs2.FileSystemManager getManager()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileSystemManager fsManager> = $r18
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileSystemManager fsManager> = $r18 >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r19 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileSystemManager fsManager>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r19 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: org.apache.commons.vfs2.FileSystemManager fsManager> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r20 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot>
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r20 = r0.<org.apache.zeppelin.notebook.repo.VFSNotebookRepo: java.net.URI filesystemRoot> >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r21 = virtualinvoke $r20.<java.net.URI: java.lang.String getPath()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $r21 = virtualinvoke $r20.<java.net.URI: java.lang.String getPath()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r22 = interfaceinvoke $r19.<org.apache.commons.vfs2.FileSystemManager: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String)>($r21)
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : r22 = interfaceinvoke $r19.<org.apache.commons.vfs2.FileSystemManager: org.apache.commons.vfs2.FileObject resolveFile(java.lang.String)>($r21) >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $z1 = interfaceinvoke r22.<org.apache.commons.vfs2.FileObject: boolean exists()>()
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : $z1 = interfaceinvoke r22.<org.apache.commons.vfs2.FileObject: boolean exists()>() >>>>>>>> org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : if $z1 != 0
org.apache.zeppelin.notebook.repo.VFSNotebookRepo.setNotebookDirectory : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepoCount : $r1 = r0.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: java.util.List repos>
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepoCount : $r1 = r0.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: java.util.List repos> >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepoCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepoCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepoCount : return $i0
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepoCount : return $i0 >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : if i0 < 0
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : if i0 < 0 >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $i1 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: int getRepoCount()>()
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $i1 = virtualinvoke r0.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: int getRepoCount()>() >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : if i0 < $i1
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : if i0 < $i1 >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $r9 = r0.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: java.util.List repos>
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $r9 = r0.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: java.util.List repos> >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0)
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $r11 = (org.apache.zeppelin.notebook.repo.NotebookRepo) $r10
org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : $r11 = (org.apache.zeppelin.notebook.repo.NotebookRepo) $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.NotebookRepoSync.getRepo : return $r11
