org.apache.zeppelin.notebook.Folder.getNotes : $r1 = new java.util.LinkedList
org.apache.zeppelin.notebook.Folder.getParentFolderId : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: boolean isRoot()>()
org.apache.zeppelin.notebook.Folder.getParentFolderId : if i0 >= 0 goto $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.getParentFolderId : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.getParentFolderId : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.addNotes : exitmonitor r2
org.apache.zeppelin.notebook.Folder.addNotes : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Folder.addNotes : $r6 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.rename : $r12 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.rename : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: boolean isRoot()>()
org.apache.zeppelin.notebook.Folder.rename : exitmonitor r3
org.apache.zeppelin.notebook.Folder.rename : $r10 = <org.apache.zeppelin.notebook.Folder: org.slf4j.Logger logger>
org.apache.zeppelin.notebook.Folder.rename : r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.rename : virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: void notifyRenamed(java.lang.String)>(r2)
org.apache.zeppelin.notebook.Folder.rename : $r21 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.rename : $r13 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes>
org.apache.zeppelin.notebook.Folder.rename : $r9 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r1)
org.apache.zeppelin.notebook.Folder.hasChild : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.isRoot : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.getNotesRecursively : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.util.List getNotes()>()
org.apache.zeppelin.notebook.Folder.getNotesRecursively : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.getNotesRecursively : return r1
org.apache.zeppelin.notebook.Folder.normalizeFolderId : return r3
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//", "/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $i1 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0)
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("///")
org.apache.zeppelin.notebook.Folder.notifyRenamed : $r4 = r0.<org.apache.zeppelin.notebook.Folder: java.util.List listeners>
org.apache.zeppelin.notebook.Folder.getId : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.lang.String id>
