org.apache.zeppelin.search.LuceneSearch.query : $r13 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : if null != $r13
org.apache.zeppelin.search.LuceneSearch.query : if null != $r13 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>()
org.apache.zeppelin.search.LuceneSearch.query : r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r15 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory>
org.apache.zeppelin.search.LuceneSearch.query : $r15 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r3 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>($r15)
org.apache.zeppelin.search.LuceneSearch.query : r3 = staticinvoke <org.apache.lucene.index.DirectoryReader: org.apache.lucene.index.DirectoryReader open(org.apache.lucene.store.Directory)>($r15) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : r36 = $r35
org.apache.zeppelin.search.LuceneSearch.query : r36 = $r35 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r37 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.query : $r37 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : $r38 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory>
org.apache.zeppelin.search.LuceneSearch.query : $r38 = r0.<org.apache.zeppelin.search.LuceneSearch: org.apache.lucene.store.Directory ramDirectory> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to open index dir {}, make sure indexing finished OK", $r38, r36)
org.apache.zeppelin.search.LuceneSearch.query : interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Failed to open index dir {}, make sure indexing finished OK", $r38, r36) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : goto [?= return r2]
org.apache.zeppelin.search.LuceneSearch.query : goto [?= return r2] >>>>>>>> org.apache.zeppelin.search.LuceneSearch.query : return r2
org.apache.zeppelin.search.LuceneSearch.query : return r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.addParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.addParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r1, $i0)
org.apache.zeppelin.notebook.Note.addParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r1, $i0) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4
org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4
org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1)
org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2
org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>]
org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>] >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>
org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null
org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info>
org.apache.zeppelin.notebook.Note.getInfo : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info> >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : if $r2 != null
org.apache.zeppelin.notebook.Note.getInfo : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info>
org.apache.zeppelin.notebook.Note.getInfo : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info> >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : return $r3
org.apache.zeppelin.notebook.Note.getInfo : return $r3 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void updateIndexNoteName(org.apache.zeppelin.notebook.Note)>(r1)
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void updateIndexNoteName(org.apache.zeppelin.notebook.Note)>(r1) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : r2 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : r2 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>()
org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Note.isNameEmpty : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.notebook.Note.isNameEmpty : $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : return $z0
org.apache.zeppelin.notebook.Note.isNameEmpty : return $z0 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : if $z0 == 0
org.apache.zeppelin.notebook.Note.getName : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getName : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> >>>>>>>> org.apache.zeppelin.notebook.Note.getId : return $r1
org.apache.zeppelin.notebook.Note.getId : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = $r1
org.apache.zeppelin.notebook.Note.getName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.getName : return $r2
org.apache.zeppelin.notebook.Note.getName : return $r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : r3 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : $r4 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : $r4 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing Notebook {}, \'{}\'", r3, r2)
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Indexing Notebook {}, \'{}\'", r3, r2) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : if null == r2
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : if null == r2 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : $r5 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG>
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : $r5 = <org.apache.zeppelin.search.LuceneSearch: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Skipping empty notebook name")
org.apache.zeppelin.search.LuceneSearch.updateIndexNoteName : interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>("Skipping empty notebook name") >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>()
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.util.List getParagraphs()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getParagraphs : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : r1 = $r3
org.apache.zeppelin.notebook.Note.getParagraphs : r1 = $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : entermonitor $r3
org.apache.zeppelin.notebook.Note.getParagraphs : entermonitor $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r4 = new java.util.LinkedList
org.apache.zeppelin.notebook.Note.getParagraphs : $r4 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getParagraphs : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r5)
org.apache.zeppelin.notebook.Note.getParagraphs : specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : exitmonitor r1
org.apache.zeppelin.notebook.Note.getParagraphs : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : return $r4
org.apache.zeppelin.notebook.Note.getParagraphs : return $r4 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : if $z0 == 0
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : if $z0 == 0 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : r3 = (org.apache.zeppelin.notebook.Paragraph) $r5
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : r3 = (org.apache.zeppelin.notebook.Paragraph) $r5 >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void updateIndexParagraph(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>(r1, r3)
org.apache.zeppelin.search.LuceneSearch.updateIndexDoc : specialinvoke r0.<org.apache.zeppelin.search.LuceneSearch: void updateIndexParagraph(org.apache.zeppelin.notebook.Note,org.apache.zeppelin.notebook.Paragraph)>(r1, r3) >>>>>>>> org.apache.zeppelin.search.LuceneSearch.updateIndexParagraph : $r3 = virtualinvoke r2.<org.apache.zeppelin.notebook.Paragraph: java.lang.String getText()>()
