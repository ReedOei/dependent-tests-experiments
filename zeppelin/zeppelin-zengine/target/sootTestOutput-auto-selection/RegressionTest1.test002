org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $r1 = new java.util.LinkedList
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $r1 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : specialinvoke $r1.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : specialinvoke $r1.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : r2 = $r1
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : r2 = $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $r8 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $r8 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : r3 = $r8
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : r3 = $r8 >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : entermonitor $r8
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : entermonitor $r8 >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $r9 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $r9 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : r4 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : if $z0 == 0
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : exitmonitor r3
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : exitmonitor r3 >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : goto [?= return r2]
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : goto [?= return r2] >>>>>>>> org.apache.zeppelin.notebook.Note.generateParagraphsInfo : return r2
org.apache.zeppelin.notebook.Note.generateParagraphsInfo : return r2 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $r2 = new org.apache.zeppelin.notebook.Note
org.apache.zeppelin.notebook.Note.getUserNote : $r2 = new org.apache.zeppelin.notebook.Note >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : specialinvoke $r2.<org.apache.zeppelin.notebook.Note: void <init>()>()
org.apache.zeppelin.notebook.Note.getUserNote : specialinvoke $r2.<org.apache.zeppelin.notebook.Note: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : r3 = $r2
org.apache.zeppelin.notebook.Note.getUserNote : r3 = $r2 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r7 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getName()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>()
org.apache.zeppelin.notebook.Note.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: boolean isNameEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.isNameEmpty : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Note.isNameEmpty : $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.notebook.Note.isNameEmpty : $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isNameEmpty : return $z0
org.apache.zeppelin.notebook.Note.isNameEmpty : return $z0 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : if $z0 == 0
org.apache.zeppelin.notebook.Note.getName : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getName : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id>
org.apache.zeppelin.notebook.Note.getId : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String id> >>>>>>>> org.apache.zeppelin.notebook.Note.getId : return $r1
org.apache.zeppelin.notebook.Note.getId : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = $r1
org.apache.zeppelin.notebook.Note.getName : r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> = $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name>
org.apache.zeppelin.notebook.Note.getName : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.lang.String name> >>>>>>>> org.apache.zeppelin.notebook.Note.getName : return $r2
org.apache.zeppelin.notebook.Note.getName : return $r2 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.lang.String name> = $r7
org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.lang.String name> = $r7 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $r8 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r8 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.lang.String id> = $r8
org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.lang.String id> = $r8 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r9 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.notebook.Note.getConfig : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config> >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : if $r2 != null
org.apache.zeppelin.notebook.Note.getConfig : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.notebook.Note.getConfig : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config> >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : return $r3
org.apache.zeppelin.notebook.Note.getConfig : return $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.util.Map config> = $r9
org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.util.Map config> = $r9 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getAngularObjects()>()
org.apache.zeppelin.notebook.Note.getUserNote : $r10 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getAngularObjects()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getAngularObjects : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects>
org.apache.zeppelin.notebook.Note.getAngularObjects : $r1 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects> >>>>>>>> org.apache.zeppelin.notebook.Note.getAngularObjects : return $r1
org.apache.zeppelin.notebook.Note.getAngularObjects : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects> = $r10
org.apache.zeppelin.notebook.Note.getUserNote : r3.<org.apache.zeppelin.notebook.Note: java.util.Map angularObjects> = $r10 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $r11 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getUserNote : $r11 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.Note.getUserNote : r4 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.Note.getUserNote : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : if $z0 == 0
org.apache.zeppelin.notebook.Note.getUserNote : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Note.getUserNote : return r3
org.apache.zeppelin.notebook.Note.getUserNote : return r3 >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Note.isPersonalizedMode : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("personalizedMode")
org.apache.zeppelin.notebook.Note.isPersonalizedMode : r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("personalizedMode") >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : if null == r1
org.apache.zeppelin.notebook.Note.isPersonalizedMode : if null == r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : $z1 = 0
org.apache.zeppelin.notebook.Note.isPersonalizedMode : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : return $z1
org.apache.zeppelin.notebook.Note.isPersonalizedMode : return $z1 >>>>>>>> org.apache.zeppelin.notebook.Note.onOutputAppend : $r4 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory>
org.apache.zeppelin.notebook.Note.onOutputAppend : $r4 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory> >>>>>>>> org.apache.zeppelin.notebook.Note.onOutputAppend : if $r4 == null
org.apache.zeppelin.notebook.Note.onOutputAppend : if $r4 == null >>>>>>>> org.apache.zeppelin.notebook.Note.isLastParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.isLastParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.isLastParagraph : $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.notebook.Note.isLastParagraph : $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.Note.isLastParagraph : if $z0 != 0
org.apache.zeppelin.notebook.Note.isLastParagraph : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isLastParagraph : return 1
