org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Sending PING to zeppelinhub token")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Sending PING to zeppelinhub token") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r5 = virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.List getAllTokens()>()
