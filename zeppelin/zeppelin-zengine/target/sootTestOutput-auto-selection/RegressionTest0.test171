org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : if $r0 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : if $r0 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : return $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.getInstance : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : $r1 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.close : interfaceinvoke $r1.<java.util.concurrent.ScheduledExecutorService: void shutdown()>()
