org.apache.zeppelin.notebook.Folder.countNotes : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes> >>>>>>>> org.apache.zeppelin.notebook.Folder.countNotes : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
org.apache.zeppelin.notebook.Folder.countNotes : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.countNotes : return $i0
org.apache.zeppelin.notebook.Folder.countNotes : return $i0 >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: boolean isRoot()>()
org.apache.zeppelin.notebook.Folder.getName : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: boolean isRoot()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.isRoot : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.isRoot : $r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getId : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.lang.String id>
org.apache.zeppelin.notebook.Folder.getId : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.lang.String id> >>>>>>>> org.apache.zeppelin.notebook.Folder.getId : return $r1
org.apache.zeppelin.notebook.Folder.getId : return $r1 >>>>>>>> org.apache.zeppelin.notebook.Folder.isRoot : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/")
org.apache.zeppelin.notebook.Folder.isRoot : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/") >>>>>>>> org.apache.zeppelin.notebook.Folder.isRoot : return $z0
org.apache.zeppelin.notebook.Folder.isRoot : return $z0 >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : if $z0 == 0
org.apache.zeppelin.notebook.Folder.getName : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>()
org.apache.zeppelin.notebook.Folder.getName : r1 = virtualinvoke r0.<org.apache.zeppelin.notebook.Folder: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/")
org.apache.zeppelin.notebook.Folder.getName : i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/") >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : if i0 >= 0
org.apache.zeppelin.notebook.Folder.getName : if i0 >= 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : $i1 = i0 + 1
org.apache.zeppelin.notebook.Folder.getName : $i1 = i0 + 1 >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1)
org.apache.zeppelin.notebook.Folder.getName : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1) >>>>>>>> org.apache.zeppelin.notebook.Folder.getName : return $r2
