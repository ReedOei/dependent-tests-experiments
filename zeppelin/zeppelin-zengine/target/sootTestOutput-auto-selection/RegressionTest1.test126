org.apache.zeppelin.notebook.Folder.countNotes : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map notes> >>>>>>>> org.apache.zeppelin.notebook.Folder.countNotes : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
org.apache.zeppelin.notebook.Folder.countNotes : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.countNotes : return $i0
org.apache.zeppelin.notebook.Folder.countNotes : return $i0 >>>>>>>> org.apache.zeppelin.notebook.Folder.hasChild : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children>
org.apache.zeppelin.notebook.Folder.hasChild : $r1 = r0.<org.apache.zeppelin.notebook.Folder: java.util.Map children> >>>>>>>> org.apache.zeppelin.notebook.Folder.hasChild : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>()
org.apache.zeppelin.notebook.Folder.hasChild : $i0 = interfaceinvoke $r1.<java.util.Map: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.hasChild : if $i0 <= 0
org.apache.zeppelin.notebook.Folder.hasChild : if $i0 <= 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.hasChild : $z0 = 0
org.apache.zeppelin.notebook.Folder.hasChild : $z0 = 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.hasChild : return $z0
