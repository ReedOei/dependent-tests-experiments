org.apache.zeppelin.helium.HeliumApplicationFactory.run : $r4 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.run : $r3 = new org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication
org.apache.zeppelin.helium.HeliumApplicationFactory.run : $r3 = new org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.run : specialinvoke $r3.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: void <init>(org.apache.zeppelin.helium.HeliumApplicationFactory,org.apache.zeppelin.notebook.Paragraph,java.lang.String)>(r0, r1, r2)
org.apache.zeppelin.helium.HeliumApplicationFactory.run : specialinvoke $r3.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: void <init>(org.apache.zeppelin.helium.HeliumApplicationFactory,org.apache.zeppelin.notebook.Paragraph,java.lang.String)>(r0, r1, r2) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.run : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3)
org.apache.zeppelin.helium.HeliumApplicationFactory.run : interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : r1 = null
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : r1 = null >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r3 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: org.apache.zeppelin.notebook.Paragraph paragraph>
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r3 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: org.apache.zeppelin.notebook.Paragraph paragraph> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r4 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: java.lang.String appId>
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r4 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: java.lang.String appId> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : r1 = virtualinvoke $r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.ApplicationState getApplicationState(java.lang.String)>($r4)
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : r1 = virtualinvoke $r3.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.notebook.ApplicationState getApplicationState(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : r2 = $r10
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : r2 = $r10 >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r11 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: org.apache.zeppelin.helium.HeliumApplicationFactory this$0>
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r11 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication: org.apache.zeppelin.helium.HeliumApplicationFactory this$0> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r12 = staticinvoke <org.apache.zeppelin.helium.HeliumApplicationFactory: org.slf4j.Logger access$000(org.apache.zeppelin.helium.HeliumApplicationFactory)>($r11)
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r12 = staticinvoke <org.apache.zeppelin.helium.HeliumApplicationFactory: org.slf4j.Logger access$000(org.apache.zeppelin.helium.HeliumApplicationFactory)>($r11) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.access$000 : $r1 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.slf4j.Logger logger>
org.apache.zeppelin.helium.HeliumApplicationFactory.access$000 : $r1 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.access$000 : return $r1
org.apache.zeppelin.helium.HeliumApplicationFactory.access$000 : return $r1 >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r13 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : $r13 = virtualinvoke r2.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r13, r2)
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r13, r2) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : if r1 == null
org.apache.zeppelin.helium.HeliumApplicationFactory$RunApplication.run : if r1 == null >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : r5 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.apache.zeppelin.notebook.ApplicationState getAppState(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3)
org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : r5 = specialinvoke r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.apache.zeppelin.notebook.ApplicationState getAppState(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.getAppState : $r7 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.helium.HeliumApplicationFactory.getAppState : $r7 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.getAppState : if $r7 != null
org.apache.zeppelin.helium.HeliumApplicationFactory.getAppState : if $r7 != null >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.getAppState : return null
org.apache.zeppelin.helium.HeliumApplicationFactory.getAppState : return null >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : if r5 == null
org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : if r5 == null >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : $r6 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.slf4j.Logger logger>
org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : $r6 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Can\'t find app {}", r3)
org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : interfaceinvoke $r6.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Can\'t find app {}", r3) >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : $r7 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener>
org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : $r7 = r0.<org.apache.zeppelin.helium.HeliumApplicationFactory: org.apache.zeppelin.helium.ApplicationEventListener applicationEventListener> >>>>>>>> org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : if $r7 == null
org.apache.zeppelin.helium.HeliumApplicationFactory.onOutputAppend : if $r7 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.addParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.addParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r1, $i0)
org.apache.zeppelin.notebook.Note.addParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r1, $i0) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4
org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4
org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1)
org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2
org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>]
org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>] >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>
org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null
org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info>
org.apache.zeppelin.notebook.Note.getInfo : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info> >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : if $r2 != null
org.apache.zeppelin.notebook.Note.getInfo : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info>
org.apache.zeppelin.notebook.Note.getInfo : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info> >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : return $r3
org.apache.zeppelin.notebook.Note.getInfo : return $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.onProgressUpdate : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory>
org.apache.zeppelin.notebook.Note.onProgressUpdate : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory> >>>>>>>> org.apache.zeppelin.notebook.Note.onProgressUpdate : if $r3 == null
org.apache.zeppelin.notebook.Note.onProgressUpdate : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>()
org.apache.zeppelin.notebook.Note.isPersonalizedMode : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.Note: java.util.Map getConfig()>() >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.notebook.Note.getConfig : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config> >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : if $r2 != null
org.apache.zeppelin.notebook.Note.getConfig : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config>
org.apache.zeppelin.notebook.Note.getConfig : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map config> >>>>>>>> org.apache.zeppelin.notebook.Note.getConfig : return $r3
org.apache.zeppelin.notebook.Note.getConfig : return $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("personalizedMode")
org.apache.zeppelin.notebook.Note.isPersonalizedMode : r1 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("personalizedMode") >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : if null == r1
org.apache.zeppelin.notebook.Note.isPersonalizedMode : if null == r1 >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : $z1 = 0
org.apache.zeppelin.notebook.Note.isPersonalizedMode : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.Note.isPersonalizedMode : return $z1
