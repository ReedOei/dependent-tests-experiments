org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r0 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : if $r0 != null
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : if $r0 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>("Notebook authorization module was called without initialization, initializing with default configuration")
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>("Notebook authorization module was called without initialization, initializing with default configuration") >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r2 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r2 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : staticinvoke <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization init(org.apache.zeppelin.conf.ZeppelinConfiguration)>($r2)
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : staticinvoke <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization init(org.apache.zeppelin.conf.ZeppelinConfiguration)>($r2) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : if $r1 != null
org.apache.zeppelin.notebook.NotebookAuthorization.init : if $r1 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r4 = new org.apache.zeppelin.notebook.NotebookAuthorization
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r4 = new org.apache.zeppelin.notebook.NotebookAuthorization >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : specialinvoke $r4.<org.apache.zeppelin.notebook.NotebookAuthorization: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.init : specialinvoke $r4.<org.apache.zeppelin.notebook.NotebookAuthorization: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> = $r4
org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> = $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> = r0
org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> = r0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r5 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r5 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r6 = virtualinvoke $r5.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getNotebookAuthorizationPath()>()
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r6 = virtualinvoke $r5.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getNotebookAuthorizationPath()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r1 = newarray (java.lang.Object)[1]
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r1 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getConfDir()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getConfDir()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getConfDir : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_CONF_DIR>
org.apache.zeppelin.conf.ZeppelinConfiguration.getConfDir : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_CONF_DIR> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getConfDir : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getConfDir : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r8 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getStringValue(java.lang.String,java.lang.String)>(r2, r3)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r8 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getStringValue(java.lang.String,java.lang.String)>(r2, r3) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r6 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r6 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r3 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r3 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z0 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r8 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r8 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $r8 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $r8 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r9 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r9 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z2 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z2 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : return r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : return r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r8
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r8 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getConfDir : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getConfDir : return $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r1[0] = $r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r1[0] = $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/notebook-authorization.json", $r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/notebook-authorization.json", $r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r4 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getRelativeDir(java.lang.String)>($r3)
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : $r4 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getRelativeDir(java.lang.String)>($r3) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if r1 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if r1 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/")
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if $z0 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if $z0 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isWindowsPath(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isWindowsPath(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^[A-Za-z]:\\\\.*")
org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("^[A-Za-z]:\\\\.*") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration.isWindowsPath : return $z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r2 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_HOME>
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r2 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_HOME> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r4 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r4 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/")
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : return $r8
org.apache.zeppelin.conf.ZeppelinConfiguration.getRelativeDir : return $r8 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.getNotebookAuthorizationPath : return $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath> = $r6
org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath> = $r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r7 = new com.google.gson.GsonBuilder
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r7 = new com.google.gson.GsonBuilder >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : specialinvoke $r7.<com.google.gson.GsonBuilder: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.init : specialinvoke $r7.<com.google.gson.GsonBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : r2 = $r7
org.apache.zeppelin.notebook.NotebookAuthorization.init : r2 = $r7 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()>()
org.apache.zeppelin.notebook.NotebookAuthorization.init : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setPrettyPrinting()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r9 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r9 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson> = $r9
org.apache.zeppelin.notebook.NotebookAuthorization.init : <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson> = $r9 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : staticinvoke <org.apache.zeppelin.notebook.NotebookAuthorization: void loadFromFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.init : staticinvoke <org.apache.zeppelin.notebook.NotebookAuthorization: void loadFromFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r0 = new java.io.File
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r0 = new java.io.File >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath>
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1)
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : r2 = $r0
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : r2 = $r0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r10 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r10 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r11 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $r11 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r11)
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : if $z0 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.loadFromFile : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : goto [?= $r12 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>]
org.apache.zeppelin.notebook.NotebookAuthorization.init : goto [?= $r12 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : $r12 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>
org.apache.zeppelin.notebook.NotebookAuthorization.init : $r12 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.init : return $r12
org.apache.zeppelin.notebook.NotebookAuthorization.init : return $r12 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance>
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.notebook.NotebookAuthorization instance> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : return $r4
org.apache.zeppelin.notebook.NotebookAuthorization.getInstance : return $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isPublic : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.isPublic : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isPublic : $z0 = virtualinvoke $r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isNotebokPublic()>()
org.apache.zeppelin.notebook.NotebookAuthorization.isPublic : $z0 = virtualinvoke $r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isNotebokPublic()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isNotebokPublic : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_NOTEBOOK_PUBLIC>
org.apache.zeppelin.conf.ZeppelinConfiguration.isNotebokPublic : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_NOTEBOOK_PUBLIC> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isNotebokPublic : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.isNotebokPublic : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBooleanValue(java.lang.String,boolean)>(r2, z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBooleanValue(java.lang.String,boolean)>(r2, z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if r2 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if r2 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z2 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z2 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $r7 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $r7 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z3 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z3 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : return z0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : return z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z3
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z3 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isNotebokPublic : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration.isNotebokPublic : return $z0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isPublic : return $z0
org.apache.zeppelin.notebook.NotebookAuthorization.isPublic : return $z0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : r4 = (java.util.Map) $r6
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : r4 = (java.util.Map) $r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : r7 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r2)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : r7 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r2) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r2 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r2 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : specialinvoke $r2.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : specialinvoke $r2.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r3 = $r2
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r3 = $r2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z0 == 0
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r5 = (java.lang.String) $r6
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : r5 = (java.lang.String) $r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r7 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r7 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $z1 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z1 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r8 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : $r8 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8)
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : return r3
org.apache.zeppelin.notebook.NotebookAuthorization.validateUser : return r3 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : if r4 != null
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : if r4 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r8 = new java.util.LinkedHashMap
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r8 = new java.util.LinkedHashMap >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : r4 = $r8
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : r4 = $r8 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r5 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r5 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owners", $r5)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owners", $r5) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r10 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r10 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r10.<java.util.LinkedHashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r10.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readers", $r10)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readers", $r10) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r12 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r12 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r12.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r7)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke $r12.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r7) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("writers", $r12)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("writers", $r12) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : goto [?= $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>]
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : goto [?= $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setWriters : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r1 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r2 = $r1
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r2 = $r1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : entermonitor $r1
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : entermonitor $r1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r7 = new org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r7 = new org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r7.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r7.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r3 = $r7
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r3 = $r7 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r8 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r8 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r3.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: java.util.Map authInfo> = $r8
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r3.<org.apache.zeppelin.notebook.NotebookAuthorizationInfoSaving: java.util.Map authInfo> = $r8 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r9 = <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r9 = <org.apache.zeppelin.notebook.NotebookAuthorization: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r4 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r3)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r4 = virtualinvoke $r9.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r3) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : exitmonitor r2
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : exitmonitor r2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : goto [?= $r11 = new java.io.File]
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : goto [?= $r11 = new java.io.File] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r11 = new java.io.File
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r11 = new java.io.File >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r6 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.lang.String filePath> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r6)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r12 = $r11
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r12 = $r11 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $z0 = virtualinvoke r12.<java.io.File: boolean exists()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $z0 = virtualinvoke r12.<java.io.File: boolean exists()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : if $z0 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : virtualinvoke r12.<java.io.File: boolean createNewFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : virtualinvoke r12.<java.io.File: boolean createNewFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r19 = $r18
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : r19 = $r18 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r20 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r20 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r21 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error saving notebook authorization file: ")
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error saving notebook authorization file: ") >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r23 = virtualinvoke r19.<java.io.IOException: java.lang.String getMessage()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r23 = virtualinvoke r19.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r25)
org.apache.zeppelin.notebook.NotebookAuthorization.saveToFile : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>($r25) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getWriters(java.lang.String)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : $r3 = virtualinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set getWriters(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : r3 = (java.util.Map) $r4
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : r3 = (java.util.Map) $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : n0 = null
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : n0 = null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : if r3 != null
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : if r3 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : $r5 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : $r5 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : r6 = $r5
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : r6 = $r5 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : goto [?= return r6]
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : goto [?= return r6] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : return r6
org.apache.zeppelin.notebook.NotebookAuthorization.getWriters : return r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean isMember(java.util.Set,java.util.Set)>(r2, $r3)
org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean isMember(java.util.Set,java.util.Set)>(r2, $r3) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $r3 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $r3 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>(r2)
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : r4 = $r3
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : r4 = $r3 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : interfaceinvoke r4.<java.util.Set: boolean retainAll(java.util.Collection)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : interfaceinvoke r4.<java.util.Set: boolean retainAll(java.util.Collection)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : if $z1 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : if $z1 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z2 = 1
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : $z2 = 1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : goto [?= return $z2]
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : goto [?= return $z2] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isMember : return $z2
org.apache.zeppelin.notebook.NotebookAuthorization.isMember : return $z2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : if $z0 != 0
org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : $z2 = 1
org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : $z2 = 1 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : goto [?= return $z2]
org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : goto [?= return $z2] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : return $z2
org.apache.zeppelin.notebook.NotebookAuthorization.isWriter : return $z2 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r6 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r4 = (java.util.Map) $r6
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r4 = (java.util.Map) $r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r7 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r2)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r7 = specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Set validateUser(java.util.Set)>(r2) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : if r4 != null
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : if r4 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r8 = new java.util.LinkedHashMap
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r8 = new java.util.LinkedHashMap >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r4 = $r8
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : r4 = $r8 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r5 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r5 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owners", $r5)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("owners", $r5) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r10 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r10 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r10.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r7)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r10.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r7) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readers", $r10)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readers", $r10) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r12 = new java.util.LinkedHashSet
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r12 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r12.<java.util.LinkedHashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke $r12.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("writers", $r12)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("writers", $r12) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : goto [?= $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>]
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : goto [?= $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : $r16 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>()
org.apache.zeppelin.notebook.NotebookAuthorization.setReaders : specialinvoke r0.<org.apache.zeppelin.notebook.NotebookAuthorization: void saveToFile()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo>
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r2 = <org.apache.zeppelin.notebook.NotebookAuthorization: java.util.Map authInfo> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r3 = (java.util.Map) $r4
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r3 = (java.util.Map) $r4 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : n0 = null
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : n0 = null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : if r3 != null
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : if r3 != null >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r5 = new java.util.HashSet
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : $r5 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r6 = $r5
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : r6 = $r5 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : goto [?= return r6]
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : goto [?= return r6] >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : return r6
org.apache.zeppelin.notebook.NotebookAuthorization.getOwners : return r6 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : $r3 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>()
org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : $z0 = virtualinvoke $r3.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean isAnonymousAllowed()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isAnonymousAllowed : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ANONYMOUS_ALLOWED>
org.apache.zeppelin.conf.ZeppelinConfiguration.isAnonymousAllowed : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ANONYMOUS_ALLOWED> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isAnonymousAllowed : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.isAnonymousAllowed : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.isAnonymousAllowed : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration.isAnonymousAllowed : return $z0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : if $z0 == 0
org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : $r4 = <org.apache.zeppelin.notebook.NotebookAuthorization: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Zeppelin runs in anonymous mode, everybody is writer")
org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Zeppelin runs in anonymous mode, everybody is writer") >>>>>>>> org.apache.zeppelin.notebook.NotebookAuthorization.hasWriteAuthorization : return 1
