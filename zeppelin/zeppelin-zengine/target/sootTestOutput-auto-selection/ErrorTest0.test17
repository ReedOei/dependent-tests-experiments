org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : if $r2 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.initialize : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: void <init>(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Sending PING to zeppelinhub token")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Sending PING to zeppelinhub token") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r5 = virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.List getAllTokens()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r5 = virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.List getAllTokens()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r1 = new java.util.ArrayList
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r1 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getAllTokens : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : r3 = (java.lang.String) $r6
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : r3 = (java.lang.String) $r6 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r7 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r8 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: java.lang.String pingMessage(java.lang.String)>(r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : $r8 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: java.lang.String pingMessage(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r5 = new java.util.HashMap
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r5 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : r1 = $r5
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : r1 = $r5 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp PING>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r7 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinHubOp PING> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r8 = new java.util.HashMap
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r8 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r9 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage newMessage(java.lang.Object,java.lang.Object,java.util.Map)>($r7, r1, $r8)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r9 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage newMessage(java.lang.Object,java.lang.Object,java.util.Map)>($r7, r1, $r8) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : $r3 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : $r3 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : specialinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: void <init>(java.lang.Object,java.lang.Object,java.util.Map)>(r0, r1, r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : specialinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: void <init>(java.lang.Object,java.lang.Object,java.util.Map)>(r0, r1, r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : return $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.newMessage : return $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: java.lang.String serialize()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: java.lang.String serialize()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, class "org/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, class "org/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : return $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : return $r10
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.pingMessage : return $r10 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : virtualinvoke $r7.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void send(java.lang.String,java.lang.String)>($r8, r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.ZeppelinHubHeartbeat.run : virtualinvoke $r7.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void send(java.lang.String,java.lang.String)>($r8, r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession getSession(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession getSession(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: java.util.Map sessionMap>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: java.util.Map sessionMap> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r4 = (org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession) $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r4 = (org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession) $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: boolean isConnectedToZeppelinhub(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession)>(r3)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : $z0 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: boolean isConnectedToZeppelinhub(org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession)>(r3) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.isConnectedToZeppelinhub : if r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.isConnectedToZeppelinhub : if r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.isConnectedToZeppelinhub : $z1 = 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.isConnectedToZeppelinhub : $z1 = 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.isConnectedToZeppelinhub : return $z1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.isConnectedToZeppelinhub : return $z1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : if $z0 != 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Zeppelinhub connection is not open, opening it")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String)>("Zeppelinhub connection is not open, opening it") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession connect(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession connect(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket newInstance(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : r2 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket newInstance(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : $r1 = new org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: void <init>(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : specialinvoke $r1.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : return $r1
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.listener.ZeppelinhubWebsocket.newInstance : return $r1 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.ClientUpgradeRequest getConnectionRequest(java.lang.String)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.ClientUpgradeRequest getConnectionRequest(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r2 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r2 = new org.eclipse.jetty.websocket.client.ClientUpgradeRequest >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : specialinvoke $r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : specialinvoke $r2.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : r3 = $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : r3 = $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r5 = newarray (java.net.HttpCookie)[1]
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r5 = newarray (java.net.HttpCookie)[1] >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r4 = new java.net.HttpCookie
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r4 = new java.net.HttpCookie >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : specialinvoke $r4.<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>("X-Zeppelin-Token", r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : specialinvoke $r4.<java.net.HttpCookie: void <init>(java.lang.String,java.lang.String)>("X-Zeppelin-Token", r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r5[0] = $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r5[0] = $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r5)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : $r6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r5) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : virtualinvoke r3.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setCookies(java.util.List)>($r6)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : virtualinvoke r3.<org.eclipse.jetty.websocket.client.ClientUpgradeRequest: void setCookies(java.util.List)>($r6) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : return r3
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getConnectionRequest : return r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : $r9 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.eclipse.jetty.websocket.client.WebSocketClient client> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: java.net.URI zeppelinhubWebsocketUrl>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : $r10 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: java.net.URI zeppelinhubWebsocketUrl> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.connect : r4 = virtualinvoke $r9.<org.eclipse.jetty.websocket.client.WebSocketClient: java.util.concurrent.Future connect(java.lang.Object,java.net.URI,org.eclipse.jetty.websocket.client.ClientUpgradeRequest)>(r2, $r10, r3)
