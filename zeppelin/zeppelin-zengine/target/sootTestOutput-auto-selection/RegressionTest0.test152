org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : if $r0 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : if $r0 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : return $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.create : return $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[] $VALUES>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[] $VALUES> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r2 = (org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[]) $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : $r2 = (org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars[]) $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.values : return $r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars$VarType type>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars$VarType type> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getType : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String varName> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getVarName : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : $r1 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String stringValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getStringValue : return $r1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : $i0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: int intValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : $i0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: int intValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : return $i0
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getIntValue : return $i0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue>
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : $z0 = r0.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean booleanValue> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars.getBooleanValue : return $z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getKeyStorePassword : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SSL_KEYSTORE_PASSWORD>
org.apache.zeppelin.conf.ZeppelinConfiguration.getKeyStorePassword : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SSL_KEYSTORE_PASSWORD> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getKeyStorePassword : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getKeyStorePassword : $r2 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getStringValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getString(java.lang.String,java.lang.String,java.lang.String)>($r2, $r3, $r4) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r4 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : if $r6 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r8 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getStringValue(java.lang.String,java.lang.String)>(r2, r3)
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : $r8 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.lang.String getStringValue(java.lang.String,java.lang.String)>(r2, r3) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r6 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r6 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r3 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r3 = interfaceinvoke $r6.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z0 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : r5 = (org.apache.commons.configuration.tree.ConfigurationNode) $r7 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r8 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r8 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $r8 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $r8 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r9 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $r9 = interfaceinvoke r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : $z2 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z2 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : if $z2 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : return r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getStringValue : return r2 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r8
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r8 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5
org.apache.zeppelin.conf.ZeppelinConfiguration.getString : return $r5 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getKeyStorePassword : return $r2
org.apache.zeppelin.conf.ZeppelinConfiguration.getKeyStorePassword : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : if $r2 != null
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : if r1 == null
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : if r1 == null >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r3 = new org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r3 = new org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : specialinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: void <init>(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r0, r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : specialinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: void <init>(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r0, r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : if $r5 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBooleanValue(java.lang.String,boolean)>(r2, z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBooleanValue(java.lang.String,boolean)>(r2, z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if r2 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if r2 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z2 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z2 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $r7 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $r7 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : $z3 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z3 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : if $z3 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : return z0
org.apache.zeppelin.conf.ZeppelinConfiguration.getBooleanValue : return z0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z3
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getInt(java.lang.String,java.lang.String,int)>("ZEPPELIN_PORT", "zeppelin.server.port", 8080)
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : i0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getInt(java.lang.String,java.lang.String,int)>("ZEPPELIN_PORT", "zeppelin.server.port", 8080) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r3 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r3 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r3 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r5 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : if $r5 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getIntValue(java.lang.String,int)>(r2, i0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : $i3 = specialinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: int getIntValue(java.lang.String,int)>(r2, i0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r5 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.commons.configuration.tree.ConfigurationNode getRootNode()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r2 = interfaceinvoke $r5.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if r2 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if r2 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z0 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z0 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z1 == 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z1 == 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : r4 = (org.apache.commons.configuration.tree.ConfigurationNode) $r6 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r7 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $r7 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $r7 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name")
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $r8 = interfaceinvoke r4.<org.apache.commons.configuration.tree.ConfigurationNode: java.util.List getChildren(java.lang.String)>("name") >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : $z2 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z2 != 0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : if $z2 != 0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : return i0
org.apache.zeppelin.conf.ZeppelinConfiguration.getIntValue : return i0 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : return $i3
org.apache.zeppelin.conf.ZeppelinConfiguration.getInt : return $i3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : if i0 > 0
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : if i0 > 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : r2 = "http"
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : r2 = "http" >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean useSsl()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SSL>
org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $r1 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_SSL> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1)
org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : $z0 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars)>($r1) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r2 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String name()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $r3 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>()
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z0 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: boolean getBooleanValue()>() >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0)
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : $z1 = virtualinvoke r0.<org.apache.zeppelin.conf.ZeppelinConfiguration: boolean getBoolean(java.lang.String,java.lang.String,boolean)>($r2, $r3, $z0) >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1
org.apache.zeppelin.conf.ZeppelinConfiguration.getBoolean : return $z1 >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : return $z0
org.apache.zeppelin.conf.ZeppelinConfiguration.useSsl : return $z0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r4 = new java.lang.StringBuilder
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r4 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://localhost:")
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://localhost:") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/api/login")
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/api/login") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : return r3
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.getLoginEndpoint : return r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> = $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> = $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : $r4 = <org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication: org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.security.Authentication.initialize : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : $r3 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService: java.util.concurrent.ScheduledExecutorService pool> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : $l1 = (long) i0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : $l1 = (long) i0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.scheduler.SchedulerService.addOnce : interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r1, $l1, $r2)
