org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Executing user logout routine")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : interfaceinvoke $r1.<org.slf4j.Logger: void debug(java.lang.String)>("Executing user logout routine") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : $r4 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : r2 = virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String removeUserToken(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : r2 = virtualinvoke $r4.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.lang.String removeUserToken(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens>
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer: java.util.concurrent.ConcurrentMap userTokens> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1)
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : $r3 = interfaceinvoke $r2.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : $r4 = (java.lang.String) $r3
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : $r4 = (java.lang.String) $r3 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserTokenContainer.removeUserToken : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: java.lang.String deadMessage(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : r3 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: java.lang.String deadMessage(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : if $z0 == 0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: org.slf4j.Logger LOG>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r2 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>("Cannot create Dead message: token is null or empty")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : interfaceinvoke $r2.<org.slf4j.Logger: void error(java.lang.String)>("Cannot create Dead message: token is null or empty") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage EMPTY>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage EMPTY> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r4 = virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: java.lang.String serialize()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : $r4 = virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: java.lang.String serialize()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r1 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, class "org/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage")
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : $r2 = virtualinvoke $r1.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)>(r0, class "org/apache/zeppelin/notebook/repo/zeppelinhub/websocket/protocol/ZeppelinhubMessage") >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : return $r2
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.protocol.ZeppelinhubMessage.serialize : return $r2 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : return $r4
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.deadMessage : return $r4 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient getInstance()>()
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : $r5 = staticinvoke <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient getInstance()>() >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : $r0 = <org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient instance> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getInstance : return $r0 >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : virtualinvoke $r5.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void send(java.lang.String,java.lang.String)>(r3, r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.utils.ZeppelinhubUtils.userLogoutRoutine : virtualinvoke $r5.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: void send(java.lang.String,java.lang.String)>(r3, r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession getSession(java.lang.String)>(r2)
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.send : r3 = specialinvoke r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.session.ZeppelinhubSession getSession(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: java.util.Map sessionMap>
org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r2 = r0.<org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient: java.util.Map sessionMap> >>>>>>>> org.apache.zeppelin.notebook.repo.zeppelinhub.websocket.ZeppelinhubClient.getSession : $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
