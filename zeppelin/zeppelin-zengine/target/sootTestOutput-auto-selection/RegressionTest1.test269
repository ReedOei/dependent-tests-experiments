org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r0 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null
org.apache.zeppelin.conf.ZeppelinConfiguration.create : if $r0 == null >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf>
org.apache.zeppelin.conf.ZeppelinConfiguration.create : $r4 = <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration conf> >>>>>>>> org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4
org.apache.zeppelin.conf.ZeppelinConfiguration.create : return $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.addParagraph : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>()
org.apache.zeppelin.notebook.Note.addParagraph : $i0 = interfaceinvoke $r2.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.notebook.Note.addParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r1, $i0)
org.apache.zeppelin.notebook.Note.addParagraph : virtualinvoke r0.<org.apache.zeppelin.notebook.Note: void insertParagraph(org.apache.zeppelin.notebook.Paragraph,int)>(r1, $i0) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r4 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4
org.apache.zeppelin.notebook.Note.insertParagraph : r2 = $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4
org.apache.zeppelin.notebook.Note.insertParagraph : entermonitor $r4 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.insertParagraph : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1)
org.apache.zeppelin.notebook.Note.insertParagraph : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(i0, r1) >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2
org.apache.zeppelin.notebook.Note.insertParagraph : exitmonitor r2 >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>]
org.apache.zeppelin.notebook.Note.insertParagraph : goto [?= $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>] >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener>
org.apache.zeppelin.notebook.Note.insertParagraph : $r7 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteEventListener noteEventListener> >>>>>>>> org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null
org.apache.zeppelin.notebook.Note.insertParagraph : if $r7 == null >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info>
org.apache.zeppelin.notebook.Note.getInfo : $r2 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info> >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : if $r2 != null
org.apache.zeppelin.notebook.Note.getInfo : if $r2 != null >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info>
org.apache.zeppelin.notebook.Note.getInfo : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.Map info> >>>>>>>> org.apache.zeppelin.notebook.Note.getInfo : return $r3
org.apache.zeppelin.notebook.Note.getInfo : return $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.onProgressUpdate : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory>
org.apache.zeppelin.notebook.Note.onProgressUpdate : $r3 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory> >>>>>>>> org.apache.zeppelin.notebook.Note.onProgressUpdate : if $r3 == null
org.apache.zeppelin.notebook.Note.onProgressUpdate : if $r3 == null >>>>>>>> org.apache.zeppelin.notebook.Note.beforeStatusChange : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory>
org.apache.zeppelin.notebook.Note.beforeStatusChange : $r5 = r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.JobListenerFactory jobListenerFactory> >>>>>>>> org.apache.zeppelin.notebook.Note.beforeStatusChange : if $r5 == null
org.apache.zeppelin.notebook.Note.beforeStatusChange : if $r5 == null >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getParagraphs : $r3 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : r1 = $r3
org.apache.zeppelin.notebook.Note.getParagraphs : r1 = $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : entermonitor $r3
org.apache.zeppelin.notebook.Note.getParagraphs : entermonitor $r3 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r4 = new java.util.LinkedList
org.apache.zeppelin.notebook.Note.getParagraphs : $r4 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs>
org.apache.zeppelin.notebook.Note.getParagraphs : $r5 = r0.<org.apache.zeppelin.notebook.Note: java.util.List paragraphs> >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r5)
org.apache.zeppelin.notebook.Note.getParagraphs : specialinvoke $r4.<java.util.LinkedList: void <init>(java.util.Collection)>($r5) >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : exitmonitor r1
org.apache.zeppelin.notebook.Note.getParagraphs : exitmonitor r1 >>>>>>>> org.apache.zeppelin.notebook.Note.getParagraphs : return $r4
org.apache.zeppelin.notebook.Note.getParagraphs : return $r4 >>>>>>>> org.apache.zeppelin.notebook.FolderView.renameFolder : r3 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r1)
org.apache.zeppelin.notebook.FolderView.renameFolder : r3 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\", "/") >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("///")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("///") >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $z0 == 0
org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $z0 == 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//", "/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//", "/") >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("/")
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("/") >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $z1 == 0
org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $z1 == 0 >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0)
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $c0 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0) >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $c0 != 47
org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $c0 != 47 >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : $i1 = virtualinvoke r3.<java.lang.String: int length()>()
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $i1 = virtualinvoke r3.<java.lang.String: int length()>() >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : $i2 = $i1 - 1
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $i2 = $i1 - 1 >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2)
org.apache.zeppelin.notebook.Folder.normalizeFolderId : $c3 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i2) >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $c3 != 47
org.apache.zeppelin.notebook.Folder.normalizeFolderId : if $c3 != 47 >>>>>>>> org.apache.zeppelin.notebook.Folder.normalizeFolderId : return r3
org.apache.zeppelin.notebook.Folder.normalizeFolderId : return r3 >>>>>>>> org.apache.zeppelin.notebook.FolderView.renameFolder : r4 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r2)
org.apache.zeppelin.notebook.FolderView.renameFolder : r4 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.notebook.FolderView.renameFolder : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: boolean hasFolder(java.lang.String)>(r3)
org.apache.zeppelin.notebook.FolderView.renameFolder : $z0 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: boolean hasFolder(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.notebook.FolderView.hasFolder : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: org.apache.zeppelin.notebook.Folder getFolder(java.lang.String)>(r1)
org.apache.zeppelin.notebook.FolderView.hasFolder : $r2 = virtualinvoke r0.<org.apache.zeppelin.notebook.FolderView: org.apache.zeppelin.notebook.Folder getFolder(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.FolderView.getFolder : r2 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r1)
org.apache.zeppelin.notebook.FolderView.getFolder : r2 = staticinvoke <org.apache.zeppelin.notebook.Folder: java.lang.String normalizeFolderId(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.notebook.FolderView.getFolder : $r3 = r0.<org.apache.zeppelin.notebook.FolderView: java.util.Map folders>
org.apache.zeppelin.notebook.FolderView.getFolder : $r3 = r0.<org.apache.zeppelin.notebook.FolderView: java.util.Map folders> >>>>>>>> org.apache.zeppelin.notebook.FolderView.getFolder : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.zeppelin.notebook.FolderView.getFolder : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.notebook.FolderView.getFolder : $r5 = (org.apache.zeppelin.notebook.Folder) $r4
org.apache.zeppelin.notebook.FolderView.getFolder : $r5 = (org.apache.zeppelin.notebook.Folder) $r4 >>>>>>>> org.apache.zeppelin.notebook.FolderView.getFolder : return $r5
org.apache.zeppelin.notebook.FolderView.getFolder : return $r5 >>>>>>>> org.apache.zeppelin.notebook.FolderView.hasFolder : if $r2 == null
org.apache.zeppelin.notebook.FolderView.hasFolder : if $r2 == null >>>>>>>> org.apache.zeppelin.notebook.FolderView.hasFolder : $z0 = 0
org.apache.zeppelin.notebook.FolderView.hasFolder : $z0 = 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.hasFolder : return $z0
org.apache.zeppelin.notebook.FolderView.hasFolder : return $z0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.renameFolder : if $z0 != 0
org.apache.zeppelin.notebook.FolderView.renameFolder : if $z0 != 0 >>>>>>>> org.apache.zeppelin.notebook.FolderView.renameFolder : return null
org.apache.zeppelin.notebook.FolderView.renameFolder : return null >>>>>>>> org.apache.zeppelin.notebook.Note.setNoteNameListener : r0.<org.apache.zeppelin.notebook.Note: org.apache.zeppelin.notebook.NoteNameListener noteNameListener> = r1
