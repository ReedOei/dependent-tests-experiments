org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z0 == 0
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r7 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r9 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r9 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r10 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r10 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r9.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r10)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r9.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r4 = $r9
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r4 = $r9 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r5 = <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest EMPTY>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r5 = <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest EMPTY> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r11 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: com.google.gson.Gson gson>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r5 = <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest EMPTY> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r14 := @caughtexception
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r6 = $r14 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r15 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r15 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot update notebook repo settings", r6)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot update notebook repo settings", r6) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r16 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r16 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r17 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r17 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r18 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload structure")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r18 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload structure") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r16.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r17, "", $r18)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r16.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r17, "", $r18) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r19 = virtualinvoke $r16.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r19 = virtualinvoke $r16.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : return $r19
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r11 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/rest/message/NotebookRepoSettingsRequest")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r11 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r14 := @caughtexception
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/rest/message/NotebookRepoSettingsRequest") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r13 = (org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest) $r12
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/rest/message/NotebookRepoSettingsRequest") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r14 := @caughtexception
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r13 = (org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest) $r12 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : goto [?= $z1 = staticinvoke <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: boolean isEmpty(org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest)>(r13)]
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r13 = (org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest) $r12 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r14 := @caughtexception
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : goto [?= $z1 = staticinvoke <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: boolean isEmpty(org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest)>(r13)] >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z1 = staticinvoke <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: boolean isEmpty(org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest)>(r13)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z1 = staticinvoke <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: boolean isEmpty(org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest)>(r13) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z1 == 0
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z1 == 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r20 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z1 == 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r25 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r25 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r26 = virtualinvoke r4.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r26 = virtualinvoke r4.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("User {} is going to change repo setting", $r26)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("User {} is going to change repo setting", $r26) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r27 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.notebook.repo.NotebookRepoSync noteRepos>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r27 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.notebook.repo.NotebookRepoSync noteRepos> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r28 = r13.<org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: java.lang.String name>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r28 = r13.<org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: java.lang.String name> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r29 = r13.<org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: java.util.Map settings>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r29 = r13.<org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: java.util.Map settings> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r30 = virtualinvoke $r27.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: org.apache.zeppelin.notebook.repo.NotebookRepoWithSettings updateNotebookRepo(java.lang.String,java.util.Map,org.apache.zeppelin.user.AuthenticationInfo)>($r28, $r29, r4)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r30 = virtualinvoke $r27.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: org.apache.zeppelin.notebook.repo.NotebookRepoWithSettings updateNotebookRepo(java.lang.String,java.util.Map,org.apache.zeppelin.user.AuthenticationInfo)>($r28, $r29, r4) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z2 = virtualinvoke r30.<org.apache.zeppelin.notebook.repo.NotebookRepoWithSettings: boolean isEmpty()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z2 = virtualinvoke r30.<org.apache.zeppelin.notebook.repo.NotebookRepoWithSettings: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z2 != 0
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z2 != 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r31 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z2 != 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r34 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r34 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r35 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r35 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r34.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r35, "", r30)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r34.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r35, "", r30) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r36 = virtualinvoke $r34.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r36 = virtualinvoke $r34.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : return $r36
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r31 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r32 = virtualinvoke r4.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r32 = virtualinvoke r4.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r31.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Broadcasting note list to user {}", $r32)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r31.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Broadcasting note list to user {}", $r32) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r33 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.socket.NotebookServer notebookWsServer>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r33 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.socket.NotebookServer notebookWsServer> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : virtualinvoke $r33.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r4, null)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : virtualinvoke $r33.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r4, null) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r34 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r20 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>("Invalid property")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String)>("Invalid property") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r21 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r21 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r22 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r22 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r23 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r23 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r21.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r22, "", $r23)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r21.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r22, "", $r23) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r24 = virtualinvoke $r21.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r24 = virtualinvoke $r21.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : return $r24
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r7 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_FOUND> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r7.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r2, "", $r3)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r7.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r2, "", $r3) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r8 = virtualinvoke $r7.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r8 = virtualinvoke $r7.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : return $r8
