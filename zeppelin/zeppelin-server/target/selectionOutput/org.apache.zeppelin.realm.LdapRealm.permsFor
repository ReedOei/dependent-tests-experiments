org.apache.zeppelin.realm.LdapRealm.permsFor : $r2 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : r3 = $r2
org.apache.zeppelin.realm.LdapRealm.permsFor : r3 = $r2 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : if $z0 == 0
org.apache.zeppelin.realm.LdapRealm.permsFor : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : return r3
org.apache.zeppelin.realm.LdapRealm.permsFor : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : r5 = (java.lang.String) $r7
org.apache.zeppelin.realm.LdapRealm.permsFor : r5 = (java.lang.String) $r7 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r8 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map permissionsByRole>
org.apache.zeppelin.realm.LdapRealm.permsFor : $r8 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map permissionsByRole> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.zeppelin.realm.LdapRealm.permsFor : $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : r6 = (java.util.List) $r9
org.apache.zeppelin.realm.LdapRealm.permsFor : r6 = (java.util.List) $r9 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r10 = <org.apache.zeppelin.realm.LdapRealm: org.slf4j.Logger log>
org.apache.zeppelin.realm.LdapRealm.permsFor : $r10 = <org.apache.zeppelin.realm.LdapRealm: org.slf4j.Logger log> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $z1 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : $z1 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : if $z1 == 0
org.apache.zeppelin.realm.LdapRealm.permsFor : if $z1 == 0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r11 = <org.apache.zeppelin.realm.LdapRealm: org.slf4j.Logger log>
org.apache.zeppelin.realm.LdapRealm.permsFor : if $z1 == 0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : if r6 == null
org.apache.zeppelin.realm.LdapRealm.permsFor : if r6 == null >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>(r6)
org.apache.zeppelin.realm.LdapRealm.permsFor : if r6 == null >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.realm.LdapRealm.permsFor : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>(r6) >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.realm.LdapRealm.permsFor : $r11 = <org.apache.zeppelin.realm.LdapRealm: org.slf4j.Logger log> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r12 = new java.lang.StringBuilder
org.apache.zeppelin.realm.LdapRealm.permsFor : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PermsForRole: ")
org.apache.zeppelin.realm.LdapRealm.permsFor : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PermsForRole: ") >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.zeppelin.realm.LdapRealm.permsFor : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r15)
org.apache.zeppelin.realm.LdapRealm.permsFor : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String)>($r15) >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r16 = <org.apache.zeppelin.realm.LdapRealm: org.slf4j.Logger log>
org.apache.zeppelin.realm.LdapRealm.permsFor : $r16 = <org.apache.zeppelin.realm.LdapRealm: org.slf4j.Logger log> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r17 = new java.lang.StringBuilder
org.apache.zeppelin.realm.LdapRealm.permsFor : $r17 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PermByRole: ")
org.apache.zeppelin.realm.LdapRealm.permsFor : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PermByRole: ") >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.zeppelin.realm.LdapRealm.permsFor : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.realm.LdapRealm.permsFor : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r20)
org.apache.zeppelin.realm.LdapRealm.permsFor : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r20) >>>>>>>> org.apache.zeppelin.realm.LdapRealm.permsFor : if r6 == null
