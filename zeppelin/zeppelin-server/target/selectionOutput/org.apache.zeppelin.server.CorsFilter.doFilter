org.apache.zeppelin.server.CorsFilter.doFilter : $r7 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r4 = interfaceinvoke $r7.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Origin")
org.apache.zeppelin.server.CorsFilter.doFilter : r4 = interfaceinvoke $r7.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Origin") >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r5 = ""
org.apache.zeppelin.server.CorsFilter.doFilter : r5 = "" >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r8 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>()
org.apache.zeppelin.server.CorsFilter.doFilter : r5 = "" >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r10 := @caughtexception
org.apache.zeppelin.server.CorsFilter.doFilter : r6 = $r10 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r11 = <org.apache.zeppelin.server.CorsFilter: org.slf4j.Logger LOGGER>
org.apache.zeppelin.server.CorsFilter.doFilter : $r11 = <org.apache.zeppelin.server.CorsFilter: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in WebDriverManager while getWebDriver ", r6)
org.apache.zeppelin.server.CorsFilter.doFilter : interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in WebDriverManager while getWebDriver ", r6) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r12 = (javax.servlet.http.HttpServletRequest) r1
org.apache.zeppelin.server.CorsFilter.doFilter : $r12 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r13 = interfaceinvoke $r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()
org.apache.zeppelin.server.CorsFilter.doFilter : $r13 = interfaceinvoke $r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS")
org.apache.zeppelin.server.CorsFilter.doFilter : $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS") >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : if $z1 == 0
org.apache.zeppelin.server.CorsFilter.doFilter : if $z1 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r14 = (javax.servlet.http.HttpServletResponse) r2
org.apache.zeppelin.server.CorsFilter.doFilter : if $z1 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $z2 = r2 instanceof javax.servlet.http.HttpServletResponse
org.apache.zeppelin.server.CorsFilter.doFilter : $z2 = r2 instanceof javax.servlet.http.HttpServletResponse >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : if $z2 == 0
org.apache.zeppelin.server.CorsFilter.doFilter : if $z2 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r15 = (javax.servlet.http.HttpServletResponse) r2
org.apache.zeppelin.server.CorsFilter.doFilter : if $z2 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.zeppelin.server.CorsFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : return
org.apache.zeppelin.server.CorsFilter.doFilter : r15 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : specialinvoke r0.<org.apache.zeppelin.server.CorsFilter: void addCorsHeaders(javax.servlet.http.HttpServletResponse,java.lang.String)>(r15, r5)
org.apache.zeppelin.server.CorsFilter.doFilter : specialinvoke r0.<org.apache.zeppelin.server.CorsFilter: void addCorsHeaders(javax.servlet.http.HttpServletResponse,java.lang.String)>(r15, r5) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.zeppelin.server.CorsFilter.doFilter : r14 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : specialinvoke r0.<org.apache.zeppelin.server.CorsFilter: void addCorsHeaders(javax.servlet.http.HttpServletResponse,java.lang.String)>(r14, r5)
org.apache.zeppelin.server.CorsFilter.doFilter : specialinvoke r0.<org.apache.zeppelin.server.CorsFilter: void addCorsHeaders(javax.servlet.http.HttpServletResponse,java.lang.String)>(r14, r5) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : return
org.apache.zeppelin.server.CorsFilter.doFilter : $r8 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r9 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r4, $r8)
org.apache.zeppelin.server.CorsFilter.doFilter : $r8 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r10 := @caughtexception
org.apache.zeppelin.server.CorsFilter.doFilter : $r9 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r4, $r8) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.server.CorsFilter.doFilter : $r9 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r4, $r8) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r10 := @caughtexception
org.apache.zeppelin.server.CorsFilter.doFilter : $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : if $z0 == 0
org.apache.zeppelin.server.CorsFilter.doFilter : $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r10 := @caughtexception
org.apache.zeppelin.server.CorsFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r5 = r4
org.apache.zeppelin.server.CorsFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : goto [?= $r12 = (javax.servlet.http.HttpServletRequest) r1]
org.apache.zeppelin.server.CorsFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r10 := @caughtexception
org.apache.zeppelin.server.CorsFilter.doFilter : goto [?= $r12 = (javax.servlet.http.HttpServletRequest) r1] >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r12 = (javax.servlet.http.HttpServletRequest) r1
org.apache.zeppelin.server.CorsFilter.doFilter : r5 = r4 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : goto [?= $r12 = (javax.servlet.http.HttpServletRequest) r1]
org.apache.zeppelin.server.CorsFilter.doFilter : r5 = r4 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r10 := @caughtexception
