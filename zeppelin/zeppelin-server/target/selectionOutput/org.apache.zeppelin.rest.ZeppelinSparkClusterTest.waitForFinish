org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r2 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r2 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status FINISHED> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r4 == $r2
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r4 == $r2 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r5 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r4 == $r2 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : return
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r5 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r6 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ERROR>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r6 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ERROR> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r5 == $r6
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r5 == $r6 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r7 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r5 == $r6 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : return
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r7 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>() >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r8 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r8 = <org.apache.zeppelin.scheduler.Job$Status: org.apache.zeppelin.scheduler.Job$Status ABORT> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r7 == $r8
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r7 == $r8 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : staticinvoke <java.lang.Thread: void sleep(long)>(100L)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r7 == $r8 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : return
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : if $r7 == $r8 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r9 := @caughtexception
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : r3 = $r9 >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r10 = <org.apache.zeppelin.rest.ZeppelinSparkClusterTest: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r10 = <org.apache.zeppelin.rest.ZeppelinSparkClusterTest: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in WebDriverManager while getWebDriver ", r3)
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in WebDriverManager while getWebDriver ", r3) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : goto [?= $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()]
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : goto [?= $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()] >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : goto [?= $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()]
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : staticinvoke <java.lang.Thread: void sleep(long)>(100L) >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r9 := @caughtexception
org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : goto [?= $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()] >>>>>>>> org.apache.zeppelin.rest.ZeppelinSparkClusterTest.waitForFinish : $r4 = virtualinvoke r1.<org.apache.zeppelin.notebook.Paragraph: org.apache.zeppelin.scheduler.Job$Status getStatus()>()
