org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r12 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r13 = virtualinvoke $r12.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r13 = virtualinvoke $r12.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r14 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r14 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r4 = virtualinvoke $r13.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r14)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r4 = virtualinvoke $r13.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getInterpreterSettings(java.lang.String)>($r14) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if r4 == null
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $i0 = interfaceinvoke r4.<java.util.List: int size()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : return
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $i0 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $i0 != 0
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $i0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : return
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $i0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : return
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r6 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r15
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r6 = (org.apache.zeppelin.interpreter.InterpreterSetting) $r15 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r16 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r16 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r17 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r2, $r16)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r17 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r2, $r16) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r7 = virtualinvoke $r17.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r7 = virtualinvoke $r17.<org.apache.zeppelin.interpreter.InterpreterGroup: org.apache.zeppelin.display.AngularObjectRegistry getAngularObjectRegistry()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r18 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r18 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r8 = virtualinvoke r7.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.List getAllWithGlobal(java.lang.String)>($r18)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r8 = virtualinvoke r7.<org.apache.zeppelin.display.AngularObjectRegistry: java.util.List getAllWithGlobal(java.lang.String)>($r18) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r9 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $z1 == 0
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r19 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : if $z1 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r19 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r10 = (org.apache.zeppelin.display.AngularObject) $r19
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : r10 = (org.apache.zeppelin.display.AngularObject) $r19 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r20 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r20 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r11 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP ANGULAR_OBJECT_UPDATE>
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r11 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP ANGULAR_OBJECT_UPDATE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : specialinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r11)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : specialinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r11) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r21 = virtualinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("angularObject", r10)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r21 = virtualinvoke $r20.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("angularObject", r10) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r22 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r22 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r23 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r2, $r22)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r23 = virtualinvoke r6.<org.apache.zeppelin.interpreter.InterpreterSetting: org.apache.zeppelin.interpreter.InterpreterGroup getInterpreterGroup(java.lang.String,java.lang.String)>(r2, $r22) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r24 = virtualinvoke $r23.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r24 = virtualinvoke $r23.<org.apache.zeppelin.interpreter.InterpreterGroup: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r25 = virtualinvoke $r21.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("interpreterGroupId", $r24)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r25 = virtualinvoke $r21.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("interpreterGroupId", $r24) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r26 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r26 = virtualinvoke r1.<org.apache.zeppelin.notebook.Note: java.lang.String getId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r27 = virtualinvoke $r25.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", $r26)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r27 = virtualinvoke $r25.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", $r26) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r28 = virtualinvoke r10.<org.apache.zeppelin.display.AngularObject: java.lang.String getParagraphId()>()
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r28 = virtualinvoke r10.<org.apache.zeppelin.display.AngularObject: java.lang.String getParagraphId()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r29 = virtualinvoke $r27.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", $r28)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r29 = virtualinvoke $r27.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", $r28) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r30 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String serializeMessage(org.apache.zeppelin.notebook.socket.Message)>($r29)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $r30 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.lang.String serializeMessage(org.apache.zeppelin.notebook.socket.Message)>($r29) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : virtualinvoke r3.<org.apache.zeppelin.socket.NotebookSocket: void send(java.lang.String)>($r30)
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : virtualinvoke r3.<org.apache.zeppelin.socket.NotebookSocket: void send(java.lang.String)>($r30) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : goto [?= $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.sendAllAngularObjects : $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
