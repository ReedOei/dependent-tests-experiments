org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $z0 = <org.apache.zeppelin.rest.AbstractTestRestApi: boolean wasRunning> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z0 != 0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z0 != 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r3 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z0 != 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : return
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r3 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r4 = virtualinvoke $r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r4 = virtualinvoke $r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : r0 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getDefaultInterpreterSettingList()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : r0 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List getDefaultInterpreterSettingList()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z2 == 0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z2 == 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z2 == 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r8 = <org.apache.zeppelin.rest.AbstractTestRestApi: java.io.File shiroIni>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r8 = <org.apache.zeppelin.rest.AbstractTestRestApi: java.io.File shiroIni> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $r8 == null
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $r8 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r9 = <org.apache.zeppelin.rest.AbstractTestRestApi: java.io.File shiroIni>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $r8 == null >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r10 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r10 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("Terminating test Zeppelin...")
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("Terminating test Zeppelin...") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r11 = <org.apache.zeppelin.server.ZeppelinServer: org.eclipse.jetty.server.Server jettyWebServer>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r11 = <org.apache.zeppelin.server.ZeppelinServer: org.eclipse.jetty.server.Server jettyWebServer> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : virtualinvoke $r11.<org.eclipse.jetty.server.Server: void stop()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : virtualinvoke $r11.<org.eclipse.jetty.server.Server: void stop()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r12 = <org.apache.zeppelin.rest.AbstractTestRestApi: java.util.concurrent.ExecutorService executor>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r12 = <org.apache.zeppelin.rest.AbstractTestRestApi: java.util.concurrent.ExecutorService executor> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : interfaceinvoke $r12.<java.util.concurrent.ExecutorService: void shutdown()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : interfaceinvoke $r12.<java.util.concurrent.ExecutorService: void shutdown()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : z1 = 1
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : z1 = 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $l2 = $l1 - l0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $l2 = $l1 - l0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $b3 = $l2 cmp 180000L
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $b3 = $l2 cmp 180000L >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $b3 >= 0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <java.lang.Thread: void sleep(long)>(2000L)
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $b3 >= 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 1
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r13 = new java.lang.RuntimeException
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 1 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r14 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r14 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("Test Zeppelin terminated.")
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String)>("Test Zeppelin terminated.") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r15 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETERS>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r15 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_INTERPRETERS> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r16 = virtualinvoke $r15.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r16 = virtualinvoke $r15.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <java.lang.System: java.lang.String clearProperty(java.lang.String)>($r16)
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <java.lang.System: java.lang.String clearProperty(java.lang.String)>($r16) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $z4 = <org.apache.zeppelin.rest.AbstractTestRestApi: boolean isRunningWithAuth>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $z4 = <org.apache.zeppelin.rest.AbstractTestRestApi: boolean isRunningWithAuth> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z4 == 0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z4 == 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : <org.apache.zeppelin.rest.AbstractTestRestApi: boolean isRunningWithAuth> = 0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if $z4 == 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : return
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : <org.apache.zeppelin.rest.AbstractTestRestApi: boolean isRunningWithAuth> = 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r18 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ANONYMOUS_ALLOWED>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r18 = <org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars ZEPPELIN_ANONYMOUS_ALLOWED> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r19 = virtualinvoke $r18.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r19 = virtualinvoke $r18.<org.apache.zeppelin.conf.ZeppelinConfiguration$ConfVars: java.lang.String getVarName()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <java.lang.System: java.lang.String clearProperty(java.lang.String)>($r19)
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <java.lang.System: java.lang.String clearProperty(java.lang.String)>($r19) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : return
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r13 = new java.lang.RuntimeException >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can not stop Zeppelin server")
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Can not stop Zeppelin server") >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : throw $r13
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <java.lang.Thread: void sleep(long)>(2000L) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : z1 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: boolean checkIfServerIsRunning()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : z1 = staticinvoke <org.apache.zeppelin.rest.AbstractTestRestApi: boolean checkIfServerIsRunning()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 0
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : goto [?= (branch)]
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 0 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : goto [?= (branch)] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : if z1 != 1
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r9 = <org.apache.zeppelin.rest.AbstractTestRestApi: java.io.File shiroIni> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>($r9)
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>($r9) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r10 = <org.apache.zeppelin.rest.AbstractTestRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : r2 = (java.lang.String) $r5
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : r2 = (java.lang.String) $r5 >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r6 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r6 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r7 = virtualinvoke $r6.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>()
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $r7 = virtualinvoke $r6.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.interpreter.InterpreterSettingManager getInterpreterSettingManager()>() >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterSettingManager: void restart(java.lang.String)>(r2)
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : virtualinvoke $r7.<org.apache.zeppelin.interpreter.InterpreterSettingManager: void restart(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : goto [?= $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : goto [?= $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.zeppelin.rest.AbstractTestRestApi.shutDown : $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
