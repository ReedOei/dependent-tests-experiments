org.apache.zeppelin.ProcessData.getData : $r2 = <org.apache.zeppelin.ProcessData$1: int[] $SwitchMap$org$apache$zeppelin$ProcessData$Types_Of_Data> >>>>>>>> org.apache.zeppelin.ProcessData.getData : $i0 = virtualinvoke r1.<org.apache.zeppelin.ProcessData$Types_Of_Data: int ordinal()>()
org.apache.zeppelin.ProcessData.getData : $i0 = virtualinvoke r1.<org.apache.zeppelin.ProcessData$Types_Of_Data: int ordinal()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : $i1 = $r2[$i0]
org.apache.zeppelin.ProcessData.getData : $i1 = $r2[$i0] >>>>>>>> org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1:
org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r4 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getOutPutStream()>()
org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r5 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getErrorStream()>()
org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.ProcessData.getData : $i2 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: int getExitCodeValue()>()
org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r7 = new java.lang.StringBuilder
org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.ProcessData.getData : virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getErrorStream()>()
org.apache.zeppelin.ProcessData.getData : tableswitch($i1) {     case 1: >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r15 = new java.lang.IllegalArgumentException
org.apache.zeppelin.ProcessData.getData : $r15 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r3 = new java.lang.StringBuilder
org.apache.zeppelin.ProcessData.getData : $r3 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.ProcessData.getData : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.ProcessData.getData : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data Type ")
org.apache.zeppelin.ProcessData.getData : $r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Data Type ") >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)
org.apache.zeppelin.ProcessData.getData : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported yet!")
org.apache.zeppelin.ProcessData.getData : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported yet!") >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.ProcessData.getData : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19)
org.apache.zeppelin.ProcessData.getData : specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.zeppelin.ProcessData.getData : throw $r15
org.apache.zeppelin.ProcessData.getData : virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getErrorStream()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : return r0
org.apache.zeppelin.ProcessData.getData : $r7 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.ProcessData.getData : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.ProcessData.getData : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r8 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getOutPutStream()>()
org.apache.zeppelin.ProcessData.getData : $r8 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getOutPutStream()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.zeppelin.ProcessData.getData : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
org.apache.zeppelin.ProcessData.getData : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r11 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getErrorStream()>()
org.apache.zeppelin.ProcessData.getData : $r11 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getErrorStream()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.zeppelin.ProcessData.getData : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.ProcessData.getData : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : return $r13
org.apache.zeppelin.ProcessData.getData : $i2 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: int getExitCodeValue()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.zeppelin.ProcessData.getData : $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.zeppelin.ProcessData.getData : return $r6
org.apache.zeppelin.ProcessData.getData : $r5 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getErrorStream()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : return $r5
org.apache.zeppelin.ProcessData.getData : $r4 = virtualinvoke r0.<org.apache.zeppelin.ProcessData: java.lang.String getOutPutStream()>() >>>>>>>> org.apache.zeppelin.ProcessData.getData : return $r4
