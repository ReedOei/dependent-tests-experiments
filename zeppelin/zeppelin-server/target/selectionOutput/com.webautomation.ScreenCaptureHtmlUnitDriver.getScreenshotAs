com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r2 = newarray (byte)[0] >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r5 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebClient getWebClient()>()
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r2 = newarray (byte)[0] >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r9 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r3 = $r9 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r10 = <com.webautomation.ScreenCaptureHtmlUnitDriver: org.slf4j.Logger LOGGER>
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r10 = <com.webautomation.ScreenCaptureHtmlUnitDriver: org.slf4j.Logger LOGGER> >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in ScreenCaptureHtmlUnitDriver while getScreenshotAs ", r3)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in ScreenCaptureHtmlUnitDriver while getScreenshotAs ", r3) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r11 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType BASE64>
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r11 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType BASE64> >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r11)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r11) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : if $z0 == 0
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : if $z0 == 0 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r12 = new org.openqa.selenium.internal.Base64Encoder
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : if $z0 == 0 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r15 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType FILE>
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r15 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType FILE> >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r15)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r15) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : if $z1 == 0
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : if $z1 == 0 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r16 = new java.io.File
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : if $z1 == 0 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : return r2
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r16 = new java.io.File >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>("screen.tmp")
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>("screen.tmp") >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r17 = $r16
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r17 = $r16 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r18 = new java.io.FileOutputStream
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r17 = $r16 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r19 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r20 = $r19 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r21 = new org.openqa.selenium.WebDriverException
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r21 = new org.openqa.selenium.WebDriverException >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r21.<org.openqa.selenium.WebDriverException: void <init>(java.lang.Throwable)>(r20)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r21.<org.openqa.selenium.WebDriverException: void <init>(java.lang.Throwable)>(r20) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : throw $r21
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r18 = new java.io.FileOutputStream >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File)>(r17)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r18 = new java.io.FileOutputStream >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r19 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File)>(r17) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r4 = $r18
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r18.<java.io.FileOutputStream: void <init>(java.io.File)>(r17) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r19 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r4 = $r18 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : virtualinvoke r4.<java.io.FileOutputStream: void write(byte[])>(r2)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r4 = $r18 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r19 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : virtualinvoke r4.<java.io.FileOutputStream: void write(byte[])>(r2) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : virtualinvoke r4.<java.io.FileOutputStream: void close()>()
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : virtualinvoke r4.<java.io.FileOutputStream: void write(byte[])>(r2) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r19 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : virtualinvoke r4.<java.io.FileOutputStream: void close()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : goto [?= return r17]
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : virtualinvoke r4.<java.io.FileOutputStream: void close()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r19 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : goto [?= return r17] >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : return r17
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r12 = new org.openqa.selenium.internal.Base64Encoder >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r12.<org.openqa.selenium.internal.Base64Encoder: void <init>()>()
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : specialinvoke $r12.<org.openqa.selenium.internal.Base64Encoder: void <init>()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r13 = virtualinvoke $r12.<org.openqa.selenium.internal.Base64Encoder: java.lang.String encode(byte[])>(r2)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r13 = virtualinvoke $r12.<org.openqa.selenium.internal.Base64Encoder: java.lang.String encode(byte[])>(r2) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r14 = interfaceinvoke r1.<org.openqa.selenium.OutputType: java.lang.Object convertFromBase64Png(java.lang.String)>($r13)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r14 = interfaceinvoke r1.<org.openqa.selenium.OutputType: java.lang.Object convertFromBase64Png(java.lang.String)>($r13) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : return $r14
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r5 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebClient getWebClient()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r6 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebWindow getCurrentWindow()>()
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r5 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebClient getWebClient()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r9 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r6 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebWindow getCurrentWindow()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r7 = interfaceinvoke $r6.<com.gargoylesoftware.htmlunit.WebWindow: com.gargoylesoftware.htmlunit.Page getEnclosedPage()>()
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r6 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebWindow getCurrentWindow()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r9 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r7 = interfaceinvoke $r6.<com.gargoylesoftware.htmlunit.WebWindow: com.gargoylesoftware.htmlunit.Page getEnclosedPage()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r8 = (com.gargoylesoftware.htmlunit.html.HtmlPage) $r7
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r7 = interfaceinvoke $r6.<com.gargoylesoftware.htmlunit.WebWindow: com.gargoylesoftware.htmlunit.Page getEnclosedPage()>() >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r9 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r8 = (com.gargoylesoftware.htmlunit.html.HtmlPage) $r7 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r2 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: byte[] downloadCssAndImages(com.gargoylesoftware.htmlunit.WebClient,com.gargoylesoftware.htmlunit.html.HtmlPage)>($r5, $r8)
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r8 = (com.gargoylesoftware.htmlunit.html.HtmlPage) $r7 >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r9 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r2 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: byte[] downloadCssAndImages(com.gargoylesoftware.htmlunit.WebClient,com.gargoylesoftware.htmlunit.html.HtmlPage)>($r5, $r8) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : goto [?= $r11 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType BASE64>]
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : r2 = virtualinvoke r0.<com.webautomation.ScreenCaptureHtmlUnitDriver: byte[] downloadCssAndImages(com.gargoylesoftware.htmlunit.WebClient,com.gargoylesoftware.htmlunit.html.HtmlPage)>($r5, $r8) >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r9 := @caughtexception
com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : goto [?= $r11 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType BASE64>] >>>>>>>> com.webautomation.ScreenCaptureHtmlUnitDriver.getScreenshotAs : $r11 = <org.openqa.selenium.OutputType: org.openqa.selenium.OutputType BASE64>
