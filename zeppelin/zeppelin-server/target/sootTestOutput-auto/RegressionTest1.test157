org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r3 = virtualinvoke r2.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>()
org.apache.zeppelin.socket.NotebookServer.onOutputAppend : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.socket.NotebookServer.onOutputAppend : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onOutputAppend : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onOutputAppend : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null goto exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.utils.ExceptionUtils.jsonResponseContent : $r2 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.socket.NotebookSocket.getProtocol : $r1 = r0.<org.apache.zeppelin.socket.NotebookSocket: java.lang.String protocol>
org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2)
org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : r69 = $r68
org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r2 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson>
org.apache.zeppelin.rest.exception.ForbiddenException.forbiddenJson : $r1 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN>
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0
org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0
org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty>
org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1]
org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder
