org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null goto exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest.getOption : $r1 = r0.<org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest: org.apache.zeppelin.interpreter.InterpreterOption option>
org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest.getProperties : $r1 = r0.<org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest: java.util.Properties properties>
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0
org.apache.zeppelin.rest.InterpreterRestApi.removeRepository : $r7 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.InterpreterRestApi.removeRepository : $r4 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.rest.InterpreterRestApi.removeRepository : $r6 = <org.apache.zeppelin.rest.InterpreterRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.rest.InterpreterRestApi.removeRepository : r3 = $r5
org.apache.zeppelin.rest.InterpreterRestApi.removeRepository : $r10 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getStackTrace(java.lang.Throwable)>(r3)
org.apache.zeppelin.rest.InterpreterRestApi.removeRepository : $r2 = <org.apache.zeppelin.rest.InterpreterRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest.getDependencies : $r1 = r0.<org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest: java.util.List dependencies>
org.apache.zeppelin.rest.InterpreterRestApi.updateSetting : $r8 = virtualinvoke r4.<org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest: org.apache.zeppelin.interpreter.InterpreterOption getOption()>()
org.apache.zeppelin.rest.InterpreterRestApi.updateSetting : $r6 = virtualinvoke $r5.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/rest/message/UpdateInterpreterSettingRequest")
org.apache.zeppelin.rest.InterpreterRestApi.updateSetting : $r7 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.rest.InterpreterRestApi.updateSetting : $r10 = virtualinvoke r4.<org.apache.zeppelin.rest.message.UpdateInterpreterSettingRequest: java.util.List getDependencies()>()
org.apache.zeppelin.rest.InterpreterRestApi.updateSetting : $r5 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: com.google.gson.Gson gson>
org.apache.zeppelin.rest.InterpreterRestApi.updateSetting : $r3 = <org.apache.zeppelin.rest.InterpreterRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0
org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty>
org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1]
org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder
