org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled>
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous"
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r1 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r7 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.notebook.repo.NotebookRepoSync noteRepos>
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r5 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r11 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: com.google.gson.Gson gson>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r15 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r6 = $r14
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r18 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload structure")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r16 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r9 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r5 = <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest EMPTY>
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0
org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0
org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty>
org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1]
org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder
