org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null goto exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.conf.ZeppelinConfiguration getConf()>()
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r9 = virtualinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r8)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r6 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r30 = $r29
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r14 = new javax.naming.directory.SearchControls
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r15 = new java.lang.StringBuilder
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r32 = new java.util.HashSet
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r31 = <org.apache.zeppelin.realm.LdapGroupRealm: org.slf4j.Logger LOG>
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r19 = newarray (java.lang.Object)[1]
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r20 = interfaceinvoke r2.<javax.naming.ldap.LdapContext: java.util.Hashtable getEnvironment()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : virtualinvoke r6.<javax.naming.directory.SearchControls: void setSearchScope(int)>(2)
