org.apache.zeppelin.server.CorsFilter.doFilter : $r7 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r4 = interfaceinvoke $r7.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Origin")
org.apache.zeppelin.server.CorsFilter.doFilter : r4 = interfaceinvoke $r7.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("Origin") >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r5 = ""
org.apache.zeppelin.server.CorsFilter.doFilter : r5 = "" >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r8 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>()
org.apache.zeppelin.server.CorsFilter.doFilter : $r8 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r9 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r4, $r8)
org.apache.zeppelin.server.CorsFilter.doFilter : $r9 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r4, $r8) >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r0 == null
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r0 == null >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z0 == 0
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z0 == 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r5 = new java.net.URI
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r5 = new java.net.URI >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>(r0)
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r2 = virtualinvoke $r5.<java.net.URI: java.lang.String getHost()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r2 = virtualinvoke $r5.<java.net.URI: java.lang.String getHost()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r2 != null
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r2 != null >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r7 = $r6
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r7 = $r6 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r8 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r8 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r9 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r9 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r10 = virtualinvoke $r9.<java.net.InetAddress: java.lang.String getHostName()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r10 = virtualinvoke $r9.<java.net.InetAddress: java.lang.String getHostName()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r3 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r3 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r11 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.util.List getAllowedOrigins()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r11 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.util.List getAllowedOrigins()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z1 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>("*")
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z1 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>("*") >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z1 != 0
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z1 != 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z5 = 1
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z5 = 1 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)]
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)] >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5) >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : return $r14
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : return $r14 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.server.CorsFilter.doFilter : $z0 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : if $z0 == 0
org.apache.zeppelin.server.CorsFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r5 = r4
org.apache.zeppelin.server.CorsFilter.doFilter : r5 = r4 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : goto [?= $r12 = (javax.servlet.http.HttpServletRequest) r1]
org.apache.zeppelin.server.CorsFilter.doFilter : goto [?= $r12 = (javax.servlet.http.HttpServletRequest) r1] >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r12 = (javax.servlet.http.HttpServletRequest) r1
org.apache.zeppelin.server.CorsFilter.doFilter : $r12 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $r13 = interfaceinvoke $r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>()
org.apache.zeppelin.server.CorsFilter.doFilter : $r13 = interfaceinvoke $r12.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS")
org.apache.zeppelin.server.CorsFilter.doFilter : $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS") >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : if $z1 == 0
org.apache.zeppelin.server.CorsFilter.doFilter : if $z1 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : $z2 = r2 instanceof javax.servlet.http.HttpServletResponse
org.apache.zeppelin.server.CorsFilter.doFilter : $z2 = r2 instanceof javax.servlet.http.HttpServletResponse >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : if $z2 == 0
org.apache.zeppelin.server.CorsFilter.doFilter : if $z2 == 0 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : r15 = (javax.servlet.http.HttpServletResponse) r2
org.apache.zeppelin.server.CorsFilter.doFilter : r15 = (javax.servlet.http.HttpServletResponse) r2 >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : specialinvoke r0.<org.apache.zeppelin.server.CorsFilter: void addCorsHeaders(javax.servlet.http.HttpServletResponse,java.lang.String)>(r15, r5)
org.apache.zeppelin.server.CorsFilter.doFilter : specialinvoke r0.<org.apache.zeppelin.server.CorsFilter: void addCorsHeaders(javax.servlet.http.HttpServletResponse,java.lang.String)>(r15, r5) >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Origin", r2)
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Origin", r2) >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r2 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.String[] headers>
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r2 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.String[] headers> >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r3 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count>
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r3 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count> >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()
org.apache.zeppelin.server.CorsFilterTest$1.answer : $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r6 = interfaceinvoke r1.<org.mockito.invocation.InvocationOnMock: java.lang.Object[] getArguments()>()
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r6 = interfaceinvoke r1.<org.mockito.invocation.InvocationOnMock: java.lang.Object[] getArguments()>() >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r7 = $r6[1]
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r7 = $r6[1] >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>()
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r2[$i0] = $r8
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r2[$i0] = $r8 >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : r4 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count>
org.apache.zeppelin.server.CorsFilterTest$1.answer : r4 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count> >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r9 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count>
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r9 = <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count> >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>()
org.apache.zeppelin.server.CorsFilterTest$1.answer : $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $i2 = $i1 + 1
org.apache.zeppelin.server.CorsFilterTest$1.answer : $i2 = $i1 + 1 >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.zeppelin.server.CorsFilterTest$1.answer : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count> = $r10
org.apache.zeppelin.server.CorsFilterTest$1.answer : <org.apache.zeppelin.server.CorsFilterTest: java.lang.Integer count> = $r10 >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : r5 = $r10
org.apache.zeppelin.server.CorsFilterTest$1.answer : r5 = $r10 >>>>>>>> org.apache.zeppelin.server.CorsFilterTest$1.answer : return null
org.apache.zeppelin.server.CorsFilterTest$1.answer : return null >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Credentials", "true")
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Credentials", "true") >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Headers", "authorization,Content-Type")
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Headers", "authorization,Content-Type") >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Methods", "POST, GET, OPTIONS, PUT, HEAD, DELETE")
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Access-Control-Allow-Methods", "POST, GET, OPTIONS, PUT, HEAD, DELETE") >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : $r4 = new java.util.Locale
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : $r4 = new java.util.Locale >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : specialinvoke $r4.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("EN", "en")
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : specialinvoke $r4.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("EN", "en") >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : r3 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(0, 0, $r4)
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : r3 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(0, 0, $r4) >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : $r5 = new java.util.Date
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : $r5 = new java.util.Date >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : specialinvoke $r5.<java.util.Date: void <init>()>()
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : specialinvoke $r5.<java.util.Date: void <init>()>() >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : $r6 = virtualinvoke r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r5)
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : $r6 = virtualinvoke r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r5) >>>>>>>> org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Date", $r6)
org.apache.zeppelin.server.CorsFilter.addCorsHeaders : interfaceinvoke r1.<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>("Date", $r6) >>>>>>>> org.apache.zeppelin.server.CorsFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
