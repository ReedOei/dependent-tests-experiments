org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z0 == 0
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r9 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r9 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r10 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r10 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled>
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled> >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : if $z0 != 0
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : if $z0 != 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous"
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous" >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r9.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r10)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r9.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r4 = $r9
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r4 = $r9 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r5 = <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest EMPTY>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r5 = <org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest: org.apache.zeppelin.rest.message.NotebookRepoSettingsRequest EMPTY> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r11 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: com.google.gson.Gson gson>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r11 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/rest/message/NotebookRepoSettingsRequest")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r12 = virtualinvoke $r11.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/rest/message/NotebookRepoSettingsRequest") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r6 = $r14
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : r6 = $r14 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r15 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r15 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot update notebook repo settings", r6)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Cannot update notebook repo settings", r6) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r16 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r16 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r17 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE>
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r17 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status NOT_ACCEPTABLE> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r18 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload structure")
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r18 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object)>("error", "Invalid payload structure") >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r16.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r17, "", $r18)
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : specialinvoke $r16.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r17, "", $r18) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r19 = virtualinvoke $r16.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : $r19 = virtualinvoke $r16.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4)
org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4) >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r6 = virtualinvoke r0.<org.apache.zeppelin.server.JsonResponse: java.lang.String toString()>()
org.apache.zeppelin.server.JsonResponse.build : $r6 = virtualinvoke r0.<org.apache.zeppelin.server.JsonResponse: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder
org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>()
org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : r2 = $r1
org.apache.zeppelin.server.JsonResponse.toString : r2 = $r1 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty>
org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty> >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : if $z0 == 0
org.apache.zeppelin.server.JsonResponse.toString : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1]
org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1] >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r3 = new org.apache.zeppelin.server.JsonExclusionStrategy
org.apache.zeppelin.server.JsonResponse.toString : $r3 = new org.apache.zeppelin.server.JsonExclusionStrategy >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r3.<org.apache.zeppelin.server.JsonExclusionStrategy: void <init>()>()
org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r3.<org.apache.zeppelin.server.JsonExclusionStrategy: void <init>()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r6[0] = $r3
org.apache.zeppelin.server.JsonResponse.toString : $r6[0] = $r3 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])>($r6)
org.apache.zeppelin.server.JsonResponse.toString : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])>($r6) >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0) >>>>>>>> org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0 >>>>>>>> org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : return $r8
org.apache.zeppelin.server.JsonResponse.toString : return $r8 >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : r1 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r6)
org.apache.zeppelin.server.JsonResponse.build : r1 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r6) >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies>
org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : if $r7 == null
org.apache.zeppelin.server.JsonResponse.build : if $r7 == null >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : return $r12
org.apache.zeppelin.server.JsonResponse.build : return $r12 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : return $r19
org.apache.zeppelin.rest.NotebookRepoRestApi.updateRepoSetting : return $r19 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r1 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r1 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r2 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r2 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : specialinvoke $r1.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r2)
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : specialinvoke $r1.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r2) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : r3 = $r1
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : r3 = $r1 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r5 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r5 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r6 = virtualinvoke r3.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r6 = virtualinvoke r3.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Getting list of NoteRepo with Settings for user {}", $r6)
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Getting list of NoteRepo with Settings for user {}", $r6) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r7 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.notebook.repo.NotebookRepoSync noteRepos>
org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : $r7 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.notebook.repo.NotebookRepoSync noteRepos> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.listRepoSettings : r4 = virtualinvoke $r7.<org.apache.zeppelin.notebook.repo.NotebookRepoSync: java.util.List getNotebookRepos(org.apache.zeppelin.user.AuthenticationInfo)>(r3)
