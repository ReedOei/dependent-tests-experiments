org.apache.zeppelin.socket.NotebookServer.onAdd : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void onUpdate(java.lang.String,org.apache.zeppelin.display.AngularObject)>(r1, r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null
org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r1 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r1 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r2 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r2 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled>
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled> >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : if $z0 != 0
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : if $z0 != 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous"
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous" >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : specialinvoke $r1.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r2)
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : specialinvoke $r1.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>($r2) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : r3 = $r1
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : r3 = $r1 >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r4 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r4 = <org.apache.zeppelin.rest.NotebookRepoRestApi: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r5 = virtualinvoke r3.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>()
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r5 = virtualinvoke r3.<org.apache.zeppelin.user.AuthenticationInfo: java.lang.String getUser()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Reloading notebook repository for user {}", $r5)
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Reloading notebook repository for user {}", $r5) >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r6 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.socket.NotebookServer notebookWsServer>
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : $r6 = r0.<org.apache.zeppelin.rest.NotebookRepoRestApi: org.apache.zeppelin.socket.NotebookServer notebookWsServer> >>>>>>>> org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : virtualinvoke $r6.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r3, null)
org.apache.zeppelin.rest.NotebookRepoRestApi.refreshRepo : virtualinvoke $r6.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>(r3, null) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : if r1 != null
org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : if r1 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : r3 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.util.List generateNotesInfo(boolean,org.apache.zeppelin.user.AuthenticationInfo,java.util.Set)>(1, r1, r2)
org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : r3 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.util.List generateNotesInfo(boolean,org.apache.zeppelin.user.AuthenticationInfo,java.util.Set)>(1, r1, r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.conf.ZeppelinConfiguration getConf()>()
