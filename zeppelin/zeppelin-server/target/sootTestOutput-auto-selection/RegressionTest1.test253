org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.setGroupRolesMap : r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.util.Map groupRolesMap> = r1 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : $r3 = new java.util.ArrayList
org.apache.zeppelin.rest.GetUserList.getUserList : $r3 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.apache.zeppelin.rest.GetUserList.getUserList : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : r4 = $r3
org.apache.zeppelin.rest.GetUserList.getUserList : r4 = $r3 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : $r6 = virtualinvoke r1.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory getLdapContextFactory()>()
org.apache.zeppelin.rest.GetUserList.getUserList : $r6 = virtualinvoke r1.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory getLdapContextFactory()>() >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r2 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r2 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : if $r2 != null
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : if $r2 != null >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r3 = <org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.slf4j.Logger log>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r3 = <org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.slf4j.Logger log> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : if $z0 == 0
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r5 = new org.apache.shiro.realm.ldap.DefaultLdapContextFactory
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r5 = new org.apache.shiro.realm.ldap.DefaultLdapContextFactory >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : specialinvoke $r5.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void <init>()>()
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : specialinvoke $r5.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : r1 = $r5
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : r1 = $r5 >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r6 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String principalSuffix>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r6 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String principalSuffix> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setPrincipalSuffix(java.lang.String)>($r6)
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setPrincipalSuffix(java.lang.String)>($r6) >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r7 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String searchBase>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r7 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String searchBase> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setSearchBase(java.lang.String)>($r7)
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setSearchBase(java.lang.String)>($r7) >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r8 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String url>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r8 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String url> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setUrl(java.lang.String)>($r8)
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setUrl(java.lang.String)>($r8) >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r9 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String systemUsername>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r9 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String systemUsername> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setSystemUsername(java.lang.String)>($r9)
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setSystemUsername(java.lang.String)>($r9) >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r10 = specialinvoke r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String getSystemPassword()>()
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r10 = specialinvoke r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String getSystemPassword()>() >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : r1 = ""
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : r1 = "" >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : $r5 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String hadoopSecurityCredentialPath>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : $r5 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String hadoopSecurityCredentialPath> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5)
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r5) >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : if $z0 == 0
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : r1 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String systemPassword>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : r1 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: java.lang.String systemPassword> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : goto [?= return r1]
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : goto [?= return r1] >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : return r1
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getSystemPassword : return r1 >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setSystemPassword(java.lang.String)>($r10)
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : virtualinvoke r1.<org.apache.shiro.realm.ldap.DefaultLdapContextFactory: void setSystemPassword(java.lang.String)>($r10) >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory> = r1
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory> = r1 >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r11 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory>
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : $r11 = r0.<org.apache.zeppelin.realm.ActiveDirectoryGroupRealm: org.apache.shiro.realm.ldap.LdapContextFactory ldapContextFactory> >>>>>>>> org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : return $r11
org.apache.zeppelin.realm.ActiveDirectoryGroupRealm.getLdapContextFactory : return $r11 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : r5 = interfaceinvoke $r6.<org.apache.shiro.realm.ldap.LdapContextFactory: javax.naming.ldap.LdapContext getSystemLdapContext()>()
org.apache.zeppelin.rest.GetUserList.getUserList : r5 = interfaceinvoke $r6.<org.apache.shiro.realm.ldap.LdapContextFactory: javax.naming.ldap.LdapContext getSystemLdapContext()>() >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : r8 = $r7
org.apache.zeppelin.rest.GetUserList.getUserList : r8 = $r7 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : $r9 = <org.apache.zeppelin.rest.GetUserList: org.slf4j.Logger LOG>
org.apache.zeppelin.rest.GetUserList.getUserList : $r9 = <org.apache.zeppelin.rest.GetUserList: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error retrieving User list from ActiveDirectory Realm", r8)
org.apache.zeppelin.rest.GetUserList.getUserList : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error retrieving User list from ActiveDirectory Realm", r8) >>>>>>>> org.apache.zeppelin.rest.GetUserList.getUserList : return r4
org.apache.zeppelin.rest.GetUserList.getUserList : return r4 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : if r1 != null
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : if r1 != null >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> = $r3
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> = $r3 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.isGroupSearchEnableMatchingRuleInChain : $z0 = r0.<org.apache.zeppelin.realm.LdapRealm: boolean groupSearchEnableMatchingRuleInChain>
org.apache.zeppelin.realm.LdapRealm.isGroupSearchEnableMatchingRuleInChain : $z0 = r0.<org.apache.zeppelin.realm.LdapRealm: boolean groupSearchEnableMatchingRuleInChain> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.isGroupSearchEnableMatchingRuleInChain : return $z0
org.apache.zeppelin.realm.LdapRealm.isGroupSearchEnableMatchingRuleInChain : return $z0 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : $r2 = new java.util.ArrayList
org.apache.zeppelin.rest.GetUserList.getRolesList : $r2 = new java.util.ArrayList >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.apache.zeppelin.rest.GetUserList.getRolesList : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : r3 = $r2
org.apache.zeppelin.rest.GetUserList.getRolesList : r3 = $r2 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : r4 = virtualinvoke r1.<org.apache.zeppelin.realm.LdapRealm: java.util.Map getListRoles()>()
org.apache.zeppelin.rest.GetUserList.getRolesList : r4 = virtualinvoke r1.<org.apache.zeppelin.realm.LdapRealm: java.util.Map getListRoles()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : r1 = virtualinvoke r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map getRolesByGroup()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : r1 = virtualinvoke r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map getRolesByGroup()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map rolesByGroup>
org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map rolesByGroup> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : return $r1
org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : return $r1 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : $r5 = new java.util.HashMap
org.apache.zeppelin.realm.LdapRealm.getListRoles : $r5 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : r2 = $r5
org.apache.zeppelin.realm.LdapRealm.getListRoles : r2 = $r5 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : if $z0 == 0
org.apache.zeppelin.realm.LdapRealm.getListRoles : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : return r2
org.apache.zeppelin.realm.LdapRealm.getListRoles : return r2 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : if r4 == null
org.apache.zeppelin.rest.GetUserList.getRolesList : if r4 == null >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : $r7 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>()
org.apache.zeppelin.rest.GetUserList.getRolesList : $r7 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.rest.GetUserList.getRolesList : r5 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.rest.GetUserList.getRolesList : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : if $z0 == 0
org.apache.zeppelin.rest.GetUserList.getRolesList : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.GetUserList.getRolesList : return r3
