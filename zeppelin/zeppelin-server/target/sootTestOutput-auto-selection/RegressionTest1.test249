org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE>
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11
org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.checkOrigin : $r3 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>()
org.apache.zeppelin.socket.NotebookServer.checkOrigin : $r3 = staticinvoke <org.apache.zeppelin.conf.ZeppelinConfiguration: org.apache.zeppelin.conf.ZeppelinConfiguration create()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.checkOrigin : $r5 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r2, $r3)
org.apache.zeppelin.socket.NotebookServer.checkOrigin : $r5 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.Boolean isValidOrigin(java.lang.String,org.apache.zeppelin.conf.ZeppelinConfiguration)>(r2, $r3) >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r0 == null
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r0 == null >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z0 == 0
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z0 == 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r5 = new java.net.URI
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r5 = new java.net.URI >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>(r0)
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>(r0) >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r2 = virtualinvoke $r5.<java.net.URI: java.lang.String getHost()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r2 = virtualinvoke $r5.<java.net.URI: java.lang.String getHost()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r2 != null
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if r2 != null >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r6 = ""
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r6 = "" >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : goto [?= r7 = $r6]
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : goto [?= r7 = $r6] >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r7 = $r6
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r7 = $r6 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r8 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r8 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r9 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r9 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r10 = virtualinvoke $r9.<java.net.InetAddress: java.lang.String getHostName()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r10 = virtualinvoke $r9.<java.net.InetAddress: java.lang.String getHostName()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r3 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : r3 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r11 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.util.List getAllowedOrigins()>()
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r11 = virtualinvoke r1.<org.apache.zeppelin.conf.ZeppelinConfiguration: java.util.List getAllowedOrigins()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z1 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>("*")
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z1 = interfaceinvoke $r11.<java.util.List: boolean contains(java.lang.Object)>("*") >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z1 != 0
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : if $z1 != 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z5 = 1
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $z5 = 1 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)]
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : goto [?= $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)] >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5)
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5) >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : return $r14
org.apache.zeppelin.utils.SecurityUtils.isValidOrigin : return $r14 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.checkOrigin : $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>()
org.apache.zeppelin.socket.NotebookServer.checkOrigin : $z0 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.checkOrigin : return $z0
org.apache.zeppelin.socket.NotebookServer.checkOrigin : return $z0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : if r1 != null
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : if r1 != null >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> = $r3
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> = $r3 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate>
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : return $r1
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : return $r1 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeName>
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeName> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : return $r1
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : return $r1 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : r1 = virtualinvoke r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map getRolesByGroup()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : r1 = virtualinvoke r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map getRolesByGroup()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map rolesByGroup>
org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map rolesByGroup> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : return $r1
org.apache.zeppelin.realm.LdapRealm.getRolesByGroup : return $r1 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : $r5 = new java.util.HashMap
org.apache.zeppelin.realm.LdapRealm.getListRoles : $r5 = new java.util.HashMap >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : r2 = $r5
org.apache.zeppelin.realm.LdapRealm.getListRoles : r2 = $r5 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.realm.LdapRealm.getListRoles : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : if $z0 == 0
org.apache.zeppelin.realm.LdapRealm.getListRoles : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getListRoles : return r2
org.apache.zeppelin.realm.LdapRealm.getListRoles : return r2 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setRolesByGroup : $r2 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map rolesByGroup>
org.apache.zeppelin.realm.LdapRealm.setRolesByGroup : $r2 = r0.<org.apache.zeppelin.realm.LdapRealm: java.util.Map rolesByGroup> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setRolesByGroup : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.zeppelin.realm.LdapRealm.setRolesByGroup : interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onParaInfosReceived : $r13 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onParaInfosReceived : $r13 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onParaInfosReceived : r5 = virtualinvoke $r13.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.notebook.Note getNote(java.lang.String)>(r1)
