org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : if $z0 == 0
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : if $z0 == 0 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r6 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium>
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r6 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : r3 = virtualinvoke $r6.<org.apache.zeppelin.helium.Helium: java.util.Map getSpellConfig(java.lang.String)>(r1)
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : r3 = virtualinvoke $r6.<org.apache.zeppelin.helium.Helium: java.util.Map getSpellConfig(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : r18 = $r17
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : r18 = $r17 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r19 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r19 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r20 = virtualinvoke r18.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r20 = virtualinvoke r18.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r20, r18)
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r20, r18) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r21 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r21 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r22 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r22 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r23 = virtualinvoke r18.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r23 = virtualinvoke r18.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : specialinvoke $r21.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r22, $r23)
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : specialinvoke $r21.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r22, $r23) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r24 = virtualinvoke $r21.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : $r24 = virtualinvoke $r21.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4)
org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4) >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r6 = virtualinvoke r0.<org.apache.zeppelin.server.JsonResponse: java.lang.String toString()>()
org.apache.zeppelin.server.JsonResponse.build : $r6 = virtualinvoke r0.<org.apache.zeppelin.server.JsonResponse: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder
org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>()
org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : r2 = $r1
org.apache.zeppelin.server.JsonResponse.toString : r2 = $r1 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty>
org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty> >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : if $z0 == 0
org.apache.zeppelin.server.JsonResponse.toString : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1]
org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1] >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r3 = new org.apache.zeppelin.server.JsonExclusionStrategy
org.apache.zeppelin.server.JsonResponse.toString : $r3 = new org.apache.zeppelin.server.JsonExclusionStrategy >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r3.<org.apache.zeppelin.server.JsonExclusionStrategy: void <init>()>()
org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r3.<org.apache.zeppelin.server.JsonExclusionStrategy: void <init>()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r6[0] = $r3
org.apache.zeppelin.server.JsonResponse.toString : $r6[0] = $r3 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])>($r6)
org.apache.zeppelin.server.JsonResponse.toString : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])>($r6) >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0) >>>>>>>> org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0 >>>>>>>> org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : return $r8
org.apache.zeppelin.server.JsonResponse.toString : return $r8 >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : r1 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r6)
org.apache.zeppelin.server.JsonResponse.build : r1 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r6) >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies>
org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : if $r7 == null
org.apache.zeppelin.server.JsonResponse.build : if $r7 == null >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : return $r12
org.apache.zeppelin.server.JsonResponse.build : return $r12 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : return $r24
org.apache.zeppelin.rest.HeliumRestApi.getSpellConfigUsingMagic : return $r24 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r3 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium>
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r3 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : r1 = virtualinvoke $r3.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageConfig()>()
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : r1 = virtualinvoke $r3.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageConfig()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : r7 = $r6
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : r7 = $r6 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r8 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r8 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r9 = virtualinvoke r7.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r9 = virtualinvoke r7.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r9, r7)
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r9, r7) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r10 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r10 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r11 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r11 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r12 = virtualinvoke r7.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r12 = virtualinvoke r7.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : specialinvoke $r10.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r11, $r12)
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : specialinvoke $r10.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r11, $r12) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r13 = virtualinvoke $r10.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : $r13 = virtualinvoke $r10.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : return $r13
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageConfigs : return $r13 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : if $z0 != 0
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : if $z0 != 0 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r2)
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r2) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : if $z1 == 0
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : if $z1 == 0 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r7 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium>
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r7 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : r4 = virtualinvoke $r7.<org.apache.zeppelin.helium.Helium: java.util.Map getPackageConfig(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : r4 = virtualinvoke $r7.<org.apache.zeppelin.helium.Helium: java.util.Map getPackageConfig(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : r19 = $r18
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : r19 = $r18 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r20 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r20 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r21 = virtualinvoke r19.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r21 = virtualinvoke r19.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r21, r19)
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r21, r19) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r22 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r22 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r23 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r23 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r24 = virtualinvoke r19.<java.lang.RuntimeException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r24 = virtualinvoke r19.<java.lang.RuntimeException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : specialinvoke $r22.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r23, $r24)
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : specialinvoke $r22.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>($r23, $r24) >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r25 = virtualinvoke $r22.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : $r25 = virtualinvoke $r22.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : return $r25
org.apache.zeppelin.rest.HeliumRestApi.getPackageConfig : return $r25 >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r1 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r1 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r3 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium>
org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r3 = r0.<org.apache.zeppelin.rest.HeliumRestApi: org.apache.zeppelin.helium.Helium helium> >>>>>>>> org.apache.zeppelin.rest.HeliumRestApi.getAllPackageInfo : $r4 = virtualinvoke $r3.<org.apache.zeppelin.helium.Helium: java.util.Map getAllPackageInfo()>()
