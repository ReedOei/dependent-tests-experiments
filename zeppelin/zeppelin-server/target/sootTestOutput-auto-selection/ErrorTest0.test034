org.apache.zeppelin.rest.NotebookRestApi.bind : specialinvoke r0.<org.apache.zeppelin.rest.NotebookRestApi: void checkIfUserCanRead(java.lang.String,java.lang.String)>(r1, "Insufficient privileges you cannot get any interpreters settings") >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>()
org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : r3 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>() >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $r4 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>()
org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $r4 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.lang.String getPrincipal()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled>
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled> >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : if $z0 != 0
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : if $z0 != 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous"
org.apache.zeppelin.utils.SecurityUtils.getPrincipal : return "anonymous" >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r4)
org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r4) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $r5 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.util.HashSet getRoles()>()
org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $r5 = staticinvoke <org.apache.zeppelin.utils.SecurityUtils: java.util.HashSet getRoles()>() >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getRoles : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled>
org.apache.zeppelin.utils.SecurityUtils.getRoles : $z0 = <org.apache.zeppelin.utils.SecurityUtils: boolean isEnabled> >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getRoles : if $z0 != 0
org.apache.zeppelin.utils.SecurityUtils.getRoles : if $z0 != 0 >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getRoles : $r7 = <org.apache.zeppelin.utils.SecurityUtils: java.util.HashSet EMPTY_HASHSET>
org.apache.zeppelin.utils.SecurityUtils.getRoles : $r7 = <org.apache.zeppelin.utils.SecurityUtils: java.util.HashSet EMPTY_HASHSET> >>>>>>>> org.apache.zeppelin.utils.SecurityUtils.getRoles : return $r7
org.apache.zeppelin.utils.SecurityUtils.getRoles : return $r7 >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5)
org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : interfaceinvoke r3.<java.util.Set: boolean addAll(java.util.Collection)>($r5) >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $r6 = r0.<org.apache.zeppelin.rest.NotebookRestApi: org.apache.zeppelin.notebook.NotebookAuthorization notebookAuthorization>
org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $r6 = r0.<org.apache.zeppelin.rest.NotebookRestApi: org.apache.zeppelin.notebook.NotebookAuthorization notebookAuthorization> >>>>>>>> org.apache.zeppelin.rest.NotebookRestApi.checkIfUserCanRead : $z2 = virtualinvoke $r6.<org.apache.zeppelin.notebook.NotebookAuthorization: boolean hasReadAuthorization(java.util.Set,java.lang.String)>(r3, r1)
