org.apache.zeppelin.socket.NotebookServer.onAdd : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void onUpdate(java.lang.String,org.apache.zeppelin.display.AngularObject)>(r1, r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null
org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r4 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r4 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : r2 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.InterpreterSetting get(java.lang.String)>(r1)
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : r2 = virtualinvoke $r4.<org.apache.zeppelin.interpreter.InterpreterSettingManager: org.apache.zeppelin.interpreter.InterpreterSetting get(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : r11 = $r10
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : r11 = $r10 >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r12 = <org.apache.zeppelin.rest.InterpreterRestApi: org.slf4j.Logger logger>
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r12 = <org.apache.zeppelin.rest.InterpreterRestApi: org.slf4j.Logger logger> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in InterpreterRestApi while creating ", r11)
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : interfaceinvoke $r12.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception in InterpreterRestApi while creating ", r11) >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r13 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r13 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r14 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR>
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r14 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status INTERNAL_SERVER_ERROR> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r15 = virtualinvoke r11.<java.lang.NullPointerException: java.lang.String getMessage()>()
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r15 = virtualinvoke r11.<java.lang.NullPointerException: java.lang.String getMessage()>() >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r16 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getStackTrace(java.lang.Throwable)>(r11)
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r16 = staticinvoke <org.apache.commons.lang.exception.ExceptionUtils: java.lang.String getStackTrace(java.lang.Throwable)>(r11) >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : specialinvoke $r13.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r14, $r15, $r16)
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : specialinvoke $r13.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String,java.lang.Object)>($r14, $r15, $r16) >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r17 = virtualinvoke $r13.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : $r17 = virtualinvoke $r13.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4)
org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4) >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r6 = virtualinvoke r0.<org.apache.zeppelin.server.JsonResponse: java.lang.String toString()>()
org.apache.zeppelin.server.JsonResponse.build : $r6 = virtualinvoke r0.<org.apache.zeppelin.server.JsonResponse: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder
org.apache.zeppelin.server.JsonResponse.toString : $r1 = new com.google.gson.GsonBuilder >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>()
org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r1.<com.google.gson.GsonBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : r2 = $r1
org.apache.zeppelin.server.JsonResponse.toString : r2 = $r1 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty>
org.apache.zeppelin.server.JsonResponse.toString : $z0 = r0.<org.apache.zeppelin.server.JsonResponse: boolean pretty> >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : if $z0 == 0
org.apache.zeppelin.server.JsonResponse.toString : if $z0 == 0 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1]
org.apache.zeppelin.server.JsonResponse.toString : $r6 = newarray (com.google.gson.ExclusionStrategy)[1] >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r3 = new org.apache.zeppelin.server.JsonExclusionStrategy
org.apache.zeppelin.server.JsonResponse.toString : $r3 = new org.apache.zeppelin.server.JsonExclusionStrategy >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r3.<org.apache.zeppelin.server.JsonExclusionStrategy: void <init>()>()
org.apache.zeppelin.server.JsonResponse.toString : specialinvoke $r3.<org.apache.zeppelin.server.JsonExclusionStrategy: void <init>()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r6[0] = $r3
org.apache.zeppelin.server.JsonResponse.toString : $r6[0] = $r3 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])>($r6)
org.apache.zeppelin.server.JsonResponse.toString : virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])>($r6) >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>()
org.apache.zeppelin.server.JsonResponse.toString : r4 = virtualinvoke r2.<com.google.gson.GsonBuilder: com.google.gson.Gson create()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0)
org.apache.zeppelin.server.JsonResponse.toString : $r8 = virtualinvoke r4.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r0) >>>>>>>> org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipClass : return 0 >>>>>>>> org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0
org.apache.zeppelin.server.JsonExclusionStrategy.shouldSkipField : return 0 >>>>>>>> org.apache.zeppelin.server.JsonResponse.toString : return $r8
org.apache.zeppelin.server.JsonResponse.toString : return $r8 >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : r1 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r6)
org.apache.zeppelin.server.JsonResponse.build : r1 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r6) >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies>
org.apache.zeppelin.server.JsonResponse.build : $r7 = r0.<org.apache.zeppelin.server.JsonResponse: java.util.ArrayList cookies> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : if $r7 == null
org.apache.zeppelin.server.JsonResponse.build : if $r7 == null >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.server.JsonResponse.build : $r12 = virtualinvoke r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : return $r12
org.apache.zeppelin.server.JsonResponse.build : return $r12 >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.getSetting : return $r17
org.apache.zeppelin.rest.InterpreterRestApi.getSetting : return $r17 >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r1 = new org.apache.zeppelin.server.JsonResponse
org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r1 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK>
org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r2 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status OK> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r3 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager>
org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r3 = r0.<org.apache.zeppelin.rest.InterpreterRestApi: org.apache.zeppelin.interpreter.InterpreterSettingManager interpreterSettingManager> >>>>>>>> org.apache.zeppelin.rest.InterpreterRestApi.listSettings : $r4 = virtualinvoke $r3.<org.apache.zeppelin.interpreter.InterpreterSettingManager: java.util.List get()>()
