org.apache.zeppelin.utils.ExceptionUtils.jsonResponseContent : $r2 = new org.apache.zeppelin.server.JsonResponse >>>>>>>> org.apache.zeppelin.utils.ExceptionUtils.jsonResponseContent : specialinvoke $r2.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>(r0, r1)
org.apache.zeppelin.utils.ExceptionUtils.jsonResponseContent : specialinvoke $r2.<org.apache.zeppelin.server.JsonResponse: void <init>(javax.ws.rs.core.Response$Status,java.lang.String)>(r0, r1) >>>>>>>> org.apache.zeppelin.utils.ExceptionUtils.jsonResponseContent : $r3 = virtualinvoke $r2.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>()
org.apache.zeppelin.utils.ExceptionUtils.jsonResponseContent : $r3 = virtualinvoke $r2.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response build()>() >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status>
org.apache.zeppelin.server.JsonResponse.build : $r4 = r0.<org.apache.zeppelin.server.JsonResponse: javax.ws.rs.core.Response$Status status> >>>>>>>> org.apache.zeppelin.server.JsonResponse.build : $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(javax.ws.rs.core.Response$Status)>($r4)
