org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE>
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11
org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastParagraphs : if null == r1
org.apache.zeppelin.socket.NotebookServer.broadcastParagraphs : if null == r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2)
org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r2 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson>
org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r2 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/notebook/socket/Message")
org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/notebook/socket/Message") >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r3 = virtualinvoke r2.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>()
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r3 = virtualinvoke r2.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>() >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r4 = r0.<org.apache.zeppelin.json.NotebookTypeAdapterFactory: java.lang.Class customizedClass>
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r4 = r0.<org.apache.zeppelin.json.NotebookTypeAdapterFactory: java.lang.Class customizedClass> >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : if $r3 != $r4
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : if $r3 != $r4 >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r5 = null
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r5 = null >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : return $r5
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : return $r5 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r69 = $r68
org.apache.zeppelin.socket.NotebookServer.onMessage : r69 = $r68 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t handle message", r69)
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t handle message", r69) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.doWebSocketConnect : $r3 = new org.apache.zeppelin.socket.NotebookSocket
org.apache.zeppelin.socket.NotebookServer.doWebSocketConnect : $r3 = new org.apache.zeppelin.socket.NotebookSocket >>>>>>>> org.apache.zeppelin.socket.NotebookServer.doWebSocketConnect : specialinvoke $r3.<org.apache.zeppelin.socket.NotebookSocket: void <init>(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.zeppelin.socket.NotebookSocketListener)>(r1, r2, r0)
org.apache.zeppelin.socket.NotebookServer.doWebSocketConnect : specialinvoke $r3.<org.apache.zeppelin.socket.NotebookSocket: void <init>(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.zeppelin.socket.NotebookSocketListener)>(r1, r2, r0) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.doWebSocketConnect : return $r3
org.apache.zeppelin.socket.NotebookServer.doWebSocketConnect : return $r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r3 = <org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE JOB_MANAGER_PAGE>
org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r3 = <org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE JOB_MANAGER_PAGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r7 = virtualinvoke $r3.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String getKey()>()
org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r7 = virtualinvoke $r3.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String getKey()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : $r1 = r0.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String serviceTypeKey>
org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : $r1 = r0.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String serviceTypeKey> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : return $r1
org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void addConnectionToNote(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r7, r1)
org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void addConnectionToNote(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r7, r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r6 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r6 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : r3 = $r6
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : r3 = $r6 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : entermonitor $r6
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : entermonitor $r6 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeConnectionFromAllNote(org.apache.zeppelin.socket.NotebookSocket)>(r2)
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeConnectionFromAllNote(org.apache.zeppelin.socket.NotebookSocket)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : r2 = $r7
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : r2 = $r7 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : entermonitor $r7
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : entermonitor $r7 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : $r8 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : $r8 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : r3 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>()
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : r3 = interfaceinvoke $r8.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : exitmonitor r2
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : exitmonitor r2 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromAllNote : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : r4 = (java.util.List) $r8
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : r4 = (java.util.List) $r8 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : if r4 != null
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : if r4 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r9 = new java.util.LinkedList
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r9 = new java.util.LinkedList >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : specialinvoke $r9.<java.util.LinkedList: void <init>()>()
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : specialinvoke $r9.<java.util.LinkedList: void <init>()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : r4 = $r9
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : r4 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4)
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $z0 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2)
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : $z0 = interfaceinvoke r4.<java.util.List: boolean contains(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : if $z0 != 0
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : if $z0 != 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2)
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : exitmonitor r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.addConnectionToNote : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r8 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r8 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unicastNoteJobInfo : $r9 = r2.<org.apache.zeppelin.notebook.socket.Message: java.lang.String principal>
