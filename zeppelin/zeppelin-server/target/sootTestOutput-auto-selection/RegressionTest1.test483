org.apache.zeppelin.realm.PamRealm.setService : r0.<org.apache.zeppelin.realm.PamRealm: java.lang.String service> = r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE>
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11
org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : if r1 != null
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : if r1 != null >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> = $r3
org.apache.zeppelin.realm.LdapRealm.setUserSearchAttributeTemplate : r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> = $r3 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate>
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeTemplate> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : return $r1
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeTemplate : return $r1 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeName>
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : $r1 = r0.<org.apache.zeppelin.realm.LdapRealm: java.lang.String userSearchAttributeName> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : return $r1
org.apache.zeppelin.realm.LdapRealm.getUserSearchAttributeName : return $r1 >>>>>>>> org.apache.zeppelin.realm.LdapRealm.isAuthorizationEnabled : $z0 = r0.<org.apache.zeppelin.realm.LdapRealm: boolean authorizationEnabled>
org.apache.zeppelin.realm.LdapRealm.isAuthorizationEnabled : $z0 = r0.<org.apache.zeppelin.realm.LdapRealm: boolean authorizationEnabled> >>>>>>>> org.apache.zeppelin.realm.LdapRealm.isAuthorizationEnabled : return $z0
org.apache.zeppelin.realm.LdapRealm.isAuthorizationEnabled : return $z0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : $r3 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : $r3 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : $r4 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP INTERPRETER_BINDINGS>
org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : $r4 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP INTERPRETER_BINDINGS> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : specialinvoke $r3.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r4)
org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : specialinvoke $r3.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : $r5 = virtualinvoke $r3.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("interpreterBindings", r2)
org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : $r5 = virtualinvoke $r3.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("interpreterBindings", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, $r5)
org.apache.zeppelin.socket.NotebookServer.broadcastInterpreterBindings : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, $r5) >>>>>>>> org.apache.zeppelin.realm.PamRealm.getService : $r1 = r0.<org.apache.zeppelin.realm.PamRealm: java.lang.String service>
org.apache.zeppelin.realm.PamRealm.getService : $r1 = r0.<org.apache.zeppelin.realm.PamRealm: java.lang.String service> >>>>>>>> org.apache.zeppelin.realm.PamRealm.getService : return $r1
