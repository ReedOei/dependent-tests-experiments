org.apache.zeppelin.socket.NotebookServer.onAdd : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void onUpdate(java.lang.String,org.apache.zeppelin.display.AngularObject)>(r1, r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null
org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onMessage : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2)
org.apache.zeppelin.socket.NotebookServer.onMessage : r4 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.socket.Message deserializeMessage(java.lang.String)>(r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r2 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson>
org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r2 = r0.<org.apache.zeppelin.socket.NotebookServer: com.google.gson.Gson gson> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/notebook/socket/Message")
org.apache.zeppelin.socket.NotebookServer.deserializeMessage : $r3 = virtualinvoke $r2.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.Class)>(r1, class "org/apache/zeppelin/notebook/socket/Message") >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r3 = virtualinvoke r2.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>()
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r3 = virtualinvoke r2.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>() >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r4 = r0.<org.apache.zeppelin.json.NotebookTypeAdapterFactory: java.lang.Class customizedClass>
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r4 = r0.<org.apache.zeppelin.json.NotebookTypeAdapterFactory: java.lang.Class customizedClass> >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : if $r3 != $r4
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : if $r3 != $r4 >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r5 = null
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : $r5 = null >>>>>>>> org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : return $r5
org.apache.zeppelin.json.NotebookTypeAdapterFactory.create : return $r5 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : r69 = $r68
org.apache.zeppelin.socket.NotebookServer.onMessage : r69 = $r68 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onMessage : $r70 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t handle message", r69)
org.apache.zeppelin.socket.NotebookServer.onMessage : interfaceinvoke $r70.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t handle message", r69) >>>>>>>> org.apache.zeppelin.socket.NotebookSocket.onWebSocketConnect : r0.<org.apache.zeppelin.socket.NotebookSocket: org.eclipse.jetty.websocket.api.Session connection> = r1
org.apache.zeppelin.socket.NotebookSocket.onWebSocketConnect : r0.<org.apache.zeppelin.socket.NotebookSocket: org.eclipse.jetty.websocket.api.Session connection> = r1 >>>>>>>> org.apache.zeppelin.socket.NotebookSocket.onWebSocketConnect : $r2 = r0.<org.apache.zeppelin.socket.NotebookSocket: org.apache.zeppelin.socket.NotebookSocketListener listener>
org.apache.zeppelin.socket.NotebookSocket.onWebSocketConnect : $r2 = r0.<org.apache.zeppelin.socket.NotebookSocket: org.apache.zeppelin.socket.NotebookSocketListener listener> >>>>>>>> org.apache.zeppelin.socket.NotebookSocket.onWebSocketConnect : interfaceinvoke $r2.<org.apache.zeppelin.socket.NotebookSocketListener: void onOpen(org.apache.zeppelin.socket.NotebookSocket)>(r0)
