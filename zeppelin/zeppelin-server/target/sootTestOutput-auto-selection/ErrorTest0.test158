org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : $z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(r1) >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : if $z0 == 0
org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : if $z0 == 0 >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : $r2 = <org.apache.zeppelin.realm.ZeppelinHubRealm: org.slf4j.Logger LOG>
org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : $r2 = <org.apache.zeppelin.realm.ZeppelinHubRealm: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Zeppelinhub url is empty, setting up default url {}", "https://www.zeppelinhub.com")
org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Zeppelinhub url is empty, setting up default url {}", "https://www.zeppelinhub.com") >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : r0.<org.apache.zeppelin.realm.ZeppelinHubRealm: java.lang.String zeppelinhubUrl> = "https://www.zeppelinhub.com"
org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : r0.<org.apache.zeppelin.realm.ZeppelinHubRealm: java.lang.String zeppelinhubUrl> = "https://www.zeppelinhub.com" >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : goto [?= return]
org.apache.zeppelin.realm.ZeppelinHubRealm.setZeppelinhubUrl : goto [?= return] >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance>
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r3 = <org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer instance> >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String setSession(java.lang.String,java.lang.String)>(r1, r2)
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : virtualinvoke $r3.<org.apache.zeppelin.notebook.repo.zeppelinhub.model.UserSessionContainer: java.lang.String setSession(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r6 = new java.util.HashSet
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r6 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : r4 = $r6
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : r4 = $r6 >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r1)
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r7 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.socket.NotebookServer notebookWsServer>
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r7 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.socket.NotebookServer notebookWsServer> >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r8 = new org.apache.zeppelin.user.AuthenticationInfo
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : $r8 = new org.apache.zeppelin.user.AuthenticationInfo >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : specialinvoke $r8.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>(r1)
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : specialinvoke $r8.<org.apache.zeppelin.user.AuthenticationInfo: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : virtualinvoke $r7.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>($r8, r4)
org.apache.zeppelin.realm.ZeppelinHubRealm.onLoginSuccess : virtualinvoke $r7.<org.apache.zeppelin.socket.NotebookServer: void broadcastReloadedNoteList(org.apache.zeppelin.user.AuthenticationInfo,java.util.HashSet)>($r8, r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : if r1 != null
org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : if r1 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : r3 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.util.List generateNotesInfo(boolean,org.apache.zeppelin.user.AuthenticationInfo,java.util.Set)>(1, r1, r2)
org.apache.zeppelin.socket.NotebookServer.broadcastReloadedNoteList : r3 = virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: java.util.List generateNotesInfo(boolean,org.apache.zeppelin.user.AuthenticationInfo,java.util.Set)>(1, r1, r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.conf.ZeppelinConfiguration getConf()>()
