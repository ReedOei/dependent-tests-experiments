org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE>
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11
org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r6 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r6 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r7 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_UPDATE_OUTPUT>
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r7 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_UPDATE_OUTPUT> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : specialinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r7)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : specialinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r9 = virtualinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r9 = virtualinvoke $r6.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r12 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("index", $r11)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r12 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("index", $r11) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r13 = virtualinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("type", r4)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r13 = virtualinvoke $r12.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("type", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r14 = virtualinvoke $r13.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : $r14 = virtualinvoke $r13.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : r8 = virtualinvoke $r14.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("data", r5)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : r8 = virtualinvoke $r14.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("data", r5) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r8)
org.apache.zeppelin.socket.NotebookServer.onOutputUpdated : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r8) >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r4 = new java.util.LinkedHashSet
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r4 = new java.util.LinkedHashSet >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r5 = $r4
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r5 = $r4 >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r14 = new javax.naming.directory.SearchControls
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r14 = new javax.naming.directory.SearchControls >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r14.<javax.naming.directory.SearchControls: void <init>()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r14.<javax.naming.directory.SearchControls: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r6 = $r14
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r6 = $r14 >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : virtualinvoke r6.<javax.naming.directory.SearchControls: void setSearchScope(int)>(2)
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : virtualinvoke r6.<javax.naming.directory.SearchControls: void setSearchScope(int)>(2) >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r15 = new java.lang.StringBuilder
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&(objectClass=groupOfNames)(member=")
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(&(objectClass=groupOfNames)(member=") >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))")
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))") >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r7 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r19 = newarray (java.lang.Object)[1]
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r19 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r19[0] = r1
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r19[0] = r1 >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r8 = $r19
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r8 = $r19 >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r20 = interfaceinvoke r2.<javax.naming.ldap.LdapContext: java.util.Hashtable getEnvironment()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r20 = interfaceinvoke r2.<javax.naming.ldap.LdapContext: java.util.Hashtable getEnvironment()>() >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r30 = $r29
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : r30 = $r29 >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r31 = <org.apache.zeppelin.realm.LdapGroupRealm: org.slf4j.Logger LOG>
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r31 = <org.apache.zeppelin.realm.LdapGroupRealm: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error", r30)
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : interfaceinvoke $r31.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error", r30) >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r32 = new java.util.HashSet
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : $r32 = new java.util.HashSet >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : return $r32
org.apache.zeppelin.realm.LdapGroupRealm.getRoleNamesForUser : return $r32 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.generateNotesInfo : r4 = virtualinvoke r3.<org.apache.zeppelin.notebook.Notebook: org.apache.zeppelin.conf.ZeppelinConfiguration getConf()>()
