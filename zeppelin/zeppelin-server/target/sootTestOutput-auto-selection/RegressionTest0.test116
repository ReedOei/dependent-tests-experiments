org.apache.zeppelin.socket.NotebookServer.onAdd : virtualinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void onUpdate(java.lang.String,org.apache.zeppelin.display.AngularObject)>(r1, r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>()
org.apache.zeppelin.socket.NotebookServer.onUpdate : r3 = specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: org.apache.zeppelin.notebook.Notebook notebook()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook>
org.apache.zeppelin.socket.NotebookServer.notebook : $r1 = <org.apache.zeppelin.server.ZeppelinServer: org.apache.zeppelin.notebook.Notebook notebook> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.notebook : return $r1
org.apache.zeppelin.socket.NotebookServer.notebook : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null
org.apache.zeppelin.socket.NotebookServer.onUpdate : if r3 != null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r5 = new org.apache.zeppelin.notebook.socket.Message >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE>
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r6 = <org.apache.zeppelin.notebook.socket.Message$OP: org.apache.zeppelin.notebook.socket.Message$OP APP_STATUS_CHANGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: void <init>(org.apache.zeppelin.notebook.socket.Message$OP)>($r6) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r8 = virtualinvoke $r5.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("noteId", r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r9 = virtualinvoke $r8.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("paragraphId", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : $r10 = virtualinvoke $r9.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("appId", r3) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : r7 = virtualinvoke $r10.<org.apache.zeppelin.notebook.socket.Message: org.apache.zeppelin.notebook.socket.Message put(java.lang.String,java.lang.Object)>("status", r4) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7)
org.apache.zeppelin.socket.NotebookServer.onStatusChange : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcast(java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, r7) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : r3 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcast : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2)
org.apache.zeppelin.socket.NotebookServer.broadcast : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void broadcastToWatchers(java.lang.String,java.lang.String,org.apache.zeppelin.notebook.socket.Message)>(r1, "", r2) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r9 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r4 = $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : entermonitor $r9 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets>
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Queue watcherSockets> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : r5 = interfaceinvoke $r10.<java.util.Queue: java.util.Iterator iterator()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : if $z0 == 0 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : exitmonitor r4 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.broadcastToWatchers : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.broadcast : $r10 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.broadcast : $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11
org.apache.zeppelin.socket.NotebookServer.broadcast : r4 = (java.util.List) $r11 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null
org.apache.zeppelin.socket.NotebookServer.broadcast : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.broadcast : exitmonitor r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.broadcastParagraphs : if null == r1
org.apache.zeppelin.socket.NotebookServer.broadcastParagraphs : if null == r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unsubscribeNoteJobInfo : $r2 = <org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE JOB_MANAGER_PAGE>
org.apache.zeppelin.socket.NotebookServer.unsubscribeNoteJobInfo : $r2 = <org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE JOB_MANAGER_PAGE> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unsubscribeNoteJobInfo : $r3 = virtualinvoke $r2.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String getKey()>()
org.apache.zeppelin.socket.NotebookServer.unsubscribeNoteJobInfo : $r3 = virtualinvoke $r2.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String getKey()>() >>>>>>>> org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : $r1 = r0.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String serviceTypeKey>
org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : $r1 = r0.<org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE: java.lang.String serviceTypeKey> >>>>>>>> org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : return $r1
org.apache.zeppelin.socket.NotebookServer$JOB_MANAGER_SERVICE.getKey : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.unsubscribeNoteJobInfo : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeConnectionFromNote(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r3, r1)
org.apache.zeppelin.socket.NotebookServer.unsubscribeNoteJobInfo : specialinvoke r0.<org.apache.zeppelin.socket.NotebookServer: void removeConnectionFromNote(java.lang.String,org.apache.zeppelin.socket.NotebookSocket)>($r3, r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : $r6 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : $r6 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : r3 = $r6
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : r3 = $r6 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : entermonitor $r6
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : entermonitor $r6 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap>
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : $r7 = r0.<org.apache.zeppelin.socket.NotebookServer: java.util.Map noteSocketMap> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : r4 = (java.util.List) $r8
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : r4 = (java.util.List) $r8 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : if r4 == null
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : if r4 == null >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : exitmonitor r3
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : exitmonitor r3 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : goto [?= return]
org.apache.zeppelin.socket.NotebookServer.removeConnectionFromNote : goto [?= return] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onClose : $r3 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG>
org.apache.zeppelin.socket.NotebookServer.onClose : $r3 = <org.apache.zeppelin.socket.NotebookServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onClose : $r4 = newarray (java.lang.Object)[4]
org.apache.zeppelin.socket.NotebookServer.onClose : $r4 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onClose : $r5 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: javax.servlet.http.HttpServletRequest getRequest()>()
org.apache.zeppelin.socket.NotebookServer.onClose : $r5 = virtualinvoke r1.<org.apache.zeppelin.socket.NotebookSocket: javax.servlet.http.HttpServletRequest getRequest()>() >>>>>>>> org.apache.zeppelin.socket.NotebookSocket.getRequest : $r1 = r0.<org.apache.zeppelin.socket.NotebookSocket: javax.servlet.http.HttpServletRequest request>
org.apache.zeppelin.socket.NotebookSocket.getRequest : $r1 = r0.<org.apache.zeppelin.socket.NotebookSocket: javax.servlet.http.HttpServletRequest request> >>>>>>>> org.apache.zeppelin.socket.NotebookSocket.getRequest : return $r1
org.apache.zeppelin.socket.NotebookSocket.getRequest : return $r1 >>>>>>>> org.apache.zeppelin.socket.NotebookServer.onClose : $r6 = interfaceinvoke $r5.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteAddr()>()
