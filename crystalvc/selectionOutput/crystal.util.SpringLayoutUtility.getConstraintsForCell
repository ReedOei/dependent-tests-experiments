crystal.util.SpringLayoutUtility.getConstraintsForCell : $r3 = virtualinvoke r0.<javax.swing.JPanel: java.awt.LayoutManager getLayout()>() >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : r1 = (javax.swing.SpringLayout) $r3
crystal.util.SpringLayoutUtility.getConstraintsForCell : r1 = (javax.swing.SpringLayout) $r3 >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $i3 = i0 * i2
crystal.util.SpringLayoutUtility.getConstraintsForCell : $i3 = i0 * i2 >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $i4 = $i3 + i1
crystal.util.SpringLayoutUtility.getConstraintsForCell : $i4 = $i3 + i1 >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : r2 = virtualinvoke r0.<javax.swing.JPanel: java.awt.Component getComponent(int)>($i4)
crystal.util.SpringLayoutUtility.getConstraintsForCell : r2 = virtualinvoke r0.<javax.swing.JPanel: java.awt.Component getComponent(int)>($i4) >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : $r4 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r2)
crystal.util.SpringLayoutUtility.getConstraintsForCell : $r4 = virtualinvoke r1.<javax.swing.SpringLayout: javax.swing.SpringLayout$Constraints getConstraints(java.awt.Component)>(r2) >>>>>>>> crystal.util.SpringLayoutUtility.getConstraintsForCell : return $r4
