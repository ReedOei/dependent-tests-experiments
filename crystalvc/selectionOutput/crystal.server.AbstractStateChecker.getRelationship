crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker")
crystal.server.AbstractStateChecker.getRelationship : r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r22 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r22 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z0 = virtualinvoke $r22.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getRelationship : $z0 = virtualinvoke $r22.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isEnabled()>()
crystal.server.AbstractStateChecker.getRelationship : if $z0 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : $z1 = virtualinvoke r1.<crystal.model.DataSource: boolean isEnabled()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : if $z1 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r23 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r23 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r5 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r23)
crystal.server.AbstractStateChecker.getRelationship : r5 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>($r23) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r6 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>(r1)
crystal.server.AbstractStateChecker.getRelationship : r6 = virtualinvoke r0.<crystal.client.ProjectPreferences: java.lang.String getProjectCheckoutLocation(crystal.model.DataSource)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : n0 = null
crystal.server.AbstractStateChecker.getRelationship : n0 = null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r24 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind HG>
crystal.server.AbstractStateChecker.getRelationship : $r24 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind HG> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z2 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r24)
crystal.server.AbstractStateChecker.getRelationship : $z2 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r24) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r25 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : if $z2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r27 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind GIT>
crystal.server.AbstractStateChecker.getRelationship : $r27 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind GIT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z3 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r27)
crystal.server.AbstractStateChecker.getRelationship : $z3 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: boolean equals(java.lang.Object)>($r27) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r28 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : if $z3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return null
crystal.server.AbstractStateChecker.getRelationship : $r28 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r28.<crystal.client.ClientPreferences: java.lang.String getGitPath()>()
crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r28.<crystal.client.ClientPreferences: java.lang.String getGitPath()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getRelationship : $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r7 = virtualinvoke $r29.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>()
crystal.server.AbstractStateChecker.getRelationship : r7 = virtualinvoke $r29.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r30 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r30 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tempMine_")
crystal.server.AbstractStateChecker.getRelationship : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tempMine_") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r32 = staticinvoke <crystal.util.TimeUtility: java.lang.String getCurrentLSMRDateString()>()
crystal.server.AbstractStateChecker.getRelationship : $r32 = staticinvoke <crystal.util.TimeUtility: java.lang.String getCurrentLSMRDateString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
crystal.server.AbstractStateChecker.getRelationship : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r8 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>()
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r34 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getRemoteCmd()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r35 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r36 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r37 = virtualinvoke $r36.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r37 = virtualinvoke $r36.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r37 = virtualinvoke $r36.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r37 = virtualinvoke $r36.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r34, $r35, $r37)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r34, $r35, $r37) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r38 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r34, $r35, $r37) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r46 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.server.AbstractStateChecker: void updateLocalRepositoryAndCheckCacheError(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r26, r6, r7, $r34, $r35, $r37) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r55 = newarray (java.lang.String)[1]]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r55 = newarray (java.lang.String)[1]] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r55 = newarray (java.lang.String)[1]
crystal.server.AbstractStateChecker.getRelationship : $r55 = newarray (java.lang.String)[1] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r55[0] = "log"
crystal.server.AbstractStateChecker.getRelationship : $r55[0] = "log" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r56 = $r55
crystal.server.AbstractStateChecker.getRelationship : r56 = $r55 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r10 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r56, r6, 0)
crystal.server.AbstractStateChecker.getRelationship : r56 = $r55 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r57 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r11 = $r57 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r58 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r58 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r58.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r59 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r59 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
crystal.server.AbstractStateChecker.getRelationship : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t get the log: ")
crystal.server.AbstractStateChecker.getRelationship : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t get the log: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r62 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r62 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62)
crystal.server.AbstractStateChecker.getRelationship : $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r64
crystal.server.AbstractStateChecker.getRelationship : r10 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r56, r6, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r65 = new crystal.model.RevisionHistory]
crystal.server.AbstractStateChecker.getRelationship : r10 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r56, r6, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r57 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r65 = new crystal.model.RevisionHistory] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r65 = new crystal.model.RevisionHistory
crystal.server.AbstractStateChecker.getRelationship : $r65 = new crystal.model.RevisionHistory >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r66 = virtualinvoke r10.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r66 = virtualinvoke r10.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r65.<crystal.model.RevisionHistory: void <init>(java.lang.String,crystal.model.DataSource$RepoKind)>($r66, r3)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r65.<crystal.model.RevisionHistory: void <init>(java.lang.String,crystal.model.DataSource$RepoKind)>($r66, r3) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r67 = $r65
crystal.server.AbstractStateChecker.getRelationship : r67 = $r65 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r1.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>(r67)
crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r1.<crystal.model.DataSource: void setHistory(crystal.model.RevisionHistory)>(r67) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r68 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r68 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r12 = virtualinvoke $r68.<crystal.model.DataSource: crystal.model.RevisionHistory getHistory()>()
crystal.server.AbstractStateChecker.getRelationship : r12 = virtualinvoke $r68.<crystal.model.DataSource: crystal.model.RevisionHistory getHistory()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r12 != null
crystal.server.AbstractStateChecker.getRelationship : if r12 != null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r69 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r12 != null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z4 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean equals(java.lang.Object)>(r67)
crystal.server.AbstractStateChecker.getRelationship : $z4 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean equals(java.lang.Object)>(r67) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r74 = <crystal.model.Relationship: java.lang.String SAME>
crystal.server.AbstractStateChecker.getRelationship : if $z4 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z5 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean superHistory(crystal.model.RevisionHistory)>(r67)
crystal.server.AbstractStateChecker.getRelationship : $z5 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean superHistory(crystal.model.RevisionHistory)>(r67) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z5 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r75 = <crystal.model.Relationship: java.lang.String AHEAD>
crystal.server.AbstractStateChecker.getRelationship : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z6 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean subHistory(crystal.model.RevisionHistory)>(r67)
crystal.server.AbstractStateChecker.getRelationship : $z6 = virtualinvoke r12.<crystal.model.RevisionHistory: boolean subHistory(crystal.model.RevisionHistory)>(r67) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z6 == 0
crystal.server.AbstractStateChecker.getRelationship : if $z6 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r76 = <crystal.model.Relationship: java.lang.String BEHIND>
crystal.server.AbstractStateChecker.getRelationship : if $z6 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r77 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r77 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z7 = virtualinvoke $r77.<crystal.model.DataSource: boolean hasHistoryChanged()>()
crystal.server.AbstractStateChecker.getRelationship : $z7 = virtualinvoke $r77.<crystal.model.DataSource: boolean hasHistoryChanged()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z7 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z7 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $z8 = virtualinvoke r1.<crystal.model.DataSource: boolean hasHistoryChanged()>()
crystal.server.AbstractStateChecker.getRelationship : if $z7 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78 = newarray (java.lang.String)[3]
crystal.server.AbstractStateChecker.getRelationship : $r78 = newarray (java.lang.String)[3] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78[0] = "clone"
crystal.server.AbstractStateChecker.getRelationship : $r78[0] = "clone" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78[1] = r5
crystal.server.AbstractStateChecker.getRelationship : $r78[1] = r5 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78[2] = r8
crystal.server.AbstractStateChecker.getRelationship : $r78[2] = r8 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r13 = $r78
crystal.server.AbstractStateChecker.getRelationship : r13 = $r78 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r13, r7, 0)
crystal.server.AbstractStateChecker.getRelationship : r13 = $r78 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r79 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r15 = $r79 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r80 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r80 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r80.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r80.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r81 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r81 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)
crystal.server.AbstractStateChecker.getRelationship : $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t make a temp clone: ")
crystal.server.AbstractStateChecker.getRelationship : $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t make a temp clone: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r84 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r84 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84)
crystal.server.AbstractStateChecker.getRelationship : $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r86
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r13, r7, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r87 = newarray (java.lang.String)[2]]
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r13, r7, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r79 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r87 = newarray (java.lang.String)[2]] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r87 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.getRelationship : $r87 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r87[0] = "pull"
crystal.server.AbstractStateChecker.getRelationship : $r87[0] = "pull" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r87[1] = r6
crystal.server.AbstractStateChecker.getRelationship : $r87[1] = r6 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r88 = $r87
crystal.server.AbstractStateChecker.getRelationship : r88 = $r87 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r89 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : r88 = $r87 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r16 = $r94 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r95 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r95 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r95.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r95.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r96 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r96 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96)
crystal.server.AbstractStateChecker.getRelationship : $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t pull into my temp clone: ")
crystal.server.AbstractStateChecker.getRelationship : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t pull into my temp clone: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r99 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r99 = virtualinvoke r16.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99)
crystal.server.AbstractStateChecker.getRelationship : $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r99) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r101
crystal.server.AbstractStateChecker.getRelationship : $r89 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r89 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r89.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r93 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r88, $r92, 0)
crystal.server.AbstractStateChecker.getRelationship : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r93 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r88, $r92, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r102 = virtualinvoke r93.<crystal.util.RunIt$Output: java.lang.String getOutput()>()]
crystal.server.AbstractStateChecker.getRelationship : r93 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r88, $r92, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r94 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r102 = virtualinvoke r93.<crystal.util.RunIt$Output: java.lang.String getOutput()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r102 = virtualinvoke r93.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r102 = virtualinvoke r93.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r103 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r103 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r103.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r103.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(run \'")
crystal.server.AbstractStateChecker.getRelationship : $r104 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(run \'") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r105 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r105 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r106 = virtualinvoke $r105.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.getRelationship : $r106 = virtualinvoke $r105.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106)
crystal.server.AbstractStateChecker.getRelationship : $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heads\' to see heads, \'")
crystal.server.AbstractStateChecker.getRelationship : $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heads\' to see heads, \'") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r109 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r109 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r110 = virtualinvoke $r109.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.getRelationship : $r110 = virtualinvoke $r109.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r111 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110)
crystal.server.AbstractStateChecker.getRelationship : $r111 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge\' to merge)")
crystal.server.AbstractStateChecker.getRelationship : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" merge\' to merge)") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i0 = virtualinvoke $r102.<java.lang.String: int indexOf(java.lang.String)>($r113)
crystal.server.AbstractStateChecker.getRelationship : $i0 = virtualinvoke $r102.<java.lang.String: int indexOf(java.lang.String)>($r113) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0
crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r114 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.getRelationship : if $i0 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r150 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r150 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r150.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r150.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing")
crystal.server.AbstractStateChecker.getRelationship : $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.getRelationship : $r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
crystal.server.AbstractStateChecker.getRelationship : $r153 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
crystal.server.AbstractStateChecker.getRelationship : $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.server.AbstractStateChecker.getRelationship : $r155 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r156 = virtualinvoke r93.<crystal.util.RunIt$Output: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r156 = virtualinvoke r93.<crystal.util.RunIt$Output: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r157 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r156)
crystal.server.AbstractStateChecker.getRelationship : $r157 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r156) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r158 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r158)
crystal.server.AbstractStateChecker.getRelationship : virtualinvoke r4.<org.apache.log4j.Logger: void error(java.lang.Object)>($r158) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r159 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r159 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r159.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r159.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing\n")
crystal.server.AbstractStateChecker.getRelationship : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Crystal is having trouble comparing\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.getRelationship : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
crystal.server.AbstractStateChecker.getRelationship : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)
crystal.server.AbstractStateChecker.getRelationship : $r163 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nfor the repository ")
crystal.server.AbstractStateChecker.getRelationship : $r164 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nfor the repository ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r165 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r165 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r165)
crystal.server.AbstractStateChecker.getRelationship : $r166 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r165) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project ")
crystal.server.AbstractStateChecker.getRelationship : $r167 = virtualinvoke $r166.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r168 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : $r168 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r169 = virtualinvoke $r168.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.server.AbstractStateChecker.getRelationship : $r169 = virtualinvoke $r168.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r170 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r169)
crystal.server.AbstractStateChecker.getRelationship : $r170 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r169) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n")
crystal.server.AbstractStateChecker.getRelationship : $r171 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".\n") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : r172 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r173 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r173 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r173.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r173.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r174 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r174 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r175 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r174)
crystal.server.AbstractStateChecker.getRelationship : $r175 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r174) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r172)
crystal.server.AbstractStateChecker.getRelationship : $r177 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r172) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r178 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r178
crystal.server.AbstractStateChecker.getRelationship : $r114 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r114[0] = "merge"
crystal.server.AbstractStateChecker.getRelationship : $r114[0] = "merge" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r114[1] = "--noninteractive"
crystal.server.AbstractStateChecker.getRelationship : $r114[1] = "--noninteractive" >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r115 = $r114
crystal.server.AbstractStateChecker.getRelationship : r115 = $r114 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r116 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : r115 = $r114 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r17 = $r121 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r122 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r122 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r122.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r122.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r123 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r123 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123)
crystal.server.AbstractStateChecker.getRelationship : $r124 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t execute merge: ")
crystal.server.AbstractStateChecker.getRelationship : $r125 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Couldn\'t execute merge: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r126 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r126 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126)
crystal.server.AbstractStateChecker.getRelationship : $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r126) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r128
crystal.server.AbstractStateChecker.getRelationship : $r116 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r116.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r116 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r116.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r116.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r120 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r115, $r119, 0)
crystal.server.AbstractStateChecker.getRelationship : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r120 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r115, $r119, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r129 = virtualinvoke r120.<crystal.util.RunIt$Output: java.lang.String getOutput()>()]
crystal.server.AbstractStateChecker.getRelationship : r120 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r26, r115, $r119, 0) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r121 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r129 = virtualinvoke r120.<crystal.util.RunIt$Output: java.lang.String getOutput()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r129 = virtualinvoke r120.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.getRelationship : $r129 = virtualinvoke r120.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i1 = virtualinvoke $r129.<java.lang.String: int indexOf(java.lang.String)>("(branch merge, don\'t forget to commit)")
crystal.server.AbstractStateChecker.getRelationship : $i1 = virtualinvoke $r129.<java.lang.String: int indexOf(java.lang.String)>("(branch merge, don\'t forget to commit)") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0
crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r130 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : if $i1 < 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECONFLICT>
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r179 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r179 = new java.io.File] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r179 = new java.io.File
crystal.server.AbstractStateChecker.getRelationship : $r179 = new java.io.File >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r180 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r180 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r180.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r180.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.server.AbstractStateChecker.getRelationship : $r181 = virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r183 = virtualinvoke $r182.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r179.<java.io.File: void <init>(java.lang.String)>($r183)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r179.<java.io.File: void <init>(java.lang.String)>($r183) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r179)
crystal.server.AbstractStateChecker.getRelationship : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r179) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return r19
crystal.server.AbstractStateChecker.getRelationship : $r130 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r131 = virtualinvoke $r130.<crystal.model.DataSource: java.lang.String getCompileCommand()>()
crystal.server.AbstractStateChecker.getRelationship : r131 = virtualinvoke $r130.<crystal.model.DataSource: java.lang.String getCompileCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r131 == null
crystal.server.AbstractStateChecker.getRelationship : if r131 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r132 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r131 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if r131 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r142 = $r141 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r143 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r143 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r143.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r143.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r144 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r144 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r145 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144)
crystal.server.AbstractStateChecker.getRelationship : $r145 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r144) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Had and IO error trying to either compile or run tests: ")
crystal.server.AbstractStateChecker.getRelationship : $r146 = virtualinvoke $r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Had and IO error trying to either compile or run tests: ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r147 = virtualinvoke r142.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r147 = virtualinvoke r142.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r148 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147)
crystal.server.AbstractStateChecker.getRelationship : $r148 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r147) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r149
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r179 = new java.io.File]
crystal.server.AbstractStateChecker.getRelationship : $r132 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r132.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r132 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r132.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r132.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r18 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r131, $r135)
crystal.server.AbstractStateChecker.getRelationship : $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r18 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r131, $r135) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r18.<crystal.util.RunIt$Output: int getStatus()>()
crystal.server.AbstractStateChecker.getRelationship : r18 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r131, $r135) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r18.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0
crystal.server.AbstractStateChecker.getRelationship : $i2 = virtualinvoke r18.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT>
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r136 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getRelationship : if $i2 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r136 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r20 = virtualinvoke $r136.<crystal.model.DataSource: java.lang.String getTestCommand()>()
crystal.server.AbstractStateChecker.getRelationship : $r136 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r20 = virtualinvoke $r136.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if r20 == null
crystal.server.AbstractStateChecker.getRelationship : r20 = virtualinvoke $r136.<crystal.model.DataSource: java.lang.String getTestCommand()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if r20 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r137 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : if r20 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if r20 == null >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : $r137 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r137.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : $r137 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r137.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r137.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8)
crystal.server.AbstractStateChecker.getRelationship : $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r139 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r21 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r20, $r140)
crystal.server.AbstractStateChecker.getRelationship : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r21 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r20, $r140) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r21.<crystal.util.RunIt$Output: int getStatus()>()
crystal.server.AbstractStateChecker.getRelationship : r21 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output tryCommand(java.lang.String,java.lang.String)>(r20, $r140) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r21.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0
crystal.server.AbstractStateChecker.getRelationship : $i3 = virtualinvoke r21.<crystal.util.RunIt$Output: int getStatus()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String TESTCONFLICT>
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN>
crystal.server.AbstractStateChecker.getRelationship : if $i3 == 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String MERGECLEAN> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String TESTCONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : r19 = <crystal.model.Relationship: java.lang.String COMPILECONFLICT> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)]
crystal.server.AbstractStateChecker.getRelationship : goto [?= (branch)] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r141 := @caughtexception
crystal.server.AbstractStateChecker.getRelationship : $z8 = virtualinvoke r1.<crystal.model.DataSource: boolean hasHistoryChanged()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : if $z8 != 0
crystal.server.AbstractStateChecker.getRelationship : if $z8 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return r2
crystal.server.AbstractStateChecker.getRelationship : if $z8 != 0 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r78 = newarray (java.lang.String)[3]
crystal.server.AbstractStateChecker.getRelationship : $r76 = <crystal.model.Relationship: java.lang.String BEHIND> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r76
crystal.server.AbstractStateChecker.getRelationship : $r75 = <crystal.model.Relationship: java.lang.String AHEAD> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r75
crystal.server.AbstractStateChecker.getRelationship : $r74 = <crystal.model.Relationship: java.lang.String SAME> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r74
crystal.server.AbstractStateChecker.getRelationship : $r69 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r69.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r70 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r70 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70)
crystal.server.AbstractStateChecker.getRelationship : $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Could not parse the history of your repository.")
crystal.server.AbstractStateChecker.getRelationship : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Could not parse the history of your repository.") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r73
crystal.server.AbstractStateChecker.getRelationship : r47 = $r46 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r48 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r48 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r48.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r48.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r49 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r49 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49)
crystal.server.AbstractStateChecker.getRelationship : $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r52 = virtualinvoke r47.<java.io.IOException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r52 = virtualinvoke r47.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)
crystal.server.AbstractStateChecker.getRelationship : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r54
crystal.server.AbstractStateChecker.getRelationship : r9 = $r38 >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r39 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.getRelationship : $r39 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.getRelationship : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r40 = <crystal.model.Relationship: java.lang.String ERROR>
crystal.server.AbstractStateChecker.getRelationship : $r40 = <crystal.model.Relationship: java.lang.String ERROR> >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)
crystal.server.AbstractStateChecker.getRelationship : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractStateChecker.getRelationship : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r43 = virtualinvoke r9.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>()
crystal.server.AbstractStateChecker.getRelationship : $r43 = virtualinvoke r9.<crystal.server.AbstractStateChecker$OperationException: java.lang.String getMessage()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43)
crystal.server.AbstractStateChecker.getRelationship : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43) >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.getRelationship : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : return $r45
crystal.server.AbstractStateChecker.getRelationship : $r25 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r25.<crystal.client.ClientPreferences: java.lang.String getHgPath()>()
crystal.server.AbstractStateChecker.getRelationship : r26 = virtualinvoke $r25.<crystal.client.ClientPreferences: java.lang.String getHgPath()>() >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()]
crystal.server.AbstractStateChecker.getRelationship : goto [?= $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()] >>>>>>>> crystal.server.AbstractStateChecker.getRelationship : $r29 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
