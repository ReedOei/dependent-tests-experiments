crystal.server.AbstractLogParser.clipFront : $r1 = new java.util.StringTokenizer >>>>>>>> crystal.server.AbstractLogParser.clipFront : specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0)
crystal.server.AbstractLogParser.clipFront : specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.server.AbstractLogParser.clipFront : r2 = $r1
crystal.server.AbstractLogParser.clipFront : r2 = $r1 >>>>>>>> crystal.server.AbstractLogParser.clipFront : virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.server.AbstractLogParser.clipFront : virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.server.AbstractLogParser.clipFront : r3 = ""
crystal.server.AbstractLogParser.clipFront : r3 = "" >>>>>>>> crystal.server.AbstractLogParser.clipFront : $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.server.AbstractLogParser.clipFront : $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.server.AbstractLogParser.clipFront : if $z0 == 0
crystal.server.AbstractLogParser.clipFront : if $z0 == 0 >>>>>>>> crystal.server.AbstractLogParser.clipFront : $r5 = new java.lang.StringBuilder
crystal.server.AbstractLogParser.clipFront : if $z0 == 0 >>>>>>>> crystal.server.AbstractLogParser.clipFront : $r10 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>()
crystal.server.AbstractLogParser.clipFront : $r10 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.server.AbstractLogParser.clipFront : return $r10
crystal.server.AbstractLogParser.clipFront : $r5 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractLogParser.clipFront : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractLogParser.clipFront : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractLogParser.clipFront : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
crystal.server.AbstractLogParser.clipFront : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> crystal.server.AbstractLogParser.clipFront : $r7 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.server.AbstractLogParser.clipFront : $r7 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.server.AbstractLogParser.clipFront : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
crystal.server.AbstractLogParser.clipFront : $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> crystal.server.AbstractLogParser.clipFront : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.server.AbstractLogParser.clipFront : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.server.AbstractLogParser.clipFront : r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractLogParser.clipFront : r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractLogParser.clipFront : goto [?= $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.server.AbstractLogParser.clipFront : goto [?= $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> crystal.server.AbstractLogParser.clipFront : $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>()
