crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r6 = newarray (java.lang.String)[2]
crystal.server.AbstractStateChecker.isCorrectRepository : $r6 = newarray (java.lang.String)[2] >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r6[0] = "clone"
crystal.server.AbstractStateChecker.isCorrectRepository : $r6[0] = "clone" >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r6[1] = r1
crystal.server.AbstractStateChecker.isCorrectRepository : $r6[1] = r1 >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : r4 = $r6
crystal.server.AbstractStateChecker.isCorrectRepository : r4 = $r6 >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r7 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.isCorrectRepository : $r7 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.server.AbstractStateChecker.isCorrectRepository : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status_check")
crystal.server.AbstractStateChecker.isCorrectRepository : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status_check") >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.isCorrectRepository : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r11 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r0, r4, $r10, 0)
crystal.server.AbstractStateChecker.isCorrectRepository : $r11 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r0, r4, $r10, 0) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : r5 = virtualinvoke $r11.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.isCorrectRepository : r5 = virtualinvoke $r11.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r12 = new java.io.File
crystal.server.AbstractStateChecker.isCorrectRepository : $r12 = new java.io.File >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r13 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.isCorrectRepository : $r13 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.server.AbstractStateChecker.isCorrectRepository : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status_check")
crystal.server.AbstractStateChecker.isCorrectRepository : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status_check") >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.isCorrectRepository : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r16)
crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r16) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r12)
crystal.server.AbstractStateChecker.isCorrectRepository : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>($r12) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r17 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.isCorrectRepository : $r17 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.isCorrectRepository : specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not appear to be an ")
crystal.server.AbstractStateChecker.isCorrectRepository : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("does not appear to be an ") >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r19 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>()
crystal.server.AbstractStateChecker.isCorrectRepository : $r19 = virtualinvoke r3.<crystal.model.DataSource$RepoKind: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase()>()
crystal.server.AbstractStateChecker.isCorrectRepository : $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
crystal.server.AbstractStateChecker.isCorrectRepository : $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" repository!")
crystal.server.AbstractStateChecker.isCorrectRepository : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" repository!") >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.isCorrectRepository : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>($r23)
crystal.server.AbstractStateChecker.isCorrectRepository : $i0 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>($r23) >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : if $i0 >= 0
crystal.server.AbstractStateChecker.isCorrectRepository : if $i0 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $z1 = 1
crystal.server.AbstractStateChecker.isCorrectRepository : if $i0 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : $z1 = 0
crystal.server.AbstractStateChecker.isCorrectRepository : $z1 = 0 >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : return $z1
crystal.server.AbstractStateChecker.isCorrectRepository : $z1 = 1 >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : goto [?= return $z1]
crystal.server.AbstractStateChecker.isCorrectRepository : goto [?= return $z1] >>>>>>>> crystal.server.AbstractStateChecker.isCorrectRepository : return $z1
