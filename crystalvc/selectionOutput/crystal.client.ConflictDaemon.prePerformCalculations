crystal.client.ConflictDaemon.prePerformCalculations : $z0 = r0.<crystal.client.ConflictDaemon: boolean _enabled> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : if $z0 != 0
crystal.client.ConflictDaemon.prePerformCalculations : if $z0 != 0 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : return
crystal.client.ConflictDaemon.prePerformCalculations : if $z0 != 0 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r9 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r9 = virtualinvoke r1.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictDaemon.prePerformCalculations : r2 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictDaemon.prePerformCalculations : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : if $z1 == 0
crystal.client.ConflictDaemon.prePerformCalculations : if $z1 == 0 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictDaemon.prePerformCalculations : if $z1 == 0 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : return
crystal.client.ConflictDaemon.prePerformCalculations : $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : r3 = (crystal.client.ProjectPreferences) $r10
crystal.client.ConflictDaemon.prePerformCalculations : r3 = (crystal.client.ProjectPreferences) $r10 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : r4 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictDaemon.prePerformCalculations : r4 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r11 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r11 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r5 = new crystal.model.LocalStateResult
crystal.client.ConflictDaemon.prePerformCalculations : $r5 = new crystal.model.LocalStateResult >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r6 = <crystal.model.LocalStateResult: java.lang.String PENDING>
crystal.client.ConflictDaemon.prePerformCalculations : $r6 = <crystal.model.LocalStateResult: java.lang.String PENDING> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r12 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r12 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r13 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4)
crystal.client.ConflictDaemon.prePerformCalculations : $r13 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r14 = (crystal.model.LocalStateResult) $r13
crystal.client.ConflictDaemon.prePerformCalculations : $r14 = (crystal.model.LocalStateResult) $r13 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r15 = virtualinvoke $r14.<crystal.model.LocalStateResult: java.lang.String getLocalState()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r15 = virtualinvoke $r14.<crystal.model.LocalStateResult: java.lang.String getLocalState()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r16 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r16 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r17 = virtualinvoke $r16.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4)
crystal.client.ConflictDaemon.prePerformCalculations : $r17 = virtualinvoke $r16.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r18 = (crystal.model.LocalStateResult) $r17
crystal.client.ConflictDaemon.prePerformCalculations : $r18 = (crystal.model.LocalStateResult) $r17 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r19 = virtualinvoke $r18.<crystal.model.LocalStateResult: java.lang.String getAction()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r19 = virtualinvoke $r18.<crystal.model.LocalStateResult: java.lang.String getAction()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r20 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r20 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r21 = virtualinvoke $r20.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4)
crystal.client.ConflictDaemon.prePerformCalculations : $r21 = virtualinvoke $r20.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r22 = (crystal.model.LocalStateResult) $r21
crystal.client.ConflictDaemon.prePerformCalculations : $r22 = (crystal.model.LocalStateResult) $r21 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r23 = virtualinvoke $r22.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r23 = virtualinvoke $r22.<crystal.model.LocalStateResult: java.lang.String getErrorMessage()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : specialinvoke $r5.<crystal.model.LocalStateResult: void <init>(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r4, $r6, $r15, $r19, $r23)
crystal.client.ConflictDaemon.prePerformCalculations : specialinvoke $r5.<crystal.model.LocalStateResult: void <init>(crystal.model.DataSource,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r4, $r6, $r15, $r19, $r23) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r5)
crystal.client.ConflictDaemon.prePerformCalculations : virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r5) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r25 = virtualinvoke r3.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r25 = virtualinvoke r3.<crystal.client.ProjectPreferences: java.util.Collection getDataSources()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : r7 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictDaemon.prePerformCalculations : r7 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictDaemon.prePerformCalculations : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : if $z2 == 0
crystal.client.ConflictDaemon.prePerformCalculations : if $z2 == 0 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictDaemon.prePerformCalculations : if $z2 == 0 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictDaemon.prePerformCalculations : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r26 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : r8 = (crystal.model.DataSource) $r26
crystal.client.ConflictDaemon.prePerformCalculations : r8 = (crystal.model.DataSource) $r26 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r27 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r27 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r28 = new crystal.model.Relationship
crystal.client.ConflictDaemon.prePerformCalculations : $r28 = new crystal.model.Relationship >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r29 = <crystal.model.Relationship: java.lang.String PENDING>
crystal.client.ConflictDaemon.prePerformCalculations : $r29 = <crystal.model.Relationship: java.lang.String PENDING> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r30 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r30 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r31 = virtualinvoke $r30.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r8)
crystal.client.ConflictDaemon.prePerformCalculations : $r31 = virtualinvoke $r30.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r32 = (crystal.model.Relationship) $r31
crystal.client.ConflictDaemon.prePerformCalculations : $r32 = (crystal.model.Relationship) $r31 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r33 = virtualinvoke $r32.<crystal.model.Relationship: javax.swing.ImageIcon getIcon()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r33 = virtualinvoke $r32.<crystal.model.Relationship: javax.swing.ImageIcon getIcon()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r34 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap>
crystal.client.ConflictDaemon.prePerformCalculations : $r34 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap> >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r35 = virtualinvoke $r34.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r8)
crystal.client.ConflictDaemon.prePerformCalculations : $r35 = virtualinvoke $r34.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r8) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r36 = (crystal.model.Relationship) $r35
crystal.client.ConflictDaemon.prePerformCalculations : $r36 = (crystal.model.Relationship) $r35 >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $r37 = virtualinvoke $r36.<crystal.model.Relationship: java.awt.Image getImage()>()
crystal.client.ConflictDaemon.prePerformCalculations : $r37 = virtualinvoke $r36.<crystal.model.Relationship: java.awt.Image getImage()>() >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : specialinvoke $r28.<crystal.model.Relationship: void <init>(java.lang.String,javax.swing.ImageIcon,java.awt.Image)>($r29, $r33, $r37)
crystal.client.ConflictDaemon.prePerformCalculations : specialinvoke $r28.<crystal.model.Relationship: void <init>(java.lang.String,javax.swing.ImageIcon,java.awt.Image)>($r29, $r33, $r37) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : virtualinvoke $r27.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r28)
crystal.client.ConflictDaemon.prePerformCalculations : virtualinvoke $r27.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r28) >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictDaemon.prePerformCalculations : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictDaemon.prePerformCalculations : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
