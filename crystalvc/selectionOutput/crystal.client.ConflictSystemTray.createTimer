crystal.client.ConflictSystemTray.createTimer : z0 = 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r4 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictSystemTray.createTimer : $r4 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r5 = virtualinvoke $r4.<crystal.client.ConflictDaemon: java.util.Collection getLocalStates()>()
crystal.client.ConflictSystemTray.createTimer : $r5 = virtualinvoke $r4.<crystal.client.ConflictDaemon: java.util.Collection getLocalStates()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictSystemTray.createTimer : r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictSystemTray.createTimer : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : if $z1 == 0
crystal.client.ConflictSystemTray.createTimer : if $z1 == 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictSystemTray.createTimer : if $z1 == 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r8 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>()
crystal.client.ConflictSystemTray.createTimer : $r8 = staticinvoke <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon getInstance()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r9 = virtualinvoke $r8.<crystal.client.ConflictDaemon: java.util.Collection getRelationships()>()
crystal.client.ConflictSystemTray.createTimer : $r9 = virtualinvoke $r8.<crystal.client.ConflictDaemon: java.util.Collection getRelationships()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ConflictSystemTray.createTimer : r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictSystemTray.createTimer : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : if $z3 == 0
crystal.client.ConflictSystemTray.createTimer : if $z3 == 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ConflictSystemTray.createTimer : if $z3 == 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : z5 = z0
crystal.client.ConflictSystemTray.createTimer : z5 = z0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r13 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer>
crystal.client.ConflictSystemTray.createTimer : $r13 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : if $r13 == null
crystal.client.ConflictSystemTray.createTimer : if $r13 == null >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r14 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer>
crystal.client.ConflictSystemTray.createTimer : if $r13 == null >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r15 = new javax.swing.Timer
crystal.client.ConflictSystemTray.createTimer : $r15 = new javax.swing.Timer >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $l0 = <crystal.client.ClientPreferences: long REFRESH>
crystal.client.ConflictSystemTray.createTimer : $l0 = <crystal.client.ClientPreferences: long REFRESH> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $i1 = (int) $l0
crystal.client.ConflictSystemTray.createTimer : $i1 = (int) $l0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $i2 = $i1 * 1000
crystal.client.ConflictSystemTray.createTimer : $i2 = $i1 * 1000 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r16 = new crystal.client.ConflictSystemTray$8
crystal.client.ConflictSystemTray.createTimer : $r16 = new crystal.client.ConflictSystemTray$8 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : specialinvoke $r16.<crystal.client.ConflictSystemTray$8: void <init>(crystal.client.ConflictSystemTray,boolean)>(r0, z5)
crystal.client.ConflictSystemTray.createTimer : specialinvoke $r16.<crystal.client.ConflictSystemTray$8: void <init>(crystal.client.ConflictSystemTray,boolean)>(r0, z5) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : specialinvoke $r15.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>($i2, $r16)
crystal.client.ConflictSystemTray.createTimer : specialinvoke $r15.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>($i2, $r16) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> = $r15
crystal.client.ConflictSystemTray.createTimer : r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> = $r15 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r17 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer>
crystal.client.ConflictSystemTray.createTimer : $r17 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $l3 = <crystal.client.ClientPreferences: long REFRESH>
crystal.client.ConflictSystemTray.createTimer : $l3 = <crystal.client.ClientPreferences: long REFRESH> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $i4 = (int) $l3
crystal.client.ConflictSystemTray.createTimer : $i4 = (int) $l3 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $i5 = $i4 * 1000
crystal.client.ConflictSystemTray.createTimer : $i5 = $i4 * 1000 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r17.<javax.swing.Timer: void setInitialDelay(int)>($i5)
crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r17.<javax.swing.Timer: void setInitialDelay(int)>($i5) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r18 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer>
crystal.client.ConflictSystemTray.createTimer : $r18 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r18.<javax.swing.Timer: void start()>()
crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r18.<javax.swing.Timer: void start()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.client.ConflictSystemTray.createTimer : $l6 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r19 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer>
crystal.client.ConflictSystemTray.createTimer : $r19 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $i7 = virtualinvoke $r19.<javax.swing.Timer: int getDelay()>()
crystal.client.ConflictSystemTray.createTimer : $i7 = virtualinvoke $r19.<javax.swing.Timer: int getDelay()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $l8 = (long) $i7
crystal.client.ConflictSystemTray.createTimer : $l8 = (long) $i7 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : l9 = $l6 + $l8
crystal.client.ConflictSystemTray.createTimer : l9 = $l6 + $l8 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r20 = r0.<crystal.client.ConflictSystemTray: org.apache.log4j.Logger _log>
crystal.client.ConflictSystemTray.createTimer : $r20 = r0.<crystal.client.ConflictSystemTray: org.apache.log4j.Logger _log> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r21 = new java.lang.StringBuilder
crystal.client.ConflictSystemTray.createTimer : $r21 = new java.lang.StringBuilder >>>>>>>> crystal.client.ConflictSystemTray.createTimer : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
crystal.client.ConflictSystemTray.createTimer : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer created - will fire in: ")
crystal.client.ConflictSystemTray.createTimer : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer created - will fire in: ") >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r23 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer>
crystal.client.ConflictSystemTray.createTimer : $r23 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $i10 = virtualinvoke $r23.<javax.swing.Timer: int getInitialDelay()>()
crystal.client.ConflictSystemTray.createTimer : $i10 = virtualinvoke $r23.<javax.swing.Timer: int getInitialDelay()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $l11 = (long) $i10
crystal.client.ConflictSystemTray.createTimer : $l11 = (long) $i10 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r24 = staticinvoke <crystal.util.TimeUtility: java.lang.String msToHumanReadable(long)>($l11)
crystal.client.ConflictSystemTray.createTimer : $r24 = staticinvoke <crystal.util.TimeUtility: java.lang.String msToHumanReadable(long)>($l11) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)
crystal.client.ConflictSystemTray.createTimer : $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (@ ")
crystal.client.ConflictSystemTray.createTimer : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (@ ") >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r27 = new java.text.SimpleDateFormat
crystal.client.ConflictSystemTray.createTimer : $r27 = new java.text.SimpleDateFormat >>>>>>>> crystal.client.ConflictSystemTray.createTimer : specialinvoke $r27.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("HH:mm:ss")
crystal.client.ConflictSystemTray.createTimer : specialinvoke $r27.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("HH:mm:ss") >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r28 = new java.util.Date
crystal.client.ConflictSystemTray.createTimer : $r28 = new java.util.Date >>>>>>>> crystal.client.ConflictSystemTray.createTimer : specialinvoke $r28.<java.util.Date: void <init>(long)>(l9)
crystal.client.ConflictSystemTray.createTimer : specialinvoke $r28.<java.util.Date: void <init>(long)>(l9) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r29 = virtualinvoke $r27.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r28)
crystal.client.ConflictSystemTray.createTimer : $r29 = virtualinvoke $r27.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r28) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
crystal.client.ConflictSystemTray.createTimer : $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")")
crystal.client.ConflictSystemTray.createTimer : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ConflictSystemTray.createTimer : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r20.<org.apache.log4j.Logger: void info(java.lang.Object)>($r32)
crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r20.<org.apache.log4j.Logger: void info(java.lang.Object)>($r32) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : return
crystal.client.ConflictSystemTray.createTimer : $r14 = r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r14.<javax.swing.Timer: void stop()>()
crystal.client.ConflictSystemTray.createTimer : virtualinvoke $r14.<javax.swing.Timer: void stop()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> = null
crystal.client.ConflictSystemTray.createTimer : r0.<crystal.client.ConflictSystemTray: javax.swing.Timer _timer> = null >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r15 = new javax.swing.Timer
crystal.client.ConflictSystemTray.createTimer : $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : r12 = (crystal.model.Relationship) $r11
crystal.client.ConflictSystemTray.createTimer : r12 = (crystal.model.Relationship) $r11 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $z4 = virtualinvoke r12.<crystal.model.Relationship: boolean isReady()>()
crystal.client.ConflictSystemTray.createTimer : $z4 = virtualinvoke r12.<crystal.model.Relationship: boolean isReady()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : if $z4 != 0
crystal.client.ConflictSystemTray.createTimer : if $z4 != 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : z0 = 1
crystal.client.ConflictSystemTray.createTimer : if $z4 != 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictSystemTray.createTimer : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictSystemTray.createTimer : z0 = 1 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictSystemTray.createTimer : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : r2 = (crystal.model.LocalStateResult) $r6
crystal.client.ConflictSystemTray.createTimer : r2 = (crystal.model.LocalStateResult) $r6 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r7 = virtualinvoke r2.<crystal.model.LocalStateResult: java.lang.String getLocalState()>()
crystal.client.ConflictSystemTray.createTimer : $r7 = virtualinvoke r2.<crystal.model.LocalStateResult: java.lang.String getLocalState()>() >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $r3 = <crystal.model.LocalStateResult: java.lang.String PENDING>
crystal.client.ConflictSystemTray.createTimer : $r3 = <crystal.model.LocalStateResult: java.lang.String PENDING> >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3)
crystal.client.ConflictSystemTray.createTimer : $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> crystal.client.ConflictSystemTray.createTimer : if $z2 == 0
crystal.client.ConflictSystemTray.createTimer : if $z2 == 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : z0 = 1
crystal.client.ConflictSystemTray.createTimer : if $z2 == 0 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ConflictSystemTray.createTimer : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ConflictSystemTray.createTimer : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
crystal.client.ConflictSystemTray.createTimer : z0 = 1 >>>>>>>> crystal.client.ConflictSystemTray.createTimer : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
