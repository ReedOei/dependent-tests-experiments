crystal.client.ConflictClient.getClearCacheItem : $r2 = new javax.swing.JMenuItem >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r3 = new java.lang.StringBuilder
crystal.client.ConflictClient.getClearCacheItem : $r3 = new java.lang.StringBuilder >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()
crystal.client.ConflictClient.getClearCacheItem : specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clear ")
crystal.client.ConflictClient.getClearCacheItem : $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clear ") >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r6 = virtualinvoke r1.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictClient.getClearCacheItem : $r6 = virtualinvoke r1.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r7 = virtualinvoke $r6.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ConflictClient.getClearCacheItem : $r7 = virtualinvoke $r6.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)
crystal.client.ConflictClient.getClearCacheItem : $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" project cache")
crystal.client.ConflictClient.getClearCacheItem : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" project cache") >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ConflictClient.getClearCacheItem : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : specialinvoke $r2.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r10)
crystal.client.ConflictClient.getClearCacheItem : specialinvoke $r2.<javax.swing.JMenuItem: void <init>(java.lang.String)>($r10) >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : r4 = $r2
crystal.client.ConflictClient.getClearCacheItem : r4 = $r2 >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : $r11 = new crystal.client.ConflictClient$14
crystal.client.ConflictClient.getClearCacheItem : $r11 = new crystal.client.ConflictClient$14 >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : specialinvoke $r11.<crystal.client.ConflictClient$14: void <init>(crystal.client.ConflictClient,crystal.client.ProjectPreferences)>(r0, r1)
crystal.client.ConflictClient.getClearCacheItem : specialinvoke $r11.<crystal.client.ConflictClient$14: void <init>(crystal.client.ConflictClient,crystal.client.ProjectPreferences)>(r0, r1) >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : virtualinvoke r4.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r11)
crystal.client.ConflictClient.getClearCacheItem : virtualinvoke r4.<javax.swing.JMenuItem: void addActionListener(java.awt.event.ActionListener)>($r11) >>>>>>>> crystal.client.ConflictClient.getClearCacheItem : return r4
