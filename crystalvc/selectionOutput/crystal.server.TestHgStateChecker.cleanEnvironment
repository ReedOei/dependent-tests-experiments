crystal.server.TestHgStateChecker.cleanEnvironment : r0 = <crystal.server.TestConstants: java.lang.String PROJECT_PATH> >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r4 = new java.io.File
crystal.server.TestHgStateChecker.cleanEnvironment : $r4 = new java.io.File >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r1 = new java.lang.StringBuilder
crystal.server.TestHgStateChecker.cleanEnvironment : $r1 = new java.lang.StringBuilder >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.TestHgStateChecker.cleanEnvironment : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r6 = <crystal.server.TestConstants: java.lang.String TEST_REPOS>
crystal.server.TestHgStateChecker.cleanEnvironment : $r6 = <crystal.server.TestConstants: java.lang.String TEST_REPOS> >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)
crystal.server.TestHgStateChecker.cleanEnvironment : $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.TestHgStateChecker.cleanEnvironment : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r8)
crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r8) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : r2 = $r4
crystal.server.TestHgStateChecker.cleanEnvironment : r2 = $r4 >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.cleanEnvironment : $z0 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : if $z0 == 0
crystal.server.TestHgStateChecker.cleanEnvironment : if $z0 == 0 >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>()
crystal.server.TestHgStateChecker.cleanEnvironment : if $z0 == 0 >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r9 = new java.io.File
crystal.server.TestHgStateChecker.cleanEnvironment : $r9 = new java.io.File >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r10 = new java.lang.StringBuilder
crystal.server.TestHgStateChecker.cleanEnvironment : $r10 = new java.lang.StringBuilder >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.TestHgStateChecker.cleanEnvironment : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r12 = <crystal.server.TestConstants: java.lang.String TEST_TEMP>
crystal.server.TestHgStateChecker.cleanEnvironment : $r12 = <crystal.server.TestConstants: java.lang.String TEST_TEMP> >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
crystal.server.TestHgStateChecker.cleanEnvironment : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.TestHgStateChecker.cleanEnvironment : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r14)
crystal.server.TestHgStateChecker.cleanEnvironment : specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r14) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : r3 = $r9
crystal.server.TestHgStateChecker.cleanEnvironment : r3 = $r9 >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $z4 = virtualinvoke r3.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.cleanEnvironment : $z4 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : if $z4 == 0
crystal.server.TestHgStateChecker.cleanEnvironment : if $z4 == 0 >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r3)
crystal.server.TestHgStateChecker.cleanEnvironment : if $z4 == 0 >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : return
crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r3) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $z6 = virtualinvoke r3.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.cleanEnvironment : $z6 = virtualinvoke r3.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6)
crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z6) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : return
crystal.server.TestHgStateChecker.cleanEnvironment : $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r2)
crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r2) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $z3 = virtualinvoke r2.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.cleanEnvironment : $z3 = virtualinvoke r2.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3)
crystal.server.TestHgStateChecker.cleanEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3) >>>>>>>> crystal.server.TestHgStateChecker.cleanEnvironment : $r9 = new java.io.File
