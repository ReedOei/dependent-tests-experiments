crystal.server.TestHgStateChecker.ensureEnvironment : r0 = <crystal.server.TestConstants: java.lang.String PROJECT_PATH> >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r6 = new java.io.File
crystal.server.TestHgStateChecker.ensureEnvironment : $r6 = new java.io.File >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r0)
crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r1 = $r6
crystal.server.TestHgStateChecker.ensureEnvironment : r1 = $r6 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z0 = virtualinvoke r1.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z1 = virtualinvoke r1.<java.io.File: boolean isDirectory()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>()
crystal.server.TestHgStateChecker.ensureEnvironment : r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r3 = null
crystal.server.TestHgStateChecker.ensureEnvironment : r3 = null >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r4 = r2
crystal.server.TestHgStateChecker.ensureEnvironment : r4 = r2 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : i0 = lengthof r4
crystal.server.TestHgStateChecker.ensureEnvironment : i0 = lengthof r4 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : i1 = 0
crystal.server.TestHgStateChecker.ensureEnvironment : i1 = 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if i1 >= i0
crystal.server.TestHgStateChecker.ensureEnvironment : if i1 >= i0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r5 = r4[i1]
crystal.server.TestHgStateChecker.ensureEnvironment : if i1 >= i0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r10 = new java.io.File
crystal.server.TestHgStateChecker.ensureEnvironment : $r10 = new java.io.File >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r11 = new java.lang.StringBuilder
crystal.server.TestHgStateChecker.ensureEnvironment : $r11 = new java.lang.StringBuilder >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.TestHgStateChecker.ensureEnvironment : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r13 = <crystal.server.TestConstants: java.lang.String TEST_REPOS>
crystal.server.TestHgStateChecker.ensureEnvironment : $r13 = <crystal.server.TestConstants: java.lang.String TEST_REPOS> >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
crystal.server.TestHgStateChecker.ensureEnvironment : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r15)
crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r15) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r16 = $r10
crystal.server.TestHgStateChecker.ensureEnvironment : r16 = $r10 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z5 = virtualinvoke r16.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z5 = virtualinvoke r16.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if $z5 == 0
crystal.server.TestHgStateChecker.ensureEnvironment : if $z5 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z6 = virtualinvoke r16.<java.io.File: boolean isDirectory()>()
crystal.server.TestHgStateChecker.ensureEnvironment : if $z5 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r17 = r1
crystal.server.TestHgStateChecker.ensureEnvironment : r17 = r1 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <crystal.server.TestHgStateChecker: void unzipTestRepositories(java.io.File,java.io.File)>(r3, r17)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <crystal.server.TestHgStateChecker: void unzipTestRepositories(java.io.File,java.io.File)>(r3, r17) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z9 = virtualinvoke r16.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z9 = virtualinvoke r16.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z9) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r18 = new java.io.File
crystal.server.TestHgStateChecker.ensureEnvironment : $r18 = new java.io.File >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r19 = new java.lang.StringBuilder
crystal.server.TestHgStateChecker.ensureEnvironment : $r19 = new java.lang.StringBuilder >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.TestHgStateChecker.ensureEnvironment : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r21 = <crystal.server.TestConstants: java.lang.String TEST_TEMP>
crystal.server.TestHgStateChecker.ensureEnvironment : $r21 = <crystal.server.TestConstants: java.lang.String TEST_TEMP> >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)
crystal.server.TestHgStateChecker.ensureEnvironment : $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r23)
crystal.server.TestHgStateChecker.ensureEnvironment : specialinvoke $r18.<java.io.File: void <init>(java.lang.String)>($r23) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r24 = $r18
crystal.server.TestHgStateChecker.ensureEnvironment : r24 = $r18 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z10 = virtualinvoke r24.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z10 = virtualinvoke r24.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if $z10 == 0
crystal.server.TestHgStateChecker.ensureEnvironment : if $z10 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r24)
crystal.server.TestHgStateChecker.ensureEnvironment : if $z10 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : z13 = virtualinvoke r24.<java.io.File: boolean mkdir()>()
crystal.server.TestHgStateChecker.ensureEnvironment : z13 = virtualinvoke r24.<java.io.File: boolean mkdir()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>(z13)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>(z13) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z14 = virtualinvoke r24.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z14 = virtualinvoke r24.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z14) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z15 = virtualinvoke r24.<java.io.File: boolean isDirectory()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z15 = virtualinvoke r24.<java.io.File: boolean isDirectory()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z15) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : return
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r24) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z12 = virtualinvoke r24.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z12 = virtualinvoke r24.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z12)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z12) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : z13 = virtualinvoke r24.<java.io.File: boolean mkdir()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z6 = virtualinvoke r16.<java.io.File: boolean isDirectory()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r16)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <crystal.util.RunIt: boolean deleteDirectory(java.io.File)>(r16) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z8 = virtualinvoke r16.<java.io.File: boolean exists()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $z8 = virtualinvoke r16.<java.io.File: boolean exists()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8)
crystal.server.TestHgStateChecker.ensureEnvironment : staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z8) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r17 = r1
crystal.server.TestHgStateChecker.ensureEnvironment : r5 = r4[i1] >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r7 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $r7 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z2 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>("test-repos.zip")
crystal.server.TestHgStateChecker.ensureEnvironment : $z2 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>("test-repos.zip") >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if $z2 == 0
crystal.server.TestHgStateChecker.ensureEnvironment : if $z2 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : r3 = r5
crystal.server.TestHgStateChecker.ensureEnvironment : if $z2 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r8 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()
crystal.server.TestHgStateChecker.ensureEnvironment : $r8 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r9 = <crystal.server.TestConstants: java.lang.String TEST_REPOS>
crystal.server.TestHgStateChecker.ensureEnvironment : $r9 = <crystal.server.TestConstants: java.lang.String TEST_REPOS> >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z3 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>($r9)
crystal.server.TestHgStateChecker.ensureEnvironment : $z3 = virtualinvoke $r8.<java.lang.String: boolean endsWith(java.lang.String)>($r9) >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if $z3 == 0
crystal.server.TestHgStateChecker.ensureEnvironment : if $z3 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $z4 = virtualinvoke r5.<java.io.File: boolean isDirectory()>()
crystal.server.TestHgStateChecker.ensureEnvironment : if $z3 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : i1 = i1 + 1
crystal.server.TestHgStateChecker.ensureEnvironment : i1 = i1 + 1 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : goto [?= (branch)]
crystal.server.TestHgStateChecker.ensureEnvironment : goto [?= (branch)] >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if i1 >= i0
crystal.server.TestHgStateChecker.ensureEnvironment : $z4 = virtualinvoke r5.<java.io.File: boolean isDirectory()>() >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : if $z4 == 0
crystal.server.TestHgStateChecker.ensureEnvironment : if $z4 == 0 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : i1 = i1 + 1
crystal.server.TestHgStateChecker.ensureEnvironment : r3 = r5 >>>>>>>> crystal.server.TestHgStateChecker.ensureEnvironment : $r8 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>()
