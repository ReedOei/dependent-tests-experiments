crystal.util.RunIt$Output.toString : $r1 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exit status: ")
crystal.util.RunIt$Output.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exit status: ") >>>>>>>> crystal.util.RunIt$Output.toString : $i0 = r0.<crystal.util.RunIt$Output: int _status>
crystal.util.RunIt$Output.toString : $i0 = r0.<crystal.util.RunIt$Output: int _status> >>>>>>>> crystal.util.RunIt$Output.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)
crystal.util.RunIt$Output.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) >>>>>>>> crystal.util.RunIt$Output.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n")
crystal.util.RunIt$Output.toString : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") >>>>>>>> crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r6 = r0.<crystal.util.RunIt$Output: java.lang.String _error>
crystal.util.RunIt$Output.toString : $r6 = r0.<crystal.util.RunIt$Output: java.lang.String _error> >>>>>>>> crystal.util.RunIt$Output.toString : $i1 = virtualinvoke $r6.<java.lang.String: int length()>()
crystal.util.RunIt$Output.toString : $i1 = virtualinvoke $r6.<java.lang.String: int length()>() >>>>>>>> crystal.util.RunIt$Output.toString : if $i1 <= 0
crystal.util.RunIt$Output.toString : if $i1 <= 0 >>>>>>>> crystal.util.RunIt$Output.toString : $r7 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : if $i1 <= 0 >>>>>>>> crystal.util.RunIt$Output.toString : $r19 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r19 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt$Output.toString : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt$Output.toString : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-OUTPUT-*****\n")
crystal.util.RunIt$Output.toString : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-OUTPUT-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r23 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r23 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22)
crystal.util.RunIt$Output.toString : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22) >>>>>>>> crystal.util.RunIt$Output.toString : $r25 = r0.<crystal.util.RunIt$Output: java.lang.String _output>
crystal.util.RunIt$Output.toString : $r25 = r0.<crystal.util.RunIt$Output: java.lang.String _output> >>>>>>>> crystal.util.RunIt$Output.toString : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)
crystal.util.RunIt$Output.toString : $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25) >>>>>>>> crystal.util.RunIt$Output.toString : r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r28 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r28 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27)
crystal.util.RunIt$Output.toString : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27) >>>>>>>> crystal.util.RunIt$Output.toString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-OUTPUT-*****\n")
crystal.util.RunIt$Output.toString : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-OUTPUT-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : return r31
crystal.util.RunIt$Output.toString : $r7 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt$Output.toString : $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt$Output.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-ERROR-*****\n")
crystal.util.RunIt$Output.toString : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-START-ERROR-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r11 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r11 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
crystal.util.RunIt$Output.toString : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> crystal.util.RunIt$Output.toString : $r13 = r0.<crystal.util.RunIt$Output: java.lang.String _error>
crystal.util.RunIt$Output.toString : $r13 = r0.<crystal.util.RunIt$Output: java.lang.String _error> >>>>>>>> crystal.util.RunIt$Output.toString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
crystal.util.RunIt$Output.toString : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> crystal.util.RunIt$Output.toString : r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r16 = new java.lang.StringBuilder
crystal.util.RunIt$Output.toString : $r16 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt$Output.toString : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt$Output.toString : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15)
crystal.util.RunIt$Output.toString : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15) >>>>>>>> crystal.util.RunIt$Output.toString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-ERROR-*****\n")
crystal.util.RunIt$Output.toString : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*****-END-ERROR-*****\n") >>>>>>>> crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt$Output.toString : r2 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt$Output.toString : $r19 = new java.lang.StringBuilder
