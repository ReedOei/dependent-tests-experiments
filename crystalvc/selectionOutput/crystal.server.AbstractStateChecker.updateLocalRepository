crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3)
crystal.server.AbstractStateChecker.updateLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r8 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r8 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.server.AbstractStateChecker.updateLocalRepository : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pull -u ")
crystal.server.AbstractStateChecker.updateLocalRepository : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pull -u ") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.server.AbstractStateChecker.updateLocalRepository : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r12 = new java.util.ArrayList
crystal.server.AbstractStateChecker.updateLocalRepository : $r12 = new java.util.ArrayList >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r6 = $r12
crystal.server.AbstractStateChecker.updateLocalRepository : r6 = $r12 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("pull")
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("pull") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-u")
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("-u") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2)
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if r4 == null
crystal.server.AbstractStateChecker.updateLocalRepository : if r4 == null >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("--remotecmd")
crystal.server.AbstractStateChecker.updateLocalRepository : if r4 == null >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r17 = newarray (java.lang.String)[0]
crystal.server.AbstractStateChecker.updateLocalRepository : $r17 = newarray (java.lang.String)[0] >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17)
crystal.server.AbstractStateChecker.updateLocalRepository : $r18 = interfaceinvoke r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r17) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r19 = (java.lang.String[]) $r18
crystal.server.AbstractStateChecker.updateLocalRepository : $r19 = (java.lang.String[]) $r18 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r7 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r0, $r19, r1, 0)
crystal.server.AbstractStateChecker.updateLocalRepository : r7 = staticinvoke <crystal.util.RunIt: crystal.util.RunIt$Output execute(java.lang.String,java.lang.String[],java.lang.String,boolean)>(r0, $r19, r1, 0) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $z5 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("hg")
crystal.server.AbstractStateChecker.updateLocalRepository : $z5 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("hg") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $z5 == 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r20 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : if $z5 == 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : return
crystal.server.AbstractStateChecker.updateLocalRepository : $r20 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i0 = virtualinvoke $r20.<java.lang.String: int indexOf(java.lang.String)>("files updated")
crystal.server.AbstractStateChecker.updateLocalRepository : $i0 = virtualinvoke $r20.<java.lang.String: int indexOf(java.lang.String)>("files updated") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i0 >= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i0 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r21 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>()
crystal.server.AbstractStateChecker.updateLocalRepository : if $i0 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : return
crystal.server.AbstractStateChecker.updateLocalRepository : $r21 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String getOutput()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $i1 = virtualinvoke $r21.<java.lang.String: int indexOf(java.lang.String)>("no changes found")
crystal.server.AbstractStateChecker.updateLocalRepository : $i1 = virtualinvoke $r21.<java.lang.String: int indexOf(java.lang.String)>("no changes found") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : if $i1 >= 0
crystal.server.AbstractStateChecker.updateLocalRepository : if $i1 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r22 = new crystal.server.AbstractStateChecker$OperationException
crystal.server.AbstractStateChecker.updateLocalRepository : if $i1 >= 0 >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : return
crystal.server.AbstractStateChecker.updateLocalRepository : $r22 = new crystal.server.AbstractStateChecker$OperationException >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r23 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : $r23 = virtualinvoke r7.<crystal.util.RunIt$Output: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r22.<crystal.server.AbstractStateChecker$OperationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r1, $r23)
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r22.<crystal.server.AbstractStateChecker$OperationException: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r5, r1, $r23) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : throw $r22
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("--remotecmd") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r4)
crystal.server.AbstractStateChecker.updateLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r13 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.updateLocalRepository : $r13 = new java.lang.StringBuilder >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()
crystal.server.AbstractStateChecker.updateLocalRepository : specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
crystal.server.AbstractStateChecker.updateLocalRepository : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--remotecmd ")
crystal.server.AbstractStateChecker.updateLocalRepository : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--remotecmd ") >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
crystal.server.AbstractStateChecker.updateLocalRepository : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.server.AbstractStateChecker.updateLocalRepository : r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.server.AbstractStateChecker.updateLocalRepository : $r17 = newarray (java.lang.String)[0]
