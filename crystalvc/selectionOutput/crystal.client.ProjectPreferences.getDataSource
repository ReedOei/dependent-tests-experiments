crystal.client.ProjectPreferences.getDataSource : $r4 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.getDataSource : r2 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ProjectPreferences.getDataSource : r2 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : if $z0 == 0
crystal.client.ProjectPreferences.getDataSource : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ProjectPreferences.getDataSource : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : return null
crystal.client.ProjectPreferences.getDataSource : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : r3 = (crystal.model.DataSource) $r5
crystal.client.ProjectPreferences.getDataSource : r3 = (crystal.model.DataSource) $r5 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r6 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPreferences.getDataSource : $r6 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>()
crystal.client.ProjectPreferences.getDataSource : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()
crystal.client.ProjectPreferences.getDataSource : $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
crystal.client.ProjectPreferences.getDataSource : $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>()
crystal.client.ProjectPreferences.getDataSource : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10)
crystal.client.ProjectPreferences.getDataSource : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10) >>>>>>>> crystal.client.ProjectPreferences.getDataSource : if $z1 == 0
crystal.client.ProjectPreferences.getDataSource : if $z1 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : return r3
crystal.client.ProjectPreferences.getDataSource : if $z1 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.getDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
