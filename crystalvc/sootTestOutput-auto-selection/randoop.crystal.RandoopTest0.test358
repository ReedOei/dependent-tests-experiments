crystal.client.ConflictDaemon.getInstance : $r0 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance> >>>>>>>> crystal.client.ConflictDaemon.getInstance : if $r0 != null
crystal.client.ConflictDaemon.getInstance : if $r0 != null >>>>>>>> crystal.client.ConflictDaemon.getInstance : $r2 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance>
crystal.client.ConflictDaemon.getInstance : $r2 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance> >>>>>>>> crystal.client.ConflictDaemon.getInstance : return $r2
crystal.client.ConflictDaemon.getInstance : return $r2 >>>>>>>> crystal.client.ConflictDaemon.enable : r0.<crystal.client.ConflictDaemon: boolean _enabled> = z0
crystal.client.ConflictDaemon.enable : r0.<crystal.client.ConflictDaemon: boolean _enabled> = z0 >>>>>>>> crystal.client.ConflictDaemon.getLocalStates : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.getLocalStates : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap> >>>>>>>> crystal.client.ConflictDaemon.getLocalStates : $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Collection values()>()
crystal.client.ConflictDaemon.getLocalStates : $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Collection values()>() >>>>>>>> crystal.client.ConflictDaemon.getLocalStates : return $r2
crystal.client.ConflictDaemon.getLocalStates : return $r2 >>>>>>>> crystal.client.ConflictDaemon.removeAllListeners : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Vector _listeners>
crystal.client.ConflictDaemon.removeAllListeners : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Vector _listeners> >>>>>>>> crystal.client.ConflictDaemon.removeAllListeners : virtualinvoke $r1.<java.util.Vector: void removeAllElements()>()
crystal.client.ConflictDaemon.removeAllListeners : virtualinvoke $r1.<java.util.Vector: void removeAllElements()>() >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : if r0 == null
crystal.util.ValidInputChecker.checkStringInSet : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0)
crystal.util.ValidInputChecker.checkStringInSet : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : if $z0 != 0
crystal.util.ValidInputChecker.checkStringInSet : if $z0 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r3 = new java.lang.IllegalArgumentException
crystal.util.ValidInputChecker.checkStringInSet : $r3 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r2 = new java.lang.StringBuilder
crystal.util.ValidInputChecker.checkStringInSet : $r2 = new java.lang.StringBuilder >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input: ")
crystal.util.ValidInputChecker.checkStringInSet : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input: ") >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkStringInSet : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the set.")
crystal.util.ValidInputChecker.checkStringInSet : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the set.") >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.ValidInputChecker.checkStringInSet : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)
crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : throw $r3
