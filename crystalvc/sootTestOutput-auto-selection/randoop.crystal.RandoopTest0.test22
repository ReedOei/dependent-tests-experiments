crystal.util.LSMRLogger.startLog4J : $r0 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : virtualinvoke $r0.<org.apache.log4j.Logger: void removeAllAppenders()>()
crystal.util.LSMRLogger.startLog4J : virtualinvoke $r0.<org.apache.log4j.Logger: void removeAllAppenders()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : staticinvoke <org.apache.log4j.BasicConfigurator: void configure()>()
crystal.util.LSMRLogger.startLog4J : staticinvoke <org.apache.log4j.BasicConfigurator: void configure()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : $r4 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r5 = virtualinvoke $r4.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>()
crystal.util.LSMRLogger.startLog4J : $r5 = virtualinvoke $r4.<org.apache.log4j.Logger: java.util.Enumeration getAllAppenders()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>()
crystal.util.LSMRLogger.startLog4J : $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : r1 = (org.apache.log4j.ConsoleAppender) $r6
crystal.util.LSMRLogger.startLog4J : r1 = (org.apache.log4j.ConsoleAppender) $r6 >>>>>>>> crystal.util.LSMRLogger.startLog4J : if r1 == null
crystal.util.LSMRLogger.startLog4J : if r1 == null >>>>>>>> crystal.util.LSMRLogger.startLog4J : if z0 == 0
crystal.util.LSMRLogger.startLog4J : if z0 == 0 >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r2 = new org.apache.log4j.PatternLayout
crystal.util.LSMRLogger.startLog4J : $r2 = new org.apache.log4j.PatternLayout >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r3 = <crystal.util.LSMRLogger: java.lang.String LOG_PATTERN_VERBOSE>
crystal.util.LSMRLogger.startLog4J : $r3 = <crystal.util.LSMRLogger: java.lang.String LOG_PATTERN_VERBOSE> >>>>>>>> crystal.util.LSMRLogger.startLog4J : specialinvoke $r2.<org.apache.log4j.PatternLayout: void <init>(java.lang.String)>($r3)
crystal.util.LSMRLogger.startLog4J : specialinvoke $r2.<org.apache.log4j.PatternLayout: void <init>(java.lang.String)>($r3) >>>>>>>> crystal.util.LSMRLogger.startLog4J : virtualinvoke r1.<org.apache.log4j.ConsoleAppender: void setLayout(org.apache.log4j.Layout)>($r2)
crystal.util.LSMRLogger.startLog4J : virtualinvoke r1.<org.apache.log4j.ConsoleAppender: void setLayout(org.apache.log4j.Layout)>($r2) >>>>>>>> crystal.util.LSMRLogger.startLog4J : goto [?= $r9 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()]
crystal.util.LSMRLogger.startLog4J : goto [?= $r9 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()] >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r9 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : $r9 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>() >>>>>>>> crystal.util.LSMRLogger.startLog4J : $r10 = <org.apache.log4j.Level: org.apache.log4j.Level INFO>
crystal.util.LSMRLogger.startLog4J : $r10 = <org.apache.log4j.Level: org.apache.log4j.Level INFO> >>>>>>>> crystal.util.LSMRLogger.startLog4J : virtualinvoke $r9.<org.apache.log4j.Logger: void setLevel(org.apache.log4j.Level)>($r10)
