crystal.util.XMLTools.newXMLErrorDocument : $r1 = new org.jdom.Document >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : specialinvoke $r1.<org.jdom.Document: void <init>()>()
crystal.util.XMLTools.newXMLErrorDocument : specialinvoke $r1.<org.jdom.Document: void <init>()>() >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : r2 = $r1
crystal.util.XMLTools.newXMLErrorDocument : r2 = $r1 >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : $r4 = new org.jdom.Element
crystal.util.XMLTools.newXMLErrorDocument : $r4 = new org.jdom.Element >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String)>("error")
crystal.util.XMLTools.newXMLErrorDocument : specialinvoke $r4.<org.jdom.Element: void <init>(java.lang.String)>("error") >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : r3 = $r4
crystal.util.XMLTools.newXMLErrorDocument : r3 = $r4 >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : virtualinvoke r3.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("target", r0)
crystal.util.XMLTools.newXMLErrorDocument : virtualinvoke r3.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("target", r0) >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r3)
crystal.util.XMLTools.newXMLErrorDocument : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r3) >>>>>>>> crystal.util.XMLTools.newXMLErrorDocument : return r2
crystal.util.XMLTools.newXMLErrorDocument : return r2 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : if r0 != null
crystal.util.XMLTools.writeXMLDocument : if r0 != null >>>>>>>> crystal.util.XMLTools.writeXMLDocument : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.util.XMLTools.writeXMLDocument : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $r5 = new java.io.FileOutputStream
crystal.util.XMLTools.writeXMLDocument : $r5 = new java.io.FileOutputStream >>>>>>>> crystal.util.XMLTools.writeXMLDocument : specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1)
crystal.util.XMLTools.writeXMLDocument : specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : r2 = $r5
crystal.util.XMLTools.writeXMLDocument : r2 = $r5 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $r6 = new org.jdom.output.XMLOutputter
crystal.util.XMLTools.writeXMLDocument : $r6 = new org.jdom.output.XMLOutputter >>>>>>>> crystal.util.XMLTools.writeXMLDocument : specialinvoke $r6.<org.jdom.output.XMLOutputter: void <init>()>()
crystal.util.XMLTools.writeXMLDocument : specialinvoke $r6.<org.jdom.output.XMLOutputter: void <init>()>() >>>>>>>> crystal.util.XMLTools.writeXMLDocument : r3 = $r6
crystal.util.XMLTools.writeXMLDocument : r3 = $r6 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>()
crystal.util.XMLTools.writeXMLDocument : $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>() >>>>>>>> crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)>($r7)
crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)>($r7) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(r0, r2)
crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(r0, r2) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $z0 = 1
crystal.util.XMLTools.writeXMLDocument : $z0 = 1 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : return $z0
crystal.util.XMLTools.writeXMLDocument : return $z0 >>>>>>>> crystal.util.ValidInputChecker.checkNullInput : if r0 != null
