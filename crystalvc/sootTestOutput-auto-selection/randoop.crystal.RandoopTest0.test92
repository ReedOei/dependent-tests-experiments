crystal.util.RunIt.getExecutable : if r0 != null >>>>>>>> crystal.util.RunIt.getExecutable : $r8 = new java.io.File
crystal.util.RunIt.getExecutable : $r8 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r0)
crystal.util.RunIt.getExecutable : specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.RunIt.getExecutable : $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z0 == 0
crystal.util.RunIt.getExecutable : if $z0 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r9 = new java.util.StringTokenizer
crystal.util.RunIt.getExecutable : $r9 = new java.util.StringTokenizer >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0)
crystal.util.RunIt.getExecutable : specialinvoke $r9.<java.util.StringTokenizer: void <init>(java.lang.String)>(r0) >>>>>>>> crystal.util.RunIt.getExecutable : r1 = $r9
crystal.util.RunIt.getExecutable : r1 = $r9 >>>>>>>> crystal.util.RunIt.getExecutable : $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $z1 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z1 != 0
crystal.util.RunIt.getExecutable : if $z1 != 0 >>>>>>>> crystal.util.RunIt.getExecutable : r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.util.RunIt.getExecutable : r2 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.util.RunIt.getExecutable : r3 = ""
crystal.util.RunIt.getExecutable : r3 = "" >>>>>>>> crystal.util.RunIt.getExecutable : $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z2 == 0
crystal.util.RunIt.getExecutable : if $z2 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r10 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r10 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
crystal.util.RunIt.getExecutable : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> crystal.util.RunIt.getExecutable : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
crystal.util.RunIt.getExecutable : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> crystal.util.RunIt.getExecutable : $r13 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.util.RunIt.getExecutable : $r13 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)
crystal.util.RunIt.getExecutable : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) >>>>>>>> crystal.util.RunIt.getExecutable : r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : r3 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : goto [?= $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.util.RunIt.getExecutable : goto [?= $z2 = virtualinvoke r1.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> crystal.util.RunIt.getExecutable : $r15 = new java.io.File
crystal.util.RunIt.getExecutable : $r15 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $z3 = virtualinvoke $r15.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z3 = virtualinvoke $r15.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z3 == 0
crystal.util.RunIt.getExecutable : if $z3 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("PATH")
crystal.util.RunIt.getExecutable : r4 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("PATH") >>>>>>>> crystal.util.RunIt.getExecutable : $r16 = new java.util.StringTokenizer
crystal.util.RunIt.getExecutable : $r16 = new java.util.StringTokenizer >>>>>>>> crystal.util.RunIt.getExecutable : $r5 = <java.io.File: java.lang.String pathSeparator>
crystal.util.RunIt.getExecutable : $r5 = <java.io.File: java.lang.String pathSeparator> >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r16.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r4, $r5)
crystal.util.RunIt.getExecutable : specialinvoke $r16.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r4, $r5) >>>>>>>> crystal.util.RunIt.getExecutable : r6 = $r16
crystal.util.RunIt.getExecutable : r6 = $r16 >>>>>>>> crystal.util.RunIt.getExecutable : $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()
crystal.util.RunIt.getExecutable : $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z4 == 0
crystal.util.RunIt.getExecutable : if $z4 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : r7 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>()
crystal.util.RunIt.getExecutable : r7 = virtualinvoke r6.<java.util.StringTokenizer: java.lang.String nextToken()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r17 = new java.io.File
crystal.util.RunIt.getExecutable : $r17 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : $r18 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r18 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r18.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r20 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r20 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
crystal.util.RunIt.getExecutable : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> crystal.util.RunIt.getExecutable : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r23)
crystal.util.RunIt.getExecutable : specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r23) >>>>>>>> crystal.util.RunIt.getExecutable : $z5 = virtualinvoke $r17.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z5 = virtualinvoke $r17.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z5 == 0
crystal.util.RunIt.getExecutable : if $z5 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r33 = new java.io.File
crystal.util.RunIt.getExecutable : $r33 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : $r34 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r34 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r34.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r36 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r36 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
crystal.util.RunIt.getExecutable : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> crystal.util.RunIt.getExecutable : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe")
crystal.util.RunIt.getExecutable : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".exe") >>>>>>>> crystal.util.RunIt.getExecutable : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r33.<java.io.File: void <init>(java.lang.String)>($r40)
crystal.util.RunIt.getExecutable : specialinvoke $r33.<java.io.File: void <init>(java.lang.String)>($r40) >>>>>>>> crystal.util.RunIt.getExecutable : $z7 = virtualinvoke $r33.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z7 = virtualinvoke $r33.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z7 == 0
crystal.util.RunIt.getExecutable : if $z7 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : $r54 = new java.io.File
crystal.util.RunIt.getExecutable : $r54 = new java.io.File >>>>>>>> crystal.util.RunIt.getExecutable : $r55 = new java.lang.StringBuilder
crystal.util.RunIt.getExecutable : $r55 = new java.lang.StringBuilder >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()
crystal.util.RunIt.getExecutable : specialinvoke $r55.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.RunIt.getExecutable : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
crystal.util.RunIt.getExecutable : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> crystal.util.RunIt.getExecutable : $r57 = <java.io.File: java.lang.String separator>
crystal.util.RunIt.getExecutable : $r57 = <java.io.File: java.lang.String separator> >>>>>>>> crystal.util.RunIt.getExecutable : $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57)
crystal.util.RunIt.getExecutable : $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57) >>>>>>>> crystal.util.RunIt.getExecutable : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
crystal.util.RunIt.getExecutable : $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> crystal.util.RunIt.getExecutable : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cmd")
crystal.util.RunIt.getExecutable : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cmd") >>>>>>>> crystal.util.RunIt.getExecutable : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.RunIt.getExecutable : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.RunIt.getExecutable : specialinvoke $r54.<java.io.File: void <init>(java.lang.String)>($r61)
crystal.util.RunIt.getExecutable : specialinvoke $r54.<java.io.File: void <init>(java.lang.String)>($r61) >>>>>>>> crystal.util.RunIt.getExecutable : $z9 = virtualinvoke $r54.<java.io.File: boolean exists()>()
crystal.util.RunIt.getExecutable : $z9 = virtualinvoke $r54.<java.io.File: boolean exists()>() >>>>>>>> crystal.util.RunIt.getExecutable : if $z9 == 0
crystal.util.RunIt.getExecutable : if $z9 == 0 >>>>>>>> crystal.util.RunIt.getExecutable : goto [?= $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()]
crystal.util.RunIt.getExecutable : goto [?= $z4 = virtualinvoke r6.<java.util.StringTokenizer: boolean hasMoreTokens()>()] >>>>>>>> crystal.util.RunIt.getExecutable : return null
