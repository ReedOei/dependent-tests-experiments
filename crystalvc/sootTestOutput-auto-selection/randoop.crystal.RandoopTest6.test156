crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : return $r1
crystal.client.ClientPreferences.getProjectPreference : return $r1 >>>>>>>> crystal.model.Relationship.getDominant : r1 = null
crystal.model.Relationship.getDominant : r1 = null >>>>>>>> crystal.model.Relationship.getDominant : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
crystal.model.Relationship.getDominant : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.model.Relationship.getDominant : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.model.Relationship.getDominant : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.model.Relationship.getDominant : if $z0 == 0
crystal.model.Relationship.getDominant : if $z0 == 0 >>>>>>>> crystal.model.Relationship.getDominant : $r5 = virtualinvoke r1.<crystal.model.Relationship: java.awt.Image getImage()>()
