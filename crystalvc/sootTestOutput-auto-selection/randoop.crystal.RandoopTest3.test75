crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.setChanged : r0.<crystal.client.ClientPreferences: boolean _hasChanged> = z0
crystal.client.ClientPreferences.setChanged : r0.<crystal.client.ClientPreferences: boolean _hasChanged> = z0 >>>>>>>> crystal.client.ClientPreferences.setGitPath : r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> = r1
crystal.client.ClientPreferences.setGitPath : r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> = r1 >>>>>>>> crystal.client.ClientPreferences.setRefresh : r0.<crystal.client.ClientPreferences: long _refresh> = l0
crystal.client.ClientPreferences.setRefresh : r0.<crystal.client.ClientPreferences: long _refresh> = l0 >>>>>>>> crystal.client.ClientPreferences.setHgPath : r0.<crystal.client.ClientPreferences: java.lang.String _hgPath> = r1
crystal.client.ClientPreferences.setHgPath : r0.<crystal.client.ClientPreferences: java.lang.String _hgPath> = r1 >>>>>>>> crystal.client.ClientPreferences.getHgPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.client.ClientPreferences.getHgPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath> >>>>>>>> crystal.client.ClientPreferences.getHgPath : return $r1
crystal.client.ClientPreferences.getHgPath : return $r1 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : r2 = staticinvoke <crystal.util.XMLTools: org.jdom.Document newXMLDocument()>()
crystal.client.ClientPreferences.savePreferencesToXML : r2 = staticinvoke <crystal.util.XMLTools: org.jdom.Document newXMLDocument()>() >>>>>>>> crystal.util.XMLTools.newXMLDocument : $r0 = new org.jdom.Document
crystal.util.XMLTools.newXMLDocument : $r0 = new org.jdom.Document >>>>>>>> crystal.util.XMLTools.newXMLDocument : specialinvoke $r0.<org.jdom.Document: void <init>()>()
crystal.util.XMLTools.newXMLDocument : specialinvoke $r0.<org.jdom.Document: void <init>()>() >>>>>>>> crystal.util.XMLTools.newXMLDocument : return $r0
crystal.util.XMLTools.newXMLDocument : return $r0 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r14 = new org.jdom.Element
crystal.client.ClientPreferences.savePreferencesToXML : $r14 = new org.jdom.Element >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r3 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] ROOT>
crystal.client.ClientPreferences.savePreferencesToXML : $r3 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] ROOT> >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r15 = $r3[0]
crystal.client.ClientPreferences.savePreferencesToXML : $r15 = $r3[0] >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r14.<org.jdom.Element: void <init>(java.lang.String)>($r15)
crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r14.<org.jdom.Element: void <init>(java.lang.String)>($r15) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : r4 = $r14
crystal.client.ClientPreferences.savePreferencesToXML : r4 = $r14 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r16 = new org.jdom.Comment
crystal.client.ClientPreferences.savePreferencesToXML : $r16 = new org.jdom.Comment >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r16.<org.jdom.Comment: void <init>(java.lang.String)>(" Configuration file for Crystal conflict client. See documentation at ")
crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r16.<org.jdom.Comment: void <init>(java.lang.String)>(" Configuration file for Crystal conflict client. See documentation at ") >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : r5 = $r16
crystal.client.ClientPreferences.savePreferencesToXML : r5 = $r16 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r17 = new org.jdom.Comment
crystal.client.ClientPreferences.savePreferencesToXML : $r17 = new org.jdom.Comment >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r17.<org.jdom.Comment: void <init>(java.lang.String)>(" http://www.cs.washington.edu/homes/brun/research/crystal/ . ")
crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r17.<org.jdom.Comment: void <init>(java.lang.String)>(" http://www.cs.washington.edu/homes/brun/research/crystal/ . ") >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : r6 = $r17
crystal.client.ClientPreferences.savePreferencesToXML : r6 = $r17 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r18 = new org.jdom.Comment
crystal.client.ClientPreferences.savePreferencesToXML : $r18 = new org.jdom.Comment >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r18.<org.jdom.Comment: void <init>(java.lang.String)>(" Example:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ccConfig tempDirectory=\"C:/temp/conflictClient/\" refresh=\"60\">\n  <project Kind=\"HG\" ShortName=\"MyFirstProject\" Clone=\"C:/projects/myLocalFirstProjectRepo/\">\n    <source ShortName=\"MASTER\" Clone=\"ssh://user@host/path/to/repo/\" />\n    <source ShortName=\"Friend\" Clone=\"ssh://user@host/path/to/friend/repo/\" />\n  </project>\n  <project Kind=\"HG\" ShortName=\"MySecondProject\" Clone=\"C:/projects/myLocalSecondProjectRepo/\">\n    <source ShortName=\"MASTER\" Clone=\"ssh://user@host/path/to/socond/project/repo/\" />\n    <source ShortName=\"Friend\" Clone=\"https://user@host/path/to/friend/second/repo/\" />\n  </project>\n</ccConfig>\n")
crystal.client.ClientPreferences.savePreferencesToXML : specialinvoke $r18.<org.jdom.Comment: void <init>(java.lang.String)>(" Example:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ccConfig tempDirectory=\"C:/temp/conflictClient/\" refresh=\"60\">\n  <project Kind=\"HG\" ShortName=\"MyFirstProject\" Clone=\"C:/projects/myLocalFirstProjectRepo/\">\n    <source ShortName=\"MASTER\" Clone=\"ssh://user@host/path/to/repo/\" />\n    <source ShortName=\"Friend\" Clone=\"ssh://user@host/path/to/friend/repo/\" />\n  </project>\n  <project Kind=\"HG\" ShortName=\"MySecondProject\" Clone=\"C:/projects/myLocalSecondProjectRepo/\">\n    <source ShortName=\"MASTER\" Clone=\"ssh://user@host/path/to/socond/project/repo/\" />\n    <source ShortName=\"Friend\" Clone=\"https://user@host/path/to/friend/second/repo/\" />\n  </project>\n</ccConfig>\n") >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : r7 = $r18
crystal.client.ClientPreferences.savePreferencesToXML : r7 = $r18 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r5)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r5) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r6)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r6) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r7)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r7) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r22 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] TMP_DIR>
crystal.client.ClientPreferences.savePreferencesToXML : $r22 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] TMP_DIR> >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r23 = $r22[0]
crystal.client.ClientPreferences.savePreferencesToXML : $r23 = $r22[0] >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r24 = virtualinvoke r0.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>()
crystal.client.ClientPreferences.savePreferencesToXML : $r24 = virtualinvoke r0.<crystal.client.ClientPreferences: java.lang.String getTempDirectory()>() >>>>>>>> crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.getTempDirectory : return $r1
crystal.client.ClientPreferences.getTempDirectory : return $r1 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r4.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>($r23, $r24)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r4.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>($r23, $r24) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r26 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] REFRESH>
crystal.client.ClientPreferences.savePreferencesToXML : $r26 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] REFRESH> >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r27 = $r26[0]
crystal.client.ClientPreferences.savePreferencesToXML : $r27 = $r26[0] >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $l0 = virtualinvoke r0.<crystal.client.ClientPreferences: long getRefresh()>()
crystal.client.ClientPreferences.savePreferencesToXML : $l0 = virtualinvoke r0.<crystal.client.ClientPreferences: long getRefresh()>() >>>>>>>> crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh>
crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh> >>>>>>>> crystal.client.ClientPreferences.getRefresh : return $l0
crystal.client.ClientPreferences.getRefresh : return $l0 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r28 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0)
crystal.client.ClientPreferences.savePreferencesToXML : $r28 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r4.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>($r27, $r28)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r4.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>($r27, $r28) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>(r4)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>(r4) >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $r31 = virtualinvoke r0.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ClientPreferences.savePreferencesToXML : $r31 = virtualinvoke r0.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : return $r1
crystal.client.ClientPreferences.getProjectPreference : return $r1 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : r8 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.savePreferencesToXML : r8 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.savePreferencesToXML : $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : if $z0 == 0
crystal.client.ClientPreferences.savePreferencesToXML : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToXML : staticinvoke <crystal.util.XMLTools: boolean writeXMLDocument(org.jdom.Document,java.lang.String)>(r2, r1)
crystal.client.ClientPreferences.savePreferencesToXML : staticinvoke <crystal.util.XMLTools: boolean writeXMLDocument(org.jdom.Document,java.lang.String)>(r2, r1) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : if r0 != null
crystal.util.XMLTools.writeXMLDocument : if r0 != null >>>>>>>> crystal.util.XMLTools.writeXMLDocument : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.util.XMLTools.writeXMLDocument : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $r5 = new java.io.FileOutputStream
crystal.util.XMLTools.writeXMLDocument : $r5 = new java.io.FileOutputStream >>>>>>>> crystal.util.XMLTools.writeXMLDocument : specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1)
crystal.util.XMLTools.writeXMLDocument : specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String)>(r1) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : r2 = $r5
crystal.util.XMLTools.writeXMLDocument : r2 = $r5 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $r6 = new org.jdom.output.XMLOutputter
crystal.util.XMLTools.writeXMLDocument : $r6 = new org.jdom.output.XMLOutputter >>>>>>>> crystal.util.XMLTools.writeXMLDocument : specialinvoke $r6.<org.jdom.output.XMLOutputter: void <init>()>()
crystal.util.XMLTools.writeXMLDocument : specialinvoke $r6.<org.jdom.output.XMLOutputter: void <init>()>() >>>>>>>> crystal.util.XMLTools.writeXMLDocument : r3 = $r6
crystal.util.XMLTools.writeXMLDocument : r3 = $r6 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>()
crystal.util.XMLTools.writeXMLDocument : $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>() >>>>>>>> crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)>($r7)
crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)>($r7) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(r0, r2)
crystal.util.XMLTools.writeXMLDocument : virtualinvoke r3.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.OutputStream)>(r0, r2) >>>>>>>> crystal.util.XMLTools.writeXMLDocument : $z0 = 1
crystal.util.XMLTools.writeXMLDocument : $z0 = 1 >>>>>>>> crystal.util.XMLTools.writeXMLDocument : return $z0
crystal.util.XMLTools.writeXMLDocument : return $z0 >>>>>>>> crystal.client.ClientPreferences.savePreferencesToDefaultXML : $r1 = <crystal.client.ClientPreferences: java.lang.String CONFIG_PATH>
crystal.client.ClientPreferences.savePreferencesToDefaultXML : $r1 = <crystal.client.ClientPreferences: java.lang.String CONFIG_PATH> >>>>>>>> crystal.client.ClientPreferences.savePreferencesToDefaultXML : staticinvoke <crystal.client.ClientPreferences: void savePreferencesToXML(crystal.client.ClientPreferences,java.lang.String)>(r0, $r1)
crystal.client.ClientPreferences.savePreferencesToDefaultXML : staticinvoke <crystal.client.ClientPreferences: void savePreferencesToXML(crystal.client.ClientPreferences,java.lang.String)>(r0, $r1) >>>>>>>> crystal.client.ClientPreferences.equals : if r1 == null
crystal.client.ClientPreferences.equals : if r1 == null >>>>>>>> crystal.client.ClientPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ClientPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ClientPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ClientPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ClientPreferences.equals : if $r3 != $r4
crystal.client.ClientPreferences.equals : if $r3 != $r4 >>>>>>>> crystal.client.ClientPreferences.equals : r2 = (crystal.client.ClientPreferences) r1
crystal.client.ClientPreferences.equals : r2 = (crystal.client.ClientPreferences) r1 >>>>>>>> crystal.client.ClientPreferences.equals : $r5 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.equals : $r5 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.equals : $r6 = r2.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.equals : $r6 = r2.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.equals : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
crystal.client.ClientPreferences.equals : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> crystal.client.ClientPreferences.equals : if $z0 == 0
crystal.client.ClientPreferences.equals : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.equals : $r7 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.client.ClientPreferences.equals : $r7 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath> >>>>>>>> crystal.client.ClientPreferences.equals : $r8 = r2.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.client.ClientPreferences.equals : $r8 = r2.<crystal.client.ClientPreferences: java.lang.String _hgPath> >>>>>>>> crystal.client.ClientPreferences.equals : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
crystal.client.ClientPreferences.equals : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> crystal.client.ClientPreferences.equals : if $z1 == 0
crystal.client.ClientPreferences.equals : if $z1 == 0 >>>>>>>> crystal.client.ClientPreferences.equals : $z3 = 0
crystal.client.ClientPreferences.equals : $z3 = 0 >>>>>>>> crystal.client.ClientPreferences.equals : return $z3
crystal.client.ClientPreferences.equals : return $z3 >>>>>>>> crystal.client.ConflictDaemon.getInstance : $r0 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance>
crystal.client.ConflictDaemon.getInstance : $r0 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance> >>>>>>>> crystal.client.ConflictDaemon.getInstance : if $r0 != null
crystal.client.ConflictDaemon.getInstance : if $r0 != null >>>>>>>> crystal.client.ConflictDaemon.getInstance : $r2 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance>
crystal.client.ConflictDaemon.getInstance : $r2 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance> >>>>>>>> crystal.client.ConflictDaemon.getInstance : return $r2
crystal.client.ConflictDaemon.getInstance : return $r2 >>>>>>>> crystal.client.ConflictDaemon.removeAllListeners : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Vector _listeners>
crystal.client.ConflictDaemon.removeAllListeners : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Vector _listeners> >>>>>>>> crystal.client.ConflictDaemon.removeAllListeners : virtualinvoke $r1.<java.util.Vector: void removeAllElements()>()
crystal.client.ConflictDaemon.removeAllListeners : virtualinvoke $r1.<java.util.Vector: void removeAllElements()>() >>>>>>>> crystal.client.ConflictDaemon.enable : r0.<crystal.client.ConflictDaemon: boolean _enabled> = z0
crystal.client.ConflictDaemon.enable : r0.<crystal.client.ConflictDaemon: boolean _enabled> = z0 >>>>>>>> crystal.client.ConflictDaemon.getRelationships : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap>
crystal.client.ConflictDaemon.getRelationships : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _relationshipMap> >>>>>>>> crystal.client.ConflictDaemon.getRelationships : $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Collection values()>()
crystal.client.ConflictDaemon.getRelationships : $r2 = virtualinvoke $r1.<java.util.Hashtable: java.util.Collection values()>() >>>>>>>> crystal.client.ConflictDaemon.getRelationships : return $r2
crystal.client.ConflictDaemon.getRelationships : return $r2 >>>>>>>> crystal.client.ClientPreferences.equals : return 0
crystal.client.ClientPreferences.equals : return 0 >>>>>>>> crystal.model.Relationship.getDominant : r1 = null
crystal.model.Relationship.getDominant : r1 = null >>>>>>>> crystal.model.Relationship.getDominant : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
crystal.model.Relationship.getDominant : r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> crystal.model.Relationship.getDominant : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.model.Relationship.getDominant : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.model.Relationship.getDominant : if $z0 == 0
crystal.model.Relationship.getDominant : if $z0 == 0 >>>>>>>> crystal.model.Relationship.getDominant : $r5 = virtualinvoke r1.<crystal.model.Relationship: java.awt.Image getImage()>()
