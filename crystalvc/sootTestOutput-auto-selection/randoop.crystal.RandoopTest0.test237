crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.setGitPath : r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> = r1
crystal.client.ClientPreferences.setGitPath : r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> = r1 >>>>>>>> crystal.client.ClientPreferences.setTempDirectory : r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> = r1
crystal.client.ClientPreferences.setTempDirectory : r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> = r1 >>>>>>>> crystal.client.ClientPreferences.setChanged : r0.<crystal.client.ClientPreferences: boolean _hasChanged> = z0
crystal.client.ClientPreferences.setChanged : r0.<crystal.client.ClientPreferences: boolean _hasChanged> = z0 >>>>>>>> crystal.client.ClientPreferences.setRefresh : r0.<crystal.client.ClientPreferences: long _refresh> = l0
crystal.client.ClientPreferences.setRefresh : r0.<crystal.client.ClientPreferences: long _refresh> = l0 >>>>>>>> crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.getTempDirectory : return $r1
crystal.client.ClientPreferences.getTempDirectory : return $r1 >>>>>>>> crystal.client.ClientPreferences.getGitPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _gitPath>
crystal.client.ClientPreferences.getGitPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _gitPath> >>>>>>>> crystal.client.ClientPreferences.getGitPath : return $r1
crystal.client.ClientPreferences.getGitPath : return $r1 >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : return $r1
crystal.client.ClientPreferences.getProjectPreference : return $r1 >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : if r0 == null
crystal.util.ValidInputChecker.checkStringInSet : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0)
crystal.util.ValidInputChecker.checkStringInSet : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : if $z0 != 0
crystal.util.ValidInputChecker.checkStringInSet : if $z0 != 0 >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r3 = new java.lang.IllegalArgumentException
crystal.util.ValidInputChecker.checkStringInSet : $r3 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r2 = new java.lang.StringBuilder
crystal.util.ValidInputChecker.checkStringInSet : $r2 = new java.lang.StringBuilder >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input: ")
crystal.util.ValidInputChecker.checkStringInSet : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input: ") >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)
crystal.util.ValidInputChecker.checkStringInSet : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the set.")
crystal.util.ValidInputChecker.checkStringInSet : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not contained in the set.") >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.util.ValidInputChecker.checkStringInSet : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)
crystal.util.ValidInputChecker.checkStringInSet : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) >>>>>>>> crystal.util.ValidInputChecker.checkStringInSet : throw $r3
