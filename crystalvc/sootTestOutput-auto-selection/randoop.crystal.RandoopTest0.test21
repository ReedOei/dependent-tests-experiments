crystal.util.TimeUtility.getCurrentLSMRDateString : $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>() >>>>>>>> crystal.util.TimeUtility.getCurrentLSMRDateString : $r1 = virtualinvoke $r0.<java.util.Calendar: java.util.Date getTime()>()
crystal.util.TimeUtility.getCurrentLSMRDateString : $r1 = virtualinvoke $r0.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> crystal.util.TimeUtility.getCurrentLSMRDateString : $r2 = staticinvoke <crystal.util.TimeUtility: java.lang.String formatLSMRDate(java.util.Date)>($r1)
crystal.util.TimeUtility.getCurrentLSMRDateString : $r2 = staticinvoke <crystal.util.TimeUtility: java.lang.String formatLSMRDate(java.util.Date)>($r1) >>>>>>>> crystal.util.TimeUtility.formatLSMRDate : $r1 = new java.text.SimpleDateFormat
crystal.util.TimeUtility.formatLSMRDate : $r1 = new java.text.SimpleDateFormat >>>>>>>> crystal.util.TimeUtility.formatLSMRDate : $r2 = <crystal.util.TimeUtility: java.lang.String LSMR_DATE_FORMAT>
crystal.util.TimeUtility.formatLSMRDate : $r2 = <crystal.util.TimeUtility: java.lang.String LSMR_DATE_FORMAT> >>>>>>>> crystal.util.TimeUtility.formatLSMRDate : specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2)
crystal.util.TimeUtility.formatLSMRDate : specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2) >>>>>>>> crystal.util.TimeUtility.formatLSMRDate : $r3 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r0)
crystal.util.TimeUtility.formatLSMRDate : $r3 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r0) >>>>>>>> crystal.util.TimeUtility.formatLSMRDate : return $r3
crystal.util.TimeUtility.formatLSMRDate : return $r3 >>>>>>>> crystal.util.TimeUtility.getCurrentLSMRDateString : return $r2
