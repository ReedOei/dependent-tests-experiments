crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = null
crystal.model.DataSource.setParent : if r1 == null goto r0.<crystal.model.DataSource: java.lang.String _parent> = null
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.util.LSMRLogger.startLog4J : virtualinvoke r62.<org.apache.log4j.RollingFileAppender: void setMaxBackupIndex(int)>(10)
crystal.util.LSMRLogger.startLog4J : virtualinvoke r62.<org.apache.log4j.RollingFileAppender: void setMaxFileSize(java.lang.String)>("10MB")
crystal.util.LSMRLogger.startLog4J : $r63 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : n0 = null
crystal.util.LSMRLogger.startLog4J : if r4 == null goto (branch)
crystal.util.LSMRLogger.startLog4J : $r30 = new org.apache.log4j.RollingFileAppender
crystal.util.LSMRLogger.startLog4J : virtualinvoke r25.<org.apache.log4j.RollingFileAppender: void setMaxBackupIndex(int)>(10)
crystal.util.LSMRLogger.startLog4J : if z1 == 0 goto $r36 = new org.apache.log4j.PatternLayout
crystal.util.LSMRLogger.startLog4J : $z3 = virtualinvoke r6.<java.io.File: boolean exists()>()
crystal.util.LSMRLogger.startLog4J : $r18 = new java.io.File
crystal.util.LSMRLogger.startLog4J : $r45 = new org.apache.log4j.xml.XMLLayout
crystal.util.LSMRLogger.startLog4J : $r3 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : $r44 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : if r2 != null goto r25 = null
crystal.util.LSMRLogger.startLog4J : $r14 = new java.lang.StringBuilder
crystal.util.LSMRLogger.startLog4J : $r56 = new org.apache.log4j.RollingFileAppender
crystal.util.LSMRLogger.startLog4J : $r10 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : virtualinvoke r52.<org.apache.log4j.RollingFileAppender: void setMaxFileSize(java.lang.String)>("10MB")
crystal.util.LSMRLogger.startLog4J : virtualinvoke r8.<org.apache.log4j.xml.XMLLayout: void setLocationInfo(boolean)>(1)
crystal.util.LSMRLogger.startLog4J : r25 = null
crystal.util.LSMRLogger.startLog4J : $r54 = new org.apache.log4j.PatternLayout
crystal.util.LSMRLogger.startLog4J : $r66 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : $r53 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()
crystal.util.LSMRLogger.startLog4J : goto [?= $r66 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getRootLogger()>()]
crystal.util.LSMRLogger.startLog4J : if z0 == 0 goto (branch)
crystal.util.LSMRLogger.startLog4J : virtualinvoke r52.<org.apache.log4j.RollingFileAppender: void setMaxBackupIndex(int)>(10)
crystal.util.LSMRLogger.startLog4J : $r29 = new org.apache.log4j.PatternLayout
crystal.util.LSMRLogger.startLog4J : $r46 = new org.apache.log4j.RollingFileAppender
crystal.util.LSMRLogger.startLog4J : virtualinvoke r25.<org.apache.log4j.RollingFileAppender: void setMaxFileSize(java.lang.String)>("10MB")
crystal.util.LSMRLogger.startLog4J : $r26 = new org.apache.log4j.xml.XMLLayout
crystal.util.LSMRLogger.startLog4J : if z1 == 0 goto $r28 = new org.apache.log4j.xml.XMLLayout
crystal.util.LSMRLogger.startLog4J : if r1 == null goto (branch)
crystal.util.LSMRLogger.startLog4J : $r5 = <org.apache.log4j.Level: org.apache.log4j.Level ERROR>
crystal.util.LSMRLogger.startLog4J : staticinvoke <org.apache.log4j.BasicConfigurator: void configure()>()
crystal.client.ClientPreferences.addProjectPreferences : $r17 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.addProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.savePreferencesToXML : staticinvoke <crystal.util.XMLTools: boolean writeXMLDocument(org.jdom.Document,java.lang.String)>(r2, r1)
crystal.client.ClientPreferences.savePreferencesToXML : $r14 = new org.jdom.Element
crystal.client.ClientPreferences.savePreferencesToXML : $r22 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] TMP_DIR>
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>(r4)
crystal.client.ClientPreferences.savePreferencesToXML : $r16 = new org.jdom.Comment
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r6)
crystal.client.ClientPreferences.savePreferencesToXML : $r26 = <crystal.client.ClientPreferences$IPrefXML: java.lang.String[] REFRESH>
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r7)
crystal.client.ClientPreferences.savePreferencesToXML : virtualinvoke r2.<org.jdom.Document: org.jdom.Document addContent(org.jdom.Content)>(r5)
crystal.client.ClientPreferences.savePreferencesToXML : $r18 = new org.jdom.Comment
crystal.client.ClientPreferences.savePreferencesToXML : $r17 = new org.jdom.Comment
crystal.client.ClientPreferences.savePreferencesToXML : r2 = staticinvoke <crystal.util.XMLTools: org.jdom.Document newXMLDocument()>()
crystal.client.ClientPreferences.savePreferencesToXML : $r31 = virtualinvoke r0.<crystal.client.ClientPreferences: java.util.Collection getProjectPreference()>()
crystal.client.ConflictSystemTray.startLogging : $r0 = <crystal.Constants: org.apache.log4j.Level LOG_LEVEL>
crystal.client.ClientPreferences.getRefresh : $l0 = r0.<crystal.client.ClientPreferences: long _refresh>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null goto $r2 = new java.lang.IllegalArgumentException
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.util.XMLTools.writeXMLDocument : $r5 = new java.io.FileOutputStream
crystal.util.XMLTools.writeXMLDocument : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.util.XMLTools.writeXMLDocument : if r0 != null goto l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.client.ProjectPreferences.addDataSource : $r5 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.addDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.addDataSource : $r7 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPreferences.addDataSource : $r18 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.util.XMLTools.newXMLDocument : $r0 = new org.jdom.Document
