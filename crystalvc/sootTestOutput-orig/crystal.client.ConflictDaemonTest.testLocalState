crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ClientPreferences.getTempDirectory : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.model.DataSource.getRemoteCmd : $r1 = r0.<crystal.model.DataSource: java.lang.String _remoteCmd>
crystal.model.DataSource.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
crystal.model.DataSource.equals : if r1 == null goto return 0
crystal.model.DataSource.equals : r2 = (crystal.model.DataSource) r1
crystal.model.DataSource.equals : $r5 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.server.AbstractStateChecker.getLocalState : $r20 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0)
crystal.server.AbstractStateChecker.getLocalState : r12 = <crystal.server.HgLogParser: java.util.Map hgCheckpoint>
crystal.server.AbstractStateChecker.getLocalState : $r10 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r19 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getLocalState : n1 = null
crystal.server.AbstractStateChecker.getLocalState : n0 = null
crystal.server.AbstractStateChecker.getLocalState : $r24 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r2 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind HG>
crystal.server.AbstractStateChecker.getLocalState : $r21 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : r35 = $r34
crystal.server.AbstractStateChecker.getLocalState : $r11 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.server.AbstractStateChecker.getLocalState : $r15 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.server.AbstractStateChecker.getLocalState : $r14 = <crystal.model.DataSource$RepoKind: crystal.model.DataSource$RepoKind HG>
crystal.server.AbstractStateChecker.getLocalState : $r36 = new java.lang.StringBuilder
crystal.util.RunIt.execute : if r1 == null goto $r20 = newarray (java.lang.String)[1]
crystal.util.RunIt.execute : $r18 = new java.io.File
crystal.util.RunIt.execute : $z1 = <crystal.util.RunIt: boolean $assertionsDisabled>
crystal.util.RunIt.execute : $r22 = new java.util.Vector
crystal.util.RunIt.execute : $r13 = new java.lang.ProcessBuilder
crystal.util.RunIt.execute : r6 = r1
crystal.util.RunIt.execute : r34 = virtualinvoke r3.<java.lang.ProcessBuilder: java.lang.Process start()>()
crystal.util.RunIt.execute : virtualinvoke r3.<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.util.List)>(r5)
crystal.util.RunIt.execute : $z3 = <crystal.util.RunIt: boolean $assertionsDisabled>
crystal.util.RunIt.execute : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.util.RunIt.execute : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r7)
crystal.util.RunIt.execute : $r24 = <crystal.util.RunIt: org.apache.log4j.Logger _log>
crystal.util.RunIt.execute : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r0)
crystal.util.RunIt.execute : $r15 = new java.io.File
crystal.model.LocalStateResult.equals : $r5 = r0.<crystal.model.LocalStateResult: crystal.model.DataSource _source>
crystal.model.LocalStateResult.equals : r2 = (crystal.model.LocalStateResult) r1
crystal.model.LocalStateResult.equals : $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10)
crystal.model.LocalStateResult.equals : if r1 == null goto return 0
crystal.model.LocalStateResult.getLastErrorMessage : $r1 = r0.<crystal.model.LocalStateResult: java.lang.String _lastErrorMessage>
crystal.client.ConflictDaemon.getLocalState : return r2
crystal.client.ConflictDaemon.getLocalState : $r4 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.getLocalState : $r6 = new crystal.model.LocalStateResult
crystal.client.ConflictDaemon.getLocalState : $r7 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ConflictDaemon.getLocalState : if r2 != null goto return r2
crystal.client.ConflictDaemon.calculateLocalState : $z0 = r0.<crystal.client.ConflictDaemon: boolean _enabled>
crystal.client.ConflictDaemon.calculateLocalState : r2 = staticinvoke <crystal.server.HgStateChecker: java.lang.String getLocalState(crystal.client.ProjectPreferences)>(r1)
crystal.client.ConflictDaemon.calculateLocalState : if r5 == null goto $r57 = new crystal.model.LocalStateResult
crystal.client.ConflictDaemon.calculateLocalState : return r56
crystal.client.ConflictDaemon.calculateLocalState : if r2 != null goto $r15 = r0.<crystal.client.ConflictDaemon: org.apache.log4j.Logger _log>
crystal.client.ConflictDaemon.calculateLocalState : $r8 = virtualinvoke r3.<crystal.model.DataSource: crystal.model.DataSource$RepoKind getKind()>()
crystal.client.ConflictDaemon.calculateLocalState : $r9 = r0.<crystal.client.ConflictDaemon: org.apache.log4j.Logger _log>
crystal.client.ConflictDaemon.calculateLocalState : r5 = virtualinvoke r0.<crystal.client.ConflictDaemon: crystal.model.LocalStateResult getLocalState(crystal.model.DataSource)>(r3)
crystal.client.ConflictDaemon.calculateLocalState : $r51 = new crystal.model.LocalStateResult
crystal.client.ConflictDaemon.calculateLocalState : r3 = virtualinvoke r1.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ConflictDaemon.calculateLocalState : $r15 = r0.<crystal.client.ConflictDaemon: org.apache.log4j.Logger _log>
crystal.client.ConflictDaemon.calculateLocalState : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.client.ConflictDaemon.calculateLocalState : $r62 = r0.<crystal.client.ConflictDaemon: java.util.Vector _listeners>
crystal.client.ConflictDaemon.calculateLocalState : r2 = null
crystal.client.ConflictDaemon.calculateLocalState : $r43 = r0.<crystal.client.ConflictDaemon: org.apache.log4j.Logger _log>
crystal.client.ConflictDaemon.calculateLocalState : $r59 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.server.AbstractStateChecker.updateLocalRepositoryAndCheckCacheError : r7 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>(class "crystal/server/AbstractStateChecker")
crystal.server.AbstractStateChecker.updateLocalRepositoryAndCheckCacheError : $r35 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.server.AbstractStateChecker.updateLocalRepositoryAndCheckCacheError : $r10 = new java.io.File
crystal.client.ConflictDaemon.getInstance : $r0 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance>
crystal.client.ConflictDaemon.getInstance : $r2 = <crystal.client.ConflictDaemon: crystal.client.ConflictDaemon _instance>
crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind>
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.client.ConflictDaemon.getLocalStates : $r1 = r0.<crystal.client.ConflictDaemon: java.util.Hashtable _localStateMap>
crystal.client.ProjectPreferences.getProjectCheckoutLocation : $r5 = new java.lang.StringBuilder
crystal.client.ProjectPreferences.getProjectCheckoutLocation : $r3 = <java.io.File: java.lang.String separator>
crystal.client.ProjectPreferences.getProjectCheckoutLocation : $r9 = new java.lang.StringBuilder
crystal.client.ProjectPreferences.getProjectCheckoutLocation : $r4 = virtualinvoke r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences getClientPreferences()>()
crystal.util.TimeUtility.msToHumanReadableDelta : l1 = staticinvoke <java.lang.System: long currentTimeMillis()>()
crystal.util.TimeUtility.msToHumanReadableDelta : $l2 = l1 - l0
crystal.client.ClientPreferences.getHgPath : $r1 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.model.DataSource.toString : $r1 = new java.lang.StringBuilder
crystal.model.DataSource.setParent : if r1 == null goto r0.<crystal.model.DataSource: java.lang.String _parent> = null
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.server.HgStateChecker.getLocalState : $r1 = staticinvoke <crystal.server.AbstractStateChecker: java.lang.String getLocalState(crystal.client.ProjectPreferences)>(r0)
crystal.model.LocalStateResult.getLastLocalState : $r1 = r0.<crystal.model.LocalStateResult: java.lang.String _lastState>
crystal.model.LocalStateResult.getLastAction : $r1 = r0.<crystal.model.LocalStateResult: java.lang.String _lastAction>
crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString>
crystal.model.DataSource.isEnabled : $z0 = r0.<crystal.model.DataSource: boolean _enabled>
crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null goto $r2 = new java.lang.IllegalArgumentException
crystal.util.TimeUtility.msToHumanReadable : $r0 = new java.lang.StringBuilder
crystal.util.TimeUtility.msToHumanReadable : $b3 = l0 cmp 1000L
crystal.client.ProjectPreferences.getClientPreferences : $r1 = r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences>
crystal.server.AbstractStateChecker.createLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r0)
crystal.server.AbstractStateChecker.createLocalRepository : $r12 = new java.util.ArrayList
crystal.server.AbstractStateChecker.createLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.createLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.createLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r2)
crystal.server.AbstractStateChecker.createLocalRepository : if r4 == null goto interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r1)
crystal.server.AbstractStateChecker.createLocalRepository : interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>("clone")
crystal.server.AbstractStateChecker.createLocalRepository : $r24 = newarray (java.lang.String)[0]
crystal.server.AbstractStateChecker.createLocalRepository : $r9 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.createLocalRepository : $r17 = new java.lang.StringBuilder
crystal.server.AbstractStateChecker.createLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r2)
crystal.server.AbstractStateChecker.createLocalRepository : staticinvoke <org.junit.Assert: void assertNotNull(java.lang.Object)>(r3)
