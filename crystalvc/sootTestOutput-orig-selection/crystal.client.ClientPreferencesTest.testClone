crystal.client.ClientPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.client.ClientPreferences.clone : r1 = (crystal.client.ClientPreferences) $r5
crystal.client.ClientPreferences.clone : r1 = (crystal.client.ClientPreferences) $r5 >>>>>>>> crystal.client.ClientPreferences.clone : $r6 = new java.util.Vector
crystal.client.ClientPreferences.clone : $r6 = new java.util.Vector >>>>>>>> crystal.client.ClientPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>()
crystal.client.ClientPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>() >>>>>>>> crystal.client.ClientPreferences.clone : r2 = $r6
crystal.client.ClientPreferences.clone : r2 = $r6 >>>>>>>> crystal.client.ClientPreferences.clone : $r7 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.clone : $r7 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.clone : if $z0 == 0
crystal.client.ClientPreferences.clone : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ClientPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ClientPreferences.clone : r4 = (crystal.client.ProjectPreferences) $r8
crystal.client.ClientPreferences.clone : r4 = (crystal.client.ProjectPreferences) $r8 >>>>>>>> crystal.client.ClientPreferences.clone : $r9 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.client.ProjectPreferences clone()>()
crystal.client.ClientPreferences.clone : $r9 = virtualinvoke r4.<crystal.client.ProjectPreferences: crystal.client.ProjectPreferences clone()>() >>>>>>>> crystal.client.ProjectPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.client.ProjectPreferences.clone : $r5 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r1 = (crystal.client.ProjectPreferences) $r5
crystal.client.ProjectPreferences.clone : r1 = (crystal.client.ProjectPreferences) $r5 >>>>>>>> crystal.client.ProjectPreferences.clone : $r6 = new java.util.Vector
crystal.client.ProjectPreferences.clone : $r6 = new java.util.Vector >>>>>>>> crystal.client.ProjectPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>()
crystal.client.ProjectPreferences.clone : specialinvoke $r6.<java.util.Vector: void <init>()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r2 = $r6
crystal.client.ProjectPreferences.clone : r2 = $r6 >>>>>>>> crystal.client.ProjectPreferences.clone : $r7 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.clone : $r7 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ProjectPreferences.clone : r3 = virtualinvoke $r7.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ProjectPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
crystal.client.ProjectPreferences.clone : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ProjectPreferences.clone : if $z0 == 0
crystal.client.ProjectPreferences.clone : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ProjectPreferences.clone : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r4 = (crystal.model.DataSource) $r8
crystal.client.ProjectPreferences.clone : r4 = (crystal.model.DataSource) $r8 >>>>>>>> crystal.client.ProjectPreferences.clone : $r9 = virtualinvoke r4.<crystal.model.DataSource: crystal.model.DataSource clone()>()
crystal.client.ProjectPreferences.clone : $r9 = virtualinvoke r4.<crystal.model.DataSource: crystal.model.DataSource clone()>() >>>>>>>> crystal.model.DataSource.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
crystal.model.DataSource.clone : $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> crystal.model.DataSource.clone : r1 = (crystal.model.DataSource) $r2
crystal.model.DataSource.clone : r1 = (crystal.model.DataSource) $r2 >>>>>>>> crystal.model.DataSource.clone : $r3 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _history>
crystal.model.DataSource.clone : $r3 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _history> >>>>>>>> crystal.model.DataSource.clone : if $r3 == null
crystal.model.DataSource.clone : if $r3 == null >>>>>>>> crystal.model.DataSource.clone : $r6 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _oldHistory>
crystal.model.DataSource.clone : $r6 = r0.<crystal.model.DataSource: crystal.model.RevisionHistory _oldHistory> >>>>>>>> crystal.model.DataSource.clone : if $r6 == null
crystal.model.DataSource.clone : if $r6 == null >>>>>>>> crystal.model.DataSource.clone : return r1
crystal.model.DataSource.clone : return r1 >>>>>>>> crystal.client.ProjectPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9)
crystal.client.ProjectPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9) >>>>>>>> crystal.client.ProjectPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> = r2
crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> = r2 >>>>>>>> crystal.client.ProjectPreferences.clone : $r10 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.clone : $r10 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.clone : $r11 = virtualinvoke $r10.<crystal.model.DataSource: crystal.model.DataSource clone()>()
crystal.client.ProjectPreferences.clone : $r11 = virtualinvoke $r10.<crystal.model.DataSource: crystal.model.DataSource clone()>() >>>>>>>> crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> = $r11
crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> = $r11 >>>>>>>> crystal.client.ProjectPreferences.clone : $r12 = r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences>
crystal.client.ProjectPreferences.clone : $r12 = r0.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences> >>>>>>>> crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences> = $r12
crystal.client.ProjectPreferences.clone : r1.<crystal.client.ProjectPreferences: crystal.client.ClientPreferences _clientPreferences> = $r12 >>>>>>>> crystal.client.ProjectPreferences.clone : return r1
crystal.client.ProjectPreferences.clone : return r1 >>>>>>>> crystal.client.ClientPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9)
crystal.client.ClientPreferences.clone : virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r9) >>>>>>>> crystal.client.ClientPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ClientPreferences.clone : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ClientPreferences.clone : r1.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> = r2
crystal.client.ClientPreferences.clone : r1.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> = r2 >>>>>>>> crystal.client.ClientPreferences.clone : return r1
crystal.client.ClientPreferences.clone : return r1 >>>>>>>> crystal.client.ClientPreferences.equals : if r1 == null
crystal.client.ClientPreferences.equals : if r1 == null >>>>>>>> crystal.client.ClientPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ClientPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ClientPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ClientPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ClientPreferences.equals : if $r3 != $r4
crystal.client.ClientPreferences.equals : if $r3 != $r4 >>>>>>>> crystal.client.ClientPreferences.equals : r2 = (crystal.client.ClientPreferences) r1
crystal.client.ClientPreferences.equals : r2 = (crystal.client.ClientPreferences) r1 >>>>>>>> crystal.client.ClientPreferences.equals : $r5 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.equals : $r5 = r0.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.equals : $r6 = r2.<crystal.client.ClientPreferences: java.lang.String _tempDirectory>
crystal.client.ClientPreferences.equals : $r6 = r2.<crystal.client.ClientPreferences: java.lang.String _tempDirectory> >>>>>>>> crystal.client.ClientPreferences.equals : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6)
crystal.client.ClientPreferences.equals : $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6) >>>>>>>> crystal.client.ClientPreferences.equals : if $z0 == 0
crystal.client.ClientPreferences.equals : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.equals : $r7 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.client.ClientPreferences.equals : $r7 = r0.<crystal.client.ClientPreferences: java.lang.String _hgPath> >>>>>>>> crystal.client.ClientPreferences.equals : $r8 = r2.<crystal.client.ClientPreferences: java.lang.String _hgPath>
crystal.client.ClientPreferences.equals : $r8 = r2.<crystal.client.ClientPreferences: java.lang.String _hgPath> >>>>>>>> crystal.client.ClientPreferences.equals : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
crystal.client.ClientPreferences.equals : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> crystal.client.ClientPreferences.equals : if $z1 == 0
crystal.client.ClientPreferences.equals : if $z1 == 0 >>>>>>>> crystal.client.ClientPreferences.equals : $l0 = r0.<crystal.client.ClientPreferences: long _refresh>
crystal.client.ClientPreferences.equals : $l0 = r0.<crystal.client.ClientPreferences: long _refresh> >>>>>>>> crystal.client.ClientPreferences.equals : $l1 = r2.<crystal.client.ClientPreferences: long _refresh>
crystal.client.ClientPreferences.equals : $l1 = r2.<crystal.client.ClientPreferences: long _refresh> >>>>>>>> crystal.client.ClientPreferences.equals : $b2 = $l0 cmp $l1
crystal.client.ClientPreferences.equals : $b2 = $l0 cmp $l1 >>>>>>>> crystal.client.ClientPreferences.equals : if $b2 != 0
crystal.client.ClientPreferences.equals : if $b2 != 0 >>>>>>>> crystal.client.ClientPreferences.equals : $r9 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.equals : $r9 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.equals : $r10 = r2.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.equals : $r10 = r2.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.equals : $z2 = virtualinvoke $r9.<java.util.Vector: boolean equals(java.lang.Object)>($r10)
crystal.client.ClientPreferences.equals : $z2 = virtualinvoke $r9.<java.util.Vector: boolean equals(java.lang.Object)>($r10) >>>>>>>> crystal.client.ProjectPreferences.equals : if r1 == null
crystal.client.ProjectPreferences.equals : if r1 == null >>>>>>>> crystal.client.ProjectPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ProjectPreferences.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ProjectPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
crystal.client.ProjectPreferences.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.client.ProjectPreferences.equals : if $r3 != $r4
crystal.client.ProjectPreferences.equals : if $r3 != $r4 >>>>>>>> crystal.client.ProjectPreferences.equals : r2 = (crystal.client.ProjectPreferences) r1
crystal.client.ProjectPreferences.equals : r2 = (crystal.client.ProjectPreferences) r1 >>>>>>>> crystal.client.ProjectPreferences.equals : $r5 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.equals : $r5 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.equals : $r6 = r2.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.equals : $r6 = r2.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.equals : $z0 = virtualinvoke $r5.<crystal.model.DataSource: boolean equals(java.lang.Object)>($r6)
crystal.client.ProjectPreferences.equals : $z0 = virtualinvoke $r5.<crystal.model.DataSource: boolean equals(java.lang.Object)>($r6) >>>>>>>> crystal.model.DataSource.equals : if r1 == null
crystal.model.DataSource.equals : if r1 == null >>>>>>>> crystal.model.DataSource.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
crystal.model.DataSource.equals : $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.model.DataSource.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()
crystal.model.DataSource.equals : $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> crystal.model.DataSource.equals : if $r3 != $r4
crystal.model.DataSource.equals : if $r3 != $r4 >>>>>>>> crystal.model.DataSource.equals : r2 = (crystal.model.DataSource) r1
crystal.model.DataSource.equals : r2 = (crystal.model.DataSource) r1 >>>>>>>> crystal.model.DataSource.equals : $r5 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.equals : $r5 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.equals : if $r5 != null
crystal.model.DataSource.equals : if $r5 != null >>>>>>>> crystal.model.DataSource.equals : $r7 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.equals : $r7 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.equals : $r8 = r2.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.equals : $r8 = r2.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
crystal.model.DataSource.equals : $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> crystal.model.DataSource.equals : if $z0 == 0
crystal.model.DataSource.equals : if $z0 == 0 >>>>>>>> crystal.model.DataSource.equals : $z1 = 1
crystal.model.DataSource.equals : $z1 = 1 >>>>>>>> crystal.model.DataSource.equals : goto [?= return $z1]
crystal.model.DataSource.equals : goto [?= return $z1] >>>>>>>> crystal.model.DataSource.equals : return $z1
crystal.model.DataSource.equals : return $z1 >>>>>>>> crystal.client.ProjectPreferences.equals : return $z0
crystal.client.ProjectPreferences.equals : return $z0 >>>>>>>> crystal.client.ClientPreferences.equals : if $z2 == 0
crystal.client.ClientPreferences.equals : if $z2 == 0 >>>>>>>> crystal.client.ClientPreferences.equals : $z3 = 1
crystal.client.ClientPreferences.equals : $z3 = 1 >>>>>>>> crystal.client.ClientPreferences.equals : goto [?= return $z3]
crystal.client.ClientPreferences.equals : goto [?= return $z3] >>>>>>>> crystal.client.ClientPreferences.equals : return $z3
crystal.client.ClientPreferences.equals : return $z3 >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : return $r1
crystal.client.ClientPreferences.getProjectPreference : return $r1 >>>>>>>> crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.getEnvironment : return $r1
crystal.client.ProjectPreferences.getEnvironment : return $r1 >>>>>>>> crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.getShortName : return $r1
crystal.model.DataSource.getShortName : return $r1 >>>>>>>> crystal.model.DataSource.setShortName : staticinvoke <crystal.util.ValidInputChecker: void checkValidStringInput(java.lang.String)>(r1)
crystal.model.DataSource.setShortName : staticinvoke <crystal.util.ValidInputChecker: void checkValidStringInput(java.lang.String)>(r1) >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null
crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.model.DataSource.setShortName : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(32, 95)
crystal.model.DataSource.setShortName : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(32, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(92, 95)
crystal.model.DataSource.setShortName : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(92, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, 95)
crystal.model.DataSource.setShortName : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(58, 95)
crystal.model.DataSource.setShortName : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(58, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(59, 95)
crystal.model.DataSource.setShortName : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(59, 95) >>>>>>>> crystal.model.DataSource.setShortName : r0.<crystal.model.DataSource: java.lang.String _shortName> = $r6
crystal.model.DataSource.setShortName : r0.<crystal.model.DataSource: java.lang.String _shortName> = $r6 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.getProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.getProjectPreferences : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : if $z0 == 0
crystal.client.ClientPreferences.getProjectPreferences : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ClientPreferences.getProjectPreferences : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : r3 = (crystal.client.ProjectPreferences) $r6
crystal.client.ClientPreferences.getProjectPreferences : r3 = (crystal.client.ProjectPreferences) $r6 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r7 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ClientPreferences.getProjectPreferences : $r7 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $r8 = virtualinvoke $r7.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ClientPreferences.getProjectPreferences : $r8 = virtualinvoke $r7.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1)
crystal.client.ClientPreferences.getProjectPreferences : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : if $z1 == 0
crystal.client.ClientPreferences.getProjectPreferences : if $z1 == 0 >>>>>>>> crystal.client.ClientPreferences.getProjectPreferences : return r3
