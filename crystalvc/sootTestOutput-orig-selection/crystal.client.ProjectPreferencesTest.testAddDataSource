crystal.model.DataSource.setParent : if r1 == null >>>>>>>> crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.model.DataSource.setParent : if $z0 == 0
crystal.model.DataSource.setParent : if $z0 == 0 >>>>>>>> crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1 >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null
crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSources : $r1 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.getDataSources : $r1 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.getDataSources : return $r1
crystal.client.ProjectPreferences.getDataSources : return $r1 >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $r5 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.addDataSource : $r5 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.addDataSource : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ProjectPreferences.addDataSource : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ProjectPreferences.addDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ProjectPreferences.addDataSource : if $z0 == 0
crystal.client.ProjectPreferences.addDataSource : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $r18 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.addDataSource : $r18 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.addDataSource : virtualinvoke $r18.<java.util.Vector: boolean add(java.lang.Object)>(r1)
crystal.client.ProjectPreferences.addDataSource : virtualinvoke $r18.<java.util.Vector: boolean add(java.lang.Object)>(r1) >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ProjectPreferences.addDataSource : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ProjectPreferences.addDataSource : r3 = (crystal.model.DataSource) $r6
crystal.client.ProjectPreferences.addDataSource : r3 = (crystal.model.DataSource) $r6 >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $r7 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPreferences.addDataSource : $r7 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.getShortName : return $r1
crystal.model.DataSource.getShortName : return $r1 >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $r8 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPreferences.addDataSource : $r8 = virtualinvoke r1.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ProjectPreferences.addDataSource : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8)
crystal.client.ProjectPreferences.addDataSource : $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8) >>>>>>>> crystal.client.ProjectPreferences.addDataSource : if $z1 == 0
crystal.client.ProjectPreferences.addDataSource : if $z1 == 0 >>>>>>>> crystal.client.ProjectPreferences.addDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.addDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r4 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources>
crystal.client.ProjectPreferences.getDataSource : $r4 = r0.<crystal.client.ProjectPreferences: java.util.Vector _dataSources> >>>>>>>> crystal.client.ProjectPreferences.getDataSource : r2 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ProjectPreferences.getDataSource : r2 = virtualinvoke $r4.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ProjectPreferences.getDataSource : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : if $z0 == 0
crystal.client.ProjectPreferences.getDataSource : if $z0 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ProjectPreferences.getDataSource : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : r3 = (crystal.model.DataSource) $r5
crystal.client.ProjectPreferences.getDataSource : r3 = (crystal.model.DataSource) $r5 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r6 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ProjectPreferences.getDataSource : $r6 = virtualinvoke r3.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>()
crystal.client.ProjectPreferences.getDataSource : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>()
crystal.client.ProjectPreferences.getDataSource : $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
crystal.client.ProjectPreferences.getDataSource : $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>()
crystal.client.ProjectPreferences.getDataSource : $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.client.ProjectPreferences.getDataSource : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10)
crystal.client.ProjectPreferences.getDataSource : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10) >>>>>>>> crystal.client.ProjectPreferences.getDataSource : if $z1 == 0
crystal.client.ProjectPreferences.getDataSource : if $z1 == 0 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : return r3
crystal.client.ProjectPreferences.getDataSource : return r3 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
crystal.client.ProjectPreferences.getDataSource : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> crystal.model.DataSource.setShortName : staticinvoke <crystal.util.ValidInputChecker: void checkValidStringInput(java.lang.String)>(r1)
crystal.model.DataSource.setShortName : staticinvoke <crystal.util.ValidInputChecker: void checkValidStringInput(java.lang.String)>(r1) >>>>>>>> crystal.model.DataSource.setShortName : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(32, 95)
crystal.model.DataSource.setShortName : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(32, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(92, 95)
crystal.model.DataSource.setShortName : $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(92, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, 95)
crystal.model.DataSource.setShortName : $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(47, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(58, 95)
crystal.model.DataSource.setShortName : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(58, 95) >>>>>>>> crystal.model.DataSource.setShortName : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(59, 95)
crystal.model.DataSource.setShortName : $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>(59, 95) >>>>>>>> crystal.model.DataSource.setShortName : r0.<crystal.model.DataSource: java.lang.String _shortName> = $r6
crystal.model.DataSource.setShortName : r0.<crystal.model.DataSource: java.lang.String _shortName> = $r6 >>>>>>>> crystal.client.ProjectPreferences.getDataSource : return null
crystal.client.ProjectPreferences.getDataSource : return null >>>>>>>> crystal.model.DataSource.toString : $r1 = new java.lang.StringBuilder
crystal.model.DataSource.toString : $r1 = new java.lang.StringBuilder >>>>>>>> crystal.model.DataSource.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
crystal.model.DataSource.toString : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.model.DataSource.toString : $r2 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.model.DataSource.toString : $r2 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.model.DataSource.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)
crystal.model.DataSource.toString : $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) >>>>>>>> crystal.model.DataSource.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
crystal.model.DataSource.toString : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> crystal.model.DataSource.toString : $r5 = virtualinvoke r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind getKind()>()
crystal.model.DataSource.toString : $r5 = virtualinvoke r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind getKind()>() >>>>>>>> crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind>
crystal.model.DataSource.getKind : $r1 = r0.<crystal.model.DataSource: crystal.model.DataSource$RepoKind _repoKind> >>>>>>>> crystal.model.DataSource.getKind : return $r1
crystal.model.DataSource.getKind : return $r1 >>>>>>>> crystal.model.DataSource.toString : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)
crystal.model.DataSource.toString : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5) >>>>>>>> crystal.model.DataSource.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_")
crystal.model.DataSource.toString : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_") >>>>>>>> crystal.model.DataSource.toString : $r8 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getCloneString()>()
crystal.model.DataSource.toString : $r8 = virtualinvoke r0.<crystal.model.DataSource: java.lang.String getCloneString()>() >>>>>>>> crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString>
crystal.model.DataSource.getCloneString : $r1 = r0.<crystal.model.DataSource: java.lang.String _cloneString> >>>>>>>> crystal.model.DataSource.getCloneString : return $r1
crystal.model.DataSource.getCloneString : return $r1 >>>>>>>> crystal.model.DataSource.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
crystal.model.DataSource.toString : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> crystal.model.DataSource.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.model.DataSource.toString : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.model.DataSource.toString : return $r10
