crystal.server.HgLogParser.parseLog : $r1 = <crystal.server.HgLogParser: java.util.Map hgCheckpoint> >>>>>>>> crystal.server.HgLogParser.parseLog : $r2 = staticinvoke <crystal.server.HgLogParser: java.util.HashMap abstractParseLog(java.lang.String,java.util.Map)>(r0, $r1)
crystal.server.HgLogParser.parseLog : $r2 = staticinvoke <crystal.server.HgLogParser: java.util.HashMap abstractParseLog(java.lang.String,java.util.Map)>(r0, $r1) >>>>>>>> crystal.server.AbstractLogParser.abstractParseLog : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r0)
crystal.server.AbstractLogParser.abstractParseLog : staticinvoke <crystal.util.ValidInputChecker: void checkNullInput(java.lang.Object)>(r0) >>>>>>>> crystal.util.ValidInputChecker.checkNullInput : if r0 != null
crystal.util.ValidInputChecker.checkNullInput : if r0 != null >>>>>>>> crystal.util.ValidInputChecker.checkNullInput : $r1 = new java.lang.IllegalArgumentException
crystal.util.ValidInputChecker.checkNullInput : $r1 = new java.lang.IllegalArgumentException >>>>>>>> crystal.util.ValidInputChecker.checkNullInput : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null input")
crystal.util.ValidInputChecker.checkNullInput : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null input") >>>>>>>> crystal.util.ValidInputChecker.checkNullInput : throw $r1
