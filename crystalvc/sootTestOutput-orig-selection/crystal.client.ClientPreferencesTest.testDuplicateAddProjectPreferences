crystal.util.ValidInputChecker.checkValidStringInput : if r0 == null >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()
crystal.util.ValidInputChecker.checkValidStringInput : $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.util.ValidInputChecker.checkValidStringInput : $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0
crystal.util.ValidInputChecker.checkValidStringInput : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.getProjectPreference : $r1 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.getProjectPreference : return $r1
crystal.client.ClientPreferences.getProjectPreference : return $r1 >>>>>>>> crystal.model.DataSource.setParent : if r1 == null
crystal.model.DataSource.setParent : if r1 == null >>>>>>>> crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
crystal.model.DataSource.setParent : $r2 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("")
crystal.model.DataSource.setParent : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> crystal.model.DataSource.setParent : if $z0 == 0
crystal.model.DataSource.setParent : if $z0 == 0 >>>>>>>> crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1
crystal.model.DataSource.setParent : r0.<crystal.model.DataSource: java.lang.String _parent> = r1 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.addProjectPreferences : $r5 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>()
crystal.client.ClientPreferences.addProjectPreferences : r2 = virtualinvoke $r5.<java.util.Vector: java.util.Iterator iterator()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
crystal.client.ClientPreferences.addProjectPreferences : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : if $z0 == 0
crystal.client.ClientPreferences.addProjectPreferences : if $z0 == 0 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r17 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences>
crystal.client.ClientPreferences.addProjectPreferences : $r17 = r0.<crystal.client.ClientPreferences: java.util.Vector _projectPreferences> >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : virtualinvoke $r17.<java.util.Vector: boolean add(java.lang.Object)>(r1)
crystal.client.ClientPreferences.addProjectPreferences : virtualinvoke $r17.<java.util.Vector: boolean add(java.lang.Object)>(r1) >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
crystal.client.ClientPreferences.addProjectPreferences : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : r3 = (crystal.client.ProjectPreferences) $r6
crystal.client.ClientPreferences.addProjectPreferences : r3 = (crystal.client.ProjectPreferences) $r6 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r7 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ClientPreferences.addProjectPreferences : $r7 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment>
crystal.client.ProjectPreferences.getEnvironment : $r1 = r0.<crystal.client.ProjectPreferences: crystal.model.DataSource _myEnvironment> >>>>>>>> crystal.client.ProjectPreferences.getEnvironment : return $r1
crystal.client.ProjectPreferences.getEnvironment : return $r1 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r8 = virtualinvoke $r7.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ClientPreferences.addProjectPreferences : $r8 = virtualinvoke $r7.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName>
crystal.model.DataSource.getShortName : $r1 = r0.<crystal.model.DataSource: java.lang.String _shortName> >>>>>>>> crystal.model.DataSource.getShortName : return $r1
crystal.model.DataSource.getShortName : return $r1 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r9 = virtualinvoke r1.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ClientPreferences.addProjectPreferences : $r9 = virtualinvoke r1.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r10 = virtualinvoke $r9.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ClientPreferences.addProjectPreferences : $r10 = virtualinvoke $r9.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10)
crystal.client.ClientPreferences.addProjectPreferences : $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r10) >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : if $z1 == 0
crystal.client.ClientPreferences.addProjectPreferences : if $z1 == 0 >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r11 = new crystal.client.ClientPreferences$DuplicateProjectNameException
crystal.client.ClientPreferences.addProjectPreferences : $r11 = new crystal.client.ClientPreferences$DuplicateProjectNameException >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r4 = new java.lang.StringBuilder
crystal.client.ClientPreferences.addProjectPreferences : $r4 = new java.lang.StringBuilder >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()
crystal.client.ClientPreferences.addProjectPreferences : specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate project name: ")
crystal.client.ClientPreferences.addProjectPreferences : $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate project name: ") >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r13 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>()
crystal.client.ClientPreferences.addProjectPreferences : $r13 = virtualinvoke r3.<crystal.client.ProjectPreferences: crystal.model.DataSource getEnvironment()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r14 = virtualinvoke $r13.<crystal.model.DataSource: java.lang.String getShortName()>()
crystal.client.ClientPreferences.addProjectPreferences : $r14 = virtualinvoke $r13.<crystal.model.DataSource: java.lang.String getShortName()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
crystal.client.ClientPreferences.addProjectPreferences : $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()
crystal.client.ClientPreferences.addProjectPreferences : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : specialinvoke $r11.<crystal.client.ClientPreferences$DuplicateProjectNameException: void <init>(java.lang.String)>($r16)
crystal.client.ClientPreferences.addProjectPreferences : specialinvoke $r11.<crystal.client.ClientPreferences$DuplicateProjectNameException: void <init>(java.lang.String)>($r16) >>>>>>>> crystal.client.ClientPreferences.addProjectPreferences : throw $r11
