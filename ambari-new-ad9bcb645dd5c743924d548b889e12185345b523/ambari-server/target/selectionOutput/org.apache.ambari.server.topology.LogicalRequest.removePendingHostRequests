org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r6 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r6 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r21 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r21 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z0 == 0
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r19 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 != null
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 != null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r18 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 != null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r7 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r7 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r7.<java.util.Collection: boolean removeAll(java.util.Collection)>($r5)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r7.<java.util.Collection: boolean removeAll(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r8 = new java.util.ArrayList
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r8 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r9 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r9 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r24 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r24 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z9 == 0
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z9 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r14 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z9 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r11 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r11 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r12.<java.util.Set: boolean removeAll(java.util.Collection)>($r8)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r12.<java.util.Set: boolean removeAll(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r13 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r13 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection allHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r13.<java.util.Collection: boolean removeAll(java.util.Collection)>($r5)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r13.<java.util.Collection: boolean removeAll(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : return $r5
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r14 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r3 = (java.lang.String) $r14
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r3 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r15 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts>
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r15 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Map requestsWithReservedHosts> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r4 = (org.apache.ambari.server.topology.HostRequest) $r16
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r4 = (org.apache.ambari.server.topology.HostRequest) $r16 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 == null
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r17 = virtualinvoke r4.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r3)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r17 = virtualinvoke r4.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z6 == 0
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z6 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r18 = r0.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection outstandingHostRequests> >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r18.<java.util.Collection: void clear()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r18.<java.util.Collection: void clear()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $r8 = new java.util.ArrayList]
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $r8 = new java.util.ArrayList] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r8 = new java.util.ArrayList
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r19 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r22 = (org.apache.ambari.server.topology.HostRequest) $r19
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : r22 = (org.apache.ambari.server.topology.HostRequest) $r19 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 == null
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r20 = virtualinvoke r22.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if r1 == null >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r22)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r22) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $r20 = virtualinvoke r22.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r1)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : $z8 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z8 == 0
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>(r22)
org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : if $z8 == 0 >>>>>>>> org.apache.ambari.server.topology.LogicalRequest.removePendingHostRequests : goto [?= $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>()]
