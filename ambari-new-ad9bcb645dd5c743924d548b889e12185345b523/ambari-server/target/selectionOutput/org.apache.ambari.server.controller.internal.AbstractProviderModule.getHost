org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r7 = null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r3 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r7 = null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r6 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in getting host info for jmx metrics: ", $r5)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in getting host info for jmx metrics: ", $r5) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : return r7
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r3 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r3 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r8 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r8 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : if r8 == null
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r8 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r7 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : goto [?= return r7]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : if r8 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : goto [?= return r7] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : return r7
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r7 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : goto [?= return r7]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : r7 = interfaceinvoke r8.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHost : $r5 := @caughtexception
