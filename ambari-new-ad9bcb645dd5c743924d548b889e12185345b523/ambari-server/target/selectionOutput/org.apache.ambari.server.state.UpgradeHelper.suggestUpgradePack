org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r12 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider m_clusters> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r13 = interfaceinvoke $r12.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r13 = interfaceinvoke $r12.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r14 = (org.apache.ambari.server.state.Clusters) $r13
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r14 = (org.apache.ambari.server.state.Clusters) $r13 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r7 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r7 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r8 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r38 = r3
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r38 = r3 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z0 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isDowngrade()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z0 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isDowngrade()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z0 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r38 = r2
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r15 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider m_ambariMetaInfoProvider>
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r15 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider m_ambariMetaInfoProvider> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r16 = interfaceinvoke $r15.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r16 = interfaceinvoke $r15.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r17 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r16
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r17 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r16 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r19 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r19 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r9 = virtualinvoke $r17.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>($r18, $r19)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r9 = virtualinvoke $r17.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getUpgradePacks(java.lang.String,java.lang.String)>($r18, $r19) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r39 = null
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r39 = null >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r6)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z1 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z4 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r25 = interfaceinvoke r9.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r20 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : return r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r20 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r22 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r22 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21[0] = $r22
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r23 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r23 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21[1] = $r23
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21[1] = $r23 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21[2] = r38
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r21[2] = r38 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Could not locate %s upgrade pack for stack %s", $r21)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Could not locate %s upgrade pack for stack %s", $r21) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : throw $r20
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r25 = interfaceinvoke r9.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r10 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r10 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z2 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r26 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r26 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r11 = (org.apache.ambari.server.state.stack.UpgradePack) $r26
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r11 = (org.apache.ambari.server.state.stack.UpgradePack) $r26 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r27 = virtualinvoke r11.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r27 = virtualinvoke r11.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == $r27
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == $r27 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r28 = virtualinvoke r11.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null == $r27 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r28 = virtualinvoke r11.<org.apache.ambari.server.state.stack.UpgradePack: java.lang.String getTargetStack()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r29 = virtualinvoke r38.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r29 = virtualinvoke r38.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r28, $r29)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r28, $r29) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z3 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r30 = virtualinvoke r11.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r30 = virtualinvoke r11.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType getType()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r5 != $r30
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r5 != $r30 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if r5 != $r30 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r39 = r11
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r31 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r31 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32 = newarray (java.lang.Object)[3]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r33 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r33 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(0) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32[0] = $r33
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32[0] = $r33 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r34 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r34 = virtualinvoke r5.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32[1] = $r34
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32[1] = $r34 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32[2] = r38
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r32[2] = r38 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Found multiple upgrade packs for type %s and stack %s", $r32)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to perform %s. Found multiple upgrade packs for type %s and stack %s", $r32) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r31.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r35)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : specialinvoke $r31.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : throw $r31
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r39 = r11 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : goto [?= $z2 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $z4 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z4 == 0
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r36 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r36 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r39 = (org.apache.ambari.server.state.stack.UpgradePack) $r36
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r39 = (org.apache.ambari.server.state.stack.UpgradePack) $r36 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r37 = <org.apache.ambari.server.state.UpgradeHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r37 = <org.apache.ambari.server.state.UpgradeHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Upgrade pack \'{}\' not found for stack {}", r6, r8)
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Upgrade pack \'{}\' not found for stack {}", r6, r8) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : if null != r39
org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : r38 = r2 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.suggestUpgradePack : $r15 = r0.<org.apache.ambari.server.state.UpgradeHelper: com.google.inject.Provider m_ambariMetaInfoProvider>
