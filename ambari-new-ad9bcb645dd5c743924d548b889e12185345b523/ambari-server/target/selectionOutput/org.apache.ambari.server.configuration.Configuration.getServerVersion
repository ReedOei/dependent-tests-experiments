org.apache.ambari.server.configuration.Configuration.getServerVersion : $r2 = new java.io.File >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerVersionFilePath()>()
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r2 = new java.io.File >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r6 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r7 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to read server version file", $r6)
org.apache.ambari.server.configuration.Configuration.getServerVersion : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Unable to read server version file", $r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : return null
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerVersionFilePath()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3)
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r3 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getServerVersionFilePath()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r6 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getServerVersion : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r2)
org.apache.ambari.server.configuration.Configuration.getServerVersion : specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r6 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>($r2) >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r6 := @caughtexception
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : return $r5
org.apache.ambari.server.configuration.Configuration.getServerVersion : $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.getServerVersion : $r6 := @caughtexception
