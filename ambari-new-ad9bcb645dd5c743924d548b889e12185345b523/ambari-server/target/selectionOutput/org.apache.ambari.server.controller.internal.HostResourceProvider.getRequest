org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if r1 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r19 = new org.apache.ambari.server.controller.HostRequest
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if r1 != null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r6 = new org.apache.ambari.server.controller.HostRequest
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r6 = new org.apache.ambari.server.controller.HostRequest >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r7 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r7 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/cluster_name")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/cluster_name") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r9 = (java.lang.String) $r8
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r9 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : specialinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void <init>(java.lang.String,java.lang.String)>($r7, $r9)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : specialinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void <init>(java.lang.String,java.lang.String)>($r7, $r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/public_host_name")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/public_host_name") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r11 = (java.lang.String) $r10
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setPublicHostName(java.lang.String)>($r11)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setPublicHostName(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/rack_info")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if null == $r12
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if null == $r12 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r20 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/rack_info")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if null == $r12 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r20 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("rack_info")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r20 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r13 = (java.lang.String) $r20
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r13 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r3 = (java.lang.String) $r13
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r3 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setRackInfo(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setRackInfo(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("blueprint")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("blueprint") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r15 = (java.lang.String) $r14
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setBlueprintName(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setBlueprintName(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r16 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_group")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r16 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_group") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r17 = (java.lang.String) $r16
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setHostGroupName(java.lang.String)>($r17)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setHostGroupName(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/maintenance_state")
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/maintenance_state") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if null == r4
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if null == r4 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r18 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : if null == r4 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r5 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.util.List getConfigurationRequests(java.lang.String,java.util.Map)>("Hosts", r1)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r5 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.util.List getConfigurationRequests(java.lang.String,java.util.Map)>("Hosts", r1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setDesiredConfigs(java.util.List)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setDesiredConfigs(java.util.List)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : return $r6
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r18 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setMaintenanceState(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : virtualinvoke $r6.<org.apache.ambari.server.controller.HostRequest: void setMaintenanceState(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : r5 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.util.List getConfigurationRequests(java.lang.String,java.util.Map)>("Hosts", r1)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r20 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Hosts/rack_info") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : goto [?= $r13 = (java.lang.String) $r20]
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : goto [?= $r13 = (java.lang.String) $r20] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r13 = (java.lang.String) $r20
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : $r19 = new org.apache.ambari.server.controller.HostRequest >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : specialinvoke $r19.<org.apache.ambari.server.controller.HostRequest: void <init>(java.lang.String,java.lang.String)>(null, null)
org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : specialinvoke $r19.<org.apache.ambari.server.controller.HostRequest: void <init>(java.lang.String,java.lang.String)>(null, null) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.getRequest : return $r19
