org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : r4 = staticinvoke <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.lang.String generateKey(java.lang.String,java.lang.String)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r6 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: com.google.common.cache.Cache logFileNameCache>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r6 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: com.google.common.cache.Cache logFileNameCache> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r7 = interfaceinvoke $r6.<com.google.common.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>(r4)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r7 = interfaceinvoke $r6.<com.google.common.cache.Cache: java.lang.Object getIfPresent(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : r5 = (java.util.Set) $r7
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : r5 = (java.util.Set) $r7 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if r5 == null
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if r5 == null >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r17 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if r5 == null >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r8 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Map componentRequestFailureCounts>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r8 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Map componentRequestFailureCounts> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $z0 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $z0 == 0
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r13 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Map componentRequestFailureCounts>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r9 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set currentRequests>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r9 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set currentRequests> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $z1 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r4)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $z1 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $z1 == 0
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r12 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r10 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r10 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("LogFileNames result for key = {} not in cache, queueing up remote request", r4)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r10.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("LogFileNames result for key = {} not in cache, queueing up remote request", r4) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r11 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set currentRequests>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r11 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set currentRequests> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : specialinvoke r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: void startLogSearchFileNameRequest(java.lang.String,java.lang.String,java.lang.String)>(r2, r1, r3)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : specialinvoke r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: void startLogSearchFileNameRequest(java.lang.String,java.lang.String,java.lang.String)>(r2, r1, r3) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : goto [?= return null]
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : goto [?= return null] >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : return null
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r12 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("LogFileNames request has been made for key = {}, but not completed yet", r4)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("LogFileNames request has been made for key = {}, but not completed yet", r4) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : goto [?= return null]
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : goto [?= return null] >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : return null
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r13 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Map componentRequestFailureCounts> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r15 = (java.util.concurrent.atomic.AtomicInteger) $r14
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r15 = (java.util.concurrent.atomic.AtomicInteger) $r14 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $i0 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicInteger: int get()>()
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $i0 = virtualinvoke $r15.<java.util.concurrent.atomic.AtomicInteger: int get()>() >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $i1 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: int MAX_RETRIES_FOR_FAILED_METADATA_REQUEST>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $i1 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: int MAX_RETRIES_FOR_FAILED_METADATA_REQUEST> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $i0 >= $i1
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r9 = r0.<org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: java.util.Set currentRequests>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r16 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r16 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Too many failures occurred while attempting to obtain log file metadata for component = {}, Ambari will ignore this component for LogSearch Integration", r1)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Too many failures occurred while attempting to obtain log file metadata for component = {}, Ambari will ignore this component for LogSearch Integration", r1) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : return null
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : $r17 = <org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("LogFileNames result for key = {} found in cache", r4)
org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : interfaceinvoke $r17.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("LogFileNames result for key = {} found in cache", r4) >>>>>>>> org.apache.ambari.server.controller.logging.LogSearchDataRetrievalService.getLogFileNames : return r5
