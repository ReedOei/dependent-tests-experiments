org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r4 = r0.<org.apache.ambari.server.state.alert.MetricSource$JmxInfo: java.util.List propertyList> >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.jmx.JMXMetricHolder: java.util.List findAll(java.util.List)>($r4)
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.jmx.JMXMetricHolder: java.util.List findAll(java.util.List)>($r4) >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : if $z0 == 0
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r7 = staticinvoke <java.util.Optional: java.util.Optional empty()>()
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.alert.MetricSource$JmxInfo: org.apache.ambari.server.state.alert.MetricSource$Value getValue()>()
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.alert.MetricSource$JmxInfo: org.apache.ambari.server.state.alert.MetricSource$Value getValue()>() >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : r3 = virtualinvoke $r5.<org.apache.ambari.server.state.alert.MetricSource$Value: java.lang.Object eval(java.util.List)>(r2)
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : r3 = virtualinvoke $r5.<org.apache.ambari.server.state.alert.MetricSource$Value: java.lang.Object eval(java.util.List)>(r2) >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $z1 = r3 instanceof java.lang.Number
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $z1 = r3 instanceof java.lang.Number >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : if $z1 == 0
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r6 = (java.lang.Number) r3
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r8 = staticinvoke <java.util.Optional: java.util.Optional empty()>()
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r8 = staticinvoke <java.util.Optional: java.util.Optional empty()>() >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : return $r8
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r6 = (java.lang.Number) r3 >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r8 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>($r6)
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r8 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : goto [?= return $r8]
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : goto [?= return $r8] >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : return $r8
org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : $r7 = staticinvoke <java.util.Optional: java.util.Optional empty()>() >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$JmxInfo.eval : return $r7
