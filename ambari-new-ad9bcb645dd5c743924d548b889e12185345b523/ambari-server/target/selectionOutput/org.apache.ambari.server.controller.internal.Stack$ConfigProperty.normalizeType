org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".xml") >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i0 = virtualinvoke r1.<java.lang.String: int length()>()
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i0 = virtualinvoke r1.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i1 = $i0 - 4
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : $i1 = $i0 - 4 >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.ambari.server.controller.internal.Stack$ConfigProperty.normalizeType : return r1
