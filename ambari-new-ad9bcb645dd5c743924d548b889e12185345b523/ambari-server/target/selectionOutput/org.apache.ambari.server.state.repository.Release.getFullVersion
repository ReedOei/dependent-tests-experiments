org.apache.ambari.server.state.repository.Release.getFullVersion : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r3 = r0.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.state.repository.Release.getFullVersion : $r3 = r0.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)
org.apache.ambari.server.state.repository.Release.getFullVersion : specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r4 = r0.<org.apache.ambari.server.state.repository.Release: java.lang.String build>
org.apache.ambari.server.state.repository.Release.getFullVersion : $r4 = r0.<org.apache.ambari.server.state.repository.Release: java.lang.String build> >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r4)
org.apache.ambari.server.state.repository.Release.getFullVersion : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : if $z0 == 0
org.apache.ambari.server.state.repository.Release.getFullVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)
org.apache.ambari.server.state.repository.Release.getFullVersion : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.repository.Release.getFullVersion : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : return $r5
org.apache.ambari.server.state.repository.Release.getFullVersion : $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45) >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r7 = r0.<org.apache.ambari.server.state.repository.Release: java.lang.String build>
org.apache.ambari.server.state.repository.Release.getFullVersion : $r7 = r0.<org.apache.ambari.server.state.repository.Release: java.lang.String build> >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>($r7)
org.apache.ambari.server.state.repository.Release.getFullVersion : $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String trim(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.state.repository.Release.getFullVersion : virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.state.repository.Release.getFullVersion : $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()
