org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : return $r7
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = (java.lang.String) $r8
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : r6 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED>
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r11 = <org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType: org.apache.ambari.server.upgrade.AbstractUpgradeCatalog$ConfigUpdateType REMOVED> >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r10 = new java.util.AbstractMap$SimpleEntry
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : $r10 = new java.util.AbstractMap$SimpleEntry >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r10.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, "")
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : specialinvoke $r10.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(r6, "") >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r10)
org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : interfaceinvoke r3.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>($r11, $r10) >>>>>>>> org.apache.ambari.server.upgrade.AbstractUpgradeCatalog.removeProperties : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
