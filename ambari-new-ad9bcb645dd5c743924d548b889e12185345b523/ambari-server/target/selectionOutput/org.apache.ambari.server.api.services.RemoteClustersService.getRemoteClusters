org.apache.ambari.server.api.services.RemoteClustersService.getRemoteClusters : $r3 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET> >>>>>>>> org.apache.ambari.server.api.services.RemoteClustersService.getRemoteClusters : $r4 = specialinvoke r0.<org.apache.ambari.server.api.services.RemoteClustersService: org.apache.ambari.server.api.resources.ResourceInstance createRemoteClusterResource(java.lang.String)>(null)
org.apache.ambari.server.api.services.RemoteClustersService.getRemoteClusters : $r4 = specialinvoke r0.<org.apache.ambari.server.api.services.RemoteClustersService: org.apache.ambari.server.api.resources.ResourceInstance createRemoteClusterResource(java.lang.String)>(null) >>>>>>>> org.apache.ambari.server.api.services.RemoteClustersService.getRemoteClusters : $r5 = virtualinvoke r0.<org.apache.ambari.server.api.services.RemoteClustersService: javax.ws.rs.core.Response handleRequest(javax.ws.rs.core.HttpHeaders,java.lang.String,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, null, r2, $r3, $r4)
org.apache.ambari.server.api.services.RemoteClustersService.getRemoteClusters : $r5 = virtualinvoke r0.<org.apache.ambari.server.api.services.RemoteClustersService: javax.ws.rs.core.Response handleRequest(javax.ws.rs.core.HttpHeaders,java.lang.String,javax.ws.rs.core.UriInfo,org.apache.ambari.server.api.services.Request$Type,org.apache.ambari.server.api.resources.ResourceInstance)>(r1, null, r2, $r3, $r4) >>>>>>>> org.apache.ambari.server.api.services.RemoteClustersService.getRemoteClusters : return $r5
