org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r10 = r0.<org.apache.ambari.server.checks.HostsHeartbeatCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r10 = r0.<org.apache.ambari.server.checks.HostsHeartbeatCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r11 = interfaceinvoke $r10.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r11 = interfaceinvoke $r10.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r12 = (org.apache.ambari.server.state.Clusters) $r11
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r12 = (org.apache.ambari.server.state.Clusters) $r11 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r4 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r4 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r6 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $z1 = virtualinvoke $r13.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $z1 = virtualinvoke $r13.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if $z1 != 0
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r14 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : return
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r14 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r14)
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r14) >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r15 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsHeartbeatCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r15 = virtualinvoke r0.<org.apache.ambari.server.checks.HostsHeartbeatCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r15)
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : return
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r16 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r7 = (org.apache.ambari.server.state.Host) $r16
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r7 = (org.apache.ambari.server.state.Host) $r16 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostHealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r8 = virtualinvoke $r17.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r8 = virtualinvoke $r17.<org.apache.ambari.server.state.HostHealthStatus: org.apache.ambari.server.state.HostHealthStatus$HealthStatus getHealthStatus()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $l0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r9 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0)
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : r9 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l0) >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r18 = <org.apache.ambari.server.checks.HostsHeartbeatCheck$1: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus>
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r18 = <org.apache.ambari.server.checks.HostsHeartbeatCheck$1: int[] $SwitchMap$org$apache$ambari$server$state$HostHealthStatus$HealthStatus> >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $i1 = virtualinvoke r8.<org.apache.ambari.server.state.HostHealthStatus$HealthStatus: int ordinal()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $i1 = virtualinvoke r8.<org.apache.ambari.server.state.HostHealthStatus$HealthStatus: int ordinal()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $i2 = $r18[$i1]
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $i2 = $r18[$i1] >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : lookupswitch($i2) {     case 1:
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : lookupswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r19 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : lookupswitch($i2) {     case 1: >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r19 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if r9 != $r19
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if r9 != $r19 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : if r9 != $r19 >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r20 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r21 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : $r21 = interfaceinvoke r7.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : virtualinvoke $r20.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : virtualinvoke $r20.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.HostsHeartbeatCheck.perform : goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
