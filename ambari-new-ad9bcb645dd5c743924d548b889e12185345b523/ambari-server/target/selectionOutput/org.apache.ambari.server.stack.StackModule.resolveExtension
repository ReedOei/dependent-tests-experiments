org.apache.ambari.server.stack.StackModule.resolveExtension : $r5 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.stack.ModuleState getModuleState()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r6 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState INIT>
org.apache.ambari.server.stack.StackModule.resolveExtension : $r6 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState INIT> >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : if $r5 != $r6
org.apache.ambari.server.stack.StackModule.resolveExtension : if $r5 != $r6 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: void resolve(org.apache.ambari.server.stack.ExtensionModule,java.util.Map,java.util.Map,java.util.Map)>(null, r2, r3, r4)
org.apache.ambari.server.stack.StackModule.resolveExtension : if $r5 != $r6 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r7 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.stack.ModuleState getModuleState()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : $r7 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.stack.ModuleState getModuleState()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r8 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED>
org.apache.ambari.server.stack.StackModule.resolveExtension : $r8 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED> >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : if $r7 != $r8
org.apache.ambari.server.stack.StackModule.resolveExtension : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r17 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackModule.resolveExtension : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : if $z0 == 0
org.apache.ambari.server.stack.StackModule.resolveExtension : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r15 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.StackModule: void setValid(boolean)>(0)
org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.StackModule: void setValid(boolean)>(0) >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.resolveExtension : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stack includes an invalid extension: ")
org.apache.ambari.server.stack.StackModule.resolveExtension : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Stack includes an invalid extension: ") >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r11 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : $r11 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r12 = virtualinvoke $r11.<org.apache.ambari.server.state.ExtensionInfo: java.lang.String getName()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : $r12 = virtualinvoke $r11.<org.apache.ambari.server.state.ExtensionInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)
org.apache.ambari.server.stack.StackModule.resolveExtension : $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.StackModule: void addError(java.lang.String)>($r14)
org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.StackModule: void addError(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : return
org.apache.ambari.server.stack.StackModule.resolveExtension : $r15 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : if $r15 == null
org.apache.ambari.server.stack.StackModule.resolveExtension : if $r15 == null >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $r16 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : if $r15 == null >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : return
org.apache.ambari.server.stack.StackModule.resolveExtension : $r16 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $z1 = virtualinvoke $r16.<org.apache.ambari.server.state.ExtensionInfo: boolean isValid()>()
org.apache.ambari.server.stack.StackModule.resolveExtension : $z1 = virtualinvoke $r16.<org.apache.ambari.server.state.ExtensionInfo: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : if $z1 != 0
org.apache.ambari.server.stack.StackModule.resolveExtension : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.StackModule: void setValid(boolean)>(0)
org.apache.ambari.server.stack.StackModule.resolveExtension : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : return
org.apache.ambari.server.stack.StackModule.resolveExtension : $r17 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : specialinvoke $r17.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Cycle detected while parsing extension definition")
org.apache.ambari.server.stack.StackModule.resolveExtension : specialinvoke $r17.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Cycle detected while parsing extension definition") >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : throw $r17
org.apache.ambari.server.stack.StackModule.resolveExtension : virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: void resolve(org.apache.ambari.server.stack.ExtensionModule,java.util.Map,java.util.Map,java.util.Map)>(null, r2, r3, r4) >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : goto [?= $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()]
org.apache.ambari.server.stack.StackModule.resolveExtension : goto [?= $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.resolveExtension : $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()
