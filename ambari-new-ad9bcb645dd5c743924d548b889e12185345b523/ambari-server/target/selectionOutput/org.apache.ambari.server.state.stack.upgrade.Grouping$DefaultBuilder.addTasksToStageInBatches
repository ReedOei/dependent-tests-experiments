org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if r1 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if r1 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z0 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r14 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r15 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r14
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r15 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r16 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r16 = virtualinvoke $r15.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r16 == null
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r16 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r16 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r18 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r17
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r18 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r17 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r19 = virtualinvoke $r18.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r19 = virtualinvoke $r18.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z1 = interfaceinvoke $r19.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z1 = interfaceinvoke $r19.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r20 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r20 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r21 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r20
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r21 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r20 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r22 = virtualinvoke $r21.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r24 = (org.apache.ambari.server.state.stack.upgrade.Task) $r23
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r24 = (org.apache.ambari.server.state.stack.upgrade.Task) $r23 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r7 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r7 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type getStageWrapperType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r8 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : return
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r25 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r9 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r25
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r9 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r25 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r26 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r26 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r27 = $r26.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r27 = $r26.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r27 == null
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r27 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r38 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $r27 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r28 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r28 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r43 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r28, 1)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r43 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r28, 1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i0 = interfaceinvoke r43.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i0 = interfaceinvoke r43.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i3 = 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i3 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r10 = interfaceinvoke r43.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r10 = interfaceinvoke r43.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r29 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r29 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r11 = (java.util.Set) $r29
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r11 = (java.util.Set) $r29 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i3 = i3 + 1
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r30 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r30 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r31 = virtualinvoke r3.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r4, $r30)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r31 = virtualinvoke r3.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>(r4, $r30) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r12 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set,int,int)>(r2, $r31, r11, i3, i0)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r12 = virtualinvoke r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.lang.String getStageText(java.lang.String,java.lang.String,java.util.Set,int,int)>(r2, $r31, r11, i3, i0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r32 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r32 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r33 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r33 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r34 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r34 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r35 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r35 = r5.<org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent: java.lang.String name> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r36 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r36 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r34.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.List)>(r4, $r35, r11, r6, $r36)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r34.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.List)>(r4, $r35, r11, r6, $r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r33[0] = $r34
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r33[0] = $r34 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r32.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,java.util.Map,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>(r7, r12, r6, $r33)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : specialinvoke $r32.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,java.util.Map,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>(r7, r12, r6, $r33) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r37 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r37 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: java.util.List m_stages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r32)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : interfaceinvoke $r37.<java.util.List: boolean add(java.lang.Object)>($r32) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r38 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r39 = $r38.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r39 = $r38.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i1 = $r39.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i1 = $r39.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $i1 <= 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r40 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r28 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r40 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r41 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r41 = r0.<org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder: org.apache.ambari.server.state.stack.upgrade.Grouping m_grouping> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r42 = $r41.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $r42 = $r41.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.ParallelScheduler parallelScheduler> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i2 = $r42.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism>
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : $i2 = $r42.<org.apache.ambari.server.state.stack.upgrade.ParallelScheduler: int maxDegreeOfParallelism> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r43 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r40, $i2)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : r43 = staticinvoke <org.apache.ambari.server.utils.SetUtils: java.util.List split(java.util.Set,int)>($r40, $i2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= i0 = interfaceinvoke r43.<java.util.List: int size()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : goto [?= i0 = interfaceinvoke r43.<java.util.List: int size()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.addTasksToStageInBatches : i0 = interfaceinvoke r43.<java.util.List: int size()>()
