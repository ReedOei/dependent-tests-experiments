org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null != r28 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r21 = new java.util.ArrayList
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null != r28 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r3 = new java.util.HashSet
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r3 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r3.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r3.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r31 = interfaceinvoke r28.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r31 = interfaceinvoke r28.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z1 == 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r6 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r4 = new com.google.common.util.concurrent.ServiceManager
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r4 = new com.google.common.util.concurrent.ServiceManager >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r4.<com.google.common.util.concurrent.ServiceManager: void <init>(java.lang.Iterable)>($r3)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r4.<com.google.common.util.concurrent.ServiceManager: void <init>(java.lang.Iterable)>($r3) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/google/common/util/concurrent/ServiceManager;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r5 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lcom/google/common/util/concurrent/ServiceManager;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r5.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : return r28
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r6 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r1 = (java.lang.Class) $r6
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r1 = (java.lang.Class) $r6 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r7 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/EagerSingleton;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r7 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/EagerSingleton;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r7
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r7 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r7 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r8 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/StaticallyInject;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r8 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/StaticallyInject;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r8
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r8 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r17 = newarray (java.lang.Class)[1]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r8 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r9 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/AmbariService;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r9 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/AmbariService;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r9
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r9 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10 = class "Lcom/google/common/util/concurrent/Service;"
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == $r9 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r10 = class "Lcom/google/common/util/concurrent/Service;" >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $z0 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 != 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r11 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r26 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to register {} as a service", r1, $r25)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to register {} as a service", r1, $r25) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r27 = new java.lang.RuntimeException
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r27 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r25)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r25) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : throw $r27
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r11 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r33 = (com.google.common.util.concurrent.Service) $r11
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r11 = virtualinvoke r1.<java.lang.Class: java.lang.Object newInstance()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r33 = (com.google.common.util.concurrent.Service) $r11 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r33 = (com.google.common.util.concurrent.Service) $r11 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r33)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r33)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r12.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r13 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r33) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r13 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Registering service {} ", r1)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r13 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Registering service {} ", r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= (branch)]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Registering service {} ", r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r25 := @caughtexception
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : goto [?= $z1 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14[0] = r1
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r14[0] = r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r32 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to register service {0} because it is not a Service which can be scheduled", $r14)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r32 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to register service {0} because it is not a Service which can be scheduled", $r14) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r15 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r15 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>(r32)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r16 = new java.lang.RuntimeException
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r16 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(r32)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>(r32) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : throw $r16
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r17 = newarray (java.lang.Class)[1] >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r17[0] = r1
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r17[0] = r1 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: void requestStaticInjection(java.lang.Class[])>($r17)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: void requestStaticInjection(java.lang.Class[])>($r17) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r18 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r18 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Statically injecting {} ", r1)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Statically injecting {} ", r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r9 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/AmbariService;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r19 = virtualinvoke r0.<org.apache.ambari.server.controller.ControllerModule: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void asEagerSingleton()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r19.<com.google.inject.binder.AnnotatedBindingBuilder: void asEagerSingleton()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r20 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r20 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Eagerly binding singleton {}", r1)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Eagerly binding singleton {}", r1) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r8 = virtualinvoke r1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/apache/ambari/server/StaticallyInject;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r21 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r21.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r21.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/EagerSingleton;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/EagerSingleton;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/StaticallyInject;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/StaticallyInject;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/AmbariService;")
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(class "Lorg/apache/ambari/server/AmbariService;") >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r22 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r22 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Searching package {} for annotations matching {}", "org.apache.ambari.server", $r21)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Searching package {} for annotations matching {}", "org.apache.ambari.server", $r21) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r23 = new java.util.ArrayList
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r23 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r23.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : specialinvoke $r23.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r28 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: java.util.Set findOnClassPath(java.lang.String,java.util.List,java.util.List)>("org.apache.ambari.server", $r23, $r21)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : r28 = staticinvoke <org.apache.ambari.server.cleanup.ClasspathScannerUtils: java.util.Set findOnClassPath(java.lang.String,java.util.List,java.util.List)>("org.apache.ambari.server", $r23, $r21) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r28
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r28 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $i0 = interfaceinvoke r28.<java.util.Set: int size()>()
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if null == r28 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r24 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r24 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No instances of {} found to register", $r21)
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No instances of {} found to register", $r21) >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : return r28
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $i0 = interfaceinvoke r28.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i0 != 0
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r24 = <org.apache.ambari.server.controller.ControllerModule: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.ControllerModule.bindByAnnotation : $r3 = new java.util.HashSet
