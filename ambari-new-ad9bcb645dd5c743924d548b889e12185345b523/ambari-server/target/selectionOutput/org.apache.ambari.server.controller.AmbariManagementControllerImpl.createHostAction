org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r13 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r38 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r38 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.Host getHost()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r39 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r39 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r40 = staticinvoke <org.apache.ambari.server.Role: org.apache.ambari.server.Role valueOf(java.lang.String)>($r39)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r40 = staticinvoke <org.apache.ambari.server.Role: org.apache.ambari.server.Role valueOf(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(org.apache.ambari.server.state.Host,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,org.apache.ambari.server.state.Cluster,java.lang.String,boolean,boolean)>($r38, $r40, r7, r9, r1, r13, 0, z0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: void addHostRoleExecutionCommand(org.apache.ambari.server.state.Host,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,org.apache.ambari.server.state.Cluster,java.lang.String,boolean,boolean)>($r38, $r40, r7, r9, r1, r13, 0, z0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r14 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r14 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r15 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r15 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r41 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r41 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r16 = interfaceinvoke $r41.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r15)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r16 = interfaceinvoke $r41.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r17 = interfaceinvoke r16.<org.apache.ambari.server.state.Host: org.apache.ambari.server.orm.entities.HostEntity getHostEntity()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r17 = interfaceinvoke r16.<org.apache.ambari.server.state.Host: org.apache.ambari.server.orm.entities.HostEntity getHostEntity()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r42 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r42 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r43 = virtualinvoke r17.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostAttributes()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r43 = virtualinvoke r17.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostAttributes()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r44 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.reflect.Type hostAttributesType>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r44 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.lang.reflect.Type hostAttributesType> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r45 = virtualinvoke $r42.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r43, $r44)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r45 = virtualinvoke $r42.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>($r43, $r44) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r18 = (java.util.Map) $r45
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r18 = (java.util.Map) $r45 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r19 = interfaceinvoke r16.<org.apache.ambari.server.state.Host: java.lang.String getOSFamilyFromHostAttributes(java.util.Map)>(r18)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r19 = interfaceinvoke r16.<org.apache.ambari.server.state.Host: java.lang.String getOSFamilyFromHostAttributes(java.util.Map)>(r18) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r46 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.ServiceComponent getServiceComponent()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r46 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.ServiceComponent getServiceComponent()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r20 = interfaceinvoke $r46.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r20 = interfaceinvoke $r46.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r47 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r47 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r48 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r48 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r49 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r49 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r21 = virtualinvoke $r47.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r48, $r49, r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r21 = virtualinvoke $r47.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r48, $r49, r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r50 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r50 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r51 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r51 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r52 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r52 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r22 = virtualinvoke $r50.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r51, $r52, r13, r14)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r22 = virtualinvoke $r50.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r51, $r52, r13, r14) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r53 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r53 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r54 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r54 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r55 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r55 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r23 = virtualinvoke $r53.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r54, $r55)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r23 = virtualinvoke $r53.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r54, $r55) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r56 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r56 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r57 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r57 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r58 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r58 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r24 = virtualinvoke $r56.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r57, $r58)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r24 = virtualinvoke $r56.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r57, $r58) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r25 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r15, r14)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r25 = virtualinvoke r2.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper getExecutionCommandWrapper(java.lang.String,java.lang.String)>(r15, r14) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r26 = virtualinvoke r25.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r26 = virtualinvoke r25.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>(r4)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>(r4) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>(r5)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>(r5) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r6)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r6) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z3 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z3 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r59 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setCredentialStoreEnabled(java.lang.String)>($r59)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setCredentialStoreEnabled(java.lang.String)>($r59) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r28 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r14)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r28 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>(r14) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r60 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r60 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r61 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r61 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r62 = interfaceinvoke $r60.<java.util.Map: java.lang.Object get(java.lang.Object)>($r61)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r62 = interfaceinvoke $r60.<java.util.Map: java.lang.Object get(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r181 = (java.util.Map) $r62
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r181 = (java.util.Map) $r62 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r181 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r181 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r170 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r181 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationCredentials(java.util.Map)>(r181)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationCredentials(java.util.Map)>(r181) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r63 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r63 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r63.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r63.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r8 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r8 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: void putAll(java.util.Map)>(r8)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r8 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r64 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r64 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r65 = interfaceinvoke $r64.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r65 = interfaceinvoke $r64.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r182 = interfaceinvoke $r65.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r182 = interfaceinvoke $r65.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z20 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z20 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r163 = interfaceinvoke r182.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z20 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r66 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r66 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z21 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r66)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z21 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r67 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r67 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r186 = virtualinvoke $r67.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultAgentTaskTimeout(boolean)>(z21)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r186 = virtualinvoke $r67.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDefaultAgentTaskTimeout(boolean)>(z21) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r187 = ""
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r187 = "" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r188 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r188 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r68 = virtualinvoke r21.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getSchemaVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r68 = virtualinvoke r21.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getSchemaVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z4 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("2.0")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z4 = virtualinvoke $r68.<java.lang.String: boolean equals(java.lang.Object)>("2.0") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z4 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r188 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z5 = virtualinvoke r187.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z5 = virtualinvoke r187.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z5 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r203 = r187
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r203 = r186
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r203 = r186 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r204 = $r203
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r204 = $r203 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r69 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r69 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z6 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r69)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z6 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: boolean equals(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z6 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z13 = virtualinvoke r186.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r204)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r204) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r205 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCustomFolder()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r205 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCustomFolder()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r205 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r205 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r139 = new java.io.File
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r205 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r207 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r207 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r208 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r208 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper customCommandExecutionHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r209 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String name()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r209 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z24 = virtualinvoke $r208.<org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: boolean isTopologyRefreshRequired(java.lang.String,java.lang.String,java.lang.String)>($r209, r207, r13)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z24 = virtualinvoke $r208.<org.apache.ambari.server.controller.AmbariCustomCommandExecutionHelper: boolean isTopologyRefreshRequired(java.lang.String,java.lang.String,java.lang.String)>($r209, r207, r13) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z24 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z24 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("refresh_topology", "True")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z24 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r71 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r71 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : staticinvoke <org.apache.ambari.server.utils.StageUtils: void useAmbariJdkInCommandParams(java.util.Map,org.apache.ambari.server.configuration.Configuration)>($r63, $r71)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : staticinvoke <org.apache.ambari.server.utils.StageUtils: void useAmbariJdkInCommandParams(java.util.Map,org.apache.ambari.server.configuration.Configuration)>($r63, $r71) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r72 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper repoVersionHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r72 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper repoVersionHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r210 = virtualinvoke $r72.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.lang.String getRepoInfo(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.Host)>(r1, r28, r16)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r72 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper repoVersionHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r179 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r180 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r180.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("", $r179)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r180.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("", $r179) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : throw $r180
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r210 = virtualinvoke $r72.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.lang.String getRepoInfo(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.Host)>(r1, r28, r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r73 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r210 = virtualinvoke $r72.<org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: java.lang.String getRepoInfo(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.state.Host)>(r1, r28, r16) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r179 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r73 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r73 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r73 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z7 = interfaceinvoke $r73.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z7 = interfaceinvoke $r73.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z7 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r135 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r74 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r74 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r74.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r74.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repo_info", r210)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repo_info", r210) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r76 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map getRcaParameters()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r76 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map getRcaParameters()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: void putAll(java.util.Map)>($r76)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: void putAll(java.util.Map)>($r76) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r10
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r10 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r213 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r10 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r215 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>(r21, $r74, r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r10 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r175 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r176 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r176 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r177 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r177 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r176[0] = $r177
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r176[0] = $r177 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r178 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load version xml from repo version %s", $r176)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r178 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not load version xml from repo version %s", $r176) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r175.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r178, $r174)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r175.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r178, $r174) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : throw $r175
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r215 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>(r21, $r74, r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r77 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r77 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r216 = virtualinvoke $r77.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r215)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r216 = virtualinvoke $r77.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r215) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_list", r216)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_list", r216) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r79 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r79 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r80 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r80 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r81 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r81 = virtualinvoke r23.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r217 = virtualinvoke $r79.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getStackProperties(java.lang.String,java.lang.String)>($r80, $r81)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r217 = virtualinvoke $r79.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Set getStackProperties(java.lang.String,java.lang.String)>($r80, $r81) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r83 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r83 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r82 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType USER>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r82 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType USER> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r218 = virtualinvoke $r83.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>($r82, r1, r12, r24, r217)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r218 = virtualinvoke $r83.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>($r82, r1, r12, r24, r217) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r84 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r84 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r219 = virtualinvoke $r84.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r218)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r219 = virtualinvoke $r84.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r218) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user_list", r219)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user_list", r219) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r86 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r86 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r220 = virtualinvoke $r86.<org.apache.ambari.server.state.ConfigHelper: java.util.Map createUserGroupsMap(org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>(r1, r12, r24, r217)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r220 = virtualinvoke $r86.<org.apache.ambari.server.state.ConfigHelper: java.util.Map createUserGroupsMap(org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>(r1, r12, r24, r217) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r87 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r87 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r30 = virtualinvoke $r87.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r220)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r30 = virtualinvoke $r87.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r220) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user_groups", r30)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user_groups", r30) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r90 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r90 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r89 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r89 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType GROUP> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r31 = virtualinvoke $r90.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>($r89, r1, r12, r24, r217)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r31 = virtualinvoke $r90.<org.apache.ambari.server.state.ConfigHelper: java.util.Set getPropertyValuesWithPropertyType(org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>($r89, r1, r12, r24, r217) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r91 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r91 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r32 = virtualinvoke $r91.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r31)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r32 = virtualinvoke $r91.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r31) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("group_list", r32)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("group_list", r32) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r94 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r94 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r93 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType NOT_MANAGED_HDFS_PATH>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r93 = <org.apache.ambari.server.state.PropertyInfo$PropertyType: org.apache.ambari.server.state.PropertyInfo$PropertyType NOT_MANAGED_HDFS_PATH> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r33 = virtualinvoke $r94.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getPropertiesWithPropertyType(org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>($r93, r1, r12, r24, r217)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r33 = virtualinvoke $r94.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getPropertiesWithPropertyType(org.apache.ambari.server.state.PropertyInfo$PropertyType,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Set)>($r93, r1, r12, r24, r217) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r95 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r95 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r34 = virtualinvoke $r95.<org.apache.ambari.server.state.ConfigHelper: java.util.Set filterInvalidPropertyValues(java.util.Map,java.lang.String)>(r33, "not_managed_hdfs_path_list")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r34 = virtualinvoke $r95.<org.apache.ambari.server.state.ConfigHelper: java.util.Set filterInvalidPropertyValues(java.util.Map,java.lang.String)>(r33, "not_managed_hdfs_path_list") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r96 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r96 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r35 = virtualinvoke $r96.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r34)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r35 = virtualinvoke $r96.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("not_managed_hdfs_path_list", r35)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("not_managed_hdfs_path_list", r35) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r98 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r98 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType ORACLE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r11 != $r98
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r11 != $r98 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r125 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r11 != $r98 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r99 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r99 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r11 != $r99
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r11 != $r99 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r122 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r11 != $r99 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r221 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r221 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r221 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r221 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r121 = new java.util.ArrayList
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r221 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r100 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r100 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r36 = virtualinvoke $r100.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r221)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r36 = virtualinvoke $r100.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r221) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clientsToUpdateConfigs", r36)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clientsToUpdateConfigs", r36) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r222 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: org.apache.ambari.server.state.UnlimitedKeyJCERequirement getUnlimitedKeyJCERequired()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r222 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: org.apache.ambari.server.state.UnlimitedKeyJCERequirement getUnlimitedKeyJCERequired()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r222 != null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r222 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r222 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement DEFAULT>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r222 != null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r102 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement ALWAYS>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r102 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement ALWAYS> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r102 == r222
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r102 == r222 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r118 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement KERBEROS_ENABLED>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r102 == r222 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z25 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z25 = 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z25 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z25 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r223 = "true"
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z25 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r223 = "false"
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r223 = "false" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unlimited_key_jce_required", $r223)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unlimited_key_jce_required", $r223) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>($r74)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setHostLevelParams(java.util.Map)>($r74) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r104 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r104 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r104.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r104.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void addSuspendedUpgradeParameters(java.util.Map,java.util.Map)>($r63, $r104)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r104)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r104) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r63)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r63) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r25.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: void setVersions(org.apache.ambari.server.state.Cluster)>(r1)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r25.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: void setVersions(org.apache.ambari.server.state.Cluster)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r105 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z8 = interfaceinvoke $r105.<java.util.Map: boolean containsKey(java.lang.Object)>("cluster-env")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z8 = interfaceinvoke $r105.<java.util.Map: boolean containsKey(java.lang.Object)>("cluster-env") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z8 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r107 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r107 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106 = newarray (java.lang.Object)[5]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r108 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getHostname()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r108 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[0] = $r108
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[0] = $r108 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r109 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r109 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[1] = $r109
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[1] = $r109 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r110 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r110 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[2] = $r110
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[2] = $r110 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r111 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getCommandId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r111 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getCommandId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[3] = $r111
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[3] = $r111 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r112 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r112 = virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getConfigurationTags()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r113 = interfaceinvoke $r112.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-env")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r113 = interfaceinvoke $r112.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-env") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r114 = (java.util.Map) $r113
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r114 = (java.util.Map) $r113 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r115 = interfaceinvoke $r114.<java.util.Map: java.lang.Object get(java.lang.Object)>("tag")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r115 = interfaceinvoke $r114.<java.util.Map: java.lang.Object get(java.lang.Object)>("tag") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[4] = $r115
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r106[4] = $r115 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r107.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("AmbariManagementControllerImpl.createHostAction: created ExecutionCommand for host {}, role {}, roleCommand {}, and command ID {}, with cluster-env tags {}", $r106)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r107.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("AmbariManagementControllerImpl.createHostAction: created ExecutionCommand for host {}, role {}, roleCommand {}, and command ID {}, with cluster-env tags {}", $r106) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : return
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: void addSuspendedUpgradeParameters(java.util.Map,java.util.Map)>($r63, $r104) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r104)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r223 = "true" >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unlimited_key_jce_required", $r223)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unlimited_key_jce_required", $r223)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unlimited_key_jce_required", $r223)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r118 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement KERBEROS_ENABLED> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r118 != r222
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r118 != r222 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r119 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r118 != r222 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z25 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z25 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z25 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r119 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r120 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r120 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r119 != $r120
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r119 != $r120 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z25 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $r119 != $r120 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z25 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r222 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement DEFAULT> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r102 = <org.apache.ambari.server.state.UnlimitedKeyJCERequirement: org.apache.ambari.server.state.UnlimitedKeyJCERequirement ALWAYS>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r121 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r121.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r121.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r221 = $r121
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r221 = $r121 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r121.<java.util.List: boolean add(java.lang.Object)>("*")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r121.<java.util.List: boolean add(java.lang.Object)>("*") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r100 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: com.google.gson.Gson gson>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r122 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r123 = virtualinvoke $r122.<org.apache.ambari.server.configuration.Configuration: java.lang.String getMySQLJarName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r123 = virtualinvoke $r122.<org.apache.ambari.server.configuration.Configuration: java.lang.String getMySQLJarName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r123)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r123) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r221 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r125 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r126 = virtualinvoke $r125.<org.apache.ambari.server.configuration.Configuration: java.lang.String getOjdbcJarName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r126 = virtualinvoke $r125.<org.apache.ambari.server.configuration.Configuration: java.lang.String getOjdbcJarName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r126)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("db_driver_filename", $r126) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r221 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r221 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r221 = virtualinvoke r22.<org.apache.ambari.server.state.ComponentInfo: java.util.List getClientsToUpdateConfigs()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r213 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r213
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r213 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.repository.VersionDefinitionXml getRepositoryXml()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r213 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r131 = virtualinvoke r213.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r213 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r128 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if null == r213 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r128 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r128 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r128 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r129 = virtualinvoke $r128.<java.lang.Long: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r129 = virtualinvoke $r128.<java.lang.Long: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repository_version_id", $r129)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repository_version_id", $r129) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r215 = virtualinvoke r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.List getPackagesForServiceHost(org.apache.ambari.server.state.ServiceInfo,java.util.Map,java.lang.String)>(r21, $r74, r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r131 = virtualinvoke r213.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z10 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r131)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r131 = virtualinvoke r213.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z10 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r131) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z10 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r131) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r132 = virtualinvoke r213.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r19)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r128 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r132 = virtualinvoke r213.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_version", $r132)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r132 = virtualinvoke r213.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_version", $r132) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r128 = virtualinvoke r10.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.Long getId()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("package_version", $r132) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r174 := @caughtexception
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r135 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r136 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r136 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[0] = $r136
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[0] = $r136 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[1] = r207
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[1] = r207 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r137 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r137 = virtualinvoke r20.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[2] = $r137
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[2] = $r137 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[3] = r210
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r134[3] = r210 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r135.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Sending repo information to agent, hostname={}, clusterName={}, stackInfo={}, repoInfo={}", $r134)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r135.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Sending repo information to agent, hostname={}, clusterName={}, stackInfo={}, repoInfo={}", $r134) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r74 = new java.util.TreeMap
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("refresh_topology", "True") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r71 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r139 = new java.io.File >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r140 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r140 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r141 = virtualinvoke $r140.<org.apache.ambari.server.configuration.Configuration: java.lang.String getResourceDirPath()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r141 = virtualinvoke $r140.<org.apache.ambari.server.configuration.Configuration: java.lang.String getResourceDirPath()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r139.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r141, r205)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r139.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r141, r205) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z11 = virtualinvoke $r139.<java.io.File: boolean exists()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z11 = virtualinvoke $r139.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z11 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z12 = virtualinvoke $r139.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r207 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z12 = virtualinvoke $r139.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z12 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("custom_folder", r205)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r207 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("custom_folder", r205) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r207 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z13 = virtualinvoke r186.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z13 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r203)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z13 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r204)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r203) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r186)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r186) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i0 >= $i1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r204 = r186
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i0 >= $i1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r204)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r204 = r186 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", r204)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r203 = r187 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r204 = $r203]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= r204 = $r203] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r204 = $r203
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r188 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r145 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r188 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143[0] = r14
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143[0] = r14 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143[1] = r13
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r143[1] = r13 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r202 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Component %s of service %s has no command script defined", $r143)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r202 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Component %s of service %s has no command script defined", $r143) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r144 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r144 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r144.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r202)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : specialinvoke $r144.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r202) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : throw $r144
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r145 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", $r145)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script", $r145) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r147 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: org.apache.ambari.server.state.CommandScriptDefinition$Type getScriptType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r147 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: org.apache.ambari.server.state.CommandScriptDefinition$Type getScriptType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r148 = virtualinvoke $r147.<org.apache.ambari.server.state.CommandScriptDefinition$Type: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r148 = virtualinvoke $r147.<org.apache.ambari.server.state.CommandScriptDefinition$Type: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script_type", $r148)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("script_type", $r148) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z22 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z22 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z14 = interfaceinvoke $r63.<java.util.Map: boolean containsKey(java.lang.Object)>("phase")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z14 = interfaceinvoke $r63.<java.util.Map: boolean containsKey(java.lang.Object)>("phase") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z14 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r152 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i7 = virtualinvoke r189.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i7 = virtualinvoke r189.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r200 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r200 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max_duration_for_retries", $r200)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("max_duration_for_retries", $r200) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r201 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z22)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r201 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(z22) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_retry_enabled", $r201)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_retry_enabled", $r201) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i8 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i8 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i8 <= 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i8 <= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i2 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i8 <= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z5 = virtualinvoke r187.<java.lang.String: boolean equals(java.lang.Object)>("")]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z5 = virtualinvoke r187.<java.lang.String: boolean equals(java.lang.Object)>("")] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z5 = virtualinvoke r187.<java.lang.String: boolean equals(java.lang.Object)>("")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i2 = virtualinvoke r188.<org.apache.ambari.server.state.CommandScriptDefinition: int getTimeout()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r187 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r187 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z5 = virtualinvoke r187.<java.lang.String: boolean equals(java.lang.Object)>("")]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r152 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r153 = (java.lang.String) $r152
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r153 = (java.lang.String) $r152 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z15 = virtualinvoke $r153.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_INSTALL")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z15 = virtualinvoke $r153.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_INSTALL") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z15 != 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r161 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r154 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r154 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r190 = virtualinvoke $r154.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_enabled")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r190 = virtualinvoke $r154.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_enabled") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r155 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r155 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r191 = virtualinvoke $r155.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "commands_to_retry")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r191 = virtualinvoke $r155.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "commands_to_retry") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r156 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r156 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r192 = virtualinvoke $r156.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_max_time_in_sec")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r192 = virtualinvoke $r156.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "cluster-env", "command_retry_max_time_in_sec") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z16 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r190)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z16 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r190) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z16 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r159 = <java.lang.Boolean: java.lang.Boolean TRUE>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z16 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z22 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z22 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i3 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String,int)>(r192, 0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z22 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r196 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r196 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197 = newarray (java.lang.Object)[5]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[0] = r13
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[0] = r13 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[1] = r14
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[1] = r14 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r198 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r198 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[2] = $r198
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[2] = $r198 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r199 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z22)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r199 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z22) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[3] = $r199
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[3] = $r199 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[4] = r189
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r197[4] = r189 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r196.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Auto retry setting for {}-{} on {} is retryEnabled={} and retryMaxTime={}", $r197)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r196.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Auto retry setting for {}-{} on {} is retryEnabled={} and retryMaxTime={}", $r197) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i7 = virtualinvoke r189.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i3 = staticinvoke <org.apache.commons.lang.math.NumberUtils: int toInt(java.lang.String,int)>(r192, 0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i4 = virtualinvoke r189.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i4 = virtualinvoke r189.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i4 >= 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i4 >= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $i4 >= 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z17 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r191)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z17 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r191) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z17 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z17 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z23 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z17 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r196 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z23 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r193 = virtualinvoke r191.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r193 = virtualinvoke r191.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i5 = lengthof r193
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i5 = lengthof r193 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i6 = 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i6 = 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i6 >= i5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i6 >= i5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r195 = r193[i6]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i6 >= i5 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z22 = z23
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z22 = z23 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r196 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r195 = r193[i6] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r157 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r157 = virtualinvoke r7.<org.apache.ambari.server.RoleCommand: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r158 = virtualinvoke r195.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r158 = virtualinvoke r195.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z18 = virtualinvoke $r157.<java.lang.String: boolean equals(java.lang.Object)>($r158)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z18 = virtualinvoke $r157.<java.lang.String: boolean equals(java.lang.Object)>($r158) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z18 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z23 = 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i6 = i6 + 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i6 = i6 + 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if i6 >= i5
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z23 = 1 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : i6 = i6 + 1
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r189 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z17 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r191)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r159 = <java.lang.Boolean: java.lang.Boolean TRUE> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r160 = virtualinvoke $r159.<java.lang.Boolean: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r160 = virtualinvoke $r159.<java.lang.Boolean: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z22 = virtualinvoke $r160.<java.lang.String: boolean equals(java.lang.Object)>(r190)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : z22 = virtualinvoke $r160.<java.lang.String: boolean equals(java.lang.Object)>(r190) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if z22 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r161 = interfaceinvoke $r63.<java.util.Map: java.lang.Object get(java.lang.Object)>("phase") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r162 = (java.lang.String) $r161
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r162 = (java.lang.String) $r161 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z19 = virtualinvoke $r162.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_START")
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z19 = virtualinvoke $r162.<java.lang.String: boolean equals(java.lang.Object)>("INITIAL_START") >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z19 == 0
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r154 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if $z19 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $i7 = virtualinvoke r189.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r163 = interfaceinvoke r182.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r183 = (org.apache.ambari.server.state.Service) $r163
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r183 = (org.apache.ambari.server.state.Service) $r163 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r164 = interfaceinvoke r183.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r164 = interfaceinvoke r183.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r165 = interfaceinvoke r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r164)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r165 = interfaceinvoke r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r164) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r184 = (org.apache.ambari.server.state.ServiceInfo) $r165
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r184 = (org.apache.ambari.server.state.ServiceInfo) $r165 >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r166 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r166 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r167 = virtualinvoke r184.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r167 = virtualinvoke r184.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r166.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Iterating service type Instance in createHostAction: {}", $r167)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r166.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Iterating service type Instance in createHostAction: {}", $r167) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r185 = virtualinvoke r184.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getServiceType()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r185 = virtualinvoke r184.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getServiceType()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r185 == null
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r185 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r168 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : if r185 == null >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z20 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $z20 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $z20 = interfaceinvoke r182.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r168 = <org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r168.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Adding service type info in createHostAction: {}", r185)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r168.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Adding service type info in createHostAction: {}", r185) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs_type", r185)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("dfs_type", r185) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r66 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>]
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : goto [?= $r66 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>] >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r66 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand INSTALL>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r63.<java.util.Map: void putAll(java.util.Map)>(r8) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r64 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r170 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: org.apache.ambari.server.state.ConfigHelper configHelper> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r181 = virtualinvoke $r170.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getCredentialStoreEnabledProperties(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.Service)>(r20, r27)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : r181 = virtualinvoke $r170.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getCredentialStoreEnabledProperties(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.Service)>(r20, r27) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r171 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService>
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r171 = r0.<org.apache.ambari.server.controller.AmbariManagementControllerImpl: java.util.Map configCredentialsForService> >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r172 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : $r172 = interfaceinvoke r27.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r171.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r172, r181)
org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : interfaceinvoke $r171.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r172, r181) >>>>>>>> org.apache.ambari.server.controller.AmbariManagementControllerImpl.createHostAction : virtualinvoke r26.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationCredentials(java.util.Map)>(r181)
