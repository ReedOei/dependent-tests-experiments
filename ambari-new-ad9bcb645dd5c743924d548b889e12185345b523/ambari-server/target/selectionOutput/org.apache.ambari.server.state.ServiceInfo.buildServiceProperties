org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceInfo: boolean isValid()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : if $z0 == 0
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map servicePropertyMap> = $r4
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map servicePropertyMap> = $r4 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : return
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List getServicePropertyList()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List getServicePropertyList()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : if $z1 == 0
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r6 = specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map ensureMandatoryServiceProperties(java.util.Map)>(r1)
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r6 = specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map ensureMandatoryServiceProperties(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r7 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>($r6)
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r7 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>($r6) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map servicePropertyMap> = $r7
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map servicePropertyMap> = $r7 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : goto [?= return]
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : goto [?= return] >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : return
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r3 = (org.apache.ambari.server.state.ServicePropertyInfo) $r8
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : r3 = (org.apache.ambari.server.state.ServicePropertyInfo) $r8 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r9 = virtualinvoke r3.<org.apache.ambari.server.state.ServicePropertyInfo: java.lang.String getName()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r9 = virtualinvoke r3.<org.apache.ambari.server.state.ServicePropertyInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r10 = virtualinvoke r3.<org.apache.ambari.server.state.ServicePropertyInfo: java.lang.String getValue()>()
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $r10 = virtualinvoke r3.<org.apache.ambari.server.state.ServicePropertyInfo: java.lang.String getValue()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10)
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : goto [?= $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceInfo.buildServiceProperties : $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
