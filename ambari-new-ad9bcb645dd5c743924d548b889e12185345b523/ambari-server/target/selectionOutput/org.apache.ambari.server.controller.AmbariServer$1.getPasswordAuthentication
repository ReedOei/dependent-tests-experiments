org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r1 = new java.net.PasswordAuthentication >>>>>>>> org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r3 = r0.<org.apache.ambari.server.controller.AmbariServer$1: java.lang.String val$proxyUser>
org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r3 = r0.<org.apache.ambari.server.controller.AmbariServer$1: java.lang.String val$proxyUser> >>>>>>>> org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r2 = r0.<org.apache.ambari.server.controller.AmbariServer$1: java.lang.String val$proxyPass>
org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r2 = r0.<org.apache.ambari.server.controller.AmbariServer$1: java.lang.String val$proxyPass> >>>>>>>> org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r4 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>()
org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : $r4 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : specialinvoke $r1.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r3, $r4)
org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : specialinvoke $r1.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r3, $r4) >>>>>>>> org.apache.ambari.server.controller.AmbariServer$1.getPasswordAuthentication : return $r1
