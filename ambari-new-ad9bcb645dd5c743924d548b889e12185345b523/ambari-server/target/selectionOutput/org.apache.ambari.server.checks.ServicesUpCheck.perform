org.apache.ambari.server.checks.ServicesUpCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r17 = r0.<org.apache.ambari.server.checks.ServicesUpCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r17 = r0.<org.apache.ambari.server.checks.ServicesUpCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r18 = interfaceinvoke $r17.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r18 = interfaceinvoke $r17.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r19 = (org.apache.ambari.server.state.Clusters) $r18
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r19 = (org.apache.ambari.server.state.Clusters) $r18 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r4 = interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r4 = interfaceinvoke $r19.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r20 = new java.util.ArrayList
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r20 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r20.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r20.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r21 = new java.util.HashSet
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r21 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r21.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r21.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r7 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesUpCheck: java.util.Set getServicesInUpgrade(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r7 = virtualinvoke r0.<org.apache.ambari.server.checks.ServicesUpCheck: java.util.Set getServicesInUpgrade(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r8 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : r8 = interfaceinvoke r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z16 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z16 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r29 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z16 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z0 = interfaceinvoke $r20.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z0 = interfaceinvoke $r20.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z0 != 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r22 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : return
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r22 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r22.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r21)
org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r22.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r21) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r22)
org.apache.ambari.server.checks.ServicesUpCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r22) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r23 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r23 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r23)
org.apache.ambari.server.checks.ServicesUpCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r23) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r24 = new java.lang.StringBuilder
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The following Service Components should be in a started state.  Please invoke a service Stop and full Start and try again. ")
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The following Service Components should be in a started state.  Please invoke a service Stop and full Start and try again. ") >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r20, ", ")
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r26 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r20, ", ") >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r28)
org.apache.ambari.server.checks.ServicesUpCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : return
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r29 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r9 = (java.lang.String) $r29
org.apache.ambari.server.checks.ServicesUpCheck.perform : r9 = (java.lang.String) $r29 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r9)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r10 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z1 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: boolean isClientOnlyService()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z1 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: boolean isClientOnlyService()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z1 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : r11 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.util.Map getServiceComponents()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r30 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r30 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r12 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : r12 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z17 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z17 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r31 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z17 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r31 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r13 = (java.util.Map$Entry) $r31
org.apache.ambari.server.checks.ServicesUpCheck.perform : r13 = (java.util.Map$Entry) $r31 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r32 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r32 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r14 = (org.apache.ambari.server.state.ServiceComponent) $r32
org.apache.ambari.server.checks.ServicesUpCheck.perform : r14 = (org.apache.ambari.server.state.ServiceComponent) $r32 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z2 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z2 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z2 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z3 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: boolean isVersionAdvertised()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z3 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: boolean isVersionAdvertised()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z3 != 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r33 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r33 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r34 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r34 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r15 = staticinvoke <org.apache.ambari.server.orm.models.HostComponentSummary: java.util.List getHostComponentSummaries(java.lang.String,java.lang.String)>($r33, $r34)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r15 = staticinvoke <org.apache.ambari.server.orm.models.HostComponentSummary: java.util.List getHostComponentSummaries(java.lang.String,java.lang.String)>($r33, $r34) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z4 = interfaceinvoke r15.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z4 = interfaceinvoke r15.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z4 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : z18 = 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : z18 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z5 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: boolean isMasterComponent()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z5 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: boolean isMasterComponent()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z5 != 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z5 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r57 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z5 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if z18 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if z18 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : i1 = interfaceinvoke r15.<java.util.List: int size()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if z18 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r62 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : r62 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z6 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z6 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z6 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r35 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r35 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r63 = (org.apache.ambari.server.orm.models.HostComponentSummary) $r35
org.apache.ambari.server.checks.ServicesUpCheck.perform : r63 = (org.apache.ambari.server.orm.models.HostComponentSummary) $r35 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z7 = specialinvoke r0.<org.apache.ambari.server.checks.ServicesUpCheck: boolean isConsideredDown(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.orm.models.HostComponentSummary)>(r4, r14, r63)
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z7 = specialinvoke r0.<org.apache.ambari.server.checks.ServicesUpCheck: boolean isConsideredDown(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.orm.models.HostComponentSummary)>(r4, r14, r63) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z7 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z7 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r36 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z7 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z6 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z6 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z6 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r36 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r36)
org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r36) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37 = newarray (java.lang.Object)[4]
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r38 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r38 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[0] = $r38
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[0] = $r38 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r39 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r39 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[1] = $r39
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[1] = $r39 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r40 = virtualinvoke r63.<org.apache.ambari.server.orm.models.HostComponentSummary: org.apache.ambari.server.state.State getCurrentState()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r40 = virtualinvoke r63.<org.apache.ambari.server.orm.models.HostComponentSummary: org.apache.ambari.server.state.State getCurrentState()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[2] = $r40
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[2] = $r40 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r41 = virtualinvoke r63.<org.apache.ambari.server.orm.models.HostComponentSummary: java.lang.String getHostName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r41 = virtualinvoke r63.<org.apache.ambari.server.orm.models.HostComponentSummary: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[3] = $r41
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r37[3] = $r41 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r64 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0}: {1} (in {2} on host {3})", $r37)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r64 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0}: {1} (in {2} on host {3})", $r37) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r64)
org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r64) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : i1 = interfaceinvoke r15.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : i2 = 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : i2 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : i3 = 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : i3 = 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r60 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : r60 = interfaceinvoke r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z10 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z10 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z10 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r49 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $f1 = (float) i3
org.apache.ambari.server.checks.ServicesUpCheck.perform : $f1 = (float) i3 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $f0 = (float) i1
org.apache.ambari.server.checks.ServicesUpCheck.perform : $f0 = (float) i1 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $f2 = $f1 / $f0
org.apache.ambari.server.checks.ServicesUpCheck.perform : $f2 = $f1 / $f0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $b0 = $f2 cmpl 0.5F
org.apache.ambari.server.checks.ServicesUpCheck.perform : $b0 = $f2 cmpl 0.5F >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $b0 <= 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $b0 <= 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r42 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $b0 <= 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r42 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r42)
org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43 = newarray (java.lang.Object)[5]
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r44 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r44 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[0] = $r44
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[0] = $r44 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[1] = $r45
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[1] = $r45 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[2] = $r46
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[2] = $r46 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r47 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r47 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[3] = $r47
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[3] = $r47 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r48 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.5F)
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r48 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.5F) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[4] = $r48
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r43[4] = $r48 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r61 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0}: {1} out of {2} {3} are started; there should be {4,number,percent} started before upgrading.", $r43)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r61 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("{0}: {1} out of {2} {3} are started; there should be {4,number,percent} started before upgrading.", $r43) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r61)
org.apache.ambari.server.checks.ServicesUpCheck.perform : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r61) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r49 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r16 = (org.apache.ambari.server.orm.models.HostComponentSummary) $r49
org.apache.ambari.server.checks.ServicesUpCheck.perform : r16 = (org.apache.ambari.server.orm.models.HostComponentSummary) $r49 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z13 = specialinvoke r0.<org.apache.ambari.server.checks.ServicesUpCheck: boolean isConsideredDown(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.orm.models.HostComponentSummary)>(r4, r14, r16)
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z13 = specialinvoke r0.<org.apache.ambari.server.checks.ServicesUpCheck: boolean isConsideredDown(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.ServiceComponent,org.apache.ambari.server.orm.models.HostComponentSummary)>(r4, r14, r16) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z13 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z13 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : i3 = i3 + 1
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z13 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : i2 = i2 + 1
org.apache.ambari.server.checks.ServicesUpCheck.perform : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z10 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z10 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z10 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z10 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.ServicesUpCheck.perform : r57 = interfaceinvoke r10.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r50 = r0.<org.apache.ambari.server.checks.ServicesUpCheck: com.google.inject.Provider ambariMetaInfo>
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r50 = r0.<org.apache.ambari.server.checks.ServicesUpCheck: com.google.inject.Provider ambariMetaInfo> >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r51 = interfaceinvoke $r50.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r51 = interfaceinvoke $r50.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r52 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r51
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r52 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r51 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r53 = virtualinvoke r57.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r53 = virtualinvoke r57.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r54 = virtualinvoke r57.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r54 = virtualinvoke r57.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r55 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getServiceName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r55 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $r56 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : $r56 = interfaceinvoke r14.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r58 = virtualinvoke $r52.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r53, $r54, $r55, $r56)
org.apache.ambari.server.checks.ServicesUpCheck.perform : r58 = virtualinvoke $r52.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r53, $r54, $r55, $r56) >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : r59 = virtualinvoke r58.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : r59 = virtualinvoke r58.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getCardinality()>() >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if null == r59
org.apache.ambari.server.checks.ServicesUpCheck.perform : if null == r59 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z14 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("ALL")
org.apache.ambari.server.checks.ServicesUpCheck.perform : if null == r59 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if z18 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z14 = virtualinvoke r59.<java.lang.String: boolean equals(java.lang.Object)>("ALL") >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z14 != 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z14 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z15 = virtualinvoke r59.<java.lang.String: boolean matches(java.lang.String)>("[1-9].*")
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z14 != 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : z18 = 1
org.apache.ambari.server.checks.ServicesUpCheck.perform : z18 = 1 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if z18 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : $z15 = virtualinvoke r59.<java.lang.String: boolean matches(java.lang.String)>("[1-9].*") >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z15 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z15 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : z18 = 1
org.apache.ambari.server.checks.ServicesUpCheck.perform : if $z15 == 0 >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : if z18 == 0
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z17 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.ServicesUpCheck.perform : goto [?= $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.ServicesUpCheck.perform : $z16 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
