org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r3 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Checking for hosts without state")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>("Checking for hosts without state") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r4 = new java.util.HashSet
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r4 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r4.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r4.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r28 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r28 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r29 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r29 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r24 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r24)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : throw $r19
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r20 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r21 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r20)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : throw $r19
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= throw $r19]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r20 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= throw $r19] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : throw $r19
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r24 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r29 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r29 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r29 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r29 = interfaceinvoke $r5.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r28 = interfaceinvoke r29.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select host_name from hosts where host_id not in (select host_id from hoststate)")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r28 = interfaceinvoke r29.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select host_name from hosts where host_id not in (select host_id from hoststate)") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r28 = interfaceinvoke r29.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select host_name from hosts where host_id not in (select host_id from hoststate)") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : r28 = interfaceinvoke r29.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select host_name from hosts where host_id not in (select host_id from hoststate)") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r16[0] = $r15
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r16 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r16[0] = $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during check for host without state procedure: ", $r16)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r16[0] = $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during check for host without state procedure: ", $r16) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during check for host without state procedure: ", $r16) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r13 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r14 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r13)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r23 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r22)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r22) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r22 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r13 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r17 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r17)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r26 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r27 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r26)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r26) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r29.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r26 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke r28.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r17 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r29 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r12 = interfaceinvoke r28.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_name")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z1 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z1 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z1 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z1 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z1 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r6 = new java.lang.StringBuilder
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r6 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : specialinvoke $r6.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You have host(s) without state (in hoststate table): ")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You have host(s) without state (in hoststate table): ") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You have host(s) without state (in hoststate table): ") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You have host(s) without state (in hoststate table): ") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r4, ",")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r4, ",") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r4, ",") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r8 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r4, ",") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r11 = newarray (java.lang.Object)[0]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r11 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r11 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r11 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r10, $r11)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r10, $r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r10, $r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>($r10, $r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : if r28 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r12 = interfaceinvoke r28.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r12 = interfaceinvoke r28.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r12 = interfaceinvoke r28.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r15 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : goto [?= $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkForHostsWithoutState : $z0 = interfaceinvoke r28.<java.sql.ResultSet: boolean next()>()
