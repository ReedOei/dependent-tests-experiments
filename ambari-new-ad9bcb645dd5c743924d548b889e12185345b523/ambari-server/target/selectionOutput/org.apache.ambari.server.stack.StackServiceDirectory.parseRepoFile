org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r4 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.io.File directory> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r3 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.stack.ModuleFileUnmarshaller unmarshaller>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r3 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.stack.ModuleFileUnmarshaller unmarshaller> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : r2 = staticinvoke <org.apache.ambari.server.stack.RepoUtil: org.apache.ambari.server.stack.RepositoryFolderAndXml parseRepoFile(java.io.File,java.util.Collection,org.apache.ambari.server.stack.ModuleFileUnmarshaller)>($r4, r1, $r3)
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : r2 = staticinvoke <org.apache.ambari.server.stack.RepoUtil: org.apache.ambari.server.stack.RepositoryFolderAndXml parseRepoFile(java.io.File,java.util.Collection,org.apache.ambari.server.stack.ModuleFileUnmarshaller)>($r4, r1, $r3) >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r5 = r2.<org.apache.ambari.server.stack.RepositoryFolderAndXml: com.google.common.base.Optional repoDir>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r5 = r2.<org.apache.ambari.server.stack.RepositoryFolderAndXml: com.google.common.base.Optional repoDir> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r6 = virtualinvoke $r5.<com.google.common.base.Optional: java.lang.Object orNull()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r6 = virtualinvoke $r5.<com.google.common.base.Optional: java.lang.Object orNull()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r7 = (java.lang.String) $r6
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.lang.String repoDir> = $r7
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.lang.String repoDir> = $r7 >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r8 = r2.<org.apache.ambari.server.stack.RepositoryFolderAndXml: com.google.common.base.Optional repoXml>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r8 = r2.<org.apache.ambari.server.stack.RepositoryFolderAndXml: com.google.common.base.Optional repoXml> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r9 = virtualinvoke $r8.<com.google.common.base.Optional: java.lang.Object orNull()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r9 = virtualinvoke $r8.<com.google.common.base.Optional: java.lang.Object orNull()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r10 = (org.apache.ambari.server.state.stack.RepositoryXml) $r9
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r10 = (org.apache.ambari.server.state.stack.RepositoryXml) $r9 >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml repoFile> = $r10
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml repoFile> = $r10 >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r11 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml repoFile>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r11 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml repoFile> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : if $r11 == null
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : if $r11 == null >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r24 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml repoFile>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : if $r11 == null >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r13 = <org.apache.ambari.server.stack.StackServiceDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r13 = <org.apache.ambari.server.stack.StackServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r12 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r12 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No repository information defined for , serviceName=")
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No repository information defined for , serviceName=") >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r15 = virtualinvoke r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.lang.String getName()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r15 = virtualinvoke r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", repoFolder=")
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", repoFolder=") >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r18 = virtualinvoke r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r18 = virtualinvoke r0.<org.apache.ambari.server.stack.StackServiceDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r20 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r20 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos")
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repos") >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r23)
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : interfaceinvoke $r13.<org.slf4j.Logger: void info(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : return
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r24 = r0.<org.apache.ambari.server.stack.StackServiceDirectory: org.apache.ambari.server.state.stack.RepositoryXml repoFile> >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $z0 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.RepositoryXml: boolean isValid()>()
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $z0 = virtualinvoke $r24.<org.apache.ambari.server.state.stack.RepositoryXml: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : if $z0 != 0
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : $r13 = <org.apache.ambari.server.stack.StackServiceDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : if $z0 != 0 >>>>>>>> org.apache.ambari.server.stack.StackServiceDirectory.parseRepoFile : return
