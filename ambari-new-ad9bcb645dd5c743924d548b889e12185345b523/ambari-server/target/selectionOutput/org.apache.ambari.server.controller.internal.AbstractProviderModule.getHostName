org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: void checkInit()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r3 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map clusterHostComponentMap>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r3 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map clusterHostComponentMap> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r5 = (java.util.Map) $r4
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r5 = (java.util.Map) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r7 = (java.lang.String) $r6
org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : $r7 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getHostName : return $r7
