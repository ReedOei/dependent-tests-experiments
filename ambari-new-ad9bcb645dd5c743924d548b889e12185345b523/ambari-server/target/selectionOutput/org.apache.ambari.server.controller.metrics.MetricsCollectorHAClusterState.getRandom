org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $r4 = new java.util.Random >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : specialinvoke $r4.<java.util.Random: void <init>()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : specialinvoke $r4.<java.util.Random: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $i1 = interfaceinvoke r1.<java.util.Set: int size()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $i1 = interfaceinvoke r1.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : i0 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>($i1)
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : i0 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>($i1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : i2 = 0
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : i2 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : if $z0 == 0
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : return null
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : r3 = (java.lang.String) $r5
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : r3 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : if i2 != i0
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : if i2 != i0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : return r3
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : if i2 != i0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : i2 = i2 + 1
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsCollectorHAClusterState.getRandom : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
