org.apache.ambari.server.state.ConfigHelper.createConfigType : r9 = virtualinvoke r0.<org.apache.ambari.server.state.ConfigHelper: org.apache.ambari.server.state.Config createConfig(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r1, r2, r3, r4, "version1", r5, r6) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigType : if r9 == null
org.apache.ambari.server.state.ConfigHelper.createConfigType : if r9 == null >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigType : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r9)
org.apache.ambari.server.state.ConfigHelper.createConfigType : if r9 == null >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigType : return
org.apache.ambari.server.state.ConfigHelper.createConfigType : $r10 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigType : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse addDesiredConfig(java.lang.String,java.util.Set,java.lang.String)>(r7, $r10, r8)
org.apache.ambari.server.state.ConfigHelper.createConfigType : interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.controller.ServiceConfigVersionResponse addDesiredConfig(java.lang.String,java.util.Set,java.lang.String)>(r7, $r10, r8) >>>>>>>> org.apache.ambari.server.state.ConfigHelper.createConfigType : return
