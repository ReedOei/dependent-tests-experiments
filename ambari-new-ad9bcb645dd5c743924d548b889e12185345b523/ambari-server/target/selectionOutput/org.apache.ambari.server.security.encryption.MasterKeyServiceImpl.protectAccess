org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z0 = virtualinvoke r0.<java.io.File: boolean exists()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : return
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z1 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r1 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r1 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r1[0] = $r2
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r1[0] = $r2 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s readable only by current user", $r1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s readable only by current user", $r1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r3 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r3 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>(r17)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r3.<org.slf4j.Logger: void warn(java.lang.String)>(r17) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r4 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r4 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r17)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r4.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r17) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r4
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z2 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r1 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z2 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z3 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r6 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5[0] = $r6
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5[0] = $r6 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s writable only by current user", $r5)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s writable only by current user", $r5) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r7 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r7 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>(r18)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String)>(r18) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r8 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r8 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r8.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r18)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r8.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r18) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r8
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z4 = virtualinvoke r0.<java.io.File: boolean setWritable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r5 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z4 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z5 = virtualinvoke r0.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z7 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z5 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z6 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r9 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z6 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : return
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r9 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r10 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r10 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r9[0] = $r10
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r9[0] = $r10 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s not executable", $r9)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s not executable", $r9) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r11 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>(r20)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r11.<org.slf4j.Logger: void warn(java.lang.String)>(r20) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r12 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r12 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r12.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r20)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r12.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r20) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r12
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z7 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(0, 0) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z7 == 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z7 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z8 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 1)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z7 == 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r14 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r14 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r13[0] = $r14
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r13[0] = $r14 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s executable by current user", $r13)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to set %s executable by current user", $r13) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r15 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r15 = <org.apache.ambari.server.security.encryption.MasterKeyServiceImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String)>(r19)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r16 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r16 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r19)
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : throw $r16
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $z8 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 1) >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z8 != 0
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : if $z8 != 0 >>>>>>>> org.apache.ambari.server.security.encryption.MasterKeyServiceImpl.protectAccess : return
