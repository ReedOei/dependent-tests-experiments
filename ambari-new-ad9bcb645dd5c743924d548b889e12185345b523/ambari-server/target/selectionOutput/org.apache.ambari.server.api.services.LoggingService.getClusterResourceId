org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r13 = null >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r1 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r1 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r1)
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r1) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if $z0 != 0
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r3 = r0.<org.apache.ambari.server.api.services.LoggingService: org.apache.ambari.server.api.services.LoggingService$ControllerFactory controllerFactory>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r2 = <org.apache.ambari.server.api.services.LoggingService: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r2 = <org.apache.ambari.server.api.services.LoggingService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("The cluster name is not set, assuming null resource id")
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r2.<org.slf4j.Logger: void debug(java.lang.String)>("The cluster name is not set, assuming null resource id") >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : return r13
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r3 = r0.<org.apache.ambari.server.api.services.LoggingService: org.apache.ambari.server.api.services.LoggingService$ControllerFactory controllerFactory> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.LoggingService$ControllerFactory: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r3 = r0.<org.apache.ambari.server.api.services.LoggingService: org.apache.ambari.server.api.services.LoggingService$ControllerFactory controllerFactory> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r10 = <org.apache.ambari.server.api.services.LoggingService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r11 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r11 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r12 = virtualinvoke $r9.<org.apache.ambari.server.AmbariException: java.lang.String getLocalizedMessage()>()
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r12 = virtualinvoke $r9.<org.apache.ambari.server.AmbariException: java.lang.String getLocalizedMessage()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("An exception occurred looking up the cluster named {}, assuming null resource id: {}", $r11, $r12)
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("An exception occurred looking up the cluster named {}, assuming null resource id: {}", $r11, $r12) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= return r13]
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= return r13] >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : return r13
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.LoggingService$ControllerFactory: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r4 = interfaceinvoke $r3.<org.apache.ambari.server.api.services.LoggingService$ControllerFactory: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r6 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r6 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r14 = interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r6)
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r6 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r14 = interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if r14 != null
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r14 = interfaceinvoke $r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if r14 != null >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r8 = <org.apache.ambari.server.api.services.LoggingService: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if r14 != null >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r13 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : if r14 != null >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r13 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= return r13]
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : r13 = interfaceinvoke r14.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= return r13] >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : return r13
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r8 = <org.apache.ambari.server.api.services.LoggingService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r7 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName>
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r7 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No cluster found with the name {}, assuming null resource id", $r7)
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r7 = r0.<org.apache.ambari.server.api.services.LoggingService: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No cluster found with the name {}, assuming null resource id", $r7) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= (branch)]
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("No cluster found with the name {}, assuming null resource id", $r7) >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : $r9 := @caughtexception
org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.LoggingService.getClusterResourceId : goto [?= return r13]
