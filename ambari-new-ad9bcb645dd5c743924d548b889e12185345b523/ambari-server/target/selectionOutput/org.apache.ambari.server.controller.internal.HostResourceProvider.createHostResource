org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r6 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r6 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r8 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r7 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r7 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname cannot be null")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname cannot be null") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : throw $r7
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r8 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z0 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z0 = virtualinvoke $r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r7 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r9 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r9 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z1 = interfaceinvoke $r9.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r18 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r10 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r10 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r10)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $z2 = interfaceinvoke r4.<java.util.Set: boolean contains(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z2 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r17 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r11 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r11 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r12 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r21 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r12 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r12)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r12 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r20 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r14 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r14 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r14 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r15 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r14 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : if $r14 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r22 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r23 = new org.apache.ambari.server.ParentObjectNotFoundException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r24 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r24 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add a host to a cluster which doesn\'t exist:  clusterName=")
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add a host to a cluster which doesn\'t exist:  clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r26 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r23.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String)>($r28)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : specialinvoke $r23.<org.apache.ambari.server.ParentObjectNotFoundException: void <init>(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : throw $r23
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r15 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r15 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r22 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= return]
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r1.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r22 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r17 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : return
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r18 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r19 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r19 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Received a createHost request, hostname={}, request={}", $r19, r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Received a createHost request, hostname={}, request={}", $r19, r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.createHostResource : $r10 = virtualinvoke r5.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
