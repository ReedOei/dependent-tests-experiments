org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void ensureInitialized()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r6 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r6 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.onHostRegistered: Entering")
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.onHostRegistered: Entering") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z0 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r7 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r7 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r8 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: host = {} is already associated with the cluster or is currently being processed", $r8)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: host = {} is already associated with the cluster or is currently being processed", $r8) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : return
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r9 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z1 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isHostIgnored(java.lang.String)>($r9)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z1 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isHostIgnored(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z1 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r7 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r2 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r2 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r10 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r10 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r10
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r11 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r42
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r11 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r11
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r11 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r12 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r12 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z2 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r12 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r44
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r44 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z2 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z2 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z7 = 1
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= return]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= return] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : return
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z7 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z7 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r53 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r53 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r53 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z7 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z3 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z7 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r14 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z7 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z7 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r14 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager: Queueing available host {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r14 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager: Queueing available host {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r14.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager: Queueing available host {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r15 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.List availableHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r10
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r54 = (org.apache.ambari.server.state.host.HostImpl) $r16
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r16 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r54 = (org.apache.ambari.server.state.host.HostImpl) $r16 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = virtualinvoke r54.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r54 = (org.apache.ambari.server.state.host.HostImpl) $r16 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = virtualinvoke r54.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r17 = virtualinvoke r54.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r17 != $r18
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r17 != $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r17 != $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r17 != $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= $z3 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Host {} re-registered, will not be added to the available hosts list", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r19 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Host {} re-registered, will not be added to the available hosts list", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z7 = 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r19.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Host {} re-registered, will not be added to the available hosts list", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z7 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z7 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z7 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r20
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : entermonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r50 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r21 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r43
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r43 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r50 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r50 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z5 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r42 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z5 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z5 == 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $z5 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r20
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r51 = (org.apache.ambari.server.topology.LogicalRequest) $r22
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r22 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r51 = (org.apache.ambari.server.topology.LogicalRequest) $r22 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r52 = virtualinvoke r51.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r51 = (org.apache.ambari.server.topology.LogicalRequest) $r22 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r52 = virtualinvoke r51.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = <org.apache.ambari.server.topology.TopologyManager$4: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r52 = virtualinvoke r51.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = <org.apache.ambari.server.topology.TopologyManager$4: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke r52.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r23 = <org.apache.ambari.server.topology.TopologyManager$4: int[] $SwitchMap$org$apache$ambari$server$topology$HostOfferResponse$Answer> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke r52.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r24.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r24 = virtualinvoke r52.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r24.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r23[$i0]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i0 = virtualinvoke $r24.<org.apache.ambari.server.topology.HostOfferResponse$Answer: int ordinal()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r23[$i0] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1:
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $i1 = $r23[$i0] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 1
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if z6 != 0
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r28 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r28.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_PREDICATE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r29 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r50.<java.util.Iterator: void remove()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r29.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: DECLINED_DONE received for host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r50.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke r50.<java.util.Iterator: void remove()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r25 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = virtualinvoke r51.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for matched host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = virtualinvoke r51.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r26)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r26 = virtualinvoke r51.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r26) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r27, r52, r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r27 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r26) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r27, r52, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r27, r52, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r43 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r46 = (org.apache.ambari.server.topology.LogicalRequest) $r31
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r31 = interfaceinvoke $r30.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r46 = (org.apache.ambari.server.topology.LogicalRequest) $r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r47 = virtualinvoke r46.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r46 = (org.apache.ambari.server.topology.LogicalRequest) $r31 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r47 = virtualinvoke r46.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = virtualinvoke r47.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : r47 = virtualinvoke r46.<org.apache.ambari.server.topology.LogicalRequest: org.apache.ambari.server.topology.HostOfferResponse offer(org.apache.ambari.server.state.Host)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = virtualinvoke r47.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r33 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r32 = virtualinvoke r47.<org.apache.ambari.server.topology.HostOfferResponse: org.apache.ambari.server.topology.HostOfferResponse$Answer getAnswer()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r33 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r32 == $r33
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r33 = <org.apache.ambari.server.topology.HostOfferResponse$Answer: org.apache.ambari.server.topology.HostOfferResponse$Answer ACCEPTED> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r32 == $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = new java.lang.RuntimeException
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r32 == $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : if $r32 == $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r34 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r35 = virtualinvoke r46.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : interfaceinvoke $r34.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.onHostRegistered: processing accepted host offer for reserved host = {}", r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r35 = virtualinvoke r46.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r36 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r35)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r35 = virtualinvoke r46.<org.apache.ambari.server.topology.LogicalRequest: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r36 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r35) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r36, r47, r1)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r36 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.ClusterTopology getClusterTopology(java.lang.Long)>($r35) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r36, r47, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 1
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void processAcceptedHostOffer(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostOfferResponse,org.apache.ambari.server.state.host.HostImpl)>($r36, r47, r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : exitmonitor $r11
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : z6 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r37 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r38 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ")
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r38.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LogicalRequest declined host offer of explicitly requested host: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41)
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r37
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : specialinvoke $r37.<java.lang.RuntimeException: void <init>(java.lang.String)>($r41) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.onHostRegistered : throw $r37 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.onHostRegistered : $r44 := @caughtexception
