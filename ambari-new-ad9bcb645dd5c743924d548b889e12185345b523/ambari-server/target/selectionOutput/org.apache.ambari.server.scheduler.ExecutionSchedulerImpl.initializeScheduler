org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r3 = new org.quartz.impl.StdSchedulerFactory >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : specialinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : specialinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r2 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: java.util.Properties getQuartzSchedulerProperties()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r2 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: java.util.Properties getQuartzSchedulerProperties()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r2)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r2 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: java.util.Properties getQuartzSchedulerProperties()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r9 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r10 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to initialize Request Execution Scheduler properties !")
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to initialize Request Execution Scheduler properties !") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r11 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r11 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduler properties: \n{}", r2)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r11.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduler properties: \n{}", r2) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r9.<org.quartz.SchedulerException: void printStackTrace()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r9.<org.quartz.SchedulerException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : return
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r2) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= $r4 = virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()]
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: void initialize(java.util.Properties)>(r2) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r9 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= $r4 = virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r4 = virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= $r4 = virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>()] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r7 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r8 = <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to create Request Execution scheduler !")
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Failed to create Request Execution scheduler !") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r7.<org.quartz.SchedulerException: void printStackTrace()>()
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : virtualinvoke $r7.<org.quartz.SchedulerException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : return
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r4 = virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> = $r4
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r4 = virtualinvoke $r3.<org.quartz.impl.StdSchedulerFactory: org.quartz.Scheduler getScheduler()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r7 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> = $r4 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r6 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r6 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.quartz.Scheduler scheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r5 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.apache.ambari.server.state.scheduler.GuiceJobFactory guiceJobFactory>
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r5 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.apache.ambari.server.state.scheduler.GuiceJobFactory guiceJobFactory> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r6.<org.quartz.Scheduler: void setJobFactory(org.quartz.spi.JobFactory)>($r5)
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r5 = r0.<org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: org.apache.ambari.server.state.scheduler.GuiceJobFactory guiceJobFactory> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r7 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r6.<org.quartz.Scheduler: void setJobFactory(org.quartz.spi.JobFactory)>($r5) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: boolean isInitialized> = 1
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : interfaceinvoke $r6.<org.quartz.Scheduler: void setJobFactory(org.quartz.spi.JobFactory)>($r5) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : $r7 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : <org.apache.ambari.server.scheduler.ExecutionSchedulerImpl: boolean isInitialized> = 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionSchedulerImpl.initializeScheduler : return
