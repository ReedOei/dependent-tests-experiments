org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r6 = r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r7 = interfaceinvoke $r6.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r7 = interfaceinvoke $r6.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r8 = (org.apache.ambari.server.state.Clusters) $r7
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r8 = (org.apache.ambari.server.state.Clusters) $r7 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r9 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r9 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r9)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r3 = interfaceinvoke $r8.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r10 = new java.util.ArrayList
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HDFS")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z0 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r19 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "hdfs-site", "dfs.client.retry.policy.enabled")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z9 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HIVE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z9 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HIVE") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z9 == 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z9 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r20 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "hive-site", "hive.metastore.failure.retries")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z9 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z10 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("OOZIE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z10 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("OOZIE") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z10 == 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r21 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "oozie-env", "content")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z10 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z11 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z11 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z11 != 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z11 != 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r11 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r10, " ")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z11 != 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : return
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r11 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r10, " ") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r11)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r12 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r12 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r12)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r12) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : return
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r21 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "oozie-env", "content") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r21
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r21 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z3 = virtualinvoke r21.<java.lang.String: boolean contains(java.lang.CharSequence)>("-Doozie.connection.retry.count")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r21 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("oozie.client.retry.missing.key", r1, r2)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("oozie.client.retry.missing.key", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r13)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke $r14.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("OOZIE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke $r14.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("OOZIE") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z11 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z3 = virtualinvoke r21.<java.lang.String: boolean contains(java.lang.CharSequence)>("-Doozie.connection.retry.count") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z3 != 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("oozie.client.retry.missing.key", r1, r2)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z11 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r20 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "hive-site", "hive.metastore.failure.retries") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r20
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r20 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r20)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r20 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z10 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("OOZIE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r20) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $i0 > 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $i0 > 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r15 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("hive.client.retry.missing.key", r1, r2)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $i0 > 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z10 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("OOZIE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r15 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("hive.client.retry.missing.key", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke $r16.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("HIVE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke $r16.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("HIVE") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z10 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("OOZIE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : r19 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getProperty(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String,java.lang.String)>(r2, "hdfs-site", "dfs.client.retry.policy.enabled") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r19
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r19 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z6 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r19)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if null == r19 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z9 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HIVE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z6 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r19) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z6 == 0
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r17 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("hdfs.client.retry.enabled.key", r1, r2)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : if $z6 == 0 >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z9 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HIVE")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r17 = virtualinvoke r0.<org.apache.ambari.server.checks.ClientRetryPropertyCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("hdfs.client.retry.enabled.key", r1, r2) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r17)
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $r18 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke $r18.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("HDFS")
org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : virtualinvoke $r18.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.checks.ClientRetryPropertyCheck.perform : $z9 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("HIVE")
