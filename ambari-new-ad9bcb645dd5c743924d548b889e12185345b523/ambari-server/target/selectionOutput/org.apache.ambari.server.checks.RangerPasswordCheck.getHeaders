org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6[0] = r1
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6[0] = r1 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6[1] = r2
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r6[1] = r2 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r6)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $r6) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF8")
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r8 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF8") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r8)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r8) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : r4 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r9)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : r4 = staticinvoke <org.apache.commons.codec.binary.Base64: java.lang.String encodeBase64String(byte[])>($r9) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r10 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r10 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r10[0] = "application/json"
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r10[0] = "application/json" >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r11)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", $r11) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r13 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r13 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r13[0] = "application/json"
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r13[0] = "application/json" >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r13) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", $r14)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", $r14) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r16 = newarray (java.lang.String)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r16 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r17[0] = r4
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r17[0] = r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Basic %s", $r17)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Basic %s", $r17) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r16[0] = $r18
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r16[0] = $r18 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r16) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Authorization", $r19)
org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Authorization", $r19) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.getHeaders : return $r5
