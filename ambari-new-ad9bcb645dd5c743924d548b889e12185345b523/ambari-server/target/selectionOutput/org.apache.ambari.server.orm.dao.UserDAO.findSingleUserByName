org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r5 = r0.<org.apache.ambari.server.orm.dao.UserDAO: com.google.inject.Provider entityManagerProvider> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r6 = interfaceinvoke $r5.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r7 = (javax.persistence.EntityManager) $r6
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r7 = (javax.persistence.EntityManager) $r6 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r2 = interfaceinvoke $r7.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("userByName", class "Lorg/apache/ambari/server/orm/entities/UserEntity;")
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r2 = interfaceinvoke $r7.<javax.persistence.EntityManager: javax.persistence.TypedQuery createNamedQuery(java.lang.String,java.lang.Class)>("userByName", class "Lorg/apache/ambari/server/orm/entities/UserEntity;") >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : interfaceinvoke r2.<javax.persistence.TypedQuery: javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object)>("username", $r8)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : interfaceinvoke r2.<javax.persistence.TypedQuery: javax.persistence.TypedQuery setParameter(java.lang.String,java.lang.Object)>("username", $r8) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r3 = interfaceinvoke r2.<javax.persistence.TypedQuery: java.util.List getResultList()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r3 = interfaceinvoke r2.<javax.persistence.TypedQuery: java.util.List getResultList()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : lookupswitch($i0) {     case 0:
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : lookupswitch($i0) {     case 0: >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : return null
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : lookupswitch($i0) {     case 0: >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : lookupswitch($i0) {     case 0: >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r27 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r27 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z0 == 0
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r24 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r29 = virtualinvoke r4.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r29 = virtualinvoke r4.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r12 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r12 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z1 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r12)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z1 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z1 == 0
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r22 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r13 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r13 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r14 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LDAP>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r14 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LDAP> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z2 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r14)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z2 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z2 == 0
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r20 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LDAP>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r15 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType JWT>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r15 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType JWT> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z3 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r15)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z3 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z3 == 0
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r18 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType JWT>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r16 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType PAM>
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r16 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType PAM> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r17 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r16)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r17 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r17
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r17 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : return $r30
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r18 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType JWT> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r19 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r18)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r19 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r19
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r19 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= return $r30]
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= return $r30] >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : return $r30
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r20 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LDAP> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r21 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r20)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r21 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r20) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r21
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r21 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= return $r30]
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= return $r30] >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : return $r30
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r22 = <org.apache.ambari.server.security.authorization.UserType: org.apache.ambari.server.security.authorization.UserType LOCAL> >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r23 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r22)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r23 = virtualinvoke r29.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r23
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r30 = (org.apache.ambari.server.orm.entities.UserEntity) $r23 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= return $r30]
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= return $r30] >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : return $r30
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r24 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r28 = (org.apache.ambari.server.orm.entities.UserEntity) $r24
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : r28 = (org.apache.ambari.server.orm.entities.UserEntity) $r24 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r25 = virtualinvoke r28.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType getUserType()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r25 = virtualinvoke r28.<org.apache.ambari.server.orm.entities.UserEntity: org.apache.ambari.server.security.authorization.UserType getUserType()>() >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : virtualinvoke r4.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r25, r28)
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : virtualinvoke r4.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r25, r28) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : goto [?= $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $z0 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r11 = (org.apache.ambari.server.orm.entities.UserEntity) $r10
org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : $r11 = (org.apache.ambari.server.orm.entities.UserEntity) $r10 >>>>>>>> org.apache.ambari.server.orm.dao.UserDAO.findSingleUserByName : return $r11
