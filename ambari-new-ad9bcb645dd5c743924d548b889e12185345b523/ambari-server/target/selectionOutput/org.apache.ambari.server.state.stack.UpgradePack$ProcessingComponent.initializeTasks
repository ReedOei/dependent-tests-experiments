org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $z0 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isEmpty(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : return
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $z1 == 0
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : return
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : r4 = (org.apache.ambari.server.state.stack.upgrade.Task) $r5
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : r4 = (org.apache.ambari.server.state.stack.upgrade.Task) $r5 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r6 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type CONFIGURE>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r6 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type CONFIGURE> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r7 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r7 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $r6 != $r7
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $r6 != $r7 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r11 = (org.apache.ambari.server.state.stack.upgrade.ConfigureTask) r4
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $r6 != $r7 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r8 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type CREATE_AND_CONFIGURE>
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r8 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type CREATE_AND_CONFIGURE> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r9 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $r8 != $r9
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $r8 != $r9 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r10 = (org.apache.ambari.server.state.stack.upgrade.CreateAndConfigureTask) r4
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : if $r8 != $r9 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r10 = (org.apache.ambari.server.state.stack.upgrade.CreateAndConfigureTask) r4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r10.<org.apache.ambari.server.state.stack.upgrade.CreateAndConfigureTask: java.lang.String associatedService> = r1
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r10.<org.apache.ambari.server.state.stack.upgrade.CreateAndConfigureTask: java.lang.String associatedService> = r1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r11 = (org.apache.ambari.server.state.stack.upgrade.ConfigureTask) r4 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r11.<org.apache.ambari.server.state.stack.upgrade.ConfigureTask: java.lang.String associatedService> = r1
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : $r11.<org.apache.ambari.server.state.stack.upgrade.ConfigureTask: java.lang.String associatedService> = r1 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : goto [?= (branch)]
org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack$ProcessingComponent.initializeTasks : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
