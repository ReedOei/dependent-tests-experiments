org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if null == r1 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if null == r1 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return null
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if $z0 == 0
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return null
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r7 = null
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r7 = null >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r3 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.codehaus.jackson.map.ObjectMapper mapper>
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r3 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.codehaus.jackson.map.ObjectMapper mapper> >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>(r1, class "Ljava/util/Map;")
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r3 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.codehaus.jackson.map.ObjectMapper mapper> >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r6 = <org.apache.ambari.server.controller.internal.TaskResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to parse task structured output: {}", r1)
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to parse task structured output: {}", r1) >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return r7
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>(r1, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r7 = (java.util.Map) $r4
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>(r1, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r7 = (java.util.Map) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : goto [?= return r7]
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : r7 = (java.util.Map) $r4 >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : $r5 := @caughtexception
org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : goto [?= return r7] >>>>>>>> org.apache.ambari.server.controller.internal.TaskResourceProvider.parseStructuredOutput : return r7
