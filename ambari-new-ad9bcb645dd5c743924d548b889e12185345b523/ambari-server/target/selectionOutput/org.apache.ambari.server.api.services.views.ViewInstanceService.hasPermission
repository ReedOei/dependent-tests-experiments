org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r6 = r0.<org.apache.ambari.server.api.services.views.ViewInstanceService: org.apache.ambari.server.view.ViewRegistry viewRegistry> >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET>
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r5 = <org.apache.ambari.server.api.services.Request$Type: org.apache.ambari.server.api.services.Request$Type GET> >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : if r3 != $r5
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : if r3 != $r5 >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z1 = 1
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : if r3 != $r5 >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z1 = 0
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z1 = 0 >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z0 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r4, $z1)
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z0 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r4, $z1) >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : if $z0 != 0
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r7 = new javax.ws.rs.WebApplicationException
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : return
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r7 = new javax.ws.rs.WebApplicationException >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r8 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN>
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $r8 = <javax.ws.rs.core.Response$Status: javax.ws.rs.core.Response$Status FORBIDDEN> >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : specialinvoke $r7.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response$Status)>($r8)
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : specialinvoke $r7.<javax.ws.rs.WebApplicationException: void <init>(javax.ws.rs.core.Response$Status)>($r8) >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : throw $r7
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z1 = 1 >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : goto [?= $z0 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r4, $z1)]
org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : goto [?= $z0 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r4, $z1)] >>>>>>>> org.apache.ambari.server.api.services.views.ViewInstanceService.hasPermission : $z0 = virtualinvoke $r6.<org.apache.ambari.server.view.ViewRegistry: boolean checkPermission(java.lang.String,java.lang.String,java.lang.String,boolean)>(r1, r2, r4, $z1)
