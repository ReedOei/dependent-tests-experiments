org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r5 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("port_config_type")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>("port_config_type") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z0 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r11 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r18 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r18 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z4 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>("protocol")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z4 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>("protocol") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z4 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r6 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r19 = "http"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r19 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r19
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r6 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("protocol")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("protocol") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8 = (java.lang.String) $r7
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r19 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r19 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z1 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("http")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z1 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("http") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z1 != 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z2 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r19
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z2 = virtualinvoke r19.<java.lang.String: boolean equals(java.lang.Object)>("https") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z2 != 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r19
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9[0] = r19
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9[0] = r19 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9[1] = "http"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r9[1] = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported protocol type %s, falling back to %s", $r9)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported protocol type %s, falling back to %s", $r9) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r10 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r10 = <org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>(r20)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>(r20) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r19 = "http"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r19 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : goto [?= return r19]
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : goto [?= return r19] >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return r19
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r11 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z3 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>("https_property_name")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $z3 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>("https_property_name") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z3 == 0
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r12 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r18 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r12 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("port_config_type")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("port_config_type") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r17 = (java.lang.String) $r13
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r17 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r14 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r14 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties> >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("https_property_name")
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r15 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>("https_property_name") >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r3 = (java.lang.String) $r15
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r3 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r4 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.lang.String getPropertyValueByNameAndConfigType(java.lang.String,java.lang.String,org.apache.ambari.server.state.Cluster,java.lang.String)>(r3, r17, r1, r2)
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : r4 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.lang.String getPropertyValueByNameAndConfigType(java.lang.String,java.lang.String,org.apache.ambari.server.state.Cluster,java.lang.String)>(r3, r17, r1, r2) >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if r4 == null
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if r4 == null >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : return "https"
org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : if r4 == null >>>>>>>> org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider.resolveProtocol : $r18 = r0.<org.apache.ambari.server.controller.metrics.RestMetricsPropertyProvider: java.util.Map metricsProperties>
