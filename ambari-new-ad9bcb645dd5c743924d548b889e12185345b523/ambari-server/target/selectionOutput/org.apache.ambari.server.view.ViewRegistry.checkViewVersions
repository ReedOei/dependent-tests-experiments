org.apache.ambari.server.view.ViewRegistry.checkViewVersions : r3 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ViewEntity: org.apache.ambari.server.view.configuration.ViewConfig getConfiguration()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r4 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMinAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z0 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r4, r2, "minimum", -1, "less than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>()
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $r5 = virtualinvoke r3.<org.apache.ambari.server.view.configuration.ViewConfig: java.lang.String getMaxAmbariVersion()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than")
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z1 = specialinvoke r0.<org.apache.ambari.server.view.ViewRegistry: boolean checkViewVersion(org.apache.ambari.server.orm.entities.ViewEntity,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>(r1, $r5, r2, "maximum", 1, "greater than") >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 0
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : $z2 = 1 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2]
org.apache.ambari.server.view.ViewRegistry.checkViewVersions : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.view.ViewRegistry.checkViewVersions : return $z2
