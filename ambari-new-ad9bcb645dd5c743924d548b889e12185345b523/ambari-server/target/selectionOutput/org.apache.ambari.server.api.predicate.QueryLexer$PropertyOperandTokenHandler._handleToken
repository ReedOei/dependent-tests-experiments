org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r3 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.Set getPropertiesToIgnore()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1)
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : if $z0 != 0
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setPropertyOperand(java.lang.String)>(r1)
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r4 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r4 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $z1 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : if $z1 != 0
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r6 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE VALUE_OPERAND>
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : if $z1 != 0 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r5 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE LOGICAL_OPERATOR>
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r5 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE LOGICAL_OPERATOR> >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setIgnoreSegmentEndToken(org.apache.ambari.server.api.predicate.Token$TYPE)>($r5)
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setIgnoreSegmentEndToken(org.apache.ambari.server.api.predicate.Token$TYPE)>($r5) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : return
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r6 = <org.apache.ambari.server.api.predicate.Token$TYPE: org.apache.ambari.server.api.predicate.Token$TYPE VALUE_OPERAND> >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setIgnoreSegmentEndToken(org.apache.ambari.server.api.predicate.Token$TYPE)>($r6)
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setIgnoreSegmentEndToken(org.apache.ambari.server.api.predicate.Token$TYPE)>($r6) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r7 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r7 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r8 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $r8 = virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: java.util.List getTokenList()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $i0 = interfaceinvoke $r8.<java.util.List: int size()>()
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $i0 = interfaceinvoke $r8.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $i1 = $i0 - 1
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : $i1 = $i0 - 1 >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i1)
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i1) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : goto [?= return]
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : goto [?= return] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : return
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : virtualinvoke r2.<org.apache.ambari.server.api.predicate.QueryLexer$ScanContext: void setPropertyOperand(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : goto [?= return]
org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : goto [?= return] >>>>>>>> org.apache.ambari.server.api.predicate.QueryLexer$PropertyOperandTokenHandler._handleToken : return
