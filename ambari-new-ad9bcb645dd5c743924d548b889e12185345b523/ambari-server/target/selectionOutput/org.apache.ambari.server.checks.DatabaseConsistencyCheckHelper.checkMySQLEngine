org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r5 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r6 = interfaceinvoke $r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r6 = interfaceinvoke $r5.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r0 = (org.apache.ambari.server.configuration.Configuration) $r6
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r0 = (org.apache.ambari.server.configuration.Configuration) $r6 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r7 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r7 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r8 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r8 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r7 == $r8
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r7 == $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $r7 == $r8 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Checking to ensure that the MySQL DB engine type is set to InnoDB")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String)>("Checking to ensure that the MySQL DB engine type is set to InnoDB") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : throw $r23
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r17 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r18 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r17)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : throw $r23
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= throw $r23]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r17 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= throw $r23] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : throw $r23
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r10 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = interfaceinvoke $r10.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = interfaceinvoke $r10.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = interfaceinvoke $r10.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r2 = interfaceinvoke $r10.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r12 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r12 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r12 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r12 = virtualinvoke r0.<org.apache.ambari.server.configuration.Configuration: java.lang.String getDatabaseSchema()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11[0] = $r12
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';", $r11)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';", $r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';", $r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("select TABLE_NAME, ENGINE from information_schema.tables where TABLE_SCHEMA = \'%s\' and LOWER(ENGINE) != \'innodb\';", $r11) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = interfaceinvoke r2.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r13)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = interfaceinvoke r2.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = interfaceinvoke r2.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : r26 = interfaceinvoke r2.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r14 = new java.util.ArrayList
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r21 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r22 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r21)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r21) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r21 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r14 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r14.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r16 = interfaceinvoke r26.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r19
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r19 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during checking MySQL engine to be innodb: ", $r20)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r20[0] = $r19 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during checking MySQL engine to be innodb: ", $r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during checking MySQL engine to be innodb: ", $r20) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r24 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r25 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r24)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r25.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r24) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke r26.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r24 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z1 = interfaceinvoke $r14.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z1 != 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if $z1 != 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15[0] = $r14
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r15[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Found tables with engine type that is not InnoDB : {}", $r15)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Found tables with engine type that is not InnoDB : {}", $r15) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Found tables with engine type that is not InnoDB : {}", $r15) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Found tables with engine type that is not InnoDB : {}", $r15) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : if r26 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r16 = interfaceinvoke r26.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r16 = interfaceinvoke r26.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r16 = interfaceinvoke r26.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("TABLE_NAME") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : goto [?= $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkMySQLEngine : $z0 = interfaceinvoke r26.<java.sql.ResultSet: boolean next()>()
