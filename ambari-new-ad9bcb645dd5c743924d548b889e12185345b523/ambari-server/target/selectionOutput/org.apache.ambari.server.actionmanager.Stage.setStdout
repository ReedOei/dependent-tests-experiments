org.apache.ambari.server.actionmanager.Stage.setStdout : $r4 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : $r5 = staticinvoke <org.apache.ambari.server.actionmanager.Stage: java.lang.String getSafeHost(java.lang.String)>(r1)
org.apache.ambari.server.actionmanager.Stage.setStdout : $r5 = staticinvoke <org.apache.ambari.server.actionmanager.Stage: java.lang.String getSafeHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5)
org.apache.ambari.server.actionmanager.Stage.setStdout : $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : $r7 = (java.util.Map) $r6
org.apache.ambari.server.actionmanager.Stage.setStdout : $r7 = (java.util.Map) $r6 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.actionmanager.Stage.setStdout : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : $r9 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r8
org.apache.ambari.server.actionmanager.Stage.setStdout : $r9 = (org.apache.ambari.server.actionmanager.HostRoleCommand) $r8 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStdout(java.lang.String)>(r3)
org.apache.ambari.server.actionmanager.Stage.setStdout : virtualinvoke $r9.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setStdout(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.setStdout : return
