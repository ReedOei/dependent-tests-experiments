org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if null != r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List tasks>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if null != r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r7 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List tasks>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r7 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List tasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : r3 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $i0 = interfaceinvoke $r6.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $i0 = interfaceinvoke $r6.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r8 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[$i0]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r8 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[$i0] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r9 = interfaceinvoke $r6.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r10 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r9
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r10 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : return $r10
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : r4 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r11
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : r4 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r12 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r12 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : r5 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>($r12, r1)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : r5 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate)>($r12, r1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $z1 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(r5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $z1 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r14 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List tasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List tasks>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r13 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy: java.util.List tasks> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $i1 = interfaceinvoke $r13.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $i1 = interfaceinvoke $r13.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r15 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[$i1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r15 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[$i1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r15)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r17 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r16
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : $r17 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper[]) $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$TaskProxy.getTasksArray : return $r17
