org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r30 = "https://"
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r30 = "http://"
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r30 = "http://" >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z0 == 0
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22 = newarray (java.lang.Object)[3]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10 = newarray (java.lang.Object)[4]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[0] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[0] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[1] = $r11
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[1] = $r11 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[2] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[2] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[3] = r3
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r10[3] = r3 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?get=%s::%s", $r10)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?get=%s::%s", $r10) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r5 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r6 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: java.lang.String requestURL(java.lang.String)>(r5)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r6 = staticinvoke <org.apache.ambari.server.utils.HTTPUtils: java.lang.String requestURL(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if null == r6
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if null == r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z2 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if null == r6 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z2 = virtualinvoke r6.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r13 = new org.apache.ambari.server.stack.MasterHostResolver$1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r13 = new org.apache.ambari.server.stack.MasterHostResolver$1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r13.<org.apache.ambari.server.stack.MasterHostResolver$1: void <init>(org.apache.ambari.server.stack.MasterHostResolver)>(r0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : specialinvoke $r13.<org.apache.ambari.server.stack.MasterHostResolver$1: void <init>(org.apache.ambari.server.stack.MasterHostResolver)>(r0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r7 = virtualinvoke $r13.<org.apache.ambari.server.stack.MasterHostResolver$1: java.lang.reflect.Type getType()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r7 = virtualinvoke $r13.<org.apache.ambari.server.stack.MasterHostResolver$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <org.apache.ambari.server.utils.StageUtils: com.google.gson.Gson getGson()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r7 = virtualinvoke $r13.<org.apache.ambari.server.stack.MasterHostResolver$1: java.lang.reflect.Type getType()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r25 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z3 = interfaceinvoke $r25.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $z3 = interfaceinvoke $r25.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z3 == 0
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r29 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r27 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26 = newarray (java.lang.Object)[3]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26[0] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26[0] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26[1] = r3
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26[1] = r3 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26[2] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r26[2] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r26)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r27.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r26) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r29 = <org.apache.ambari.server.stack.MasterHostResolver: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28 = newarray (java.lang.Object)[4]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[0] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[0] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[1] = r3
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[1] = r3 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[2] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[2] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[3] = $r24
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r28[3] = $r24 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r28)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not load JMX from {}/{} from {}", $r28) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= return null]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= return null] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return null
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <org.apache.ambari.server.utils.StageUtils: com.google.gson.Gson getGson()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15 = virtualinvoke $r14.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r6, r7)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r14 = staticinvoke <org.apache.ambari.server.utils.StageUtils: com.google.gson.Gson getGson()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15 = virtualinvoke $r14.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r6, r7) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r32 = (java.util.Map) $r15
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r15 = virtualinvoke $r14.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r6, r7) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r32 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r16 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("beans")
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : r32 = (java.util.Map) $r15 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r16 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("beans") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r17 = (java.util.ArrayList) $r16
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r16 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("beans") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r17 = (java.util.ArrayList) $r16 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r17 = (java.util.ArrayList) $r16 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r19 = (java.util.HashMap) $r18
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r19 = (java.util.HashMap) $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r19 = (java.util.HashMap) $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r21 = (java.lang.String) $r20
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r20 = virtualinvoke $r19.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : return $r21
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r21 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r24 := @caughtexception
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22[0] = r1
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22[0] = r1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22[1] = $r23
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22[1] = $r23 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22[2] = r2
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r22[2] = r2 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?qry=%s", $r22)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s/jmx?qry=%s", $r22) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r30 = "https://" >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= $r8 = new java.lang.StringBuilder]
org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : goto [?= $r8 = new java.lang.StringBuilder] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.queryJmxBeanValue : $r8 = new java.lang.StringBuilder
