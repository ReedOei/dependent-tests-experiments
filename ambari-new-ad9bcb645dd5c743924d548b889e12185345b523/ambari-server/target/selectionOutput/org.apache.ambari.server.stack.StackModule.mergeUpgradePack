org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r3 = virtualinvoke r1.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getAllGroups()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r6 = new java.util.HashMap
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r6 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r6.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r6.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r47 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r47 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z0 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r43 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r50 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r50 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z1 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r14 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r7 = new java.util.HashMap
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r8 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r8 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r57 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r57 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z2 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z2 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z2 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r9 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void orderGroups(java.util.List,java.util.Map)>(r3, $r7)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke r0.<org.apache.ambari.server.stack.StackModule: void orderGroups(java.util.List,java.util.Map)>(r3, $r7) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : return
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r9 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r58 = (java.lang.String) $r9
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r58 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r10 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r58)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r10 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r58) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r11 = (java.util.List) $r10
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r11 = (java.util.List) $r10 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r59 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r59 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r12 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r12 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r60 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r60 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r12 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z3 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z3 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : virtualinvoke r60.<org.apache.ambari.server.state.stack.upgrade.Grouping: void merge(java.util.Iterator)>(r59)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r58, r60)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r58, r60) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z2 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z2 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z2 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : virtualinvoke r60.<org.apache.ambari.server.state.stack.upgrade.Grouping: void merge(java.util.Iterator)>(r59) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r58, r60)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r14 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r51 = (org.apache.ambari.server.state.stack.UpgradePack) $r14
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r51 = (org.apache.ambari.server.state.stack.UpgradePack) $r14 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r15 = virtualinvoke r51.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getAllGroups()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r15 = virtualinvoke r51.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getAllGroups()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r52 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r52 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z11 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z11 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r16 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z11 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z1 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r16 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r53 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r16
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r53 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r16 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z4 = virtualinvoke r51.<org.apache.ambari.server.state.stack.UpgradePack: boolean isAllTarget()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z4 = virtualinvoke r51.<org.apache.ambari.server.state.stack.UpgradePack: boolean isAllTarget()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z4 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r37 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z4 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r17 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r17 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z5 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r17)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z5 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z5 == 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r21 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z5 == 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r18 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r18 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r18.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r18.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r53)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>(r53) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r19 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r19 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r18)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r18) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r21 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r22 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r22 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r54 = (java.util.List) $r22
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r54 = (java.util.List) $r22 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r23 = interfaceinvoke r54.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r23 = interfaceinvoke r54.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r5 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r23
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r5 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r23 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r24 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r24 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r25 = virtualinvoke r53.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r25 = virtualinvoke r53.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z7 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r25)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z7 = virtualinvoke $r24.<java.lang.Object: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z7 != 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z7 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r28 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z7 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r26 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r26 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r26 != null
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r26 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r27 = r5.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r26 != null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r54.<java.util.List: boolean add(java.lang.Object)>(r53)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r54.<java.util.List: boolean add(java.lang.Object)>(r53) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r27 = r5.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroupEntry> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r27 == null
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r27 == null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r54.<java.util.List: void add(int,java.lang.Object)>(0, r53)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $r27 == null >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r54.<java.util.List: boolean add(java.lang.Object)>(r53)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke r54.<java.util.List: void add(int,java.lang.Object)>(0, r53) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= (branch)]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r28 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected class: ")
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected class: ") >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r31 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r31 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ")
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ") >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r34 = virtualinvoke r53.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r34 = virtualinvoke r53.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r28.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r36)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r28.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : throw $r28
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r37 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r38 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r38 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z9 = interfaceinvoke $r37.<java.util.Set: boolean contains(java.lang.Object)>($r38)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z9 = interfaceinvoke $r37.<java.util.Set: boolean contains(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z9 != 0
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z9 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r39 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : if $z9 != 0 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r17 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r39 = <org.apache.ambari.server.stack.StackModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r40 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r40 = r53.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String addAfterGroup> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r41 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r41 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r42 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r41, 44)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r42 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r41, 44) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r39.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Service Upgrade Pack specified after-group of {}, but that is not found in {}", $r40, $r42)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r39.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Service Upgrade Pack specified after-group of {}, but that is not found in {}", $r40, $r42) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z11 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r43 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r48 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r43
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : r48 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r43 >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r44 = new java.util.ArrayList
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r44 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r44.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : specialinvoke $r44.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>(r48)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r44.<java.util.List: boolean add(java.lang.Object)>(r48) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r45 = r48.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name>
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $r45 = r48.<org.apache.ambari.server.state.stack.upgrade.Grouping: java.lang.String name> >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r44)
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r45, $r44) >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.StackModule.mergeUpgradePack : goto [?= $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.StackModule.mergeUpgradePack : $z0 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()
