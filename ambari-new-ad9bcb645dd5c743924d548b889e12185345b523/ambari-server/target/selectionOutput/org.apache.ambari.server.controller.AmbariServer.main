org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.AmbariServer: void logStartup()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r2 = newarray (com.google.inject.Module)[3]
org.apache.ambari.server.controller.AmbariServer.main : $r2 = newarray (com.google.inject.Module)[3] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r3 = new org.apache.ambari.server.controller.ControllerModule
org.apache.ambari.server.controller.AmbariServer.main : $r3 = new org.apache.ambari.server.controller.ControllerModule >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r3.<org.apache.ambari.server.controller.ControllerModule: void <init>()>()
org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r3.<org.apache.ambari.server.controller.ControllerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r2[0] = $r3
org.apache.ambari.server.controller.AmbariServer.main : $r2[0] = $r3 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r4 = new org.apache.ambari.server.audit.AuditLoggerModule
org.apache.ambari.server.controller.AmbariServer.main : $r4 = new org.apache.ambari.server.audit.AuditLoggerModule >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r4.<org.apache.ambari.server.audit.AuditLoggerModule: void <init>()>()
org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r4.<org.apache.ambari.server.audit.AuditLoggerModule: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r2[1] = $r4
org.apache.ambari.server.controller.AmbariServer.main : $r2[1] = $r4 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r5 = new org.apache.ambari.server.ldap.LdapModule
org.apache.ambari.server.controller.AmbariServer.main : $r5 = new org.apache.ambari.server.ldap.LdapModule >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r5.<org.apache.ambari.server.ldap.LdapModule: void <init>()>()
org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r5.<org.apache.ambari.server.ldap.LdapModule: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r2[2] = $r5
org.apache.ambari.server.controller.AmbariServer.main : $r2[2] = $r5 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r2)
org.apache.ambari.server.controller.AmbariServer.main : r1 = staticinvoke <com.google.inject.Guice: com.google.inject.Injector createInjector(com.google.inject.Module[])>($r2) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : r20 = null
org.apache.ambari.server.controller.AmbariServer.main : r20 = null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariServer.main : r20 = null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r18 = <java.lang.System: java.io.PrintStream err> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("An unexpected error occured during starting Ambari Server.")
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("An unexpected error occured during starting Ambari Server.") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r17.<java.lang.Throwable: void printStackTrace()>()
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r17.<java.lang.Throwable: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r19 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.AmbariServer.main : $r19 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to run the Ambari Server", $r17)
org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke $r19.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Failed to run the Ambari Server", $r17) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : if r20 == null
org.apache.ambari.server.controller.AmbariServer.main : if r20 == null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r20.<org.apache.ambari.server.controller.AmbariServer: void stop()>()
org.apache.ambari.server.controller.AmbariServer.main : if r20 == null >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <java.lang.System: void exit(int)>(-1)
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <java.lang.System: void exit(int)>(-1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : return
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r20.<org.apache.ambari.server.controller.AmbariServer: void stop()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <java.lang.System: void exit(int)>(-1)
org.apache.ambari.server.controller.AmbariServer.main : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Getting the controller")
org.apache.ambari.server.controller.AmbariServer.main : $r6 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Getting the controller") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r7 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;")
org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Getting the controller") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r7 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : r21 = (org.apache.ambari.server.configuration.Configuration) $r7
org.apache.ambari.server.controller.AmbariServer.main : $r7 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/configuration/Configuration;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : r21 = (org.apache.ambari.server.configuration.Configuration) $r7 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $z0 = virtualinvoke r21.<org.apache.ambari.server.configuration.Configuration: boolean isActiveInstance()>()
org.apache.ambari.server.controller.AmbariServer.main : r21 = (org.apache.ambari.server.configuration.Configuration) $r7 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $z0 = virtualinvoke r21.<org.apache.ambari.server.configuration.Configuration: boolean isActiveInstance()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : if $z0 != 0
org.apache.ambari.server.controller.AmbariServer.main : $z0 = virtualinvoke r21.<org.apache.ambari.server.configuration.Configuration: boolean isActiveInstance()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r16 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.AmbariServer.main : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.AmbariServer: void setupProxyAuth()>()
org.apache.ambari.server.controller.AmbariServer.main : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.AmbariServer: void setupProxyAuth()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/GuiceJpaInitializer;")
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.AmbariServer: void setupProxyAuth()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/GuiceJpaInitializer;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkDBVersionCompatible()>()
org.apache.ambari.server.controller.AmbariServer.main : interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/GuiceJpaInitializer;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkDBVersionCompatible()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r9 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariServer;")
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void checkDBVersionCompatible()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r9 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariServer;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : r20 = (org.apache.ambari.server.controller.AmbariServer) $r9
org.apache.ambari.server.controller.AmbariServer.main : $r9 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariServer;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : r20 = (org.apache.ambari.server.controller.AmbariServer) $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup;")
org.apache.ambari.server.controller.AmbariServer.main : r20 = (org.apache.ambari.server.controller.AmbariServer) $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r11 = (org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup) $r10
org.apache.ambari.server.controller.AmbariServer.main : $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/stack/UpdateActiveRepoVersionOnStartup;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r11 = (org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup) $r10 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r11.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void process()>()
org.apache.ambari.server.controller.AmbariServer.main : $r11 = (org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup) $r10 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r11.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void process()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/CertificateManager;")
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r11.<org.apache.ambari.server.stack.UpdateActiveRepoVersionOnStartup: void process()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/CertificateManager;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : r23 = (org.apache.ambari.server.security.CertificateManager) $r12
org.apache.ambari.server.controller.AmbariServer.main : $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/security/CertificateManager;") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : r23 = (org.apache.ambari.server.security.CertificateManager) $r12 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r23.<org.apache.ambari.server.security.CertificateManager: void initRootCert()>()
org.apache.ambari.server.controller.AmbariServer.main : r23 = (org.apache.ambari.server.security.CertificateManager) $r12 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r23.<org.apache.ambari.server.security.CertificateManager: void initRootCert()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.utilities.KerberosChecker: void checkJaasConfiguration()>()
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r23.<org.apache.ambari.server.security.CertificateManager: void initRootCert()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.utilities.KerberosChecker: void checkJaasConfiguration()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r13 = r20.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.view.ViewRegistry viewRegistry>
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.controller.utilities.KerberosChecker: void checkJaasConfiguration()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r13 = r20.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.view.ViewRegistry viewRegistry> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.view.ViewRegistry: void initInstance(org.apache.ambari.server.view.ViewRegistry)>($r13)
org.apache.ambari.server.controller.AmbariServer.main : $r13 = r20.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.view.ViewRegistry viewRegistry> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.view.ViewRegistry: void initInstance(org.apache.ambari.server.view.ViewRegistry)>($r13) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r14 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>()
org.apache.ambari.server.controller.AmbariServer.main : staticinvoke <org.apache.ambari.server.view.ViewRegistry: void initInstance(org.apache.ambari.server.view.ViewRegistry)>($r13) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r14 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r15 = r20.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs>
org.apache.ambari.server.controller.AmbariServer.main : $r14 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : $r15 = r20.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r14.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>($r15)
org.apache.ambari.server.controller.AmbariServer.main : $r15 = r20.<org.apache.ambari.server.controller.AmbariServer: org.apache.ambari.server.configuration.Configuration configs> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r14.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>($r15) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r20.<org.apache.ambari.server.controller.AmbariServer: void run()>()
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke $r14.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: void init(org.apache.ambari.server.configuration.Configuration)>($r15) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r20.<org.apache.ambari.server.controller.AmbariServer: void run()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : goto [?= return]
org.apache.ambari.server.controller.AmbariServer.main : virtualinvoke r20.<org.apache.ambari.server.controller.AmbariServer: void run()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : return
org.apache.ambari.server.controller.AmbariServer.main : $r16 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("This instance of ambari server is not designated as active. Cannot start ambari server.The property active.instance is set to false in ambari.properties")
org.apache.ambari.server.controller.AmbariServer.main : $r16 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("This instance of ambari server is not designated as active. Cannot start ambari server.The property active.instance is set to false in ambari.properties") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : throw $r16
org.apache.ambari.server.controller.AmbariServer.main : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("This instance of ambari server is not designated as active. Cannot start ambari server.The property active.instance is set to false in ambari.properties") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.main : throw $r16 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.main : $r17 := @caughtexception
