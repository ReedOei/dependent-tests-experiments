org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r11 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r11.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r11.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getPropertyMaps(org.apache.ambari.server.controller.spi.Predicate)>(r2)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: java.util.Set getPropertyMaps(org.apache.ambari.server.controller.spi.Predicate)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z0 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z0 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z0 == 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r22 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z6 == 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : return $r11
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r7 = (java.util.Map) $r12
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r7 = (java.util.Map) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r13 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("ClusterInfo/name")
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r13 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>("ClusterInfo/name") >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r8 = (java.lang.String) $r13
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r8 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z1 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z1 = staticinvoke <com.google.common.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z1 != 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r17 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO>
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r14 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO>
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r14 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO> >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r15 = virtualinvoke $r14.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r15 = virtualinvoke $r14.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r24 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r24 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z2 == 0
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r16 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r16 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r9 = (org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity) $r16
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r9 = (org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r4, r9)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r4, r9) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r17 = <org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO remoteAmbariClusterDAO> >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r23 = virtualinvoke $r17.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity findByName(java.lang.String)>(r8)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r23 = virtualinvoke $r17.<org.apache.ambari.server.orm.dao.RemoteAmbariClusterDAO: org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity findByName(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if r23 != null
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if r23 != null >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r19 = new org.apache.ambari.server.controller.spi.NoSuchResourceException
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : if r23 != null >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r18 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r4, r23)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r18 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider: org.apache.ambari.server.controller.spi.Resource toResource(java.util.Set,org.apache.ambari.server.orm.entities.RemoteAmbariClusterEntity)>(r4, r23) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= (branch)]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : goto [?= $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r19 = new org.apache.ambari.server.controller.spi.NoSuchResourceException >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r20[0] = r8
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r20[0] = r8 >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster with name %s cannot be found", $r20)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cluster with name %s cannot be found", $r20) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r19.<org.apache.ambari.server.controller.spi.NoSuchResourceException: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : specialinvoke $r19.<org.apache.ambari.server.controller.spi.NoSuchResourceException: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : throw $r19
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : $r22 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r22)
org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : interfaceinvoke r5.<java.util.Set: boolean add(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.controller.internal.RemoteClusterResourceProvider.getResources : r6 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
