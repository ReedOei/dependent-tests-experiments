org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifestByService()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r27 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getAvailableServiceNames()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r27 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getAvailableServiceNames()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z0 = interfaceinvoke r27.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z0 = interfaceinvoke r27.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r28 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r28 = r27
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r28 = r27 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r10 = new java.util.HashMap
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r10 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : specialinvoke $r10.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : specialinvoke $r10.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r4 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r4 = interfaceinvoke $r28.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z2 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r11 = new org.apache.ambari.server.state.repository.ClusterVersionSummary
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r11 = new org.apache.ambari.server.state.repository.ClusterVersionSummary >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : specialinvoke $r11.<org.apache.ambari.server.state.repository.ClusterVersionSummary: void <init>(java.util.Map)>($r10)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : specialinvoke $r11.<org.apache.ambari.server.state.repository.ClusterVersionSummary: void <init>(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : return $r11
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r5 = (java.lang.String) $r12
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r5 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r13 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r13 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r6 = (org.apache.ambari.server.state.Service) $r14
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r6 = (org.apache.ambari.server.state.Service) $r14 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if null != r6
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if null != r6 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if null != r6 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r15 = new org.apache.ambari.server.state.repository.ServiceVersionSummary
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r15 = new org.apache.ambari.server.state.repository.ServiceVersionSummary >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : specialinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : specialinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r16 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r16 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r15)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r15) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r18 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r18 = interfaceinvoke r6.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r8 = virtualinvoke $r18.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r8 = virtualinvoke $r18.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r19 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r9 = (org.apache.ambari.server.state.repository.ManifestService) $r19
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r9 = (org.apache.ambari.server.state.repository.ManifestService) $r19 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r20 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r20 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r20)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z1 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r25 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r30 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r30 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r31 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r31 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String releaseVersion> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r21 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r21 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : virtualinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void setVersions(java.lang.String,java.lang.String)>($r21, r31)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : virtualinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void setVersions(java.lang.String,java.lang.String)>($r21, r31) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r24 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r24 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r22 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r22 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r23 = $r22.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r23 = $r22.<org.apache.ambari.server.state.repository.Release: org.apache.ambari.server.state.RepositoryType repositoryType> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $r24 != $r23
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $r24 != $r23 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : virtualinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void setUpgrade(boolean)>(1)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $r24 != $r23 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersionsWithBuild(java.lang.String,java.lang.String,int)>(r30, r8, 4)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersionsWithBuild(java.lang.String,java.lang.String,int)>(r30, r8, 4) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $i0 <= 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : virtualinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void setUpgrade(boolean)>(1)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : if $i0 <= 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : virtualinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void setUpgrade(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : virtualinvoke $r15.<org.apache.ambari.server.state.repository.ServiceVersionSummary: void setUpgrade(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= (branch)]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r25 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r30 = virtualinvoke $r25.<org.apache.ambari.server.state.repository.Release: java.lang.String getFullVersion()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r30 = virtualinvoke $r25.<org.apache.ambari.server.state.repository.Release: java.lang.String getFullVersion()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r26 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r26 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r31 = $r26.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : r31 = $r26.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $r21 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $r21 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r21 = r9.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String version>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r28 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $r10 = new java.util.HashMap]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : goto [?= $r10 = new java.util.HashMap] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getClusterSummary : $r10 = new java.util.HashMap
