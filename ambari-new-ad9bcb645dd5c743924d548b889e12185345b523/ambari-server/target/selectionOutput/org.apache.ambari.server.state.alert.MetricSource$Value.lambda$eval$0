org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r1 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("var")
org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("var") >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)
org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0) >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.alert.MetricSource$Value.lambda$eval$0 : return $r4
