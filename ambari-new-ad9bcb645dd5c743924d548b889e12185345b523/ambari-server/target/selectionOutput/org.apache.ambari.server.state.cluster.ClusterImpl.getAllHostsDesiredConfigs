org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r4 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r3 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName>
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r3 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostIdsForCluster(java.lang.String)>($r3)
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r3 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String clusterName> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r7 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r8 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : return $r8
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostIdsForCluster(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : r1 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r5 = interfaceinvoke $r4.<org.apache.ambari.server.state.Clusters: java.util.Map getHostIdsForCluster(java.lang.String)>($r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r7 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : r1 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : goto [?= $r6 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map getHostsDesiredConfigs(java.util.Collection)>(r1)]
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : r1 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r7 := @caughtexception
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : goto [?= $r6 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map getHostsDesiredConfigs(java.util.Collection)>(r1)] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map getHostsDesiredConfigs(java.util.Collection)>(r1)
org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.util.Map getHostsDesiredConfigs(java.util.Collection)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.getAllHostsDesiredConfigs : return $r6
