org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : $r2 = <org.apache.ambari.server.controller.internal.ExtensionResourceProvider: java.util.Map keyPropertyIds>
org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : $r2 = <org.apache.ambari.server.controller.internal.ExtensionResourceProvider: java.util.Map keyPropertyIds> >>>>>>>> org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3)
org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3) >>>>>>>> org.apache.ambari.server.controller.internal.ExtensionResourceProvider.getPKPropertyIds : return $r1
