org.apache.ambari.server.configuration.Configuration.readConfigFile : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/configuration/Configuration;"
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/configuration/Configuration;" >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties")
org.apache.ambari.server.configuration.Configuration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("ambari.properties") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r7 = new java.lang.RuntimeException
org.apache.ambari.server.configuration.Configuration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = new java.io.InputStreamReader
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r5 = new java.io.InputStreamReader >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r10 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r6 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, $r6)
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, $r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r10 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, $r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, $r6) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.Reader)>($r5)
org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.Reader)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r10 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.Reader)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.Reader)>($r5) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>()
org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r10 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.configuration.Configuration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : goto [?= return $r2]
org.apache.ambari.server.configuration.Configuration.readConfigFile : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : return $r2
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r9 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t read configuration file ambari.properties", $r8)
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t read configuration file ambari.properties", $r8) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r9
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r11 = <org.apache.ambari.server.configuration.Configuration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("No configuration file ambari.properties found in classpath.", $r10)
org.apache.ambari.server.configuration.Configuration.readConfigFile : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("No configuration file ambari.properties found in classpath.", $r10) >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : goto [?= return $r2]
org.apache.ambari.server.configuration.Configuration.readConfigFile : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : return $r2
org.apache.ambari.server.configuration.Configuration.readConfigFile : $r7 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath")
org.apache.ambari.server.configuration.Configuration.readConfigFile : specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("ambari.properties not found in classpath") >>>>>>>> org.apache.ambari.server.configuration.Configuration.readConfigFile : throw $r7
