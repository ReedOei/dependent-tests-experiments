org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : $r1 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0)
org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0) >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2)
org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r2) >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : $r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r1)
org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : $r3 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: org.apache.ambari.server.controller.spi.Request getReadRequest(java.util.Set)>($r1) >>>>>>>> org.apache.ambari.server.controller.utilities.PropertyHelper.getReadRequest : return $r3
