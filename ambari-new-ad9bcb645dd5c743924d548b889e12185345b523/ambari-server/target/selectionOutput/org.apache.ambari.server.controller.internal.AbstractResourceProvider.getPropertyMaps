org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : specialinvoke $r6.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : specialinvoke $r6.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $z0 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProvider: boolean specifiesUniqueResource(org.apache.ambari.server.controller.spi.Predicate)>(r2)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $z0 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProvider: boolean specifiesUniqueResource(org.apache.ambari.server.controller.spi.Predicate)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : if $z0 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r11 = new java.util.HashMap
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r7 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Predicate)>(r2)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r7 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractResourceProvider: java.util.Set getResources(org.apache.ambari.server.controller.spi.Predicate)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : r14 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : r14 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : if $z1 == 0
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : return $r6
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : r4 = (org.apache.ambari.server.controller.spi.Resource) $r8
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : r4 = (org.apache.ambari.server.controller.spi.Resource) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r9 = new java.util.HashMap
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r9 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r10 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r4)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r10 = staticinvoke <org.apache.ambari.server.controller.utilities.PropertyHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Resource)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : specialinvoke $r9.<java.util.HashMap: void <init>(java.util.Map)>($r10)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : specialinvoke $r9.<java.util.HashMap: void <init>(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r9.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r9.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r11 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r12 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Predicate)>(r2)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : $r12 = staticinvoke <org.apache.ambari.server.controller.utilities.PredicateHelper: java.util.Map getProperties(org.apache.ambari.server.controller.spi.Predicate)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>($r12)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : specialinvoke $r11.<java.util.HashMap: void <init>(java.util.Map)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r11.<java.util.Map: void putAll(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r11.<java.util.Map: void putAll(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r11)
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : goto [?= return $r6]
org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : goto [?= return $r6] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractResourceProvider.getPropertyMaps : return $r6
