org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r11 = "version1" >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r6 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r6 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r12 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r6 = r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: org.apache.ambari.server.controller.AmbariManagementController managementController> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r10 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[0] = r2
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[0] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[1] = r1
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[1] = r1 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[2] = "version1"
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[2] = "version1" >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[3] = $r8
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r9[3] = $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Unable to lookup the desired configuration tag for {} on cluster {}, defaulting to {}", $r9)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : interfaceinvoke $r10.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Unable to lookup the desired configuration tag for {} on cluster {}, defaulting to {}", $r9) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : return r11
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r12 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r3 = interfaceinvoke r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r12 = interfaceinvoke $r6.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r3 = interfaceinvoke r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r3 = interfaceinvoke r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: java.util.Map getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r5 = (org.apache.ambari.server.state.DesiredConfig) $r7
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r7 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r5 = (org.apache.ambari.server.state.DesiredConfig) $r7 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : if r5 == null
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r11 = virtualinvoke r5.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : goto [?= return r11]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : if r5 == null >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : goto [?= return r11] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : return r11
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r11 = virtualinvoke r5.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : goto [?= return r11]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : r11 = virtualinvoke r5.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getDesiredConfigVersion : $r8 := @caughtexception
