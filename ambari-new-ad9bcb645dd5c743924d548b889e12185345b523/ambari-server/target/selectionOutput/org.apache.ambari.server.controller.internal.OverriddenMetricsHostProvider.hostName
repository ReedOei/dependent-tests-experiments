org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $z0 = specialinvoke r0.<org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider: boolean hasScheme(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : if $z0 == 0
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r7 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r2 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r2 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("any://")
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("any://") >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r5)
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r8 = virtualinvoke $r6.<java.net.URI: java.lang.String getHost()>()
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r8 = virtualinvoke $r6.<java.net.URI: java.lang.String getHost()>() >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : return $r8
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r7 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String getHost()>()
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String getHost()>() >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : goto [?= return $r8]
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : goto [?= return $r8] >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.hostName : return $r8
