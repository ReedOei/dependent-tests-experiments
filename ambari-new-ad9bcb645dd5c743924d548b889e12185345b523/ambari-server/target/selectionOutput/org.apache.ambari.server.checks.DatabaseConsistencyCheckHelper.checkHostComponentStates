org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r7 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("Checking host component states count equals host component desired states count")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("Checking host component states count equals host component desired states count") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r8 = new java.util.HashMap
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r35 = null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r35 = null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection>
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void ensureConnection()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r26 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r25)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r26.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r25) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : throw $r31
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r32 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r33 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r32)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r33.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r32) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : throw $r31
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= throw $r31]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r32 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= throw $r31] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : throw $r31
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r25 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r9 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: java.sql.Connection connection> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r35 = interfaceinvoke $r9.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r35 = interfaceinvoke $r9.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r35 = interfaceinvoke $r9.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r35 = interfaceinvoke $r9.<java.sql.Connection: java.sql.Statement createStatement(int,int)>(1005, 1008) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentstate")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentstate") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentstate") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentstate") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentdesiredstate")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28[0] = $r27
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28[0] = $r27 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during check for same count of host component states and host component desired states: ", $r28)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r28[0] = $r27 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during check for same count of host component states and host component desired states: ", $r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Exception occurred during check for same count of host component states and host component desired states: ", $r28) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r22 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r21)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r21) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r20 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r19)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r19) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r19 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r21 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentdesiredstate") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r10 = newarray (java.lang.Object)[0]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r10 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r10 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r10 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!", $r10)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!", $r10) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!", $r10) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Your host component states (hostcomponentstate table) count not equals host component desired states (hostcomponentdesiredstate table) count!", $r10) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r36 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r36 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r36 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r36 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r12 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z4 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r34 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r29 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r30 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r29)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during result set closing procedure: ", $r29) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r24 = <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r23)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r24.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception occurred during statement closing procedure: ", $r23) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r35.<java.sql.Statement: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r23 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : return
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke r34.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r29 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if r35 == null
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r12 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r12 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r12 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r5 = (java.util.Map$Entry) $r12
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r5 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r5 = (java.util.Map$Entry) $r12 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r14 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[0] = $r14
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r15 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[1] = $r15
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[1] = $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[1] = $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r13[1] = $r15 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r13)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : staticinvoke <org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper: void warning(java.lang.String,java.lang.Object[])>("Component {} on host with id {}, has more than one host component state (hostcomponentstate table)!", $r13) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z4 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r16 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r16 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r16 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r16 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("component_name") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r17 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r17 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r17 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r17 = interfaceinvoke r34.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("host_id") >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r17) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z0 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r10 = newarray (java.lang.Object)[0]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select component_name, host_id from hostcomponentstate group by component_name, host_id having count(component_name) > 1")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 == i2 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if i0 != i1
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i2 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z1 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) FROM hostcomponentstate hcs JOIN hostcomponentdesiredstate hcds ON hcs.service_name=hcds.service_name AND hcs.component_name=hcds.component_name AND hcs.host_id=hcds.host_id")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i1 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z2 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1)
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : r34 = interfaceinvoke r35.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>("select count(*) from hostcomponentdesiredstate")
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : i0 = interfaceinvoke r34.<java.sql.ResultSet: int getInt(int)>(1) >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r27 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $r31 := @caughtexception
org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : goto [?= $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.checks.DatabaseConsistencyCheckHelper.checkHostComponentStates : $z3 = interfaceinvoke r34.<java.sql.ResultSet: boolean next()>()
