org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r2 = new java.net.URL >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r2 = new java.net.URL >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r20 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while validating if request is secure ")
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while validating if request is secure ") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r23)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r20.<org.slf4j.Logger: void warn(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r10 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r10 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r9 = new java.lang.StringBuilder
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r9 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request ")
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request ") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match any pattern.")
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match any pattern.") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r14)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r3 = "https"
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r3 = "https" >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r4 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r3 = "https" >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r4 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r4 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r16 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r5 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z0 != 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r5 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z1 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/cert/ca(/?)", $r5)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r5 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z1 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/cert/ca(/?)", $r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z1 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z1 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/cert/ca(/?)", $r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z1 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/connection_info", $r6)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r6 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/connection_info", $r6) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z2 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/connection_info", $r6) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z2 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z3 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/certs/[^/0-9][^/]*", $r7)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r7 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z3 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/certs/[^/0-9][^/]*", $r7) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z3 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z3 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/certs/[^/0-9][^/]*", $r7) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r8 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>()
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z3 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r8 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z4 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/resources/.*", $r8)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r8 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z4 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/resources/.*", $r8) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $z4 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>("/resources/.*", $r8) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : if $z4 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : goto [?= $r10 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>]
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : goto [?= $r10 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r10 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r16 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15 = newarray (java.lang.Object)[1]
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r16 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15[0] = r1
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15[0] = r1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request %s is not using HTTPS", $r15)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r15[0] = r1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request %s is not using HTTPS", $r15) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>($r17)
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request %s is not using HTTPS", $r15) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : return 0
org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : interfaceinvoke $r16.<org.slf4j.Logger: void warn(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.isRequestAllowed : $r18 := @caughtexception
