org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r3 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r4 = new org.apache.ambari.server.stack.StackDirectory$2
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r4 = new org.apache.ambari.server.stack.StackDirectory$2 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r4.<org.apache.ambari.server.stack.StackDirectory$2: void <init>(org.apache.ambari.server.stack.StackDirectory)>(r0)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r4 = new org.apache.ambari.server.stack.StackDirectory$2 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r23 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r22 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r22 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r21[0] = $r22
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not read role command order info %s", $r21)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not read role command order info %s", $r21) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, $r20)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r23.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, $r20) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : return
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r4.<org.apache.ambari.server.stack.StackDirectory$2: void <init>(org.apache.ambari.server.stack.StackDirectory)>(r0) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r5 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r4.<org.apache.ambari.server.stack.StackDirectory$2: void <init>(org.apache.ambari.server.stack.StackDirectory)>(r0) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r5 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : if $r5 == null
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : if $r5 == null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r15 = new java.io.File
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : if $r5 == null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r6 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r6 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r7 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r6 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r7 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain role command order file", $r7)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r7 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain role command order file", $r7) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r8 = new java.util.HashMap
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain role command order file", $r7) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : r26 = $r8
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : r26 = $r8 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r9 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r9 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r9.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void <init>(java.util.HashMap)>(r26)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r9 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r9.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void <init>(java.util.HashMap)>(r26) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> = $r9
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r9.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void <init>(java.util.HashMap)>(r26) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> = $r9 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r10 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r10 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $z0 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r10 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $z0 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : if $z0 == 0
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $z0 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r12 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : goto [?= return]
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : goto [?= return] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : return
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r12 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r11 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r11 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Role Command Order for {}", $r11)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r11 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Role Command Order for {}", $r11) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r14 = r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r12.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Role Command Order for {}", $r11) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r14 = r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r13 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r13 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : virtualinvoke $r14.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void printRoleCommandOrder(org.slf4j.Logger)>($r13)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r13 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : virtualinvoke $r14.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void printRoleCommandOrder(org.slf4j.Logger)>($r13) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : goto [?= return]
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : virtualinvoke $r14.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void printRoleCommandOrder(org.slf4j.Logger)>($r13) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r15 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r16 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r16 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r16)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r16 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String rcoFilePath> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r17 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>($r15, $r4)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : specialinvoke $r15.<java.io.File: void <init>(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r17 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>($r15, $r4) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : r26 = (java.util.HashMap) $r17
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r17 = virtualinvoke $r3.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>($r15, $r4) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : r26 = (java.util.HashMap) $r17 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r18 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r18 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r19 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r18 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r19 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Role command order info was loaded from file: {}", $r19)
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r19 = virtualinvoke $r15.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Role command order info was loaded from file: {}", $r19) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : goto [?= $r9 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder]
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : interfaceinvoke $r18.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Role command order info was loaded from file: {}", $r19) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r20 := @caughtexception
org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : goto [?= $r9 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseRoleCommandOrder : $r9 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder
