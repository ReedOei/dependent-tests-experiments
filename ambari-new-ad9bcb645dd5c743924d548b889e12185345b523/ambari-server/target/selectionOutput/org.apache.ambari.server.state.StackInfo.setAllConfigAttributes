org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : r0.<org.apache.ambari.server.state.StackInfo: java.util.Map configTypes> = $r4
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : r0.<org.apache.ambari.server.state.StackInfo: java.util.Map configTypes> = $r4 >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : if $z0 == 0
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : return
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : r3 = (java.util.Map$Entry) $r6
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : r3 = (java.util.Map$Entry) $r6 >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r8 = (java.lang.String) $r7
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r8 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r10 = (java.util.Map) $r9
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $r10 = (java.util.Map) $r9 >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: void setConfigTypeAttributes(java.lang.String,java.util.Map)>($r8, $r10)
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : virtualinvoke r0.<org.apache.ambari.server.state.StackInfo: void setConfigTypeAttributes(java.lang.String,java.util.Map)>($r8, $r10) >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.StackInfo.setAllConfigAttributes : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
