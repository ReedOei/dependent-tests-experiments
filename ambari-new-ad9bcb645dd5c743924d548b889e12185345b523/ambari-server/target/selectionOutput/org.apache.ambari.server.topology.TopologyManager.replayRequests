org.apache.ambari.server.topology.TopologyManager.replayRequests : $r8 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: Entering")
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: Entering") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : z8 = 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : z8 = 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r9 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z0 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r10 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r10 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: Exit")
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: Exit") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : return
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r3 = (java.util.Map$Entry) $r11
org.apache.ambari.server.topology.TopologyManager.replayRequests : r3 = (java.util.Map$Entry) $r11 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r12 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r4 = (org.apache.ambari.server.topology.ClusterTopology) $r12
org.apache.ambari.server.topology.TopologyManager.replayRequests : r4 = (org.apache.ambari.server.topology.ClusterTopology) $r12 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r13 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterTopologyMap> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r14 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r14 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r4)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, r4) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r16 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r17 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r17 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $l0 = virtualinvoke $r17.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $l0 = virtualinvoke $r17.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r5 = interfaceinvoke $r16.<org.apache.ambari.server.topology.PersistedState: org.apache.ambari.server.topology.LogicalRequest getProvisionRequest(long)>($l0)
org.apache.ambari.server.topology.TopologyManager.replayRequests : r5 = interfaceinvoke $r16.<org.apache.ambari.server.topology.PersistedState: org.apache.ambari.server.topology.LogicalRequest getProvisionRequest(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if r5 == null
org.apache.ambari.server.topology.TopologyManager.replayRequests : if r5 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r40 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : if r5 == null >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r18 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r18 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r19 = (java.util.List) $r18
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r19 = (java.util.List) $r18 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r6 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r6 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z9 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z9 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r26 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z9 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if z8 != 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if z8 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : z8 = 1
org.apache.ambari.server.topology.TopologyManager.replayRequests : if z8 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : z8 = 1 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r20 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r21 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r21 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $l1 = virtualinvoke $r21.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $l1 = virtualinvoke $r21.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z1 = virtualinvoke $r20.<org.apache.ambari.server.topology.AmbariContext: boolean isTopologyResolved(long)>($l1)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z1 = virtualinvoke $r20.<org.apache.ambari.server.topology.AmbariContext: boolean isTopologyResolved(long)>($l1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z1 != 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r22 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z1 != 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r22 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: no config with TOPOLOGY_RESOLVED found, adding cluster config request")
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>("TopologyManager.replayRequests: no config with TOPOLOGY_RESOLVED found, adding cluster config request") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r23 = new org.apache.ambari.server.topology.ClusterConfigurationRequest
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r23 = new org.apache.ambari.server.topology.ClusterConfigurationRequest >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r25 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r25 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.AmbariContext ambariContext> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r24 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor stackAdvisorBlueprintProcessor>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r24 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor stackAdvisorBlueprintProcessor> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r23.<org.apache.ambari.server.topology.ClusterConfigurationRequest: void <init>(org.apache.ambari.server.topology.AmbariContext,org.apache.ambari.server.topology.ClusterTopology,boolean,org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor)>($r25, r4, 0, $r24)
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r23.<org.apache.ambari.server.topology.ClusterConfigurationRequest: void <init>(org.apache.ambari.server.topology.AmbariContext,org.apache.ambari.server.topology.ClusterTopology,boolean,org.apache.ambari.server.api.services.stackadvisor.StackAdvisorBlueprintProcessor)>($r25, r4, 0, $r24) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addClusterConfigRequest(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.ClusterConfigurationRequest)>(r4, $r23)
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: void addClusterConfigRequest(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.ClusterConfigurationRequest)>(r4, $r23) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r26 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r7 = (org.apache.ambari.server.topology.LogicalRequest) $r26
org.apache.ambari.server.topology.TopologyManager.replayRequests : r7 = (org.apache.ambari.server.topology.LogicalRequest) $r26 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r27 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r27 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map allRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $l2 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $l2 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r7)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z2 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: boolean hasPendingHostRequests()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z2 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: boolean hasPendingHostRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z2 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r30 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection outstandingRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r30.<java.util.Collection: boolean add(java.lang.Object)>(r7)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r30.<java.util.Collection: boolean add(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r31 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r31 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getReservedHosts()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r63 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r63 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z4 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z4 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z4 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r37 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z4 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r32 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getCompletedHostRequests()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r32 = virtualinvoke r7.<org.apache.ambari.server.topology.LogicalRequest: java.util.Collection getCompletedHostRequests()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r65 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r65 = interfaceinvoke $r32.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z5 == 0
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r33 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z9 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r33 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r66 = (org.apache.ambari.server.topology.HostRequest) $r33
org.apache.ambari.server.topology.TopologyManager.replayRequests : r66 = (org.apache.ambari.server.topology.HostRequest) $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r66 = (org.apache.ambari.server.topology.HostRequest) $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r66 = (org.apache.ambari.server.topology.HostRequest) $r33 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r67 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : r67 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r67 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : r67 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r34 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r34 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r34 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r34 = virtualinvoke r66.<org.apache.ambari.server.topology.HostRequest: java.lang.String getHostgroupName()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r34, r67)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r34, r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r34, r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: void addHostToTopology(java.lang.String,java.lang.String)>($r34, r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r35 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r35 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r35 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r35 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Collection hostsToIgnore> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r35.<java.util.Collection: boolean add(java.lang.Object)>(r67)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r35.<java.util.Collection: boolean add(java.lang.Object)>(r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r35.<java.util.Collection: boolean add(java.lang.Object)>(r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r35.<java.util.Collection: boolean add(java.lang.Object)>(r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r36 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r36 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r36 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r36 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r67)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r51 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r57 := @caughtexception
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r36.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("TopologyManager.replayRequests: host name = {} has been added to cluster and to ignore list.", r67) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r59 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r58 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r58 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r58.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add host to topology while replaying requests: ")
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to add host to topology while replaying requests: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r59.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r62, $r57)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r59.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r62, $r57) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r53 = <org.apache.ambari.server.topology.TopologyManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r52 = new java.lang.StringBuilder
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r52 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : specialinvoke $r52.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add host to multiple host groups while replaying requests: ")
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to add host to multiple host groups while replaying requests: ") >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r53.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r56, $r51)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r53.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r56, $r51) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z5 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r37 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : r64 = (java.lang.String) $r37
org.apache.ambari.server.topology.TopologyManager.replayRequests : r64 = (java.lang.String) $r37 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r38 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r38 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map reservedHosts> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r7)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r64, r7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z4 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.TopologyManager.replayRequests : goto [?= $z4 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z4 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r40 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r41 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r41 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r5)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r5) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r43 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreationFinished>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r43 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreationFinished> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r44 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r44 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r45 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests>
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r45 = r0.<org.apache.ambari.server.topology.TopologyManager: java.util.Map clusterProvisionWithBlueprintCreateRequests> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r46 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r46 = interfaceinvoke r4.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r47 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>($r46)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r47 = interfaceinvoke $r45.<java.util.Map: java.lang.Object get(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r48 = (org.apache.ambari.server.topology.LogicalRequest) $r47
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r48 = (org.apache.ambari.server.topology.LogicalRequest) $r47 >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $z7 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isLogicalRequestFinished(org.apache.ambari.server.topology.LogicalRequest)>($r48)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $z7 = specialinvoke r0.<org.apache.ambari.server.topology.TopologyManager: boolean isLogicalRequestFinished(org.apache.ambari.server.topology.LogicalRequest)>($r48) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7)
org.apache.ambari.server.topology.TopologyManager.replayRequests : $r49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r49)
org.apache.ambari.server.topology.TopologyManager.replayRequests : interfaceinvoke $r43.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, $r49) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.replayRequests : $r18 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>()
