org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r3 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r4 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r5 = virtualinvoke $r3.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByCluster(java.lang.String)>($r4)
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r5 = virtualinvoke $r3.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findByCluster(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : return
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : r2 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r6
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : r2 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r6 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r8 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED>
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r8 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $z1 = virtualinvoke $r7.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r8)
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $z1 = virtualinvoke $r7.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : if $z1 != 0
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r9 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED>
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r9 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState NOT_REQUIRED> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r9)
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : $r10 = r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : virtualinvoke $r10.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r2)
org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : virtualinvoke $r10.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.resetHostVersions : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
