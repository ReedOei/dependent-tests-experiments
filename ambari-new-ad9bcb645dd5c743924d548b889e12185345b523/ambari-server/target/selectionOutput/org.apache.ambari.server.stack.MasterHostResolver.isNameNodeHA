org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r4 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : r1 = interfaceinvoke $r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : r1 = interfaceinvoke $r4.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if r1 == null
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if r1 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("HDFS")
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if r1 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : return 0
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("HDFS") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $z0 == 0
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r5 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : return 0
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r5 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : r2 = interfaceinvoke $r5.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>("HDFS", "SECONDARY_NAMENODE")
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : r2 = interfaceinvoke $r5.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>("HDFS", "SECONDARY_NAMENODE") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r6 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster>
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r6 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.Cluster m_cluster> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : r3 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE")
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : r3 = interfaceinvoke $r6.<org.apache.ambari.server.state.Cluster: java.util.Set getHosts(java.lang.String,java.lang.String)>("HDFS", "NAMENODE") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i0 = interfaceinvoke r2.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i0 = interfaceinvoke r2.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i0 != 1
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i0 != 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i2 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i0 != 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i1 = interfaceinvoke r3.<java.util.Set: int size()>()
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i1 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i1 <= 1
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : return 1
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r7 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $r7 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Unable to determine if cluster has NameNode HA.")
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : specialinvoke $r7.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Unable to determine if cluster has NameNode HA.") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : throw $r7
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i2 = interfaceinvoke r3.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i2 != 1
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i2 != 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : return 0
org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : if $i2 != 1 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.isNameNodeHA : $i1 = interfaceinvoke r3.<java.util.Set: int size()>()
