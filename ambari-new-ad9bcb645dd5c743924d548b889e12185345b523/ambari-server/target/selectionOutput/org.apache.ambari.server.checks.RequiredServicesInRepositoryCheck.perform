org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r3 = virtualinvoke r2.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r9 = r0.<org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r9 = r0.<org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r10 = interfaceinvoke $r9.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r10 = interfaceinvoke $r9.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r11 = (org.apache.ambari.server.state.Clusters) $r10
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r11 = (org.apache.ambari.server.state.Clusters) $r10 >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r4 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r4 = interfaceinvoke $r11.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r5 = virtualinvoke r0.<org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r5 = virtualinvoke r0.<org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck: org.apache.ambari.server.state.repository.VersionDefinitionXml getVersionDefinitionXml(org.apache.ambari.server.controller.PrereqCheckRequest)>(r2) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r6 = virtualinvoke r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getMissingDependencies(org.apache.ambari.server.state.Cluster)>(r4)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r6 = virtualinvoke r5.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Set getMissingDependencies(org.apache.ambari.server.state.Cluster)>(r4) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $z0 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $z0 = interfaceinvoke r6.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : if $z0 != 0
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r7 = virtualinvoke r0.<org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r12 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus PASS>
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r12 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus PASS> >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r12)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r12) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : return
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r7 = virtualinvoke r0.<org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r13 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r13 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r14 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r6, ", ")
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r14 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r6, ", ") >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r13[0] = $r14
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r13[0] = $r14 >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The following services are also required to be included in this upgrade: %s", $r13)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The following services are also required to be included in this upgrade: %s", $r13) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r15 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r15 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : specialinvoke $r15.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r6)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : specialinvoke $r15.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r6) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r15)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailedOn(java.util.LinkedHashSet)>($r15) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r16 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r16 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r16)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r16) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r17 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r17 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r17[0] = r8
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r17[0] = r8 >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r7, $r17)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r7, $r17) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r18)
org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.checks.RequiredServicesInRepositoryCheck.perform : return
