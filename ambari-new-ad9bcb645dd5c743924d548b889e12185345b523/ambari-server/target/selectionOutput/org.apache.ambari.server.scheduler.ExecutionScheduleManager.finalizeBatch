org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r9 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r2 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r2 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r10 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Map getAllRequestExecutions()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r10 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: java.util.Map getAllRequestExecutions()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r3 = (org.apache.ambari.server.state.scheduler.RequestExecution) $r12
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r3 = (org.apache.ambari.server.state.scheduler.RequestExecution) $r12 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r3 != null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r3 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r27 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r3 != null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.scheduler.RequestExecution: org.apache.ambari.server.state.scheduler.Batch getBatch()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r44 = null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r44 = null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r4 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r4 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r45 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r4 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r44 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r44 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r44 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if z2 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if z2 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r13 = <org.apache.ambari.server.state.scheduler.RequestExecution$Status: org.apache.ambari.server.state.scheduler.RequestExecution$Status COMPLETED>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if z2 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r13 = <org.apache.ambari.server.state.scheduler.RequestExecution$Status: org.apache.ambari.server.state.scheduler.RequestExecution$Status COMPLETED> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : interfaceinvoke r3.<org.apache.ambari.server.state.scheduler.RequestExecution: void updateStatus(org.apache.ambari.server.state.scheduler.RequestExecution$Status)>($r13)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : interfaceinvoke r3.<org.apache.ambari.server.state.scheduler.RequestExecution: void updateStatus(org.apache.ambari.server.state.scheduler.RequestExecution$Status)>($r13) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r15 = virtualinvoke r44.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r15 = virtualinvoke r44.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r5 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: java.lang.String getJobName(java.lang.Long,java.lang.Long)>($r14, $r15)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r5 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: java.lang.String getJobName(java.lang.Long,java.lang.Long)>($r14, $r15) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r6 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>(r5, "LinearExecutionJobs")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r6 = staticinvoke <org.quartz.JobKey: org.quartz.JobKey jobKey(java.lang.String,java.lang.String)>(r5, "LinearExecutionJobs") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r7 = interfaceinvoke $r16.<org.apache.ambari.server.scheduler.ExecutionScheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r16 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r38 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r40 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r39 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r39 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r39.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retrieve job details from scheduler. job: ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retrieve job details from scheduler. job: ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : interfaceinvoke $r40.<org.slf4j.Logger: void warn(java.lang.String)>($r43)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : interfaceinvoke $r40.<org.slf4j.Logger: void warn(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : virtualinvoke $r38.<org.quartz.SchedulerException: void printStackTrace()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : virtualinvoke $r38.<org.quartz.SchedulerException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r7 = interfaceinvoke $r16.<org.apache.ambari.server.scheduler.ExecutionScheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r7 = interfaceinvoke $r16.<org.apache.ambari.server.scheduler.ExecutionScheduler: org.quartz.JobDetail getJobDetail(org.quartz.JobKey)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r38 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r7 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r7 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r17 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r7 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if z2 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r17 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r47 = interfaceinvoke $r17.<org.apache.ambari.server.scheduler.ExecutionScheduler: java.util.List getTriggersForJob(org.quartz.JobKey)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r17 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r34 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r33 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r33 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retrieve triggers for job: ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to retrieve triggers for job: ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String)>($r37)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : interfaceinvoke $r34.<org.slf4j.Logger: void warn(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : virtualinvoke $r32.<org.quartz.SchedulerException: void printStackTrace()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : virtualinvoke $r32.<org.quartz.SchedulerException: void printStackTrace()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r47 = interfaceinvoke $r17.<org.apache.ambari.server.scheduler.ExecutionScheduler: java.util.List getTriggersForJob(org.quartz.JobKey)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r47 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r47 = interfaceinvoke $r17.<org.apache.ambari.server.scheduler.ExecutionScheduler: java.util.List getTriggersForJob(org.quartz.JobKey)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r47 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i1 = interfaceinvoke r47.<java.util.List: int size()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r47 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 1
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r47 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if z2 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i1 = interfaceinvoke r47.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i1 <= 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i1 = interfaceinvoke r47.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i2 = interfaceinvoke r47.<java.util.List: int size()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 1
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i2 = interfaceinvoke r47.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i2 <= 1
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i2 = interfaceinvoke r47.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r21 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r8 = (org.quartz.Trigger) $r18
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r18 = interfaceinvoke r47.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r8 = (org.quartz.Trigger) $r18 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $z0 = interfaceinvoke r8.<org.quartz.Trigger: boolean mayFireAgain()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r8 = (org.quartz.Trigger) $r18 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $z0 = interfaceinvoke r8.<org.quartz.Trigger: boolean mayFireAgain()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z0 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $z0 = interfaceinvoke r8.<org.quartz.Trigger: boolean mayFireAgain()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r19 = interfaceinvoke r8.<org.quartz.Trigger: java.util.Date getFinalFireTime()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 1
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 1 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r19 = interfaceinvoke r8.<org.quartz.Trigger: java.util.Date getFinalFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $r19 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r19 = interfaceinvoke r8.<org.quartz.Trigger: java.util.Date getFinalFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $r19 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r20 = interfaceinvoke r8.<org.quartz.Trigger: java.util.Date getFinalFireTime()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $r19 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $r19 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r20 = interfaceinvoke r8.<org.quartz.Trigger: java.util.Date getFinalFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $z1 = staticinvoke <org.apache.ambari.server.utils.DateUtils: boolean isFutureTime(java.util.Date)>($r20)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r20 = interfaceinvoke r8.<org.quartz.Trigger: java.util.Date getFinalFireTime()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $z1 = staticinvoke <org.apache.ambari.server.utils.DateUtils: boolean isFutureTime(java.util.Date)>($r20) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z1 != 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $z1 = staticinvoke <org.apache.ambari.server.utils.DateUtils: boolean isFutureTime(java.util.Date)>($r20) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z1 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 1
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $z1 != 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : goto [?= (branch)]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r21 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r22 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r22 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many triggers defined for job. job: ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r22.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many triggers defined for job. job: ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many triggers defined for job. job: ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : throw $r21
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r21.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r32 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r45 = virtualinvoke r4.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r45 == null
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r45 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i3 = interfaceinvoke r45.<java.util.List: int size()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if r45 == null >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $i3 = interfaceinvoke r45.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i3 <= 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : staticinvoke <java.util.Collections: void sort(java.util.List)>(r45)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : staticinvoke <java.util.Collections: void sort(java.util.List)>(r45) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r26 = interfaceinvoke r45.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r26 = interfaceinvoke r45.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r44 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r26
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : r44 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r26 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : z2 = 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r27 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r28 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r28 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r28.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find request schedule with id = ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find request schedule with id = ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r27.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r31)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : specialinvoke $r27.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.finalizeBatch : throw $r27
