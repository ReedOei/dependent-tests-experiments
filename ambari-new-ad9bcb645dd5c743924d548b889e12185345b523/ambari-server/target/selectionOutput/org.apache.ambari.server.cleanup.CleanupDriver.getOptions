org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r1 = new org.apache.commons.cli.Options >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : specialinvoke $r1.<org.apache.commons.cli.Options: void <init>()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : specialinvoke $r1.<org.apache.commons.cli.Options: void <init>()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r2 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r2 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r3 = virtualinvoke $r2.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder longOpt(java.lang.String)>("cluster-name")
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r3 = virtualinvoke $r2.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder longOpt(java.lang.String)>("cluster-name") >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r4 = virtualinvoke $r3.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>("The cluster name")
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r4 = virtualinvoke $r3.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>("The cluster name") >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r5 = virtualinvoke $r4.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder required()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r5 = virtualinvoke $r4.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder required()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r6 = virtualinvoke $r5.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder type(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r6 = virtualinvoke $r5.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder type(java.lang.Class)>(class "Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r7 = virtualinvoke $r6.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r7 = virtualinvoke $r6.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r8 = virtualinvoke $r7.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder valueSeparator(char)>(32)
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r8 = virtualinvoke $r7.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder valueSeparator(char)>(32) >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r9 = virtualinvoke $r8.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r9 = virtualinvoke $r8.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : virtualinvoke $r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r9)
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : virtualinvoke $r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r9) >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r11 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r11 = staticinvoke <org.apache.commons.cli.Option: org.apache.commons.cli.Option$Builder builder()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r12 = virtualinvoke $r11.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder longOpt(java.lang.String)>("from-date")
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r12 = virtualinvoke $r11.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder longOpt(java.lang.String)>("from-date") >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r13 = virtualinvoke $r12.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>("Date up until data will be purged.")
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r13 = virtualinvoke $r12.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder desc(java.lang.String)>("Date up until data will be purged.") >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r14 = virtualinvoke $r13.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder required()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r14 = virtualinvoke $r13.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder required()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r15 = virtualinvoke $r14.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder type(java.lang.Class)>(class "Ljava/lang/String;")
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r15 = virtualinvoke $r14.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder type(java.lang.Class)>(class "Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r16 = virtualinvoke $r15.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r16 = virtualinvoke $r15.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder hasArg()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r17 = virtualinvoke $r16.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder valueSeparator(char)>(32)
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r17 = virtualinvoke $r16.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option$Builder valueSeparator(char)>(32) >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r18 = virtualinvoke $r17.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>()
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : $r18 = virtualinvoke $r17.<org.apache.commons.cli.Option$Builder: org.apache.commons.cli.Option build()>() >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : virtualinvoke $r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r18)
org.apache.ambari.server.cleanup.CleanupDriver.getOptions : virtualinvoke $r1.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r18) >>>>>>>> org.apache.ambari.server.cleanup.CleanupDriver.getOptions : return $r1
