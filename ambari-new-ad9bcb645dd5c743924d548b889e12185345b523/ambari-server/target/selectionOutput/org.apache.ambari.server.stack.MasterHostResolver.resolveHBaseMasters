org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r9 = r0.<org.apache.ambari.server.stack.MasterHostResolver: org.apache.ambari.server.state.ConfigHelper m_configHelper> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r4 = virtualinvoke $r9.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "hbase-site", "hbase.master.info.port")
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r4 = virtualinvoke $r9.<org.apache.ambari.server.state.ConfigHelper: java.lang.String getValueFromDesiredConfigurations(org.apache.ambari.server.state.Cluster,java.lang.String,java.lang.String)>(r1, "hbase-site", "hbase.master.info.port") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if r4 == null
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if r4 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if r4 == null >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r10 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find property ")
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find property ") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hbase.master.info.port")
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hbase.master.info.port") >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r14)
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : specialinvoke $r10.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : throw $r10
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z0 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z0 == 0
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r10 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4)
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r15 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r15 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r5 = virtualinvoke $r15.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r5 = virtualinvoke $r15.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z1 == 0
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z1 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : return
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r16 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r6 = (java.lang.String) $r16
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r6 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r7 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String queryJmxBeanValue(java.lang.String,int,java.lang.String,java.lang.String,boolean)>(r6, i0, "Hadoop:service=HBase,name=Master,sub=Server", "tag.isActiveMaster", 0)
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r7 = virtualinvoke r0.<org.apache.ambari.server.stack.MasterHostResolver: java.lang.String queryJmxBeanValue(java.lang.String,int,java.lang.String,java.lang.String,boolean)>(r6, i0, "Hadoop:service=HBase,name=Master,sub=Server", "tag.isActiveMaster", 0) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if null == r7
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if null == r7 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r7)
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if null == r7 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z2 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $z2 = virtualinvoke r8.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z2 == 0
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r18 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r17 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r17 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r2.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r17
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r2.<org.apache.ambari.server.stack.HostsType: java.lang.String secondary> = $r17 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : $r18 = virtualinvoke r6.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r18
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master> = $r18 >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : goto [?= (branch)]
org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.MasterHostResolver.resolveHBaseMasters : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
