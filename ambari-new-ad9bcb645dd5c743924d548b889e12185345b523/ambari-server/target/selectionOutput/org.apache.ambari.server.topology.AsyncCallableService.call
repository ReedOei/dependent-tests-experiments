org.apache.ambari.server.topology.AsyncCallableService.call : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : l6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout>
org.apache.ambari.server.topology.AsyncCallableService.call : l6 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r3 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService>
org.apache.ambari.server.topology.AsyncCallableService.call : $r3 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task>
org.apache.ambari.server.topology.AsyncCallableService.call : $r2 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r30 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2)
org.apache.ambari.server.topology.AsyncCallableService.call : r30 = interfaceinvoke $r3.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r2) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r4 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r4 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r5 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r5 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)
org.apache.ambari.server.topology.AsyncCallableService.call : $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} execution started at {}", $r5, $r6)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r4.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} execution started at {}", $r5, $r6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r8 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6)
org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} waiting for result at most {} ms", $r8, $r9)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} waiting for result at most {} ms", $r8, $r9) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} waiting for result at most {} ms", $r8, $r9) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} waiting for result at most {} ms", $r8, $r9) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r31 = interfaceinvoke r30.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10)
org.apache.ambari.server.topology.AsyncCallableService.call : r31 = interfaceinvoke r30.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : r31 = interfaceinvoke r30.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : r31 = interfaceinvoke r30.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l6, $r10) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r12 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r12 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r11 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r11 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r11 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : $r11 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} successfully completed with result: {}", $r11, r31)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} successfully completed with result: {}", $r11, r31) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r27 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} successfully completed with result: {}", $r11, r31) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r13 := @caughtexception
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} successfully completed with result: {}", $r11, r31) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : return r31
org.apache.ambari.server.topology.AsyncCallableService.call : r1 = virtualinvoke $r13.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $z0 = r1 instanceof org.apache.ambari.server.topology.AsyncCallableService$RetryTaskSilently
org.apache.ambari.server.topology.AsyncCallableService.call : $z0 = r1 instanceof org.apache.ambari.server.topology.AsyncCallableService$RetryTaskSilently >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : if $z0 != 0
org.apache.ambari.server.topology.AsyncCallableService.call : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r25 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : if $z0 != 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l1 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout>
org.apache.ambari.server.topology.AsyncCallableService.call : $l1 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.topology.AsyncCallableService.call : $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l3 = $l2 - l0
org.apache.ambari.server.topology.AsyncCallableService.call : $l3 = $l2 - l0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : l6 = $l1 - $l3
org.apache.ambari.server.topology.AsyncCallableService.call : l6 = $l1 - $l3 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>
org.apache.ambari.server.topology.AsyncCallableService.call : $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $b8 = l6 cmp $l7
org.apache.ambari.server.topology.AsyncCallableService.call : $b8 = l6 cmp $l7 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : if $b8 >= 0
org.apache.ambari.server.topology.AsyncCallableService.call : if $b8 >= 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: void attemptToCancel(java.util.concurrent.Future)>(r30)
org.apache.ambari.server.topology.AsyncCallableService.call : if $b8 >= 0 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r14 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r14 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r15 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r15 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l4 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>
org.apache.ambari.server.topology.AsyncCallableService.call : $l4 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4)
org.apache.ambari.server.topology.AsyncCallableService.call : $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} retrying execution in {} milliseconds", $r15, $r16)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r14.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Task {} retrying execution in {} milliseconds", $r15, $r16) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r19 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService>
org.apache.ambari.server.topology.AsyncCallableService.call : $r19 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.ScheduledExecutorService executorService> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r18 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task>
org.apache.ambari.server.topology.AsyncCallableService.call : $r18 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.util.concurrent.Callable task> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l5 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>
org.apache.ambari.server.topology.AsyncCallableService.call : $l5 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>
org.apache.ambari.server.topology.AsyncCallableService.call : $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : r30 = interfaceinvoke $r19.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r18, $l5, $r17)
org.apache.ambari.server.topology.AsyncCallableService.call : r30 = interfaceinvoke $r19.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)>($r18, $l5, $r17) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>]
org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r7 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : specialinvoke r0.<org.apache.ambari.server.topology.AsyncCallableService: void attemptToCancel(java.util.concurrent.Future)>(r30) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r22 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG>
org.apache.ambari.server.topology.AsyncCallableService.call : $r22 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r21 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r21 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, no more retries", $r21)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Task {} timeout exceeded, no more retries", $r21) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : return null
org.apache.ambari.server.topology.AsyncCallableService.call : $r25 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r23 = newarray (java.lang.Object)[1]
org.apache.ambari.server.topology.AsyncCallableService.call : $r23 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r24 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r24 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r23[0] = $r24
org.apache.ambari.server.topology.AsyncCallableService.call : $r23[0] = $r24 >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Task %s exception during execution", $r23)
org.apache.ambari.server.topology.AsyncCallableService.call : $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Task %s exception during execution", $r23) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>($r26, r1)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>($r26, r1) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l1 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long timeout>
org.apache.ambari.server.topology.AsyncCallableService.call : $r29 = <org.apache.ambari.server.topology.AsyncCallableService: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $r28 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName>
org.apache.ambari.server.topology.AsyncCallableService.call : $r28 = r0.<org.apache.ambari.server.topology.AsyncCallableService: java.lang.String taskName> >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout", $r28)
org.apache.ambari.server.topology.AsyncCallableService.call : interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Task {} timeout", $r28) >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : l6 = 0L
org.apache.ambari.server.topology.AsyncCallableService.call : l6 = 0L >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>]
org.apache.ambari.server.topology.AsyncCallableService.call : goto [?= $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>] >>>>>>>> org.apache.ambari.server.topology.AsyncCallableService.call : $l7 = r0.<org.apache.ambari.server.topology.AsyncCallableService: long retryDelay>
