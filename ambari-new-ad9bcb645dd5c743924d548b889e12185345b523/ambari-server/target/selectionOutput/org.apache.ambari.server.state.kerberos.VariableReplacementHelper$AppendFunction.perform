org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $i0 = lengthof r1
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if r1 == null >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r9 = staticinvoke <org.apache.ambari.server.state.kerberos.VariableReplacementHelper: org.slf4j.Logger access$500()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r9 = staticinvoke <org.apache.ambari.server.state.kerberos.VariableReplacementHelper: org.slf4j.Logger access$500()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>("Invalid number of arguments encountered while processing the \'append\' variable replacement function.  The following arguments are expected:\n\t- Configuration specification used to get the initial value\n\t- Delimiter used for parsing the initial value and appending new values\n\t- A flag to indicate whether values should be unique (\'true\') or not (\'false\')")
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String)>("Invalid number of arguments encountered while processing the \'append\' variable replacement function.  The following arguments are expected:\n\t- Configuration specification used to get the initial value\n\t- Delimiter used for parsing the initial value and appending new values\n\t- A flag to indicate whether values should be unique (\'true\') or not (\'false\')") >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r10 = new java.lang.IllegalArgumentException
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r10 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid number of arguments encountered while processing the \'append\' variable replacement function.  The following arguments are expected:\n\t- Configuration specification used to get the initial value\n\t- Delimiter used for parsing the initial value and appending new values\n\t- A flag to indicate whether values should be unique (\'true\') or not (\'false\')")
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid number of arguments encountered while processing the \'append\' variable replacement function.  The following arguments are expected:\n\t- Configuration specification used to get the initial value\n\t- Delimiter used for parsing the initial value and appending new values\n\t- A flag to indicate whether values should be unique (\'true\') or not (\'false\')") >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : throw $r10
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $i0 = lengthof r1 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $i0 == 3
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $i0 == 3 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r9 = staticinvoke <org.apache.ambari.server.state.kerberos.VariableReplacementHelper: org.slf4j.Logger access$500()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $i0 == 3 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r17 = r1[0]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r17 = r1[0] >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r4 = r1[1]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r4 = r1[1] >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r11 = r1[2]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r11 = r1[2] >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r11)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r5 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction: java.lang.String getSourceData(java.util.Map,java.lang.String)>(r3, r17)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r5 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction: java.lang.String getSourceData(java.util.Map,java.lang.String)>(r3, r17) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r6 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction: java.util.Collection parseItems(java.lang.String,java.lang.String)>(r5, r4)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r6 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction: java.util.Collection parseItems(java.lang.String,java.lang.String)>(r5, r4) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r7 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction: java.util.Collection parseItems(java.lang.String,java.lang.String)>(r2, r4)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r7 = specialinvoke r0.<org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction: java.util.Collection parseItems(java.lang.String,java.lang.String)>(r2, r4) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r12 = new java.util.ArrayList
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if z0 == 0
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r18 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean addAll(java.util.Collection)>(r6)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean addAll(java.util.Collection)>(r6) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean addAll(java.util.Collection)>(r7)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean addAll(java.util.Collection)>(r7) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r13 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, r4)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r13 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, r4) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : return $r13
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r18 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z3 == 0
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r15 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r20 = interfaceinvoke r7.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r20 = interfaceinvoke r7.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z4 == 0
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r14 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $r13 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, r4)]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $r13 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, r4)] >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r13 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, r4)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r14 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r21 = (java.lang.String) $r14
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r21 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z5 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>(r21)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z5 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z5 != 0
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r21)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r21) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $z4 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $r15 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r19 = (java.lang.String) $r15
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : r19 = (java.lang.String) $r15 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z7 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>(r19)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z7 = interfaceinvoke $r12.<java.util.Collection: boolean contains(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z7 != 0
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z7 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r19)
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : if $z7 != 0 >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r19) >>>>>>>> org.apache.ambari.server.state.kerberos.VariableReplacementHelper$AppendFunction.perform : goto [?= $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>()]
