org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r17 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r15 = new org.apache.ambari.server.topology.tasks.PersistHostResourcesTask
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r15 = new org.apache.ambari.server.topology.tasks.PersistHostResourcesTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r16 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r16 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r15.<org.apache.ambari.server.topology.tasks.PersistHostResourcesTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r16, r0)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r15.<org.apache.ambari.server.topology.tasks.PersistHostResourcesTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r16, r0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r20 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r20 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r18 = new org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r18 = new org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r19 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r19 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r18.<org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r19, r0)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r18.<org.apache.ambari.server.topology.tasks.RegisterWithConfigGroupTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest)>($r19, r0) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r18)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r21 = new org.apache.ambari.server.topology.tasks.InstallHostTask
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r21 = new org.apache.ambari.server.topology.tasks.InstallHostTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r22 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r22 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z3 = r0.<org.apache.ambari.server.topology.HostRequest: boolean skipFailure>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z3 = r0.<org.apache.ambari.server.topology.HostRequest: boolean skipFailure> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r21.<org.apache.ambari.server.topology.tasks.InstallHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r22, r0, $z3)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r21.<org.apache.ambari.server.topology.tasks.InstallHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r22, r0, $z3) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r23 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r21)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r25 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r24 = new java.util.HashMap
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r24 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r24.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r24.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r24)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r24) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r27 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r27 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r28 = interfaceinvoke $r27.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.controller.internal.ProvisionAction getProvisionAction()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r29 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r29 = <org.apache.ambari.server.controller.internal.ProvisionAction: org.apache.ambari.server.controller.internal.ProvisionAction INSTALL_ONLY> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : z0 = virtualinvoke $r28.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r29)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : z0 = virtualinvoke $r28.<org.apache.ambari.server.controller.internal.ProvisionAction: boolean equals(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if z0 != 0
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r46 = new org.apache.ambari.server.topology.tasks.StartHostTask
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if z0 != 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r30 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r30 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r53 = interfaceinvoke $r30.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r53 = interfaceinvoke $r30.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.AmbariContext getAmbariContext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r31 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.util.Collection getTopologyHostTaskEntities()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r31 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.util.Collection getTopologyHostTaskEntities()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r3 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r3 = interfaceinvoke $r31.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z9 == 0
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z9 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r32 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z9 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : return
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r32 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r4 = (org.apache.ambari.server.orm.entities.TopologyHostTaskEntity) $r32
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r4 = (org.apache.ambari.server.orm.entities.TopologyHostTaskEntity) $r32 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r33 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostTaskEntity: java.lang.String getType()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r33 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostTaskEntity: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r5 = staticinvoke <org.apache.ambari.server.topology.tasks.TopologyTask$Type: org.apache.ambari.server.topology.tasks.TopologyTask$Type valueOf(java.lang.String)>($r33)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r5 = staticinvoke <org.apache.ambari.server.topology.tasks.TopologyTask$Type: org.apache.ambari.server.topology.tasks.TopologyTask$Type valueOf(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r34 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostTaskEntity: java.util.Collection getTopologyLogicalTaskEntities()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r34 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.TopologyHostTaskEntity: java.util.Collection getTopologyLogicalTaskEntities()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r6 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r6 = interfaceinvoke $r34.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z5 == 0
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r35 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z5 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r35 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r7 = (org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity) $r35
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r7 = (org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity) $r35 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity: java.lang.Long getId()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r8 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity: java.lang.Long getId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r9 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r9 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r10 = staticinvoke <org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.AmbariContext$TaskType getLogicalTaskType(org.apache.ambari.server.topology.tasks.TopologyTask$Type)>(r5)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r10 = staticinvoke <org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.AmbariContext$TaskType getLogicalTaskType(org.apache.ambari.server.topology.tasks.TopologyTask$Type)>(r5) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l0 = virtualinvoke r8.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l0 = virtualinvoke r8.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l1 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l1 = virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: long getRequestId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l2 = r0.<org.apache.ambari.server.topology.HostRequest: long id>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l2 = r0.<org.apache.ambari.server.topology.HostRequest: long id> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r36 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.String getHostName()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r36 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.TopologyHostRequestEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z6 = r0.<org.apache.ambari.server.topology.HostRequest: boolean skipFailure>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z6 = r0.<org.apache.ambari.server.topology.HostRequest: boolean skipFailure> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r11 = virtualinvoke r53.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l0, $l1, $l2, r9, $r36, r10, $z6)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r11 = virtualinvoke r53.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.actionmanager.HostRoleCommand createAmbariTask(long,long,long,java.lang.String,java.lang.String,org.apache.ambari.server.topology.AmbariContext$TaskType,boolean)>($l0, $l1, $l2, r9, $r36, r10, $z6) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r37 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r37 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r11)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r11) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r12 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity: java.lang.Long getPhysicalTaskId()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r12 = virtualinvoke r7.<org.apache.ambari.server.orm.entities.TopologyLogicalTaskEntity: java.lang.Long getPhysicalTaskId()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if r12 == null
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if r12 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l3 = virtualinvoke r8.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if r12 == null >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r39 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r39 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r13 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r13 = interfaceinvoke $r39.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z10 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z10 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z10 == 0
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z10 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r40 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if $z10 == 0 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r40 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r14 = (org.apache.ambari.server.topology.tasks.TopologyTask) $r40
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : r14 = (org.apache.ambari.server.topology.tasks.TopologyTask) $r40 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r41 = interfaceinvoke r14.<org.apache.ambari.server.topology.tasks.TopologyTask: org.apache.ambari.server.topology.tasks.TopologyTask$Type getType()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r41 = interfaceinvoke r14.<org.apache.ambari.server.topology.tasks.TopologyTask: org.apache.ambari.server.topology.tasks.TopologyTask$Type getType()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if r5 != $r41
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if r5 != $r41 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r42 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : if r5 != $r41 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z10 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z10 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z10 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r42 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r44 = (java.util.Map) $r43
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r44 = (java.util.Map) $r43 >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r8)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r8) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : goto [?= $z10 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l3 = virtualinvoke r8.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l4 = virtualinvoke r12.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $l4 = virtualinvoke r12.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: void registerPhysicalTaskId(long,long)>($l3, $l4)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : virtualinvoke r0.<org.apache.ambari.server.topology.HostRequest: void registerPhysicalTaskId(long,long)>($l3, $l4) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r39 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r46 = new org.apache.ambari.server.topology.tasks.StartHostTask >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r47 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r47 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z7 = r0.<org.apache.ambari.server.topology.HostRequest: boolean skipFailure>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $z7 = r0.<org.apache.ambari.server.topology.HostRequest: boolean skipFailure> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r46.<org.apache.ambari.server.topology.tasks.StartHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r47, r0, $z7)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r46.<org.apache.ambari.server.topology.tasks.StartHostTask: void <init>(org.apache.ambari.server.topology.ClusterTopology,org.apache.ambari.server.topology.HostRequest,boolean)>($r47, r0, $z7) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r48 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r48 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.List topologyTasks> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r46)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r50 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap>
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r50 = r0.<org.apache.ambari.server.topology.HostRequest: java.util.Map logicalTaskMap> >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r49 = new java.util.HashMap
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r49 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r49.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : specialinvoke $r49.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, $r49)
org.apache.ambari.server.topology.HostRequest.createTasksForReplay : interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r46, $r49) >>>>>>>> org.apache.ambari.server.topology.HostRequest.createTasksForReplay : $r30 = r0.<org.apache.ambari.server.topology.HostRequest: org.apache.ambari.server.topology.ClusterTopology topology>
