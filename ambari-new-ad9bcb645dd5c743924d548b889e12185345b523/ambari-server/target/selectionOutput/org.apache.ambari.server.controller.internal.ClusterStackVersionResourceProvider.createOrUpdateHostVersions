org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r6 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r11)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>($r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r24 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r24 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z1 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r13 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: void checkPatchVDFAvailableServices(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.repository.VersionDefinitionXml)>(r1, r2, r3)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: void checkPatchVDFAvailableServices(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.repository.VersionDefinitionXml)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.List transitionHostsToInstalling(org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.repository.VersionDefinitionXml,boolean)>(r2, r3, z0)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r27 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.List transitionHostsToInstalling(org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.repository.VersionDefinitionXml,boolean)>(r2, r3, z0) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r28 = null
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r28 = null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if z0 != 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r29 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.internal.RequestStageContainer createOrchestration(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,java.util.List,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.repository.VersionDefinitionXml,java.util.Map)>(r1, r4, r27, r2, r3, r5)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus getRequestStatus(org.apache.ambari.server.controller.RequestStatusResponse)>(r28)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus getRequestStatus(org.apache.ambari.server.controller.RequestStatusResponse)>(r28) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : return $r12
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r29 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.internal.RequestStageContainer createOrchestration(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,java.util.List,org.apache.ambari.server.orm.entities.RepositoryVersionEntity,org.apache.ambari.server.state.repository.VersionDefinitionXml,java.util.Map)>(r1, r4, r27, r2, r3, r5) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r28 = virtualinvoke r29.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r28 = virtualinvoke r29.<org.apache.ambari.server.controller.internal.RequestStageContainer: org.apache.ambari.server.controller.RequestStatusResponse getRequestStatusResponse()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r12 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus getRequestStatus(org.apache.ambari.server.controller.RequestStatusResponse)>(r28)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r13 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r25 = (org.apache.ambari.server.state.Host) $r13
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r25 = (org.apache.ambari.server.state.Host) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r14 = interfaceinvoke r25.<org.apache.ambari.server.state.Host: java.util.List getAllHostVersions()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r14 = interfaceinvoke r25.<org.apache.ambari.server.state.Host: java.util.List getAllHostVersions()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r26 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r26 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z4 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r15 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z1 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r15 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r8 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r15
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r8 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r15 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r9 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r9 = virtualinvoke r8.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r16 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r16 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r17 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r17 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z2 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z2 != 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r18 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r18 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersionsWithBuild(java.lang.String,java.lang.String,int)>($r18, r6, 4)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : i0 = staticinvoke <org.apache.ambari.server.utils.VersionUtils: int compareVersionsWithBuild(java.lang.String,java.lang.String,int)>($r18, r6, 4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if i0 > 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if i0 > 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if i0 > 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if null != r3
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if null != r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if null != r3 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r19 = interfaceinvoke r25.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r19 = interfaceinvoke r25.<org.apache.ambari.server.state.Host: java.lang.String getOsFamily()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r20 = virtualinvoke r3.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r20 = virtualinvoke r3.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.lang.String getPackageVersion(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r20)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z3 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r21 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r21 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r21[0] = r6
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r21[0] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r22 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r22 = virtualinvoke r9.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r21[1] = $r22
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r21[1] = $r22 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ambari cannot install version %s.  Version %s is already installed.", $r21)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Ambari cannot install version %s.  Version %s is already installed.", $r21) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r23 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $r23 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : throw $r23
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : goto [?= $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.createOrUpdateHostVersions : $z4 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>()
