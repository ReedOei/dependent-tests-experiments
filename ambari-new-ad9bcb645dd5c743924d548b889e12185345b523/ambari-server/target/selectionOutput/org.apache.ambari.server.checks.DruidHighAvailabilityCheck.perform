org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r3 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>() >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r12 = <org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.lang.String[] DRUID_COMPONENT_NAMES>
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r12 = <org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.lang.String[] DRUID_COMPONENT_NAMES> >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i0 = lengthof r12
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i0 = lengthof r12 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i2 = 0
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i2 = 0 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if i2 >= i0
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if i2 >= i0 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r4 = r12[i2]
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if i2 >= i0 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if $z0 != 0
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : return
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r6 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : virtualinvoke $r6.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("DRUID")
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : virtualinvoke $r6.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("DRUID") >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r7 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r7 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r7)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r7) >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r13 = virtualinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r13 = virtualinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.lang.String getFailReason(org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>(r1, r2) >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r8 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r8 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray()>() >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String)>($r9, ", ")
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r10 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String)>($r9, ", ") >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r8[0] = $r10
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r8[0] = $r10 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r13, $r8)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r13, $r8) >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r11)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : return
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r4 = r12[i2] >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.util.Set getHostsForComponent(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r2, r4)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.DruidHighAvailabilityCheck: java.util.Set getHostsForComponent(org.apache.ambari.server.controller.PrereqCheckRequest,java.lang.String)>(r2, r4) >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $i1 = interfaceinvoke r5.<java.util.Set: int size()>()
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : $i1 = interfaceinvoke r5.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if $i1 != 1
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if $i1 != 1 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if $i1 != 1 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i2 = i2 + 1
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i2 = i2 + 1 >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : if i2 >= i0
org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.checks.DruidHighAvailabilityCheck.perform : i2 = i2 + 1
