org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : r2 = staticinvoke <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision getPrecision(long,long)>(l0, l1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r4 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision DAYS>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r4 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision DAYS> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $z0 = virtualinvoke r2.<org.apache.hadoop.metrics2.sink.timeline.Precision: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $z0 = virtualinvoke r2.<org.apache.hadoop.metrics2.sink.timeline.Precision: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z0 == 0
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r5 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision HOURS>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r5 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision HOURS> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $z1 = virtualinvoke r2.<org.apache.hadoop.metrics2.sink.timeline.Precision: boolean equals(java.lang.Object)>($r5)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $z1 = virtualinvoke r2.<org.apache.hadoop.metrics2.sink.timeline.Precision: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z1 == 0
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r6 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision MINUTES>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r6 = <org.apache.hadoop.metrics2.sink.timeline.Precision: org.apache.hadoop.metrics2.sink.timeline.Precision MINUTES> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $z2 = virtualinvoke r2.<org.apache.hadoop.metrics2.sink.timeline.Precision: boolean equals(java.lang.Object)>($r6)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $z2 = virtualinvoke r2.<org.apache.hadoop.metrics2.sink.timeline.Precision: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z2 == 0
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if r1 == null
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if r1 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $i4 = virtualinvoke r1.<java.util.TreeMap: int size()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if r1 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = -1L
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = -1L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : return l6
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $i4 = virtualinvoke r1.<java.util.TreeMap: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $i4 <= 1
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $i4 <= 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r7 = virtualinvoke r1.<java.util.TreeMap: java.util.NavigableSet descendingKeySet()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : if $i4 <= 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = -1L
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r7 = virtualinvoke r1.<java.util.TreeMap: java.util.NavigableSet descendingKeySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : r3 = interfaceinvoke $r7.<java.util.NavigableSet: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : r3 = interfaceinvoke $r7.<java.util.NavigableSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r9 = (java.lang.Long) $r8
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r9 = (java.lang.Long) $r8 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l2 = virtualinvoke $r9.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l2 = virtualinvoke $r9.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r11 = (java.lang.Long) $r10
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r11 = (java.lang.Long) $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l3 = virtualinvoke $r11.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l3 = virtualinvoke $r11.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $l5 = l2 - l3
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $l5 = l2 - l3 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = staticinvoke <java.lang.Math: long abs(long)>($l5)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = staticinvoke <java.lang.Math: long abs(long)>($l5) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6]
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : return l6
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r12 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = virtualinvoke $r12.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6]
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : return l6
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = virtualinvoke $r13.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = virtualinvoke $r13.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6]
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : return l6
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : $r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L)
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : l6 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6]
org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : goto [?= return l6] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsPaddingMethod.getTimelineMetricInterval : return l6
