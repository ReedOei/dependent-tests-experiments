org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r21 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r21.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r21.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r73 = null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r73 = null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r22 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r22 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r22.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r22.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r23 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r23 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r23.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r23.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r7 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z9 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : return $r21
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r24 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r8 = (org.apache.ambari.server.controller.spi.Resource) $r24
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r8 = (org.apache.ambari.server.controller.spi.Resource) $r24 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r25 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r25 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r26 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r25)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r26 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r9 = (java.lang.String) $r26
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r9 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z0 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z1 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z1 = interfaceinvoke $r23.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z1 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r71 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r28 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r28 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r27 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r27 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z10 = interfaceinvoke $r28.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r27)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z10 = interfaceinvoke $r28.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r27) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z10)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z10) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r29)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r29) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z10 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z10 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r68 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z10 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r31 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r31 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r31.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r31.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>(r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z2 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z2 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r66 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r33 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r33 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r32 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r32 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z11 = interfaceinvoke $r33.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r32)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z11 = interfaceinvoke $r33.<org.apache.ambari.server.controller.metrics.MetricHostProvider: boolean isCollectorComponentLive(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r32) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z11)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r34 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z11) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r34)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r34) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z11 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z11 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r63 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z11 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r36 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r36 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r36.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r36.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r37 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r37 = interfaceinvoke $r21.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r74 = (java.util.Map) $r37
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r74 = (java.util.Map) $r37 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r74 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r74 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r61 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r74 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r39 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r39 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r38 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r38 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r10 = interfaceinvoke $r39.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorHostName(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r38)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r10 = interfaceinvoke $r39.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorHostName(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r38) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r73 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r73 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r60 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r73 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r11 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r11 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z12 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z12 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z12 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r40 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z12 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r40 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r12 = (java.lang.String) $r40
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r12 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r41 = new java.util.HashMap
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r41 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r41.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r41.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r14 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getOverridenComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r14 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getOverridenComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r42 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Map getComponentMetrics()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r42 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.Map getComponentMetrics()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r43 = interfaceinvoke $r42.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r15 = (java.util.Map) $r43
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r15 = (java.util.Map) $r43 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r15 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r15 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z6 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>(r12)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r15 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r14, r12, $r41)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r14, r12, $r41) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r75 = interfaceinvoke $r41.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r75 = interfaceinvoke $r41.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r16 = interfaceinvoke $r75.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r16 = interfaceinvoke $r75.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z13 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r44 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z12 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z12 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z12 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r44 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r17 = (java.util.Map$Entry) $r44
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r17 = (java.util.Map$Entry) $r44 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r45 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r45 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r18 = (java.lang.String) $r45
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r18 = (java.lang.String) $r45 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r46 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r46 = interfaceinvoke r17.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r19 = (org.apache.ambari.server.controller.internal.PropertyInfo) $r46
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r19 = (org.apache.ambari.server.controller.internal.PropertyInfo) $r46 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r20 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r12)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r20 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z5 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isPointInTime()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z3 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isTemporal()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z3 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isTemporal()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z3 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r47 = interfaceinvoke r74.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r47 = interfaceinvoke r74.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r76 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r47
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r76 = (org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest) $r47 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r76 != null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r76 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r49 = new org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r76 != null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r77 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r77 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putResource(java.lang.String,org.apache.ambari.server.controller.spi.Resource)>($r77, r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putResource(java.lang.String,org.apache.ambari.server.controller.spi.Resource)>($r77, r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r78 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r78 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r79 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r79 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r80 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r78, $r79)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r80 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r78, $r79) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putPropertyId(java.lang.String,java.lang.String)>($r80, r18)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putPropertyId(java.lang.String,java.lang.String)>($r80, r18) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r81 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r81 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r82 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r82 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r83 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r83 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r84 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r82, $r83)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r84 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String preprocessPropertyId(java.lang.String,java.lang.String)>($r82, $r83) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void linkResourceToMetric(java.lang.String,java.lang.String)>($r81, $r84)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void linkResourceToMetric(java.lang.String,java.lang.String)>($r81, $r84) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z14 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isAmsHostMetric()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z14 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isAmsHostMetric()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z14 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r48 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r48 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: java.lang.String getPropertyId()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putHosComponentHostMetric(java.lang.String)>($r48)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r76.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void putHosComponentHostMetric(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z13 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r49 = new org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r73 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r73 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r73)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r73 == null >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = 6188
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = 6188 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r50 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r50 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z4 = virtualinvoke $r50.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z4 = virtualinvoke $r50.<org.apache.ambari.server.configuration.ComponentSSLConfiguration: boolean isHttpsEnabled()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r51 = staticinvoke <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.http.client.utils.URIBuilder getAMSUriBuilder(java.lang.String,int,boolean)>(r10, $i2, $z4)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r51 = staticinvoke <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.http.client.utils.URIBuilder getAMSUriBuilder(java.lang.String,int,boolean)>(r10, $i2, $z4) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r52 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r52 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r53 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r52)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r53 = interfaceinvoke r8.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r52) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r54 = (java.lang.String) $r53
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r54 = (java.lang.String) $r53 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r49.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void <init>(org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider,org.apache.ambari.server.controller.spi.TemporalInfo,org.apache.http.client.utils.URIBuilder,java.lang.String,org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$1)>(r0, r20, $r51, $r54, null)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r49.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$MetricsRequest: void <init>(org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider,org.apache.ambari.server.controller.spi.TemporalInfo,org.apache.http.client.utils.URIBuilder,java.lang.String,org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider$1)>(r0, r20, $r51, $r54, null) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r76 = $r49
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r76 = $r49 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r49)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke r74.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r20, $r49) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r77 = virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.lang.String getComponentName(org.apache.ambari.server.controller.spi.Resource)>(r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r73) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $r50 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $r50 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r50 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.configuration.ComponentSSLConfiguration configuration>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z5 = virtualinvoke r19.<org.apache.ambari.server.controller.internal.PropertyInfo: boolean isPointInTime()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z5 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if r20 == null
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r47 = interfaceinvoke r74.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z6 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z6 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updateComponentMetricMap(java.util.Map,java.lang.String)>(r15, r12)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r14, r12, $r41)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updateComponentMetricMap(java.util.Map,java.lang.String)>(r15, r12) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: void updatePropertyInfoMap(java.lang.String,java.lang.String,java.util.Map)>(r14, r12, $r41)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r60 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r59 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r59 = <org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService: org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService TIMELINE_METRICS> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r73 = interfaceinvoke $r60.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorPort(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r59)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r73 = interfaceinvoke $r60.<org.apache.ambari.server.controller.metrics.MetricHostProvider: java.lang.String getCollectorPort(java.lang.String,org.apache.ambari.server.controller.metrics.MetricsServiceProvider$MetricsService)>(r9, $r59) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r11 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r61 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r61.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : specialinvoke $r61.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r74 = $r61
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : r74 = $r61 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r61)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r61) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r39 = r0.<org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.apache.ambari.server.controller.metrics.MetricHostProvider hostProvider>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r63 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i0 = virtualinvoke $r63.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i0 = virtualinvoke $r63.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i0 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r65 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r64 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r64 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCompCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r64.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r64.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r65 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r65.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR is not live. Skip populating resources with metrics., next message will be logged after 1000 attempts.")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r65.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR is not live. Skip populating resources with metrics., next message will be logged after 1000 attempts.") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r66 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r67 = (java.lang.Boolean) $r66
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r67 = (java.lang.Boolean) $r66 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z11 = virtualinvoke $r67.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z11 = virtualinvoke $r67.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z11 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r68 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i1 = virtualinvoke $r68.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $i1 = virtualinvoke $r68.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i1 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r70 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if $i1 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r69 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter>
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r69 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: java.util.concurrent.atomic.AtomicInteger printSkipPopulateMsgHostCounter> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r69.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : virtualinvoke $r69.<java.util.concurrent.atomic.AtomicInteger: boolean compareAndSet(int,int)>(1000, 0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r70 = <org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r70.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR host is not live. Skip populating resources with metrics, next message will be logged after 1000 attempts.")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : interfaceinvoke $r70.<org.slf4j.Logger: void info(java.lang.String)>("METRICS_COLLECTOR host is not live. Skip populating resources with metrics, next message will be logged after 1000 attempts.") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r71 = interfaceinvoke $r23.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r72 = (java.lang.Boolean) $r71
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $r72 = (java.lang.Boolean) $r71 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z10 = virtualinvoke $r72.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : z10 = virtualinvoke $r72.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : if z10 != 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : goto [?= $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getMetricsRequests : $z9 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
