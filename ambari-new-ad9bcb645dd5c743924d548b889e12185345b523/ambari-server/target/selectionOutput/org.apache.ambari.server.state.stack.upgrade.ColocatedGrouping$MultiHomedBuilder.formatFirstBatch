org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r7 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r8 = new java.util.HashMap
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r8 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r8.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r8.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r51 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r51 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r36 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i5 = 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i5 = 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i0 = interfaceinvoke $r9.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i0 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if i5 >= $i0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if i5 >= $i0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r23 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if i5 >= $i0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r10 = new com.google.gson.JsonArray
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r10 = new com.google.gson.JsonArray >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r10.<com.google.gson.JsonArray: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r10.<com.google.gson.JsonArray: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r11 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r65 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r65 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z1 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z1 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r14 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r12 = new com.google.gson.JsonObject
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r12 = new com.google.gson.JsonObject >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r12.<com.google.gson.JsonObject: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r12.<com.google.gson.JsonObject: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r12.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("topology", $r10)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r12.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("topology", $r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r13 = virtualinvoke $r12.<com.google.gson.JsonObject: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r13 = virtualinvoke $r12.<com.google.gson.JsonObject: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String structuredOut> = $r13
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String structuredOut> = $r13 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : return
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r14 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r66 = (java.util.Map$Entry) $r14
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r66 = (java.util.Map$Entry) $r14 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r15 = new com.google.gson.JsonObject
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r15 = new com.google.gson.JsonObject >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r15.<com.google.gson.JsonObject: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r15.<com.google.gson.JsonObject: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r16 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r16 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r17 = (java.lang.String) $r16
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r17 = (java.lang.String) $r16 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r15.<com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)>("host_name", $r17)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r15.<com.google.gson.JsonObject: void addProperty(java.lang.String,java.lang.String)>("host_name", $r17) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r18 = new com.google.gson.JsonArray
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r18 = new com.google.gson.JsonArray >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r18.<com.google.gson.JsonArray: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r18.<com.google.gson.JsonArray: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r19 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r19 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r20 = (java.util.Set) $r19
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r20 = (java.util.Set) $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r69 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r69 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z2 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r21 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r15.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("components", $r18)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r15.<com.google.gson.JsonObject: void add(java.lang.String,com.google.gson.JsonElement)>("components", $r18) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r10.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r15)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r10.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z1 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z1 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z1 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r21 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r6 = (java.lang.String) $r21
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r6 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r22 = new com.google.gson.JsonPrimitive
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r22 = new com.google.gson.JsonPrimitive >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r22.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>(r6)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r22.<com.google.gson.JsonPrimitive: void <init>(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r18.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r22)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r18.<com.google.gson.JsonArray: void add(com.google.gson.JsonElement)>($r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z2 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r23 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i5)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r57 = (java.lang.String) $r24
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r57 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z3 = virtualinvoke r57.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{components}}")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z3 = virtualinvoke r57.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{components}}") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r25 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i5 = i5 + 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i5 = i5 + 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r9 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r25 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r26 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r26 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r7)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r26.<java.util.ArrayList: void <init>(java.util.Collection)>($r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i1 = interfaceinvoke $r26.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i1 = interfaceinvoke $r26.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i1 != 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i1 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r33 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i1 != 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i2 = interfaceinvoke $r7.<java.util.Set: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i2 = interfaceinvoke $r7.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i2 <= 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i3 = interfaceinvoke $r26.<java.util.List: int size()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r61 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r61 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r62 = virtualinvoke r57.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{components}}", $r61)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r62 = virtualinvoke r57.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{components}}", $r61) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r63 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r63 = r2.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r63.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i5, r62)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r63.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i5, r62) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : i5 = i5 + 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i3 = interfaceinvoke $r26.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i4 = $i3 - 1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $i4 = $i3 - 1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r28 = interfaceinvoke $r26.<java.util.List: java.lang.Object remove(int)>($i4)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r28 = interfaceinvoke $r26.<java.util.List: java.lang.Object remove(int)>($i4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r60 = (java.lang.String) $r28
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r60 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r26, ", ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r29 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r26, ", ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r61 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r33 = interfaceinvoke $r26.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r34 = (java.lang.String) $r33
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r34 = (java.lang.String) $r33 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r61 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $r61 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r61 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r36 = interfaceinvoke r51.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r52 = (org.apache.ambari.server.state.stack.upgrade.StageWrapper) $r36
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r52 = (org.apache.ambari.server.state.stack.upgrade.StageWrapper) $r36 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r37 = virtualinvoke r52.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.List getTasks()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r37 = virtualinvoke r52.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.util.List getTasks()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r53 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r53 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z4 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r38 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z0 = interfaceinvoke r51.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r38 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r54 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r38
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r54 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r38 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r39 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r39 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r39)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z5 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r40 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r40 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r40)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z6 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z6 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r41 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r41 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.util.Set getHosts()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r55 = interfaceinvoke $r41.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r55 = interfaceinvoke $r41.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z7 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z7 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z7 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r45 = interfaceinvoke r55.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r42 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r42 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getService()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r43 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r43 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r44 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>($r42, $r43)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r44 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: java.lang.String getComponentDisplay(java.lang.String,java.lang.String)>($r42, $r43) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r44)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z4 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r45 = interfaceinvoke r55.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r56 = (java.lang.String) $r45
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : r56 = (java.lang.String) $r45 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z9 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r56)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z9 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r56) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z9 != 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z9 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r49 = new java.util.HashSet
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : if $z9 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r46 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r56)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r46 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r56) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r47 = (java.util.Set) $r46
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r47 = (java.util.Set) $r46 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r48 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r48 = virtualinvoke r54.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: java.lang.String getComponent()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r47.<java.util.Set: boolean add(java.lang.Object)>($r48)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r47.<java.util.Set: boolean add(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z7 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : goto [?= $z7 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $z7 = interfaceinvoke r55.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r49 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r49.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : specialinvoke $r49.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, $r49)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r56, $r49) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.formatFirstBatch : $r46 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r56)
