org.apache.ambari.server.topology.AmbariContext.lambda$createConfigGroupsAndRegisterHost$0 : $r2 = interfaceinvoke r0.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.lambda$createConfigGroupsAndRegisterHost$0 : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>()
org.apache.ambari.server.topology.AmbariContext.lambda$createConfigGroupsAndRegisterHost$0 : $r3 = interfaceinvoke $r2.<org.apache.ambari.server.topology.Blueprint: java.util.Collection getServices()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.lambda$createConfigGroupsAndRegisterHost$0 : $z0 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>(r1)
org.apache.ambari.server.topology.AmbariContext.lambda$createConfigGroupsAndRegisterHost$0 : $z0 = interfaceinvoke $r3.<java.util.Collection: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.lambda$createConfigGroupsAndRegisterHost$0 : return $z0
