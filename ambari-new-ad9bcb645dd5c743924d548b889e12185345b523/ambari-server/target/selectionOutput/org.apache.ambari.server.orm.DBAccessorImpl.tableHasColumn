org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r4 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.DatabaseMetaData getDatabaseMetaData()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r4 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.DatabaseMetaData getDatabaseMetaData()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : staticinvoke <org.apache.ambari.server.utils.CustomStringUtils: void toUpperCase(java.util.List)>($r10)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : staticinvoke <org.apache.ambari.server.utils.CustomStringUtils: void toUpperCase(java.util.List)>($r10) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r12 = new java.util.HashSet
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r10)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r12.<java.util.HashSet: void <init>(java.util.Collection)>($r10) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r13 = new java.util.ArrayList
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r14 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String dbSchema>
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r14 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String dbSchema> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r15 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r15 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r7 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r14, $r15, null)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r7 = interfaceinvoke r4.<java.sql.DatabaseMetaData: java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(null, $r14, $r15, null) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r7 == null
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r7 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r7 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r7 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r7.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : throw $r24
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 != 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r16 = new java.lang.IllegalStateException
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z1 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i0 = interfaceinvoke $r10.<java.util.List: int size()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i0 = interfaceinvoke $r10.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $i0 != 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 1
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $i0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : return $z5
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z5 = 1 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= return $z5]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= return $z5] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : return $z5
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r16 = new java.lang.IllegalStateException >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17 = newarray (java.lang.Object)[4]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[0] = r2
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[0] = r2 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[1] = r1
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[1] = r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i1 = interfaceinvoke $r13.<java.util.List: int size()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $i1 = interfaceinvoke $r13.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[2] = $r18
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[2] = $r18 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r19 = virtualinvoke $r13.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[3] = $r19
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r17[3] = $r19 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request for columns [%s] existing in table [%s] returned too many results [%s] for columns [%s]", $r17)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Request for columns [%s] existing in table [%s] returned too many results [%s] for columns [%s]", $r17) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : throw $r16
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r8 = interfaceinvoke r7.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("COLUMN_NAME")
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r7.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z2 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke r7.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z1 = interfaceinvoke $r13.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r8 = interfaceinvoke r7.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("COLUMN_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : r8 = interfaceinvoke r7.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("COLUMN_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if r8 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : z0 = interfaceinvoke $r10.<java.util.List: boolean remove(java.lang.Object)>($r21)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r21 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : z0 = interfaceinvoke $r10.<java.util.List: boolean remove(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : z0 = interfaceinvoke $r10.<java.util.List: boolean remove(java.lang.Object)>($r21) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r22 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if z0 != 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r22 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z3 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r22)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r22 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z3 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z3 == 0
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $z3 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r23 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : if $z3 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r23 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r23)
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r23 = virtualinvoke r8.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : goto [?= $z2 = interfaceinvoke r7.<java.sql.ResultSet: boolean next()>()]
org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.tableHasColumn : $r24 := @caughtexception
