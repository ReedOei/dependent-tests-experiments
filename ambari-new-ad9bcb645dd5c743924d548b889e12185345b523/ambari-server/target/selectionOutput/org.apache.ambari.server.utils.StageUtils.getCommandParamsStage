org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r3 = virtualinvoke r0.<org.apache.ambari.server.controller.ActionExecutionContext: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $r3 == null
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $r3 == null >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.ActionExecutionContext: java.util.Map getParameters()>()
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $r3 == null >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : r7 = new java.util.TreeMap
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : r7 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r6 = r7
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r6 = r7 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : specialinvoke r7.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : specialinvoke r7.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : r2 = $r6
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : r2 = $r6 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r1)
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $z0 == 0
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : return r2
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $z1 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("rolling-restart")
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $z1 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("rolling-restart") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $z1 == 0
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rolling_restart", "true")
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : if $z1 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : return r2
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rolling_restart", "true") >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : return r2
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.ActionExecutionContext: java.util.Map getParameters()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : goto [?= r2 = $r6]
org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : goto [?= r2 = $r6] >>>>>>>> org.apache.ambari.server.utils.StageUtils.getCommandParamsStage : r2 = $r6
