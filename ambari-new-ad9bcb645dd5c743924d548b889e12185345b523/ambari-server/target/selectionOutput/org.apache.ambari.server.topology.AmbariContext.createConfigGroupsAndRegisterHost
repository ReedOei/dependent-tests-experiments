org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r11 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r11.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r11.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r12 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r12 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r4 = interfaceinvoke $r12.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r4 = interfaceinvoke $r12.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.controller.internal.Stack getStack()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r15 = (org.apache.ambari.server.topology.HostGroupInfo) $r14
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r15 = (org.apache.ambari.server.topology.HostGroupInfo) $r14 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r5 = virtualinvoke $r15.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r5 = virtualinvoke $r15.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(1)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r6 = virtualinvoke r5.<org.apache.ambari.server.topology.Configuration: java.util.Map getFullProperties(int)>(1) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r16 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r16 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r67 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r67 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r35 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r17 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r17 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r74 = interfaceinvoke $r17.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r74 = interfaceinvoke $r17.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r18 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r18 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r75 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r75 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r19 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : return
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r19 = interfaceinvoke r75.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r76 = (java.util.Map$Entry) $r19
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r76 = (java.util.Map$Entry) $r19 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r20 = interfaceinvoke r76.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r20 = interfaceinvoke r76.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r77 = (java.lang.String) $r20
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r77 = (java.lang.String) $r20 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r21 = interfaceinvoke r76.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r21 = interfaceinvoke r76.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r78 = (java.util.Map) $r21
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r78 = (java.util.Map) $r21 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r79 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>(r74, r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r79 = specialinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getConfigurationGroupName(java.lang.String,java.lang.String)>(r74, r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r22 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r22 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r23 = interfaceinvoke $r22.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r24 = (org.apache.ambari.server.topology.HostGroupInfo) $r23
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r24 = (org.apache.ambari.server.topology.HostGroupInfo) $r23 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r80 = virtualinvoke $r24.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r80 = virtualinvoke $r24.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r80 = virtualinvoke $r24.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r50 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r49 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r49 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot get cluster name for clusterId = ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r52 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r52 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r54, $r48)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r54, $r48) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r55 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r55 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r55.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r48)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r55.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r48) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : throw $r55
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r25.<java.lang.Long: long longValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r25 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r25.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r81 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $l0 = virtualinvoke $r25.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r81 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $r26 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r81 = virtualinvoke r0.<org.apache.ambari.server.topology.AmbariContext: java.lang.String getClusterName(long)>($l0) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r48 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $r26 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r26 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.AmbariManagementController getController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r27 = interfaceinvoke $r26.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r83 = interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r81)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r83 = interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r81) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r28 = new org.apache.ambari.server.topology.AmbariContext$8
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r28 = new org.apache.ambari.server.topology.AmbariContext$8 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r28.<org.apache.ambari.server.topology.AmbariContext$8: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Map)>(r0, r83)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r28.<org.apache.ambari.server.topology.AmbariContext$8: void <init>(org.apache.ambari.server.topology.AmbariContext,java.util.Map)>(r0, r83) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)>(r80, $r28)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r7 = staticinvoke <com.google.common.collect.Iterables: java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate)>(r80, $r28) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r29 = new org.apache.ambari.server.controller.ConfigGroupRequest
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r29 = new org.apache.ambari.server.controller.ConfigGroupRequest >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r30 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>(r7)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r30 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>(r7) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r29.<org.apache.ambari.server.controller.ConfigGroupRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map)>(null, r81, r79, r77, r77, "Host Group Configuration", $r30, r78)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r29.<org.apache.ambari.server.controller.ConfigGroupRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map)>(null, r81, r79, r77, r77, "Host Group Configuration", $r30, r78) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r31 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r31 = staticinvoke <org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.controller.spi.ClusterController getClusterController()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r32 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r32 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type ConfigGroup> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r33 = interfaceinvoke $r31.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r32)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r33 = interfaceinvoke $r31.<org.apache.ambari.server.controller.spi.ClusterController: org.apache.ambari.server.controller.spi.ResourceProvider ensureResourceProvider(org.apache.ambari.server.controller.spi.Resource$Type)>($r32) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r9 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r33
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r9 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r33 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r29)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r9 = (org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider) $r33 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r56 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r58 = <org.apache.ambari.server.topology.AmbariContext: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r57 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r57 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r57.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r57.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>($r61)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r58.<org.slf4j.Logger: void error(java.lang.String)>($r61) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r62 = new java.lang.RuntimeException
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r62 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r63 = new java.lang.StringBuilder
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r63 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r63.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r63.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create new configuration group: ") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r62.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r66, $r56)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r62.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r66, $r56) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : throw $r62
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r9.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r34)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r34 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r29) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r56 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r9.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r34) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= (branch)]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : virtualinvoke r9.<org.apache.ambari.server.controller.internal.ConfigGroupResourceProvider: org.apache.ambari.server.controller.spi.RequestStatus createResources(java.util.Set)>($r34) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r56 := @caughtexception
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z1 = interfaceinvoke r75.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r35 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r68 = (java.util.Map$Entry) $r35
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r68 = (java.util.Map$Entry) $r35 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r36 = interfaceinvoke r68.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r36 = interfaceinvoke r68.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r69 = (java.lang.String) $r36
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r69 = (java.lang.String) $r36 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r70 = virtualinvoke r4.<org.apache.ambari.server.controller.internal.Stack: java.util.List getServicesForConfigType(java.lang.String)>(r69)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r70 = virtualinvoke r4.<org.apache.ambari.server.controller.internal.Stack: java.util.List getServicesForConfigType(java.lang.String)>(r69) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r37 = interfaceinvoke r70.<java.util.List: java.util.stream.Stream stream()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r37 = interfaceinvoke r70.<java.util.List: java.util.stream.Stream stream()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r38 = dynamicinvoke "test" <java.util.function.Predicate (org.apache.ambari.server.topology.ClusterTopology)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.topology.AmbariContext: boolean lambda$createConfigGroupsAndRegisterHost$0(org.apache.ambari.server.topology.ClusterTopology,java.lang.String)>, class "(Ljava/lang/String;)Z")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r38 = dynamicinvoke "test" <java.util.function.Predicate (org.apache.ambari.server.topology.ClusterTopology)>(r1) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Z", handle: <org.apache.ambari.server.topology.AmbariContext: boolean lambda$createConfigGroupsAndRegisterHost$0(org.apache.ambari.server.topology.ClusterTopology,java.lang.String)>, class "(Ljava/lang/String;)Z") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r39 = interfaceinvoke $r37.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r38)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r39 = interfaceinvoke $r37.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($r38) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r40 = interfaceinvoke $r39.<java.util.stream.Stream: java.util.Optional findFirst()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r40 = interfaceinvoke $r39.<java.util.stream.Stream: java.util.Optional findFirst()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r41 = dynamicinvoke "get" <java.util.function.Supplier (java.lang.String)>(r69) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "()Ljava/lang/Object;", handle: <org.apache.ambari.server.topology.AmbariContext: java.lang.IllegalArgumentException lambda$createConfigGroupsAndRegisterHost$1(java.lang.String)>, class "()Ljava/lang/IllegalArgumentException;")
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r41 = dynamicinvoke "get" <java.util.function.Supplier (java.lang.String)>(r69) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "()Ljava/lang/Object;", handle: <org.apache.ambari.server.topology.AmbariContext: java.lang.IllegalArgumentException lambda$createConfigGroupsAndRegisterHost$1(java.lang.String)>, class "()Ljava/lang/IllegalArgumentException;") >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r42 = virtualinvoke $r40.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r41)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r42 = virtualinvoke $r40.<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>($r41) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r71 = (java.lang.String) $r42
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r71 = (java.lang.String) $r42 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r43 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.state.ConfigFactory configFactory>
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r43 = r0.<org.apache.ambari.server.topology.AmbariContext: org.apache.ambari.server.state.ConfigFactory configFactory> >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r44 = interfaceinvoke r68.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r44 = interfaceinvoke r68.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r45 = (java.util.Map) $r44
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r45 = (java.util.Map) $r44 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r72 = interfaceinvoke $r43.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createReadOnly(java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r69, r2, $r45, null)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r72 = interfaceinvoke $r43.<org.apache.ambari.server.state.ConfigFactory: org.apache.ambari.server.state.Config createReadOnly(java.lang.String,java.lang.String,java.util.Map,java.util.Map)>(r69, r2, $r45, null) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r46 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r71)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r46 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r71) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r73 = (java.util.Map) $r46
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r73 = (java.util.Map) $r46 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r73 != null
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r73 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r47 = new java.util.HashMap
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : if r73 != null >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r73.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r69, r72)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r73.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r69, r72) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : goto [?= $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : $r47 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r47.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : specialinvoke $r47.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r73 = $r47
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : r73 = $r47 >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r71, $r47)
org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r71, $r47) >>>>>>>> org.apache.ambari.server.topology.AmbariContext.createConfigGroupsAndRegisterHost : interfaceinvoke r73.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r69, r72)
