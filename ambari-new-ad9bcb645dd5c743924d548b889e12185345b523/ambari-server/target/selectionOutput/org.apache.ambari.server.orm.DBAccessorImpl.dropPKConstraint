org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r4 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: org.apache.ambari.server.configuration.Configuration configuration> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r3 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>()
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r3 = virtualinvoke $r4.<org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$DatabaseType getDatabaseType()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r5 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL>
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r5 = <org.apache.ambari.server.configuration.Configuration$DatabaseType: org.apache.ambari.server.configuration.Configuration$DatabaseType MYSQL> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if r3 != $r5
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if r3 != $r5 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r8 = newarray (java.lang.Object)[1]
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if r3 != $r5 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r10 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String getPrimaryKeyConstraintName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r10 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String getPrimaryKeyConstraintName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r10 = r2
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r6 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void dropPKConstraint(java.lang.String,java.lang.String,boolean)>(r1, r10, 1)
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void dropPKConstraint(java.lang.String,java.lang.String,boolean)>(r1, r10, 1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : return
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r6 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to determine the primary key constraint name for {}", r1)
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Unable to determine the primary key constraint name for {}", r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : goto [?= return]
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : goto [?= return] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : return
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r10 = r2 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r7 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r7 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to dynamically determine the PK constraint name for {}, defaulting to {}", r1, r2)
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : interfaceinvoke $r7.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Unable to dynamically determine the PK constraint name for {}, defaulting to {}", r1, r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : if null != r10
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r8 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r8[0] = r1
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : $r8[0] = r1 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ALTER TABLE %s DROP PRIMARY KEY", $r8)
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ALTER TABLE %s DROP PRIMARY KEY", $r8) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String,boolean)>(r9, 1)
org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: void executeQuery(java.lang.String,boolean)>(r9, 1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.dropPKConstraint : return
