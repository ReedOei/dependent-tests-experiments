org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r16 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r16[0] = r2
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r16[0] = r2 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r16[1] = r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r16[1] = r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?name=%s", $r16)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s?name=%s", $r16) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r10 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.util.Map getHeaders(java.lang.String,java.lang.String)>(r3, r4)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r10 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.util.Map getHeaders(java.lang.String,java.lang.String)>(r3, r4) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r17 = (java.io.InputStream) null
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r17 = (java.io.InputStream) null >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r17 = (java.io.InputStream) null >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r17 = (java.io.InputStream) null >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r44 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,java.io.InputStream,java.util.Map)>(r9, "GET", $r17, r10)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r44 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,java.io.InputStream,java.util.Map)>(r9, "GET", $r17, r10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r44 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,java.io.InputStream,java.util.Map)>(r9, "GET", $r17, r10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r44 = virtualinvoke r1.<org.apache.ambari.server.controller.internal.URLStreamProvider: java.net.HttpURLConnection processURL(java.lang.String,java.lang.String,java.io.InputStream,java.util.Map)>(r9, "GET", $r17, r10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : i0 = virtualinvoke r44.<java.net.HttpURLConnection: int getResponseCode()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : i0 = virtualinvoke r44.<java.net.HttpURLConnection: int getResponseCode()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : i0 = virtualinvoke r44.<java.net.HttpURLConnection: int getResponseCode()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : i0 = virtualinvoke r44.<java.net.HttpURLConnection: int getResponseCode()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if i0 != 200
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if i0 != 200 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r18 = new com.google.gson.Gson
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if i0 != 200 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= return 0]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= return 0] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : return 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r18 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r18 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r18 = new com.google.gson.Gson >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r18.<com.google.gson.Gson: void <init>()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r18.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r18.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r18.<com.google.gson.Gson: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r19 = new java.io.InputStreamReader
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r19 = new java.io.InputStreamReader >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r19 = new java.io.InputStreamReader >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r19 = new java.io.InputStreamReader >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r20 = virtualinvoke r44.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r20 = virtualinvoke r44.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r20 = virtualinvoke r44.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r20 = virtualinvoke r44.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r20)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r20) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r20) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r20) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r12 = virtualinvoke $r18.<com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)>($r19, class "Ljava/lang/Object;")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r12 = virtualinvoke $r18.<com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)>($r19, class "Ljava/lang/Object;") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r12 = virtualinvoke $r18.<com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)>($r19, class "Ljava/lang/Object;") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r12 = virtualinvoke $r18.<com.google.gson.Gson: java.lang.Object fromJson(java.io.Reader,java.lang.Class)>($r19, class "Ljava/lang/Object;") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r13 = (java.util.Map) r12
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r13 = (java.util.Map) r12 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r13 = (java.util.Map) r12 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r13 = (java.util.Map) r12 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z0 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>("vXUsers")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z0 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>("vXUsers") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z0 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>("vXUsers") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z0 = interfaceinvoke r13.<java.util.Map: boolean containsKey(java.lang.Object)>("vXUsers") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z0 != 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r45 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("missing_vxusers", r6, r7)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r21 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("vXUsers")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z0 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r36 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r37 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r37 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r36.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not determine user {}.  Error is {}", r5, $r37)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r36.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not determine user {}.  Error is {}", r5, $r37) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r39 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r39 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38[0] = r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38[0] = r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r40 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r40 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38[1] = $r40
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38[1] = $r40 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38[2] = $r35
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r38[2] = $r35 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not determine user {}.  Error is {}", $r38)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r39.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not determine user {}.  Error is {}", $r38) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r50 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("invalid_response", r6, r7)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r50 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("invalid_response", r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r41 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r41 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r42 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r42 = virtualinvoke $r35.<java.lang.Exception: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r41[0] = $r42
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r41[0] = $r42 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r41[1] = r9
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r41[1] = r9 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r50, $r41)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r50, $r41) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r43)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : return 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r27 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r28 = virtualinvoke $r26.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r28 = virtualinvoke $r26.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not determine user {}.  Error is {}", r5, $r28)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r27.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not determine user {}.  Error is {}", r5, $r28) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r30 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r30 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29[0] = r5
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29[0] = r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r31 = virtualinvoke $r26.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r31 = virtualinvoke $r26.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29[1] = $r31
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29[1] = $r31 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29[2] = $r26
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r29[2] = $r26 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not determine user {}.  Error is {}", $r29)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke $r30.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not determine user {}.  Error is {}", $r29) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r48 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_access", r6, r7)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r48 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_access", r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32[0] = r3
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32[0] = r3 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32[1] = r9
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32[1] = r9 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r33 = virtualinvoke $r26.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r33 = virtualinvoke $r26.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32[2] = $r33
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r32[2] = $r33 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r48, $r32)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r34 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r48, $r32) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r34)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= return 0]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= return 0] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : return 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r21 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("vXUsers") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r21 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("vXUsers") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r21 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>("vXUsers") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r46 = (java.util.List) $r21
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r46 = (java.util.List) $r21 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r46 = (java.util.List) $r21 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r46 = (java.util.List) $r21 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r14 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r14 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r14 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r14 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z1 == 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r22 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= return 0]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r22 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r22 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r22 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r15 = (java.util.Map) $r22
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r15 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r15 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r15 = (java.util.Map) $r22 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>("name")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z2 = interfaceinvoke r15.<java.util.Map: boolean containsKey(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z2 == 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r23 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("name")
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r23 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r23 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r23 = interfaceinvoke r15.<java.util.Map: java.lang.Object get(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z3 = virtualinvoke $r23.<java.lang.Object: boolean equals(java.lang.Object)>(r5)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z3 = virtualinvoke $r23.<java.lang.Object: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z3 = virtualinvoke $r23.<java.lang.Object: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $z3 = virtualinvoke $r23.<java.lang.Object: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z3 == 0
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : return 1
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : if $z3 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : goto [?= $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r45 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("missing_vxusers", r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r45 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("missing_vxusers", r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : r45 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("missing_vxusers", r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24[0] = r9
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24[0] = r9 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24[0] = r9 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r24[0] = r9 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r24)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r24) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r24) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r45, $r24) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r26 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : $r35 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : interfaceinvoke r8.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.checkRangerUser : return 0
