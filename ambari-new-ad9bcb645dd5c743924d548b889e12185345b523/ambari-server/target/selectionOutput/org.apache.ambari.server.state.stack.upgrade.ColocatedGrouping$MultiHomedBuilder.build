org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r11 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder$1
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r11 = new org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder$1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r11.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder$1: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder,java.util.List)>(r0, $r10)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r11.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder$1: void <init>(org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder,java.util.List)>(r0, $r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r12 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r13 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r13 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z0 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z0 = interfaceinvoke $r13.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r36 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r15 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r15 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map,com.google.common.base.Predicate)>($r14, $r15, $r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : r6 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map,com.google.common.base.Predicate)>($r14, $r15, $r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>(r6)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>(r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z2 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $z2 = interfaceinvoke r6.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z2 != 0
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19 = new org.apache.ambari.server.state.stack.upgrade.ManualTask
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r17 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r17 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r18 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map,com.google.common.base.Predicate)>($r16, $r17, $r11)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r18 = specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.List fromProxies(org.apache.ambari.server.state.stack.upgrade.Direction,java.util.Map,com.google.common.base.Predicate)>($r16, $r17, $r11) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r18)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<java.util.List: boolean addAll(java.util.Collection)>($r18) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : return $r12
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19 = new org.apache.ambari.server.state.stack.upgrade.ManualTask >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.ManualTask: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r19.<org.apache.ambari.server.state.stack.upgrade.ManualTask: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r20 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r20 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r21 = $r20.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String summary>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r21 = $r20.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String summary> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String summary> = $r21
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.lang.String summary> = $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r22 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r22 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r22.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r22.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r23 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r23 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: org.apache.ambari.server.state.stack.upgrade.Batch m_batch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r24 = $r23.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String message>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r24 = $r23.<org.apache.ambari.server.state.stack.upgrade.Batch: java.lang.String message> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> = $r22
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r19.<org.apache.ambari.server.state.stack.upgrade.ManualTask: java.util.List messages> = $r22 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: void formatFirstBatch(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ManualTask,java.util.List)>(r1, $r19, r6)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: void formatFirstBatch(org.apache.ambari.server.state.UpgradeContext,org.apache.ambari.server.state.stack.upgrade.ManualTask,java.util.List)>(r1, $r19, r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r25 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r25 = new org.apache.ambari.server.state.stack.upgrade.StageWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r27 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVER_SIDE_ACTION>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r27 = <org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type: org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type SERVER_SIDE_ACTION> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r26 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r26 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r26.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validate Partial ")
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Validate Partial ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r29 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r29 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r30 = virtualinvoke $r29.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(1)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r30 = virtualinvoke $r29.<org.apache.ambari.server.state.stack.upgrade.Direction: java.lang.String getText(boolean)>(1) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1]
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33 = newarray (org.apache.ambari.server.state.stack.upgrade.TaskWrapper)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r34 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r34 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r35 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r34.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task)>(null, null, $r35, $r19)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r34.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,org.apache.ambari.server.state.stack.upgrade.Task)>(null, null, $r35, $r19) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33[0] = $r34
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r33[0] = $r34 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r25.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r27, $r32, $r33)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : specialinvoke $r25.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: void <init>(org.apache.ambari.server.state.stack.upgrade.StageWrapper$Type,java.lang.String,org.apache.ambari.server.state.stack.upgrade.TaskWrapper[])>($r27, $r32, $r33) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r16 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r36 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r37 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r37 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map initialBatch> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU initial: {}", $r37)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU initial: {}", $r37) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r38 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>()
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r38 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping: org.slf4j.Logger access$900()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r39 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches>
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r39 = r0.<org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder: java.util.Map finalBatches> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU final: {}", $r39)
org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : interfaceinvoke $r38.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("RU final: {}", $r39) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ColocatedGrouping$MultiHomedBuilder.build : $r14 = virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: org.apache.ambari.server.state.stack.upgrade.Direction getDirection()>()
