org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r2 = r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.String beanName> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r3 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.String name(java.util.Map)>(r1)
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r3 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.String name(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3)
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : if $z0 == 0
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r4 = r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.String propertyName>
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r7 = staticinvoke <java.util.Optional: java.util.Optional empty()>()
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r7 = staticinvoke <java.util.Optional: java.util.Optional empty()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : return $r7
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r4 = r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.String propertyName> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4)
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.Object lookupByKey(java.lang.Object)>($r5)
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r6 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern: java.lang.Object lookupByKey(java.lang.Object)>($r5) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r7 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r6)
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : $r7 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : goto [?= return $r7]
org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : goto [?= return $r7] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXMetricHolder$JmxPattern.extract : return $r7
