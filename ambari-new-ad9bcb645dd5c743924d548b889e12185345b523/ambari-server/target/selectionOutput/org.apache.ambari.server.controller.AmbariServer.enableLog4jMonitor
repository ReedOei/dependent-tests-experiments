org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r3 = class "Lorg/apache/ambari/server/controller/AmbariServer;" >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r4 = virtualinvoke $r3.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/log4j.properties")
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r4 = virtualinvoke $r3.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/log4j.properties") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r14 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>()
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r14 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r5 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LOG4JMONITOR_DELAY>
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r5 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LOG4JMONITOR_DELAY> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r6 = virtualinvoke $r5.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>()
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r6 = virtualinvoke $r5.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.String getKey()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6)
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r1 = (java.lang.String) $r7
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r1 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LOG4JMONITOR_DELAY>
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r8 = <org.apache.ambari.server.configuration.Configuration: org.apache.ambari.server.configuration.Configuration$ConfigurationProperty LOG4JMONITOR_DELAY> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>()
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r9 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration$ConfigurationProperty: java.lang.Object getDefaultValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r10 = (java.lang.Long) $r9
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r10 = (java.lang.Long) $r9 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r14 = virtualinvoke r14.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("file:", "")
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r11 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r13 = <org.apache.ambari.server.controller.AmbariServer: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12[0] = r1
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12[0] = r1 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12[1] = r14
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12[1] = r14 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12[2] = $r11
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r12[2] = $r11 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Exception in setting log4j monitor delay of {} for {}", $r12)
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : interfaceinvoke $r13.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object[])>("Exception in setting log4j monitor delay of {} for {}", $r12) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : return
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r14 = virtualinvoke r14.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("file:", "") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : r14 = virtualinvoke r14.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("file:", "") >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r11 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : if $z0 == 0
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r11 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1)
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : staticinvoke <org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String,long)>(r14, l0)
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r11 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : staticinvoke <org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String,long)>(r14, l0) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : goto [?= return]
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : staticinvoke <org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String,long)>(r14, l0) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r11 := @caughtexception
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : return
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : staticinvoke <org.apache.log4j.PropertyConfigurator: void configureAndWatch(java.lang.String,long)>(r14, l0)
org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.controller.AmbariServer.enableLog4jMonitor : $r11 := @caughtexception
