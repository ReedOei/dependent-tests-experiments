org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r4 = staticinvoke <org.apache.ambari.server.view.ViewURLStreamProvider: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Checking host {} port {} against allowed list.", r1, r2)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Checking host {} port {} against allowed list.", r1, r2) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r1)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z0 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r5 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z0 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : return 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r5 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : r3 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r6 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r6 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $r6 != null
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $r6 != null >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : specialinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: void initializeAllowedHostPorts()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $r6 != null >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r7 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r7 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z1 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r8 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z1 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : return 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r8 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z2 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z2 = interfaceinvoke $r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z2 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r9 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z2 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : return 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r9 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r11 = (java.util.HashSet) $r10
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r11 = (java.util.HashSet) $r10 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z3 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>("*")
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z3 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>("*") >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z3 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : return 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z3 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : r15 = ""
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : r15 = "" >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r2)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z4 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : r15 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z4 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r12 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r12 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts> >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r14 = (java.util.HashSet) $r13
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r14 = (java.util.HashSet) $r13 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z5 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>(r15)
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $z5 = virtualinvoke $r14.<java.util.HashSet: boolean contains(java.lang.Object)>(r15) >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z5 == 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : return 1
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : if $z5 == 0 >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : return 0
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : r15 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r12 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.util.Map allowedHostPorts>
org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : specialinvoke r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: void initializeAllowedHostPorts()>() >>>>>>>> org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler.allowProxy : $r7 = r0.<org.apache.ambari.server.view.ViewURLStreamProvider$HostPortRestrictionHandler: java.lang.Boolean isProxyCallRestricted>
