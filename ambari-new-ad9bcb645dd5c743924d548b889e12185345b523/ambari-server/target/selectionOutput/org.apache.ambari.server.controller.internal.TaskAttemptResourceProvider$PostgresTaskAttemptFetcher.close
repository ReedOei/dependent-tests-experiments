org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r1 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.PreparedStatement ps> >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : if $r1 == null
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r3 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.PreparedStatement ps>
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : if $r1 == null >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r9 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db>
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r9 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db> >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : if $r9 == null
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r2 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db>
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : if $r9 == null >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : return
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r2 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db> >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r2.<java.sql.Connection: void close()>()
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r2 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db> >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r4 := @caughtexception
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r5 = staticinvoke <org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception while closing connection", $r4)
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception while closing connection", $r4) >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : return
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r2.<java.sql.Connection: void close()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : goto [?= return]
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r2.<java.sql.Connection: void close()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r4 := @caughtexception
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : return
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r3 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.PreparedStatement ps> >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r3.<java.sql.PreparedStatement: void close()>()
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r3 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.PreparedStatement ps> >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r6 := @caughtexception
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r7 = staticinvoke <org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider: org.slf4j.Logger access$000()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception while closing statment", $r6)
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Exception while closing statment", $r6) >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r9 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db>
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : goto [?= $r9 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db>]
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : interfaceinvoke $r3.<java.sql.PreparedStatement: void close()>() >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r6 := @caughtexception
org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : goto [?= $r9 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db>] >>>>>>>> org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher.close : $r9 = r0.<org.apache.ambari.server.controller.internal.TaskAttemptResourceProvider$PostgresTaskAttemptFetcher: java.sql.Connection db>
