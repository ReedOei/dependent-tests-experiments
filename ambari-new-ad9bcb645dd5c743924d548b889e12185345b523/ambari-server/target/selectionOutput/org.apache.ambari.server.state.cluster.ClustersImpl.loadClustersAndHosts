org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r5 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.orm.dao.HostDAO hostDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r1 = virtualinvoke $r5.<org.apache.ambari.server.orm.dao.HostDAO: java.util.List findAll()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r1 = virtualinvoke $r5.<org.apache.ambari.server.orm.dao.HostDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r46 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r46 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r38 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r6 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.orm.dao.ClusterDAO clusterDAO>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r6 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.orm.dao.ClusterDAO clusterDAO> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r7 = virtualinvoke $r6.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r7 = virtualinvoke $r6.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r49 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r49 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z1 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r25 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r52 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r52 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z2 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z2 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z2 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r8 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : return
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r8 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r53 = (org.apache.ambari.server.orm.entities.HostEntity) $r8
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r53 = (org.apache.ambari.server.orm.entities.HostEntity) $r8 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r9 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r9 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r9.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r9.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r54 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r9)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r54 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r9) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r10 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r10 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r11 = virtualinvoke r53.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r11 = virtualinvoke r53.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r10.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r54)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r10.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r54) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r13 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r13 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r14 = virtualinvoke r53.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r14 = virtualinvoke r53.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r15 = virtualinvoke $r13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r14)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r15 = virtualinvoke $r13.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r2 = (org.apache.ambari.server.state.Host) $r15
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r2 = (org.apache.ambari.server.state.Host) $r15 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r16 = virtualinvoke r53.<org.apache.ambari.server.orm.entities.HostEntity: java.util.Collection getClusterEntities()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r16 = virtualinvoke r53.<org.apache.ambari.server.orm.entities.HostEntity: java.util.Collection getClusterEntities()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r3 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r3 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z3 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z2 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z2 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z2 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r4 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r17
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r4 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r17 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r18 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r18 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r19 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r20 = virtualinvoke $r18.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r19)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r20 = virtualinvoke $r18.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r21 = (java.util.Set) $r20
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r21 = (java.util.Set) $r20 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>(r2)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r22 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r22 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r23 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r23 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r24 = virtualinvoke $r22.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r23)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r24 = virtualinvoke $r22.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke r54.<java.util.Set: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : interfaceinvoke r54.<java.util.Set: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r25 = interfaceinvoke r49.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r50 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r25
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r50 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r25 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r26 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.cluster.ClusterFactory clusterFactory>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r26 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.cluster.ClusterFactory clusterFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r51 = interfaceinvoke $r26.<org.apache.ambari.server.state.cluster.ClusterFactory: org.apache.ambari.server.state.Cluster create(org.apache.ambari.server.orm.entities.ClusterEntity)>(r50)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r51 = interfaceinvoke $r26.<org.apache.ambari.server.state.cluster.ClusterFactory: org.apache.ambari.server.state.Cluster create(org.apache.ambari.server.orm.entities.ClusterEntity)>(r50) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r27 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r27 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusters> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r28 = virtualinvoke r50.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r28 = virtualinvoke r50.<org.apache.ambari.server.orm.entities.ClusterEntity: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r51)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, r51) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r30 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clustersById>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r30 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clustersById> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $l0 = interfaceinvoke r51.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $l0 = interfaceinvoke r51.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r30.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r51)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r30.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, r51) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r33 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r33 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap clusterHostMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r34 = interfaceinvoke r51.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r34 = interfaceinvoke r51.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r35 = new java.util.concurrent.ConcurrentHashMap
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r35 = new java.util.concurrent.ConcurrentHashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r35.<java.util.concurrent.ConcurrentHashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : specialinvoke $r35.<java.util.concurrent.ConcurrentHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r36 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r35)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r36 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r35) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r33.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r33.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z1 = interfaceinvoke r49.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r38 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r47 = (org.apache.ambari.server.orm.entities.HostEntity) $r38
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r47 = (org.apache.ambari.server.orm.entities.HostEntity) $r38 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r39 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.host.HostFactory hostFactory>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r39 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: org.apache.ambari.server.state.host.HostFactory hostFactory> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r48 = interfaceinvoke $r39.<org.apache.ambari.server.state.host.HostFactory: org.apache.ambari.server.state.Host create(org.apache.ambari.server.orm.entities.HostEntity)>(r47)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : r48 = interfaceinvoke $r39.<org.apache.ambari.server.state.host.HostFactory: org.apache.ambari.server.state.Host create(org.apache.ambari.server.orm.entities.HostEntity)>(r47) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r40 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r40 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r41 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r41 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r40.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r48)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r40.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r41, r48) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r43 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById>
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r43 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r44 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>()
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $r44 = virtualinvoke r47.<org.apache.ambari.server.orm.entities.HostEntity: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r43.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, r48)
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : virtualinvoke $r43.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r44, r48) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : goto [?= $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.loadClustersAndHosts : $z0 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>()
