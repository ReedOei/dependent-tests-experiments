org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r4 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : specialinvoke $r4.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : specialinvoke $r4.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Collection getChildContainers()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Collection getChildContainers()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Collection nullToEmpty(java.util.Collection)>($r5)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r6 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Collection nullToEmpty(java.util.Collection)>($r5) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : if $z0 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : return $r4
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : r3 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer) $r7
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : r3 = (org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer) $r7 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $z1 = r3 instanceof org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $z1 = r3 instanceof org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : if $z1 == 0
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r9 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) r3
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r9 = (org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor) r3 >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r10 = virtualinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getComponents()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r10 = virtualinvoke $r9.<org.apache.ambari.server.state.kerberos.KerberosServiceDescriptor: java.util.Map getComponents()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r11 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map nullToEmpty(java.util.Map)>($r10)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r11 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.Map nullToEmpty(java.util.Map)>($r10) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: void collectFromComponents(java.lang.String,java.util.Collection,java.util.Map)>($r8, $r12, $r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: void collectFromComponents(java.lang.String,java.util.Collection,java.util.Map)>($r8, $r12, $r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r13 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String getName()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r13 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r14 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities()>()
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r14 = virtualinvoke r3.<org.apache.ambari.server.state.kerberos.AbstractKerberosDescriptorContainer: java.util.List getIdentities()>() >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r15 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.List nullToEmpty(java.util.List)>($r14)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : $r15 = staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: java.util.List nullToEmpty(java.util.List)>($r14) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: void collectFromIdentities(java.lang.String,java.lang.String,java.util.Collection,java.util.Map)>($r13, "", $r15, $r4)
org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : staticinvoke <org.apache.ambari.server.state.kerberos.KerberosDescriptor: void collectFromIdentities(java.lang.String,java.lang.String,java.util.Collection,java.util.Map)>($r13, "", $r15, $r4) >>>>>>>> org.apache.ambari.server.state.kerberos.KerberosDescriptor.principals : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
