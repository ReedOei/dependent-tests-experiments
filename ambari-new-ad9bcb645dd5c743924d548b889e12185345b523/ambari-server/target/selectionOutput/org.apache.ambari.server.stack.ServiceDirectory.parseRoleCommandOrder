org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r3 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $r3 != null
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $r3 != null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : return
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $r3 != null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r4 = new org.codehaus.jackson.map.ObjectMapper
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r4 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: void <init>()>()
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r4 = new org.codehaus.jackson.map.ObjectMapper >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r22 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r20 = newarray (java.lang.Object)[1]
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r20 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r21 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r21 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r23 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r23 = virtualinvoke $r21.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r20[0] = $r23
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r20[0] = $r23 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not read role command order info %s", $r20)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r24 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not read role command order info %s", $r20) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, $r19)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r24, $r19) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : return
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r5 = new org.apache.ambari.server.stack.ServiceDirectory$1
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r5 = new org.apache.ambari.server.stack.ServiceDirectory$1 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r5.<org.apache.ambari.server.stack.ServiceDirectory$1: void <init>(org.apache.ambari.server.stack.ServiceDirectory)>(r0)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r5 = new org.apache.ambari.server.stack.ServiceDirectory$1 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r5.<org.apache.ambari.server.stack.ServiceDirectory$1: void <init>(org.apache.ambari.server.stack.ServiceDirectory)>(r0) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r6 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r5.<org.apache.ambari.server.stack.ServiceDirectory$1: void <init>(org.apache.ambari.server.stack.ServiceDirectory)>(r0) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r6 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r7 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>($r6, $r5)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r6 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r7 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>($r6, $r5) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : r2 = (java.util.HashMap) $r7
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r7 = virtualinvoke $r4.<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>($r6, $r5) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : r2 = (java.util.HashMap) $r7 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r9 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r9 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r8 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r8 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r10 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r8 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r10 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Role command order info was loaded from file: {}", $r10)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r10 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Role command order info was loaded from file: {}", $r10) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r11 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r9.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Role command order info was loaded from file: {}", $r10) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r11 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r11.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void <init>(java.util.HashMap)>(r2)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r11 = new org.apache.ambari.server.state.stack.StackRoleCommandOrder >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r11.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void <init>(java.util.HashMap)>(r2) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> = $r11
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : specialinvoke $r11.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void <init>(java.util.HashMap)>(r2) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> = $r11 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r12 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r12 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $z0 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r12 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $z0 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $z0 == 0
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $z0 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r13 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : goto [?= return]
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : goto [?= return] >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : return
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r13 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $r13 == null
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $r13 == null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r15 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : if $r13 == null >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : goto [?= return]
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r15 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r14 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r14 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r16 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r14 = r0.<org.apache.ambari.server.stack.ServiceDirectory: java.io.File rcoFile> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r16 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Role Command Order for {}", $r16)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r16 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Role Command Order for {}", $r16) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r18 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : interfaceinvoke $r15.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Role Command Order for {}", $r16) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r18 = r0.<org.apache.ambari.server.stack.ServiceDirectory: org.apache.ambari.server.state.stack.StackRoleCommandOrder roleCommandOrder> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r17 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r17 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : virtualinvoke $r18.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void printRoleCommandOrder(org.slf4j.Logger)>($r17)
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r17 = <org.apache.ambari.server.stack.ServiceDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : virtualinvoke $r18.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void printRoleCommandOrder(org.slf4j.Logger)>($r17) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : goto [?= return]
org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : virtualinvoke $r18.<org.apache.ambari.server.state.stack.StackRoleCommandOrder: void printRoleCommandOrder(org.slf4j.Logger)>($r17) >>>>>>>> org.apache.ambari.server.stack.ServiceDirectory.parseRoleCommandOrder : $r19 := @caughtexception
