org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : if r1 != null >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : $r2 = new java.lang.RuntimeException
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : if r1 != null >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : r0.<org.apache.ambari.server.orm.cache.HostConfigMappingImpl: java.lang.String user> = r1
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : r0.<org.apache.ambari.server.orm.cache.HostConfigMappingImpl: java.lang.String user> = r1 >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : return
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : $r2 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("User couldn\'t be null")
org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("User couldn\'t be null") >>>>>>>> org.apache.ambari.server.orm.cache.HostConfigMappingImpl.setUser : throw $r2
