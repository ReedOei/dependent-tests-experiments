org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z0 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r95 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r8 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r2 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r2 = interfaceinvoke $r8.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r9 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r9 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r3 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r3 = interfaceinvoke $r9.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r10 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r4 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.ServiceComponentFactory getServiceComponentFactory()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r4 = interfaceinvoke $r10.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.ServiceComponentFactory getServiceComponentFactory()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r11 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r11 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r11.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r11.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r12 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r12.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r97 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r97 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z15 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r50 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $i0 = interfaceinvoke $r11.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $i0 = interfaceinvoke $r11.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $i0 != 1
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $i0 != 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z17 = 1
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $i0 != 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z17 = 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z17 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z17, "Invalid arguments, updates allowed on only one cluster at a time")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z17, "Invalid arguments, updates allowed on only one cluster at a time") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z1 = interfaceinvoke $r12.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z1 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r44 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r106 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r106 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z2 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z2 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z2 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r13 = interfaceinvoke r106.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : return
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r13 = interfaceinvoke r106.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r107 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r13
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r107 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r14 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r14 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r108 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r108 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r15 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r15 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r109 = interfaceinvoke r108.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r109 = interfaceinvoke r108.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r16 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r16 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r110 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r109, $r16)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r110 = interfaceinvoke r4.<org.apache.ambari.server.state.ServiceComponentFactory: org.apache.ambari.server.state.ServiceComponent createNew(org.apache.ambari.server.state.Service,java.lang.String)>(r109, $r16) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r17 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r17 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setDesiredRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r17)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setDesiredRepositoryVersion(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r18 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r18 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r18)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z3 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r43 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r19 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r19 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r19)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r20 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r20 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r20)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z4 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r39 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r112 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r112 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r21 = virtualinvoke r112.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r21 = virtualinvoke r112.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r22 = virtualinvoke r112.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r22 = virtualinvoke r112.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r23 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r23 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r24 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r24 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r7 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r21, $r22, $r23, $r24)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r7 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ComponentInfo getComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r21, $r22, $r23, $r24) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r7 != null
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r28 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z5 = virtualinvoke r7.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z5 = virtualinvoke r7.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>($z5)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>($z5) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r25 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r25 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r26 = virtualinvoke r7.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r26 = virtualinvoke r7.<org.apache.ambari.server.state.ComponentInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z6 = virtualinvoke r7.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z6 = virtualinvoke r7.<org.apache.ambari.server.state.ComponentInfo: boolean isRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r27 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from stack definition:{}", $r26, $r27)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from stack definition:{}", $r26, $r27) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r109.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r110)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r109.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r110) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z2 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z2 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z2 = interfaceinvoke r106.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r28 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get component information from stack definition: Stack=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get component information from stack definition: Stack=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r112)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r112) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Service=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r33 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r33 = interfaceinvoke r109.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Component=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Component=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r36 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r36 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r28.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r28.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : throw $r28
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r39 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : z18 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r39)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : z18 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r39) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>(z18)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setRecoveryEnabled(boolean)>(z18) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r40 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r40 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r41 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r41 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z18)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z18) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from request: {}", $r41, $r42)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r40.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Component: {}, recovery_enabled from request: {}", $r41, $r42) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= interfaceinvoke r109.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r110)]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= interfaceinvoke r109.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r110)] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r109.<org.apache.ambari.server.state.Service: void addServiceComponent(org.apache.ambari.server.state.ServiceComponent)>(r110)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r43 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r111 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r43)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r111 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>(r111)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r110.<org.apache.ambari.server.state.ServiceComponent: void setDesiredState(org.apache.ambari.server.state.State)>(r111) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r20 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r20 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r20 = virtualinvoke r107.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getRecoveryEnabled()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r44 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r45 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r45 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to create one or more components which already exist:")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to create one or more components which already exist:") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r47 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, ",")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r47 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, ",") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r44.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r49)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r44.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : throw $r44
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z17 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z17, "Invalid arguments, updates allowed on only one cluster at a time")]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z17, "Invalid arguments, updates allowed on only one cluster at a time")] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z17, "Invalid arguments, updates allowed on only one cluster at a time")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r50 = interfaceinvoke r97.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r98 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r50
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r98 = (org.apache.ambari.server.controller.ServiceComponentRequest) $r50 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r51 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r51 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>($r51, "component name should be non-empty")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void notEmpty(java.lang.String,java.lang.String)>($r51, "component name should be non-empty") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r99 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Cluster getClusterForRequest(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Clusters)>(r98, r2)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r99 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Cluster getClusterForRequest(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Clusters)>(r98, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r52 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: java.util.Set getRequiredCreateAuthorizations()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r52 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: java.util.Set getRequiredCreateAuthorizations()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void isAuthorized(org.apache.ambari.server.state.Cluster,java.util.Set)>(r99, $r52)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void isAuthorized(org.apache.ambari.server.state.Cluster,java.util.Set)>(r99, $r52) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void setServiceNameIfAbsent(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r98, r99, r3)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void setServiceNameIfAbsent(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster,org.apache.ambari.server.api.services.AmbariMetaInfo)>(r98, r99, r3) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53[0] = r98
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r53[0] = r98 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void debug(java.lang.String,java.lang.Object[])>("Received a createComponent request: {}", $r53)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: void debug(java.lang.String,java.lang.Object[])>("Received a createComponent request: {}", $r53) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r54 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z7 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r54)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z7 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>($r54) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z7 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r92 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r55 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r55 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r56 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r55)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r56 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r100 = (java.util.Map) $r56
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r100 = (java.util.Map) $r56 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r57 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r57 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z8 = interfaceinvoke r100.<java.util.Map: boolean containsKey(java.lang.Object)>($r57)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z8 = interfaceinvoke r100.<java.util.Map: boolean containsKey(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z8 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r89 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r58 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r58 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r59 = interfaceinvoke r100.<java.util.Map: java.lang.Object get(java.lang.Object)>($r58)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r59 = interfaceinvoke r100.<java.util.Map: java.lang.Object get(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r60 = (java.util.Set) $r59
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r60 = (java.util.Set) $r59 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r61 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r61 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z9 = interfaceinvoke $r60.<java.util.Set: boolean contains(java.lang.Object)>($r61)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z9 = interfaceinvoke $r60.<java.util.Set: boolean contains(java.lang.Object)>($r61) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z9 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r88 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r62 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r62 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r63 = interfaceinvoke r100.<java.util.Map: java.lang.Object get(java.lang.Object)>($r62)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r63 = interfaceinvoke r100.<java.util.Map: java.lang.Object get(java.lang.Object)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r64 = (java.util.Set) $r63
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r64 = (java.util.Set) $r63 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r65 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r65 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r64.<java.util.Set: boolean add(java.lang.Object)>($r65)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r64.<java.util.Set: boolean add(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r66 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r66 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r66)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z11 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z11 == 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r80 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r101 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r98, r99)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r101 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r98, r99) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r102 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r101 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r98, r99) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r105 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r67 = virtualinvoke r105.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r67 = virtualinvoke r105.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r68 = virtualinvoke r105.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r68 = virtualinvoke r105.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r69 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r69 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r70 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r70 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z12 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: boolean isValidServiceComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r67, $r68, $r69, $r70)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z12 = virtualinvoke r3.<org.apache.ambari.server.api.services.AmbariMetaInfo: boolean isValidServiceComponent(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r67, $r68, $r69, $r70) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z12 != 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r71 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r71 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r72 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r72 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r72.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported or invalid component in stack stackInfo=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported or invalid component in stack stackInfo=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r74 = virtualinvoke r105.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r74 = virtualinvoke r105.<org.apache.ambari.server.state.StackId: java.lang.String getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" request=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r98) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r71.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r78)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r71.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : throw $r71
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r102 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r102)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r102 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r102) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r103 == null
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r103 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r102) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r103 == null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r79 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r103 == null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= r105 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if r103 == null >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= r105 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r105 = interfaceinvoke r101.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r79 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r79)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r79 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r79) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r96 := @caughtexception
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r80 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r81 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r81 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r82 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r81)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r82 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r81) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $r80 != $r82
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $r80 != $r82 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z16 = 1
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : if $r80 != $r82 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z16 = 0
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z16 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r83 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r83 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r83.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r83.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid desired state only INIT state allowed during creation, providedDesiredState=")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid desired state only INIT state allowed during creation, providedDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r85 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r85 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z16, $r87)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : staticinvoke <org.apache.commons.lang.Validate: void isTrue(boolean,java.lang.String)>($z16, $r87) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : r101 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.apache.ambari.server.state.Service getServiceFromCluster(org.apache.ambari.server.controller.ServiceComponentRequest,org.apache.ambari.server.state.Cluster)>(r98, r99)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z16 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r83 = new java.lang.StringBuilder]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $r83 = new java.lang.StringBuilder] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r83 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r88 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r88)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>($r88) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : goto [?= $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $z15 = interfaceinvoke r97.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r89 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r90 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r90 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r90.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r90.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r100.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r89, $r90)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke r100.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r89, $r90) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r58 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r92 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r93 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r93 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r93.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : specialinvoke $r93.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r92, $r93)
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r92, $r93) >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r55 = virtualinvoke r98.<org.apache.ambari.server.controller.ServiceComponentRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : $r95 = <org.apache.ambari.server.controller.internal.ComponentResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r95.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : interfaceinvoke $r95.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ComponentResourceProvider.createComponents : return
