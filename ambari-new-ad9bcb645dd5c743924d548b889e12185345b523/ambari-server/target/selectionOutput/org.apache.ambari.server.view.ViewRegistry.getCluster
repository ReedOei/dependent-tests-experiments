org.apache.ambari.server.view.ViewRegistry.getCluster : if r1 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : r2 = interfaceinvoke r1.<org.apache.ambari.view.ViewInstanceDefinition: java.lang.Long getClusterHandle()>()
org.apache.ambari.server.view.ViewRegistry.getCluster : if r1 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : return null
org.apache.ambari.server.view.ViewRegistry.getCluster : r2 = interfaceinvoke r1.<org.apache.ambari.view.ViewInstanceDefinition: java.lang.Long getClusterHandle()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null
org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r7 = interfaceinvoke r1.<org.apache.ambari.view.ViewInstanceDefinition: org.apache.ambari.view.ClusterType getClusterType()>()
org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null
org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r3 = interfaceinvoke r1.<org.apache.ambari.view.ViewInstanceDefinition: org.apache.ambari.view.ClusterType getClusterType()>()
org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : return null
org.apache.ambari.server.view.ViewRegistry.getCluster : $r3 = interfaceinvoke r1.<org.apache.ambari.view.ViewInstanceDefinition: org.apache.ambari.view.ClusterType getClusterType()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r4 = <org.apache.ambari.view.ClusterType: org.apache.ambari.view.ClusterType REMOTE_AMBARI>
org.apache.ambari.server.view.ViewRegistry.getCluster : $r4 = <org.apache.ambari.view.ClusterType: org.apache.ambari.view.ClusterType REMOTE_AMBARI> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : if $r3 != $r4
org.apache.ambari.server.view.ViewRegistry.getCluster : if $r3 != $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r5 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.RemoteAmbariClusterRegistry remoteAmbariClusterRegistry>
org.apache.ambari.server.view.ViewRegistry.getCluster : if $r3 != $r4 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : return null
org.apache.ambari.server.view.ViewRegistry.getCluster : $r5 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.RemoteAmbariClusterRegistry remoteAmbariClusterRegistry> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r5 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.RemoteAmbariClusterRegistry remoteAmbariClusterRegistry> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r5 = r0.<org.apache.ambari.server.view.ViewRegistry: org.apache.ambari.server.view.RemoteAmbariClusterRegistry remoteAmbariClusterRegistry> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r6 = virtualinvoke $r5.<org.apache.ambari.server.view.RemoteAmbariClusterRegistry: org.apache.ambari.server.view.RemoteAmbariCluster get(java.lang.Long)>(r2)
org.apache.ambari.server.view.ViewRegistry.getCluster : $r6 = virtualinvoke $r5.<org.apache.ambari.server.view.RemoteAmbariClusterRegistry: org.apache.ambari.server.view.RemoteAmbariCluster get(java.lang.Long)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r17 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r6 = virtualinvoke $r5.<org.apache.ambari.server.view.RemoteAmbariClusterRegistry: org.apache.ambari.server.view.RemoteAmbariCluster get(java.lang.Long)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r20 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r6 = virtualinvoke $r5.<org.apache.ambari.server.view.RemoteAmbariClusterRegistry: org.apache.ambari.server.view.RemoteAmbariCluster get(java.lang.Long)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : return $r6
org.apache.ambari.server.view.ViewRegistry.getCluster : $r21 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot get Remote Cluster with id={}.", r2, $r20)
org.apache.ambari.server.view.ViewRegistry.getCluster : interfaceinvoke $r21.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Cannot get Remote Cluster with id={}.", r2, $r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r22 = new org.apache.ambari.server.view.IllegalClusterException
org.apache.ambari.server.view.ViewRegistry.getCluster : $r22 = new org.apache.ambari.server.view.IllegalClusterException >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r22.<org.apache.ambari.server.view.IllegalClusterException: void <init>(java.lang.Throwable)>($r20)
org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r22.<org.apache.ambari.server.view.IllegalClusterException: void <init>(java.lang.Throwable)>($r20) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : throw $r22
org.apache.ambari.server.view.ViewRegistry.getCluster : $r18 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Remote Cluster with id={} had invalid URL.", r2, $r17)
org.apache.ambari.server.view.ViewRegistry.getCluster : interfaceinvoke $r18.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Remote Cluster with id={} had invalid URL.", r2, $r17) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r19 = new org.apache.ambari.server.view.IllegalClusterException
org.apache.ambari.server.view.ViewRegistry.getCluster : $r19 = new org.apache.ambari.server.view.IllegalClusterException >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r19.<org.apache.ambari.server.view.IllegalClusterException: void <init>(java.lang.Throwable)>($r17)
org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r19.<org.apache.ambari.server.view.IllegalClusterException: void <init>(java.lang.Throwable)>($r17) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : throw $r19
org.apache.ambari.server.view.ViewRegistry.getCluster : $r7 = interfaceinvoke r1.<org.apache.ambari.view.ViewInstanceDefinition: org.apache.ambari.view.ClusterType getClusterType()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r8 = <org.apache.ambari.view.ClusterType: org.apache.ambari.view.ClusterType LOCAL_AMBARI>
org.apache.ambari.server.view.ViewRegistry.getCluster : $r8 = <org.apache.ambari.view.ClusterType: org.apache.ambari.view.ClusterType LOCAL_AMBARI> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : if $r7 != $r8
org.apache.ambari.server.view.ViewRegistry.getCluster : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r9 = new org.apache.ambari.server.view.ClusterImpl
org.apache.ambari.server.view.ViewRegistry.getCluster : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : if r2 == null
org.apache.ambari.server.view.ViewRegistry.getCluster : $r9 = new org.apache.ambari.server.view.ClusterImpl >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r10 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider>
org.apache.ambari.server.view.ViewRegistry.getCluster : $r10 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r11 = interfaceinvoke $r10.<javax.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.view.ViewRegistry.getCluster : $r10 = r0.<org.apache.ambari.server.view.ViewRegistry: javax.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r14 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r15 = <org.apache.ambari.server.view.ViewRegistry: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Could not find the cluster identified by {}.", r2)
org.apache.ambari.server.view.ViewRegistry.getCluster : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object)>("Could not find the cluster identified by {}.", r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r16 = new org.apache.ambari.server.view.IllegalClusterException
org.apache.ambari.server.view.ViewRegistry.getCluster : $r16 = new org.apache.ambari.server.view.IllegalClusterException >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r16.<org.apache.ambari.server.view.IllegalClusterException: void <init>(java.lang.Throwable)>($r14)
org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r16.<org.apache.ambari.server.view.IllegalClusterException: void <init>(java.lang.Throwable)>($r14) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : throw $r16
org.apache.ambari.server.view.ViewRegistry.getCluster : $r11 = interfaceinvoke $r10.<javax.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r12 = (org.apache.ambari.server.state.Clusters) $r11
org.apache.ambari.server.view.ViewRegistry.getCluster : $r11 = interfaceinvoke $r10.<javax.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r14 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r12 = (org.apache.ambari.server.state.Clusters) $r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>(r2)
org.apache.ambari.server.view.ViewRegistry.getCluster : $r12 = (org.apache.ambari.server.state.Clusters) $r11 >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r14 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r9.<org.apache.ambari.server.view.ClusterImpl: void <init>(org.apache.ambari.server.state.Cluster)>($r13)
org.apache.ambari.server.view.ViewRegistry.getCluster : $r13 = interfaceinvoke $r12.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>(r2) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r14 := @caughtexception
org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r9.<org.apache.ambari.server.view.ClusterImpl: void <init>(org.apache.ambari.server.state.Cluster)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : return $r9
org.apache.ambari.server.view.ViewRegistry.getCluster : specialinvoke $r9.<org.apache.ambari.server.view.ClusterImpl: void <init>(org.apache.ambari.server.state.Cluster)>($r13) >>>>>>>> org.apache.ambari.server.view.ViewRegistry.getCluster : $r14 := @caughtexception
