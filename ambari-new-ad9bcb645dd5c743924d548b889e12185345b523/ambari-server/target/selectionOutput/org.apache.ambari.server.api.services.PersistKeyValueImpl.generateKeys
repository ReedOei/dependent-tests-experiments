org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : $r2 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0)
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : i1 = 0
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : i1 = 0 >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : if i1 >= i0
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.PersistKeyValueImpl: java.lang.String generateKey()>()
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : if i1 >= i0 >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : return $r2
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : $r3 = virtualinvoke r0.<org.apache.ambari.server.api.services.PersistKeyValueImpl: java.lang.String generateKey()>() >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : i1 = i1 + 1
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : goto [?= (branch)]
org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.api.services.PersistKeyValueImpl.generateKeys : if i1 >= i0
