org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : return $r5
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : r4 = (java.lang.String) $r6
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : r4 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if null == r4
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if null == r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r8 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts>
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if null == r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r7 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r7 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : specialinvoke $r7.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r4)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : specialinvoke $r7.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : throw $r7
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r8 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hosts> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r9 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r4)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r9 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : r11 = (org.apache.ambari.server.state.Host) $r9
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : r11 = (org.apache.ambari.server.state.Host) $r9 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if r11 != null
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if r11 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r10 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : if r11 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r11)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r11) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : $r10 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : specialinvoke $r10.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r4)
org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : specialinvoke $r10.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getHostsMap : throw $r10
