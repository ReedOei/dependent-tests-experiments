org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r15 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_groups") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r4 = (java.util.HashSet) $r15
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r4 = (java.util.HashSet) $r15 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if r4 == null
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if r4 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z0 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if r4 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r16 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r16 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one host group must be specified in a blueprint")
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("At least one host group must be specified in a blueprint") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : throw $r16
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z0 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z0 == 0
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r16 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r17 = new java.util.ArrayList
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r6 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z1 == 0
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z1 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : return $r17
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r7 = (java.util.HashMap) $r18
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r7 = (java.util.HashMap) $r18 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r19 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("name")
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r19 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("name") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r8 = (java.lang.String) $r19
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r8 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if r8 == null
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if r8 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z2 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if r8 == null >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r20 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r20 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Every host group must include a non-null \'name\' property")
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Every host group must include a non-null \'name\' property") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : throw $r20
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z2 = virtualinvoke r8.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z2 == 0
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r20 = new java.lang.IllegalArgumentException
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r21 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("components")
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r21 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("components") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r9 = (java.util.HashSet) $r21
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r9 = (java.util.HashSet) $r21 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r22 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("configurations")
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r22 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("configurations") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r10 = (java.util.Collection) $r22
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r10 = (java.util.Collection) $r22 >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r11 = specialinvoke r0.<org.apache.ambari.server.topology.BlueprintFactory: java.util.Collection processHostGroupComponents(org.apache.ambari.server.controller.internal.Stack,java.lang.String,java.util.HashSet)>(r2, r8, r9)
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r11 = specialinvoke r0.<org.apache.ambari.server.topology.BlueprintFactory: java.util.Collection processHostGroupComponents(org.apache.ambari.server.controller.internal.Stack,java.lang.String,java.util.HashSet)>(r2, r8, r9) >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r23 = r0.<org.apache.ambari.server.topology.BlueprintFactory: org.apache.ambari.server.topology.ConfigurationFactory configFactory>
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r23 = r0.<org.apache.ambari.server.topology.BlueprintFactory: org.apache.ambari.server.topology.ConfigurationFactory configFactory> >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r12 = virtualinvoke $r23.<org.apache.ambari.server.topology.ConfigurationFactory: org.apache.ambari.server.topology.Configuration getConfiguration(java.util.Collection)>(r10)
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r12 = virtualinvoke $r23.<org.apache.ambari.server.topology.ConfigurationFactory: org.apache.ambari.server.topology.Configuration getConfiguration(java.util.Collection)>(r10) >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r24 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("cardinality")
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r24 = virtualinvoke r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("cardinality") >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24)
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r25 = new org.apache.ambari.server.topology.HostGroupImpl
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $r25 = new org.apache.ambari.server.topology.HostGroupImpl >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r25.<org.apache.ambari.server.topology.HostGroupImpl: void <init>(java.lang.String,java.lang.String,org.apache.ambari.server.controller.internal.Stack,java.util.Collection,org.apache.ambari.server.topology.Configuration,java.lang.String)>(r8, r1, r2, r11, r12, r13)
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : specialinvoke $r25.<org.apache.ambari.server.topology.HostGroupImpl: void <init>(java.lang.String,java.lang.String,org.apache.ambari.server.controller.internal.Stack,java.util.Collection,org.apache.ambari.server.topology.Configuration,java.lang.String)>(r8, r1, r2, r11, r12, r13) >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r25)
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : interfaceinvoke $r17.<java.util.Collection: boolean add(java.lang.Object)>($r25) >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : goto [?= $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.BlueprintFactory.processHostGroups : $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
