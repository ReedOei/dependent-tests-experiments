org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r5 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r11 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z10 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z10 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : return $r11
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r8 = (org.apache.ambari.server.state.stack.upgrade.Task) $r12
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r8 = (org.apache.ambari.server.state.stack.upgrade.Task) $r12 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r13 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r13 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = virtualinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean isServerAction()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z0 = virtualinvoke $r13.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean isServerAction()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r56 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r14 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r14 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r15 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type EXECUTE>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r15 = <org.apache.ambari.server.state.stack.upgrade.Task$Type: org.apache.ambari.server.state.stack.upgrade.Task$Type EXECUTE> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z1 = virtualinvoke $r14.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r15)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z1 = virtualinvoke $r14.<org.apache.ambari.server.state.stack.upgrade.Task$Type: boolean equals(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z1 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r9 = (org.apache.ambari.server.state.stack.upgrade.ExecuteTask) r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r16 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r16 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r18 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r18 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r17[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r16.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r18, r4, $r17)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r16.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r18, r4, $r17) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : r9 = (org.apache.ambari.server.state.stack.upgrade.ExecuteTask) r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r20 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r20 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r19 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType MASTER>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r19 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType MASTER> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r20 != $r19
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r20 != $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r48 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r20 != $r19 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r22 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r22 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r21 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType ANY>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r21 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType ANY> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r22 != $r21
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r22 != $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r37 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r22 != $r21 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r24 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r24 = r9.<org.apache.ambari.server.state.stack.upgrade.ExecuteTask: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r23 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType FIRST>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r23 = <org.apache.ambari.server.state.stack.upgrade.ExecuteHostType: org.apache.ambari.server.state.stack.upgrade.ExecuteHostType FIRST> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r24 != $r23
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r24 != $r23 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r25 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r24 != $r23 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r16 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r25 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r25 == null
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r25 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r29 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r25 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r27 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r27 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26[0] = r0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26[0] = r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26[1] = r1
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r26[1] = r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r28 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on the first host sorted alphabetically but could not find host to run on. Skipping this task.", $r26)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r28 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on the first host sorted alphabetically but could not find host to run on. Skipping this task.", $r26) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String)>($r28)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r27.<org.slf4j.Logger: void error(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r29 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z3 = virtualinvoke $r29.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z3 = virtualinvoke $r29.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z3 != 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r30 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z3 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r27 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r30 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r31 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r31 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r30.<java.util.ArrayList: void <init>(java.util.Collection)>($r31)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r30.<java.util.ArrayList: void <init>(java.util.Collection)>($r31) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r32 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r30, $r32)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r30, $r32) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r33 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r33 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r34 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r34 = interfaceinvoke $r30.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r34)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r35 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r36 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r36 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r36[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r36[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r33.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r35, r4, $r36)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r33.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r35, r4, $r36) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r33)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r37 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r37 == null
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r37 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r41 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r37 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r39 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r39 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38[0] = r0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38[0] = r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38[1] = r1
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r38[1] = r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r40 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on any host but could not find host to run on. Skipping this task.", $r38)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r40 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on any host but could not find host to run on. Skipping this task.", $r38) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String)>($r40)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r41 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z5 = virtualinvoke $r41.<java.util.LinkedHashSet: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z5 = virtualinvoke $r41.<java.util.LinkedHashSet: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z5 != 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r42 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r39 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r42 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r43 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r43 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r44 = virtualinvoke $r43.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r44 = virtualinvoke $r43.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r45 = interfaceinvoke $r44.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r46 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r45)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r46 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r47 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r47 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r47[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r47[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r42.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r46, r4, $r47)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r42.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r46, r4, $r47) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r42)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r48 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r48 == null
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r48 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r52 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $r48 == null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r50 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r50 = <org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49[0] = r0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49[0] = r0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49[1] = r1
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r49[1] = r1 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r51 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on a master but could not find any masters to run on. Skipping this task.", $r49)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r51 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Found an Execute task for {0} and {1} meant to run on a master but could not find any masters to run on. Skipping this task.", $r49) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String)>($r51)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r50.<org.slf4j.Logger: void error(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r52 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r53 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master>
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r53 = r2.<org.apache.ambari.server.stack.HostsType: java.lang.String master> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r54 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r53)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r54 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r53) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r55 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r55 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r55[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r55[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r52.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r54, r4, $r55)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r52.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r54, r4, $r55) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r52)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r56 = r2.<org.apache.ambari.server.stack.HostsType: java.util.LinkedHashSet hosts> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z8 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>($r56)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z8 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>($r56) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z8 == 0
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r57 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : if $z8 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r14 = virtualinvoke r8.<org.apache.ambari.server.state.stack.upgrade.Task: org.apache.ambari.server.state.stack.upgrade.Task$Type getType()>()
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r57 = new org.apache.ambari.server.state.stack.upgrade.TaskWrapper >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r58 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r58 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59 = newarray (org.apache.ambari.server.state.stack.upgrade.Task)[1] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59[0] = r8
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $r59[0] = r8 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r57.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r58, r4, $r59)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : specialinvoke $r57.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: void <init>(java.lang.String,java.lang.String,java.util.Set,java.util.Map,org.apache.ambari.server.state.stack.upgrade.Task[])>(r0, r1, $r58, r4, $r59) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r57)
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r57) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : goto [?= $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.TaskWrapperBuilder.getTaskList : $z10 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
