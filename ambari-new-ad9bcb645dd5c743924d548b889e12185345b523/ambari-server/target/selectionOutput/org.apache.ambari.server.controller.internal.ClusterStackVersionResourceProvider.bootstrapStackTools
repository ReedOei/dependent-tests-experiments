org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r13 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r14 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r14 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getCurrentStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r15 = virtualinvoke $r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r15 = virtualinvoke $r14.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r13, $r15)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>($r13, $r15) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z0 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r16 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.inject.Provider configHelperProvider>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r16 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.inject.Provider configHelperProvider> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r3 = (org.apache.ambari.server.state.ConfigHelper) $r17
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r3 = (org.apache.ambari.server.state.ConfigHelper) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r4 = virtualinvoke r3.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getDefaultStackProperties(org.apache.ambari.server.state.StackId)>(r1)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r4 = virtualinvoke r3.<org.apache.ambari.server.state.ConfigHelper: java.util.Map getDefaultStackProperties(org.apache.ambari.server.state.StackId)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r18 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-env")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r18 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster-env") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r5 = (java.util.Map) $r18
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r5 = (java.util.Map) $r18 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("cluster-env")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r6 = interfaceinvoke r2.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("cluster-env") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r7 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19 = newarray (java.lang.String)[4]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19 = newarray (java.lang.String)[4] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[0] = "stack_root"
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[0] = "stack_root" >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[1] = "stack_tools"
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[1] = "stack_tools" >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[2] = "stack_features"
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[2] = "stack_features" >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[3] = "stack_packages"
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r19[3] = "stack_packages" >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r8 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r19)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r8 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r20 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r45 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r45 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z6 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r25 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z1 = interfaceinvoke $r20.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z1 = interfaceinvoke $r20.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z1 != 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r49 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r49 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r21[0] = $r22
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r21[0] = $r22 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Adding stack tools for %s while distributing a new repository", $r21)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r50 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Adding stack tools for %s while distributing a new repository", $r21) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r23 = interfaceinvoke r6.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r24 = interfaceinvoke r49.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r24 = interfaceinvoke r49.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : virtualinvoke r3.<org.apache.ambari.server.state.ConfigHelper: void updateConfigType(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.util.Map,java.util.Collection,java.lang.String,java.lang.String)>(r2, r1, r49, $r23, $r20, null, $r24, r50)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : virtualinvoke r3.<org.apache.ambari.server.state.ConfigHelper: void updateConfigType(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.StackId,org.apache.ambari.server.controller.AmbariManagementController,java.lang.String,java.util.Map,java.util.Collection,java.lang.String,java.lang.String)>(r2, r1, r49, $r23, $r20, null, $r24, r50) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r25 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r46 = (java.lang.String) $r25
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r46 = (java.lang.String) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r26 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r46)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r26 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r46) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r10 = (java.lang.String) $r26
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r10 = (java.lang.String) $r26 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z2 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r27 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r46)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r27 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r46) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r11 = (java.lang.String) $r27
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r11 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r11)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z3 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, r10)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r46, "stack_root")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z4 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equals(java.lang.String,java.lang.String)>(r46, "stack_root") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z4 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r40 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r28 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r28 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r29 = virtualinvoke $r28.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r11, class "Ljava/util/Map;")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r29 = virtualinvoke $r28.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r11, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r47 = (java.util.Map) $r29
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r47 = (java.util.Map) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r30 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r30 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r31 = virtualinvoke $r30.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r10, class "Ljava/util/Map;")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r31 = virtualinvoke $r30.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r10, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r48 = (java.util.Map) $r31
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r48 = (java.util.Map) $r31 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r32 = interfaceinvoke r47.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r32 = interfaceinvoke r47.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z5 = interfaceinvoke $r32.<java.util.Set: boolean contains(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z5 = interfaceinvoke $r32.<java.util.Set: boolean contains(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z5 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r34 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r34 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r35 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r35 = virtualinvoke r1.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r36 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r36 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : interfaceinvoke r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : interfaceinvoke r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r34, $r36) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r38 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r38 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r12 = virtualinvoke $r38.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r47)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r12 = virtualinvoke $r38.<com.google.gson.Gson: java.lang.String toJson(java.lang.Object)>(r47) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, r12)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, r12) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r40 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r41 = virtualinvoke $r40.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r11, class "Ljava/util/Map;")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r41 = virtualinvoke $r40.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r11, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r47 = (java.util.Map) $r41
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r47 = (java.util.Map) $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r42 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r42 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.gson.Gson gson> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r43 = virtualinvoke $r42.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r10, class "Ljava/util/Map;")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r43 = virtualinvoke $r42.<com.google.gson.Gson: java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)>(r10, class "Ljava/util/Map;") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r48 = (java.util.Map) $r43
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : r48 = (java.util.Map) $r43 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $r32 = interfaceinvoke r47.<java.util.Map: java.util.Set keySet()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $r32 = interfaceinvoke r47.<java.util.Map: java.util.Set keySet()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $r32 = interfaceinvoke r47.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r46, r10) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : goto [?= $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.bootstrapStackTools : $z6 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
