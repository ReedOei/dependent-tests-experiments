org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $z0 = virtualinvoke r1.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $z0 = virtualinvoke r1.<org.apache.ambari.server.state.stack.upgrade.Direction: boolean isUpgrade()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : if $z0 == 0
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : r12 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups>
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r7 = <org.apache.ambari.server.state.stack.UpgradePack$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$UpgradeType>
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r7 = <org.apache.ambari.server.state.stack.UpgradePack$1: int[] $SwitchMap$org$apache$ambari$server$state$stack$upgrade$UpgradeType> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType type>
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r6 = r0.<org.apache.ambari.server.state.stack.UpgradePack: org.apache.ambari.server.state.stack.upgrade.UpgradeType type> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $i0 = virtualinvoke $r6.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: int ordinal()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $i0 = virtualinvoke $r6.<org.apache.ambari.server.state.stack.upgrade.UpgradeType: int ordinal()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $i1 = $r7[$i0]
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $i1 = $r7[$i0] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : tableswitch($i1) {     case 1:
org.apache.ambari.server.state.stack.UpgradePack.getGroups : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : r12 = specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getDowngradeGroupsForNonrolling()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : r12 = specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getDowngradeGroupsForRolling()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : r12 = specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getDowngradeGroupsForRolling()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r13 = new java.util.ArrayList
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : r3 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : r3 = interfaceinvoke r12.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : if $z2 == 0
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : return $r13
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r8
org.apache.ambari.server.state.stack.UpgradePack.getGroups : r4 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r8 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r9 = r4.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection>
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r9 = r4.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : if null == $r9
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if null == $r9 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r10 = r4.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection>
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if null == $r9 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.UpgradePack.getGroups : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r10 = r4.<org.apache.ambari.server.state.stack.upgrade.Grouping: org.apache.ambari.server.state.stack.upgrade.Direction intendedDirection> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : if r1 != $r10
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if r1 != $r10 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.UpgradePack.getGroups : if r1 != $r10 >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.UpgradePack.getGroups : r12 = specialinvoke r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getDowngradeGroupsForNonrolling()>() >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $r13 = new java.util.ArrayList]
org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $r13 = new java.util.ArrayList] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r13 = new java.util.ArrayList
org.apache.ambari.server.state.stack.UpgradePack.getGroups : r12 = r0.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List groups> >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $r13 = new java.util.ArrayList]
org.apache.ambari.server.state.stack.UpgradePack.getGroups : goto [?= $r13 = new java.util.ArrayList] >>>>>>>> org.apache.ambari.server.state.stack.UpgradePack.getGroups : $r13 = new java.util.ArrayList
