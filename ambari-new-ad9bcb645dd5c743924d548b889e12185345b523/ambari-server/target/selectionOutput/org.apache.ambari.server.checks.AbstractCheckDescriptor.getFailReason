org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r12 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription m_description> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke $r12.<org.apache.ambari.server.checks.CheckDescription: java.lang.String getFail(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r4 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getTargetRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z0 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{version}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if null == r4
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}") >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r33 = virtualinvoke r2.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z5 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r33 = virtualinvoke r2.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r13 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: org.apache.ambari.server.checks.CheckDescription getDescription()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r14 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.state.stack.PrereqCheckType getType()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r14 = virtualinvoke $r13.<org.apache.ambari.server.checks.CheckDescription: org.apache.ambari.server.state.stack.PrereqCheckType getType()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r15 = <org.apache.ambari.server.state.stack.PrereqCheckType: org.apache.ambari.server.state.stack.PrereqCheckType SERVICE>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r15 = <org.apache.ambari.server.state.stack.PrereqCheckType: org.apache.ambari.server.state.stack.PrereqCheckType SERVICE> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $r14 != $r15
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $r14 != $r15 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r17 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider clustersProvider>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $r14 != $r15 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r16 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String formatEntityList(java.util.LinkedHashSet)>(r33)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r16 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String formatEntityList(java.util.LinkedHashSet)>(r33) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{fails}}", $r16)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{fails}}", $r16) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : return r32
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r17 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider clustersProvider> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r18 = interfaceinvoke $r17.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r18 = interfaceinvoke $r17.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r5 = (org.apache.ambari.server.state.Clusters) $r18
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r5 = (org.apache.ambari.server.state.Clusters) $r18 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r19 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider ambariMetaInfo>
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r19 = r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: com.google.inject.Provider ambariMetaInfo> >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r20 = interfaceinvoke $r19.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r20 = interfaceinvoke $r19.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r6 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r20
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r6 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r20 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r21 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r21 = virtualinvoke r3.<org.apache.ambari.server.controller.PrereqCheckRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r21)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r22 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r22 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r23 = virtualinvoke $r22.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r24 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r24 = interfaceinvoke r7.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.StackId getDesiredStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r25 = virtualinvoke $r24.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r25 = virtualinvoke $r24.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r8 = virtualinvoke r6.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r23, $r25)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r8 = virtualinvoke r6.<org.apache.ambari.server.api.services.AmbariMetaInfo: java.util.Map getServices(java.lang.String,java.lang.String)>($r23, $r25) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r26 = new java.util.LinkedHashSet
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r26 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : specialinvoke $r26.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : specialinvoke $r26.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r10 = virtualinvoke r33.<java.util.LinkedHashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r10 = virtualinvoke r33.<java.util.LinkedHashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r27 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r33 = $r26
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r33 = $r26 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r16 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.lang.String formatEntityList(java.util.LinkedHashSet)>(r33)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r27 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r11 = (java.lang.String) $r27
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r11 = (java.lang.String) $r27 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z2 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r11)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z2 = interfaceinvoke r8.<java.util.Map: boolean containsKey(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z2 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r28 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if $z2 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : virtualinvoke $r26.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : virtualinvoke $r26.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r28 = interfaceinvoke r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r29 = (org.apache.ambari.server.state.ServiceInfo) $r28
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r29 = (org.apache.ambari.server.state.ServiceInfo) $r28 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r30 = virtualinvoke $r29.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r30 = virtualinvoke $r29.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : virtualinvoke $r26.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r30)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : virtualinvoke $r26.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r30) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : goto [?= (branch)]
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : goto [?= $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if null == r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r31 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : if null == r4 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $r31 = virtualinvoke r4.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{version}}", $r31)
org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : r32 = virtualinvoke r32.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{{version}}", $r31) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.getFailReason : $z5 = virtualinvoke r32.<java.lang.String: boolean contains(java.lang.CharSequence)>("{{fails}}")
