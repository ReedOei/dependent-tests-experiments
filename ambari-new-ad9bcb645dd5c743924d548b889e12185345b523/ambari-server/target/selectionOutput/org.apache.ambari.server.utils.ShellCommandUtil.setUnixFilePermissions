org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : if $z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6 = newarray (java.lang.String)[3]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r4 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r4 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r3 = newarray (java.lang.Object)[2]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r3 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r3[0] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r3[0] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r3[1] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r3[1] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Not performing chmod %s command for file %s because current OS is not Linux ", $r3)
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Not performing chmod %s command for file %s because current OS is not Linux ", $r3) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r5)
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : return
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6 = newarray (java.lang.String)[3] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[0] = "chmod"
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[0] = "chmod" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[1] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[1] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[2] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[2] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r6)
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r6[2] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r8 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r10 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r9 = newarray (java.lang.Object)[2]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r9 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r9[0] = r0
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r9[0] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r9[1] = r1
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r9[1] = r1 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chmod %s %s", $r9)
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform chmod %s %s", $r9) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r11, $r8)
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : interfaceinvoke $r10.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r11, $r8) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : goto [?= return]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : goto [?= return] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : return
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r6) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : goto [?= return]
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r6) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : $r8 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : goto [?= return] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.setUnixFilePermissions : return
