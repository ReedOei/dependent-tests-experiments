org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ArtifactEntity: java.util.Map getForeignKeys()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if r1 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : return null
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r2 = virtualinvoke r1.<org.apache.ambari.server.orm.entities.ArtifactEntity: java.util.Map getForeignKeys()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster")
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : return null
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r6 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("cluster") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r3 = (java.lang.String) $r6
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r3 = (java.lang.String) $r6 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNumeric(java.lang.String)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNumeric(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if $z0 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: com.google.inject.Injector injector>
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : if $z0 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r8 = <org.apache.ambari.server.upgrade.UpgradeCatalog260: org.slf4j.Logger LOG>
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r8 = <org.apache.ambari.server.upgrade.UpgradeCatalog260: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r7[0] = r2
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r7[0] = r2 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to obtain cluster id from artifact entity with foreign keys: %s", $r7)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to obtain cluster id from artifact entity with foreign keys: %s", $r7) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String)>($r9)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : interfaceinvoke $r8.<org.slf4j.Logger: void error(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : return null
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog260: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;")
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/state/Clusters;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r4 = (org.apache.ambari.server.state.Clusters) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r4 = (org.apache.ambari.server.state.Clusters) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r3)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : r4 = (org.apache.ambari.server.state.Clusters) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r14 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r16 = <org.apache.ambari.server.upgrade.UpgradeCatalog260: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r15 = newarray (java.lang.Object)[2]
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r15 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r15[0] = r3
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r15[0] = r3 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r17 = virtualinvoke $r14.<org.apache.ambari.server.AmbariException: java.lang.String getMessage()>()
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r17 = virtualinvoke $r14.<org.apache.ambari.server.AmbariException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r15[1] = $r17
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r15[1] = $r17 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to obtain cluster using cluster id %s -  %s", $r15)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to obtain cluster using cluster id %s -  %s", $r15) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r18, $r14)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r18, $r14) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : goto [?= return null]
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : goto [?= return null] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : return null
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r12)
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r14 := @caughtexception
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : return $r13
org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r13 = interfaceinvoke r4.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.Long)>($r12) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog260.getCluster : $r14 := @caughtexception
