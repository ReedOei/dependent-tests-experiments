org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r3 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r4 = interfaceinvoke $r3.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r5 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r19 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 = interfaceinvoke $r19.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r20 = interfaceinvoke $r19.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : throw $r18
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r5 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r5 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $z0 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r6)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $z0 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $z0 = interfaceinvoke $r5.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>($r6) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r22 = specialinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity getConfigGroupEntity()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r22 = specialinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity getConfigGroupEntity()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r22 = specialinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity getConfigGroupEntity()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : virtualinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity persistHostMapping(java.util.Collection,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>($r7, r22)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : virtualinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity persistHostMapping(java.util.Collection,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>($r7, r22) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r9 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : virtualinvoke r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: org.apache.ambari.server.orm.entities.ConfigGroupEntity persistHostMapping(java.util.Collection,org.apache.ambari.server.orm.entities.ConfigGroupEntity)>($r7, r22) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r9 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r9 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.ConcurrentMap m_hosts> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r9.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r10, r1)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r10 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r9.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r10, r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r12 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r9.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r10, r1) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r12 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.util.concurrent.locks.ReadWriteLock hostLock> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r13 = interfaceinvoke $r12.<java.util.concurrent.locks.ReadWriteLock: java.util.concurrent.locks.Lock writeLock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : goto [?= return]
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : goto [?= return] >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : return
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14[0] = $r15
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r15 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14[0] = $r15 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r16 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.lang.String configGroupName>
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14[0] = $r15 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r16 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.lang.String configGroupName> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14[1] = $r16
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r16 = r0.<org.apache.ambari.server.state.configgroup.ConfigGroupImpl: java.lang.String configGroupName> >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14[1] = $r16 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host %s is already associated with the configuration group %s", $r14)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r14[1] = $r16 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host %s is already associated with the configuration group %s", $r14) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r17 = new org.apache.ambari.server.DuplicateResourceException
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Host %s is already associated with the configuration group %s", $r14) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r17 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : specialinvoke $r17.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r21)
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r17 = new org.apache.ambari.server.DuplicateResourceException >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : specialinvoke $r17.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r21) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : throw $r17
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : specialinvoke $r17.<org.apache.ambari.server.DuplicateResourceException: void <init>(java.lang.String)>(r21) >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : throw $r17 >>>>>>>> org.apache.ambari.server.state.configgroup.ConfigGroupImpl.addHost : $r18 := @caughtexception
