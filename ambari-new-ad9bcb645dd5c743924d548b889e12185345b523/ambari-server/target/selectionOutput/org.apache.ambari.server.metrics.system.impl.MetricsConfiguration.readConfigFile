org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r2 = new java.util.Properties >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : specialinvoke $r2.<java.util.Properties: void <init>()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/metrics/system/impl/MetricsConfiguration;"
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r3 = class "Lorg/apache/ambari/server/metrics/system/impl/MetricsConfiguration;" >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("metrics.properties")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : r1 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("metrics.properties") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r5 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG>
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>(r1)
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r6 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : if r1 != null >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r9 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t read configuration file metrics.properties", $r8)
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Can\'t read configuration file metrics.properties", $r8) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r7 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("No configuration file metrics.properties found in classpath.")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r7.<org.slf4j.Logger: void info(java.lang.String)>("No configuration file metrics.properties found in classpath.") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r6 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>(r1) >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>()
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r6 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r8 := @caughtexception
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : virtualinvoke r1.<java.io.InputStream: void close()>() >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : goto [?= return $r2]
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : goto [?= return $r2] >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return $r2
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : $r5 = <org.apache.ambari.server.metrics.system.impl.MetricsConfiguration: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("metrics.properties not found in classpath")
org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>("metrics.properties not found in classpath") >>>>>>>> org.apache.ambari.server.metrics.system.impl.MetricsConfiguration.readConfigFile : return null
