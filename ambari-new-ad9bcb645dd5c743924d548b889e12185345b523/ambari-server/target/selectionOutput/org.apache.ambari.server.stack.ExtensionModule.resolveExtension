org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r5 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.stack.ModuleState getModuleState()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r6 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState INIT>
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r6 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState INIT> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r5 != $r6
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r5 != $r6 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: void resolve(org.apache.ambari.server.stack.ExtensionModule,java.util.Map,java.util.Map,java.util.Map)>(null, r2, r3, r4)
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r5 != $r6 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r7 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.stack.ModuleState getModuleState()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r7 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.stack.ModuleState getModuleState()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r8 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED>
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r8 = <org.apache.ambari.server.stack.ModuleState: org.apache.ambari.server.stack.ModuleState VISITED> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r7 != $r8
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r16 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $z0 == 0
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r14 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z1 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z1 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.ExtensionModule: void setValid(boolean)>($z1)
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.ExtensionModule: void setValid(boolean)>($z1) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r10 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo>
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r10 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r9 = r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo>
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r9 = r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z2 = virtualinvoke $r9.<org.apache.ambari.server.state.ExtensionInfo: boolean isValid()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z2 = virtualinvoke $r9.<org.apache.ambari.server.state.ExtensionInfo: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke $r10.<org.apache.ambari.server.state.ExtensionInfo: void setValid(boolean)>($z2)
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke $r10.<org.apache.ambari.server.state.ExtensionInfo: void setValid(boolean)>($z2) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r11 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: java.util.Collection getErrors()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r11 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: java.util.Collection getErrors()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.ExtensionModule: void addErrors(java.util.Collection)>($r11)
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke r0.<org.apache.ambari.server.stack.ExtensionModule: void addErrors(java.util.Collection)>($r11) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r12 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo>
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r12 = r0.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo extensionInfo> >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r13 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: java.util.Collection getErrors()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r13 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: java.util.Collection getErrors()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke $r12.<org.apache.ambari.server.state.ExtensionInfo: void addErrors(java.util.Collection)>($r13)
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke $r12.<org.apache.ambari.server.state.ExtensionInfo: void addErrors(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : return
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r14 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r14 == null
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r14 == null >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r15 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $r14 == null >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : return
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r15 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: org.apache.ambari.server.state.ExtensionInfo getModuleInfo()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z3 = virtualinvoke $r15.<org.apache.ambari.server.state.ExtensionInfo: boolean isValid()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z3 = virtualinvoke $r15.<org.apache.ambari.server.state.ExtensionInfo: boolean isValid()>() >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $z3 != 0
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z1 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : if $z3 != 0 >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : return
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $r16 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Cycle detected while parsing extension definition")
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Cycle detected while parsing extension definition") >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : throw $r16
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: void resolve(org.apache.ambari.server.stack.ExtensionModule,java.util.Map,java.util.Map,java.util.Map)>(null, r2, r3, r4) >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : goto [?= $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()]
org.apache.ambari.server.stack.ExtensionModule.resolveExtension : goto [?= $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()] >>>>>>>> org.apache.ambari.server.stack.ExtensionModule.resolveExtension : $z0 = virtualinvoke r1.<org.apache.ambari.server.stack.ExtensionModule: boolean isValid()>()
