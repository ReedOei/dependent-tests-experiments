org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r7 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r7 != null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r27 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r7 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Schedule getSchedule()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r2 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Schedule getSchedule()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r2 == null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Batch getBatch()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r3 == null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : return
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r8 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z0 = interfaceinvoke $r8.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z0 != 0
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r9 = new java.util.HashSet
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : return
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r9 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r9.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r9.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r10 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r10 = virtualinvoke r3.<org.apache.ambari.server.state.scheduler.Batch: java.util.List getBatchRequests()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r5 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r5 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z1 == 0
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : return
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r6 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r11
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r6 = (org.apache.ambari.server.state.scheduler.BatchRequest) $r11 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r12 != null
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r20 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r13 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r13 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z2 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>($r13)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z2 = virtualinvoke $r9.<java.util.HashSet: boolean contains(java.lang.Object)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z2 == 0
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r15 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r14 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r14 = virtualinvoke r6.<org.apache.ambari.server.state.scheduler.BatchRequest: java.lang.Long getOrderId()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>($r14)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke $r9.<java.util.HashSet: boolean add(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : goto [?= $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r15 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate order id provided for batch request. ")
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate order id provided for batch request. ") >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r19)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r15.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : throw $r15
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r20 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No order id provided for batch request. ")
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No order id provided for batch request. ") >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r20.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : throw $r20
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r25 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.scheduler.ExecutionScheduleManager getExecutionScheduleManager()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r26 = interfaceinvoke $r25.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.scheduler.ExecutionScheduleManager getExecutionScheduleManager()>() >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke $r26.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void validateSchedule(org.apache.ambari.server.state.scheduler.Schedule)>(r2)
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : virtualinvoke $r26.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: void validateSchedule(org.apache.ambari.server.state.scheduler.Schedule)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : r3 = virtualinvoke r1.<org.apache.ambari.server.controller.RequestScheduleRequest: org.apache.ambari.server.state.scheduler.Batch getBatch()>()
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : $r27 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cluster name is required.")
org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cluster name is required.") >>>>>>>> org.apache.ambari.server.controller.internal.RequestScheduleResourceProvider.validateRequest : throw $r27
