org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : r11 = "777" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX>
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $z0 = <org.apache.ambari.server.utils.ShellCommandUtil: boolean LINUX> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : if $z0 == 0
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5 = newarray (java.lang.String)[4]
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r3 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG>
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r3 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r2 = newarray (java.lang.Object)[1]
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r2 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r2[0] = r0
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r2[0] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Not performing stat -s \"%%a\" command on file %s because current OS is not Linux. Returning 777", $r2)
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Not performing stat -s \"%%a\" command on file %s because current OS is not Linux. Returning 777", $r2) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r4)
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String)>($r4) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : return $r12
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5 = newarray (java.lang.String)[4] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[0] = "stat"
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[0] = "stat" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[1] = "-c"
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[1] = "-c" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[2] = "%a"
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[2] = "%a" >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[3] = r0
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[3] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r6 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r5)
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r5[3] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r7 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r9 = <org.apache.ambari.server.utils.ShellCommandUtil: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r8 = newarray (java.lang.Object)[1]
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r8 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r8[0] = r0
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r8[0] = r0 >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform stat on %s", $r8)
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not perform stat on %s", $r8) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r10, $r7)
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r10, $r7) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : goto [?= $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()]
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : goto [?= $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r6 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r5) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : r11 = virtualinvoke $r6.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>()
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r6 = staticinvoke <org.apache.ambari.server.utils.ShellCommandUtil: org.apache.ambari.server.utils.ShellCommandUtil$Result runCommand(java.lang.String[])>($r5) >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r7 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : r11 = virtualinvoke $r6.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : goto [?= $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()]
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : r11 = virtualinvoke $r6.<org.apache.ambari.server.utils.ShellCommandUtil$Result: java.lang.String getStdout()>() >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r7 := @caughtexception
org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : goto [?= $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()] >>>>>>>> org.apache.ambari.server.utils.ShellCommandUtil.getUnixFilePermissions : $r12 = virtualinvoke r11.<java.lang.String: java.lang.String trim()>()
