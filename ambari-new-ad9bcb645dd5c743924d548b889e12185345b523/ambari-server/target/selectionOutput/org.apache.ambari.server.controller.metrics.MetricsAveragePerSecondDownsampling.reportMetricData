org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r6 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,org.apache.ambari.server.controller.spi.TemporalInfo)>(r0, r3)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,org.apache.ambari.server.controller.spi.TemporalInfo)>(r0, r3) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r7 = virtualinvoke r1.<org.apache.hadoop.metrics2.sink.timeline.TimelineMetric: java.util.TreeMap getMetricValues()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r7 = virtualinvoke r1.<org.apache.hadoop.metrics2.sink.timeline.TimelineMetric: java.util.TreeMap getMetricValues()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r8 = virtualinvoke $r7.<java.util.TreeMap: java.util.Set entrySet()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r8 = virtualinvoke $r7.<java.util.TreeMap: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r5 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r41 = null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r41 = null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z0 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r36 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r41 == null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r41 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r14 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r41 == null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r44 = newmultiarray (java.lang.Number)[$i11][2]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r44 = newmultiarray (java.lang.Number)[$i11][2] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i12 = 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i12 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r45 = virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r45 = virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z8 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z8 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z8 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r9 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : return r44
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r9 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r46 = (org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo) $r9
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r46 = (org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo) $r9 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r11 = r44[i12]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r11 = r44[i12] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r10 = r46.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: java.lang.Double val>
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r10 = r46.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: java.lang.Double val> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r11[0] = $r10
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r11[0] = $r10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r12 = r44[i12]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r12 = r44[i12] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l1 = r46.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: long ts>
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l1 = r46.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: long ts> >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r12[1] = $r13
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r12[1] = $r13 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i12 = i12 + 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i12 = i12 + 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z8 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z8 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z8 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r14 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r15 = (java.lang.Long) $r14
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r15 = (java.lang.Long) $r14 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l2 = virtualinvoke $r15.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l2 = virtualinvoke $r15.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l9 = $l2 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l9 = $l2 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r16 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r16 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = (java.lang.Double) $r16
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = (java.lang.Double) $r16 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i10 = 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i10 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z6 = 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z6 = 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z7 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z6 != 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z6 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r17 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z6 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r17 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d0 = virtualinvoke r42.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d0 = virtualinvoke r42.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d1 = (double) i10
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d1 = (double) i10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d2 = $d0 / $d1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d2 = $d0 / $d1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r19 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r18)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r19 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r18) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r17.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l9, $r19)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r17.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l9, $r19) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r17)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r17) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $i11 = virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: int size()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r20 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r43 = (java.util.Map$Entry) $r20
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r43 = (java.util.Map$Entry) $r20 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r21 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r21 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r21 != null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r21 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z6 != 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r21 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r22 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r22 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r23 = (java.lang.Long) $r22
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r23 = (java.lang.Long) $r22 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l3 = virtualinvoke $r23.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l3 = virtualinvoke $r23.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l0 = $l3 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l0 = $l3 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $b4 = l0 cmp l9
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $b4 = l0 cmp l9 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $b4 == 0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $b4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r26 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $b4 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d3 = virtualinvoke r42.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d3 = virtualinvoke r42.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r24 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r24 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r25 = (java.lang.Double) $r24
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r25 = (java.lang.Double) $r24 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d4 = virtualinvoke $r25.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d4 = virtualinvoke $r25.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d5 = $d3 + $d4
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d5 = $d3 + $d4 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i10 = i10 + 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i10 = i10 + 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r26 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d6 = virtualinvoke r42.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d6 = virtualinvoke r42.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d7 = (double) i10
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d7 = (double) i10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d8 = $d6 / $d7
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d8 = $d6 / $d7 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d8) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r28 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r27)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r28 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r27) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r26.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l9, $r28)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r26.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l9, $r28) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r26)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r26) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l9 = l0
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : l9 = l0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r29 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r29 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = (java.lang.Double) $r29
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r42 = (java.lang.Double) $r29 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i10 = 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : i10 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= (branch)]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z6 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r33 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if z6 != 0 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r30 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r30 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r31 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r31 = interfaceinvoke r43.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r32 = (java.lang.Long) $r31
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r32 = (java.lang.Long) $r31 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l5 = virtualinvoke $r32.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l5 = virtualinvoke $r32.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l6 = $l5 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l6 = $l5 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r30.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l6, null)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r30.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l6, null) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r30)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r30) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z7 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r33 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d9 = virtualinvoke r42.<java.lang.Double: double doubleValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d9 = virtualinvoke r42.<java.lang.Double: double doubleValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d10 = (double) i10
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d10 = (double) i10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d11 = $d9 / $d10
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $d11 = $d9 / $d10 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d11) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r35 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r34)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r35 = virtualinvoke r2.<org.apache.ambari.server.controller.metrics.MetricsDataTransferMethod: java.lang.Double getData(java.lang.Double)>($r34) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r33.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l9, $r35)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r33.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, l9, $r35) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r33)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r33) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z6 = 1
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : z6 = 1 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r30 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r36 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r41 = (java.util.Map$Entry) $r36
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : r41 = (java.util.Map$Entry) $r36 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r37 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r37 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r37 != null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r37 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r38 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if $r37 != null >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : if r41 == null
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r38 = new org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r39 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r39 = interfaceinvoke r41.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r40 = (java.lang.Long) $r39
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $r40 = (java.lang.Long) $r39 >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l7 = virtualinvoke $r40.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l7 = virtualinvoke $r40.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l8 = $l7 / 1000L
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $l8 = $l7 / 1000L >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r38.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l8, null)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : specialinvoke $r38.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo: void <init>(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling,long,java.lang.Double)>(r0, $l8, null) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r38)
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : virtualinvoke $r6.<org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$OutOfBandAccumuloFilterList: boolean add(org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling$Accumulo)>($r38) >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : goto [?= $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.metrics.MetricsAveragePerSecondDownsampling.reportMetricData : $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
