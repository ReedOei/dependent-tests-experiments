org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r11 = specialinvoke r0.<org.apache.ambari.server.state.stack.OsFamily: java.util.Map parse_os(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r7 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("distro")
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r7 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("distro") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r3 = (java.lang.String) $r7
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r3 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r8 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("versions")
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r8 = interfaceinvoke r11.<java.util.Map: java.lang.Object get(java.lang.Object)>("versions") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r4 = (java.lang.String) $r8
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r4 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r12 = specialinvoke r0.<org.apache.ambari.server.state.stack.OsFamily: java.util.Map parse_os(java.lang.String)>(r2)
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r12 = specialinvoke r0.<org.apache.ambari.server.state.stack.OsFamily: java.util.Map parse_os(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r9 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("distro")
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r9 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("distro") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r5 = (java.lang.String) $r9
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r5 = (java.lang.String) $r9 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r10 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("versions")
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $r10 = interfaceinvoke r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("versions") >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r6 = (java.lang.String) $r10
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : r6 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r6)
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : if $z0 == 0
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z1 = specialinvoke r0.<org.apache.ambari.server.state.stack.OsFamily: boolean isFamilyExtendedByFamily(java.lang.String,java.lang.String)>(r3, r5)
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z2 = 0
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z2 = 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : return $z2
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z1 = specialinvoke r0.<org.apache.ambari.server.state.stack.OsFamily: boolean isFamilyExtendedByFamily(java.lang.String,java.lang.String)>(r3, r5) >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : if $z1 == 0
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z2 = 1
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z2 = 0
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : $z2 = 1 >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : goto [?= return $z2]
org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : goto [?= return $z2] >>>>>>>> org.apache.ambari.server.state.stack.OsFamily.isVersionedOsFamilyExtendedByVersionedFamily : return $z2
