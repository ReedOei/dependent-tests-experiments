org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : r3 = specialinvoke r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: java.lang.String getTestUserNameFromParameters(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : r4 = specialinvoke r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: java.lang.String getTestUserPasswordFromParameters(java.util.Map)>(r1)
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : r4 = specialinvoke r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: java.lang.String getTestUserPasswordFromParameters(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : if null != r3
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : if null != r3 >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r11 = new java.lang.IllegalArgumentException
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : if null != r3 >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r6 = <org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.slf4j.Logger LOGGER>
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r6 = <org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Testing LDAP user attributes with test user: {}", r3)
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Testing LDAP user attributes with test user: {}", r3) >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r7 = r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.apache.ambari.server.ldap.service.LdapConfigurationService ldapConfigurationService>
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r7 = r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.apache.ambari.server.ldap.service.LdapConfigurationService ldapConfigurationService> >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : r5 = interfaceinvoke $r7.<org.apache.ambari.server.ldap.service.LdapConfigurationService: java.lang.String checkUserAttributes(java.lang.String,java.lang.String,org.apache.ambari.server.ldap.domain.AmbariLdapConfiguration)>(r3, r4, r2)
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : r5 = interfaceinvoke $r7.<org.apache.ambari.server.ldap.service.LdapConfigurationService: java.lang.String checkUserAttributes(java.lang.String,java.lang.String,org.apache.ambari.server.ldap.domain.AmbariLdapConfiguration)>(r3, r4, r2) >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r8 = <org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.slf4j.Logger LOGGER>
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r8 = <org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Testing LDAP group attributes with test user dn: {}", r5)
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Testing LDAP group attributes with test user dn: {}", r5) >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r9 = r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.apache.ambari.server.ldap.service.LdapConfigurationService ldapConfigurationService>
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r9 = r0.<org.apache.ambari.server.ldap.service.AmbariLdapFacade: org.apache.ambari.server.ldap.service.LdapConfigurationService ldapConfigurationService> >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.ldap.service.LdapConfigurationService: java.util.Set checkGroupAttributes(java.lang.String,org.apache.ambari.server.ldap.domain.AmbariLdapConfiguration)>(r5, r2)
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r10 = interfaceinvoke $r9.<org.apache.ambari.server.ldap.service.LdapConfigurationService: java.util.Set checkGroupAttributes(java.lang.String,org.apache.ambari.server.ldap.domain.AmbariLdapConfiguration)>(r5, r2) >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : return $r10
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : $r11 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No test user available for testing LDAP attributes")
org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No test user available for testing LDAP attributes") >>>>>>>> org.apache.ambari.server.ldap.service.AmbariLdapFacade.checkLdapAttributes : throw $r11
