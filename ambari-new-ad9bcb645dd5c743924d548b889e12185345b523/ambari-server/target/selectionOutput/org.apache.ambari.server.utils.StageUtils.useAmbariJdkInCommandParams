org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r2 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJavaHome()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r2)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r2) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z0 == 0
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJavaHome()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z0 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : return
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r3 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJavaHome()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getStackJavaHome()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r4 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getStackJavaHome()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z1 != 0
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r5 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJavaHome()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z1 != 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : return
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r5 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJavaHome()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_java_home", $r5)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_java_home", $r5) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getJavaVersion()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $i0 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: int getJavaVersion()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_java_version", $r7)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_java_version", $r7) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r9 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJDKName()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r9 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJDKName()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r9)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z2 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z2 == 0
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r13 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJDKName()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z2 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r10 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJCEName()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r10 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJCEName()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r10)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r10) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z3 == 0
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z3 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r11 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJCEName()>()
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : if $z3 == 0 >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : return
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r11 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJCEName()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_jce_name", $r11)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_jce_name", $r11) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : return
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r13 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJDKName()>() >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_jdk_name", $r13)
org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ambari_jdk_name", $r13) >>>>>>>> org.apache.ambari.server.utils.StageUtils.useAmbariJdkInCommandParams : $r10 = virtualinvoke r1.<org.apache.ambari.server.configuration.Configuration: java.lang.String getJCEName()>()
