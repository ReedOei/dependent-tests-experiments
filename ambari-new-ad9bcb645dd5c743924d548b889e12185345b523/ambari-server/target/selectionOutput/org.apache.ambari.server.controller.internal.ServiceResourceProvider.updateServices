org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r4 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z3 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z3 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z3 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r169 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r13 = new java.util.EnumMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r13 = new java.util.EnumMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r13.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/ambari/server/state/State;")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r13.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/ambari/server/state/State;") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r14 = new java.util.EnumMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r14 = new java.util.EnumMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r14.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/ambari/server/state/State;")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r14.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lorg/apache/ambari/server/state/State;") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r15 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r15 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r15.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r15.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r16 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r17 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r17 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r17.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r17.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r18 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r18 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r18.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r18.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r19 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r19 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r19.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r19.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r20 = new java.util.HashMap
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r20 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r20.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r20.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z4 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("operation_level/level")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z4 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>("operation_level/level") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z4 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r168 = new org.apache.ambari.server.controller.internal.RequestOperationLevel
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r21 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r21 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String)>("Can not determine request operation level. Operation level property should be specified for this request.")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r21.<org.slf4j.Logger: void warn(java.lang.String)>("Can not determine request operation level. Operation level property should be specified for this request.") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r171 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r171 = <org.apache.ambari.server.controller.spi.Resource$Type: org.apache.ambari.server.controller.spi.Resource$Type Cluster> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r173 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r173 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r174 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r174 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z33 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z33 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r48 = interfaceinvoke r174.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z33 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z2 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke $r19.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke $r19.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i2 <= 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r30 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i2 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r22 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r22 = interfaceinvoke $r20.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r193 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r193 = interfaceinvoke $r22.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r193.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r193.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z5 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r27 = interfaceinvoke r193.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r23 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r23 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r24 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r25 = (java.lang.String) $r24
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r25 = (java.lang.String) $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r197 = interfaceinvoke r173.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r197 = interfaceinvoke r173.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r26 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(r1, r197, r3, null, $r13, $r14, $r15, $r16, z0, z1)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r26 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.internal.RequestStageContainer addStages(org.apache.ambari.server.controller.internal.RequestStageContainer,org.apache.ambari.server.state.Cluster,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Collection,boolean,boolean)>(r1, r197, r3, null, $r13, $r14, $r15, $r16, z0, z1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : return $r26
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r27 = interfaceinvoke r193.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r194 = (java.util.Map$Entry) $r27
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r194 = (java.util.Map$Entry) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r28 = interfaceinvoke r194.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r28 = interfaceinvoke r194.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r195 = (org.apache.ambari.server.state.Service) $r28
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r195 = (org.apache.ambari.server.state.Service) $r28 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r29 = interfaceinvoke r194.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r29 = interfaceinvoke r194.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r196 = (java.lang.Boolean) $r29
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r196 = (java.lang.Boolean) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z6 = virtualinvoke r196.<java.lang.Boolean: boolean booleanValue()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z6 = virtualinvoke r196.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r195.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r195.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r193.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z5 = interfaceinvoke r193.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z5 = interfaceinvoke r193.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r30 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot handle different desired state changes for a set of services at the same time")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot handle different desired state changes for a set of services at the same time") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r30
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r31 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z7 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r31)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z7 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z7 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r32 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke $r19.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r32 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r32.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r32.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r33 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r33 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r34 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r34 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r35 = (java.util.List) $r34
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r35 = (java.util.List) $r34 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r185 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r185 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z8 = interfaceinvoke r185.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z8 = interfaceinvoke r185.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z8 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = interfaceinvoke r185.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z8 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r191 = virtualinvoke $r32.<java.util.HashSet: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r191 = virtualinvoke $r32.<java.util.HashSet: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z9 = interfaceinvoke r191.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z9 = interfaceinvoke r191.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z9 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r36 = interfaceinvoke r191.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i2 = interfaceinvoke $r19.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r36 = interfaceinvoke r191.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r192 = (org.apache.ambari.server.state.Service) $r36
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r192 = (org.apache.ambari.server.state.Service) $r36 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r37 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r37 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, $r14, $r15, $r16, r171, r192, $r37)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, $r14, $r15, $r16, r171, r192, $r37) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r38 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r38 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r39 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r38)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r39 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r40 = (java.util.List) $r39
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r40 = (java.util.List) $r39 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r192)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r192) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z9 = interfaceinvoke r191.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z9 = interfaceinvoke r191.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z9 = interfaceinvoke r191.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r41 = interfaceinvoke r185.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r186 = (org.apache.ambari.server.state.Service) $r41
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r186 = (org.apache.ambari.server.state.Service) $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r42 = interfaceinvoke r186.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r42 = interfaceinvoke r186.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.Cluster getCluster()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r187 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>($r42)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r187 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.metadata.RoleCommandOrder getRoleCommandOrder(org.apache.ambari.server.state.Cluster)>($r42) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r43 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r43 = <org.apache.ambari.server.RoleCommand: org.apache.ambari.server.RoleCommand START> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r188 = virtualinvoke r187.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>(r186, $r43)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r188 = virtualinvoke r187.<org.apache.ambari.server.metadata.RoleCommandOrder: java.util.Set getTransitiveServices(org.apache.ambari.server.state.Service,org.apache.ambari.server.RoleCommand)>(r186, $r43) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r189 = interfaceinvoke r188.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r189 = interfaceinvoke r188.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z11 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z11 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z11 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r44 = interfaceinvoke r189.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z8 = interfaceinvoke r185.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z8 = interfaceinvoke r185.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z8 = interfaceinvoke r185.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r44 = interfaceinvoke r189.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r190 = (org.apache.ambari.server.state.Service) $r44
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r190 = (org.apache.ambari.server.state.Service) $r44 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r45 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r45 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r46 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r45)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r46 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r45) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r47 = (java.util.List) $r46
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r47 = (java.util.List) $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z12 = interfaceinvoke $r47.<java.util.List: boolean contains(java.lang.Object)>(r190)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z12 = interfaceinvoke $r47.<java.util.List: boolean contains(java.lang.Object)>(r190) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z12 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : virtualinvoke $r32.<java.util.HashSet: boolean add(java.lang.Object)>(r190)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z11 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z11 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z11 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : virtualinvoke $r32.<java.util.HashSet: boolean add(java.lang.Object)>(r190) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z11 = interfaceinvoke r189.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r48 = interfaceinvoke r174.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r175 = (org.apache.ambari.server.controller.ServiceRequest) $r48
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r175 = (org.apache.ambari.server.controller.ServiceRequest) $r48 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r49 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r49 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r49 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r49 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r50 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r49 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r176.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, cluster name and service name should be provided to update services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r176.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, cluster name and service name should be provided to update services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r176
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r50 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z14 = virtualinvoke $r50.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z14 = virtualinvoke $r50.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z14 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z14 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r51 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z14 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r51 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r51 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r51 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r52 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r51 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r52 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z15 = virtualinvoke $r52.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z15 = virtualinvoke $r52.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z15 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r176 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r54 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r54 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r53 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r53 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a updateService request, clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received a updateService request, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r56 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r56 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r59 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r59 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", request=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r175)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r175) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r54.<org.slf4j.Logger: void info(java.lang.String)>($r63)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r54.<org.slf4j.Logger: void info(java.lang.String)>($r63) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r64 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r64 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r64)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r64) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i0 = interfaceinvoke $r17.<java.util.Set: int size()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $i0 = interfaceinvoke $r17.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i0 <= 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r167 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r65 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r65 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z17 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>($r65)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z17 = interfaceinvoke $r18.<java.util.Map: boolean containsKey(java.lang.Object)>($r65) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z17 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r164 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z17 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r66 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r66 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r67 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r66)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r67 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r66) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r68 = (java.util.Set) $r67
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r68 = (java.util.Set) $r67 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r69 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r69 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z18 = interfaceinvoke $r68.<java.util.Set: boolean contains(java.lang.Object)>($r69)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z18 = interfaceinvoke $r68.<java.util.Set: boolean contains(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z18 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r163 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z18 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r70 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r70 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r71 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r70)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r71 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r70) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r72 = (java.util.Set) $r71
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r72 = (java.util.Set) $r71 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r73 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r73 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r72.<java.util.Set: boolean add(java.lang.Object)>($r73)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r72.<java.util.Set: boolean add(java.lang.Object)>($r73) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r74 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r74 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r177 = interfaceinvoke r173.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r74)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r177 = interfaceinvoke r173.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r74) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r75 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r75 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r178 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r75)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r178 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r179 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r179 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r180 = null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r180 = null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r76 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r76 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r76 == null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r76 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r157 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $r76 == null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r77 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r77 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if null == $r77
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if null == $r77 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r141 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if null == $r77 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r182 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r182 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z34 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r182)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z34 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r182) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z34 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z34 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r123 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z34 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r183 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r183 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z36 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r183)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z36 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r183) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z36 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z36 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r117 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z36 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 != null
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 != null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r113 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 != null >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r78 = r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r78 = r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.MaintenanceStateHelper maintenanceStateHelper> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z20 = virtualinvoke $r78.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>(r171, r178)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z20 = virtualinvoke $r78.<org.apache.ambari.server.controller.MaintenanceStateHelper: boolean isOperationAllowed(org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service)>(r171, r178) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z20 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r105 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z20 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 == r179
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 == r179 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r79 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 == r179 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, $r14, $r15, $r16, r171, r178, r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, $r14, $r15, $r16, r171, r178, r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r79 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 == $r79
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 == $r79 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r103 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 == $r79 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r80 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r80 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r81 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r81 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r82 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r82 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_START_STOP> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z22 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r80, $r81, $r82)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z22 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r80, $r81, $r82) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z22 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z22 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r102 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z22 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z23 = staticinvoke <org.apache.ambari.server.state.State: boolean isValidDesiredStateTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r179, r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z23 = staticinvoke <org.apache.ambari.server.state.State: boolean isValidDesiredStateTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r179, r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z23 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z23 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r87 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z23 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z24 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z24 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>(r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z24 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z24 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r85 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z24 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r83 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r83 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r84 = (java.util.List) $r83
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r84 = (java.util.List) $r83 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r84.<java.util.List: boolean add(java.lang.Object)>(r178)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r84.<java.util.List: boolean add(java.lang.Object)>(r178) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void updateServiceComponents(org.apache.ambari.server.controller.internal.RequestStageContainer,java.util.Map,java.util.Map,java.util.Collection,org.apache.ambari.server.controller.spi.Resource$Type,org.apache.ambari.server.state.Service,org.apache.ambari.server.state.State)>(r1, $r14, $r15, $r16, r171, r178, r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r85 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r85.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r85.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r180, $r85)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r180, $r85) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r83 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r87 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r88 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r88 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r88.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r88.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transition for service, clusterName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid transition for service, clusterName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r90 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r90 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $l1 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $l1 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", serviceName=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r95 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r95 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r96 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentDesiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", currentDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r179)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r179) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", newDesiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r87.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r101)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r87.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r101) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r87
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r102 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r102.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to start or stop services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r102.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to start or stop services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r102
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r103 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State STARTED> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 != $r103
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 != $r103 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r80 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r180 != $r103 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z23 = staticinvoke <org.apache.ambari.server.state.State: boolean isValidDesiredStateTransition(org.apache.ambari.server.state.State,org.apache.ambari.server.state.State)>(r179, r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r105 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r104 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r104 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r104.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r104.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operations cannot be applied to service ")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r106 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Operations cannot be applied to service ") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r107 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r107 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the maintenance state of ")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in the maintenance state of ") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r110 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r110 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r105.<org.slf4j.Logger: void info(java.lang.String)>($r112)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r105.<org.slf4j.Logger: void info(java.lang.String)>($r112) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r113 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z26 = interfaceinvoke $r113.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z26 = interfaceinvoke $r113.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z26 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z26 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r114 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z26 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r114 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r115 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r115 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r116 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r116 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r114.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Nothing to do for new updateService request, clusterName={}, serviceName={}, newDesiredState=null", $r115, $r116)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r114.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Nothing to do for new updateService request, clusterName={}, serviceName={}, newDesiredState=null", $r115, $r116) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z33 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r117 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r118 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r118 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r118.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r118.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot update credential_store_supported as it is set only via service definition. Service=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot update credential_store_supported as it is set only via service definition. Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r120 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r120 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r117.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r122)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r117.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r122) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r117
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r123 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : z35 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r123)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : z35 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r123) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z27 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z27 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z27 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z27 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z35 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z27 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z28 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: boolean isCredentialStoreRequired()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z28 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: boolean isCredentialStoreRequired()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z28 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z28 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z35 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z28 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r124 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z35)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r124 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z35) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r178, $r124)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r178, $r124) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r126 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r126 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r127 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r127 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r128 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z35)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r128 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z35) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r126.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from request: {}", $r127, $r128)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r126.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Service: {}, credential_store_enabled from request: {}", $r127, $r128) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r183 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z35 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r129 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z35 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r124 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z35)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r129 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r130 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r130 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r130.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r130.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot disable credential store as it is required by the service. Service=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot disable credential store as it is required by the service. Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r132 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r132 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r129.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r134)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r129.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r134) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r129
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z35 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r135 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if z35 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z28 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: boolean isCredentialStoreRequired()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r135 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r136 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r136 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r136.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r136.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot enable credential store as it is not supported by the service. Service=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, cannot enable credential store as it is not supported by the service. Service=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r138 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r138 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r139 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r139 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r140 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r135.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r140)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r135.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r140) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r135
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r141 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r142 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r142 = interfaceinvoke r177.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r143 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r143 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization SERVICE_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z29 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r141, $r142, $r143)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z29 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r141, $r142, $r143) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z29 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z29 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r156 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z29 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r144 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r144 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r181 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r144)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r181 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r144) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r145 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r145 = interfaceinvoke r178.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.MaintenanceState getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r181 == $r145
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r181 == $r145 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r146 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if r181 == $r145 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r182 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r146 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z30 = virtualinvoke r181.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r146)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z30 = virtualinvoke r181.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r146) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z30 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z30 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r155 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z30 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r147 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r147 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r148 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r148 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r148.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r148.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r149 = virtualinvoke $r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r151 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r151 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r150 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r150 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r152 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r151, $r150)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r152 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r151, $r150) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r153 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r152)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r153 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r152) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r147.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r154)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r147.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r154) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r147
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r155 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z31 = virtualinvoke r181.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r155)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z31 = virtualinvoke r181.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r155) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z31 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z31 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r147 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z31 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r178.<org.apache.ambari.server.state.Service: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>(r181)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke r178.<org.apache.ambari.server.state.Service: void setMaintenanceState(org.apache.ambari.server.state.MaintenanceState)>(r181) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r182 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r156 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r156.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to toggle the maintainence state of services")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r156.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to toggle the maintainence state of services") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r156
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r157 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r180 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r157)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r180 = staticinvoke <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State valueOf(java.lang.String)>($r157) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z32 = virtualinvoke r180.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $z32 = virtualinvoke r180.<org.apache.ambari.server.state.State: boolean isValidDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z32 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z32 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r158 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : if $z32 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r77 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r158 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r159 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r159 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r159.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r159.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r160 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, invalid desired state, desiredState=") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r180)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r161 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r180) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r162 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r158.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r162)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r158.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r162) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r158
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r163 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r163.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request contains duplicate service names")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r163.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid request contains duplicate service names") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r163
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r164 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r165 = new java.util.HashSet
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r165 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r165.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r165.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r164, $r165)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r164, $r165) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r66 = virtualinvoke r175.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r167 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r167.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Updates to multiple clusters is not supported")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r167.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Updates to multiple clusters is not supported") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : throw $r167
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r168 = new org.apache.ambari.server.controller.internal.RequestOperationLevel >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r168.<org.apache.ambari.server.controller.internal.RequestOperationLevel: void <init>(java.util.Map)>(r3)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : specialinvoke $r168.<org.apache.ambari.server.controller.internal.RequestOperationLevel: void <init>(java.util.Map)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r171 = virtualinvoke $r168.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r171 = virtualinvoke $r168.<org.apache.ambari.server.controller.internal.RequestOperationLevel: org.apache.ambari.server.controller.spi.Resource$Type getLevel()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= r173 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : goto [?= r173 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : r173 = interfaceinvoke r4.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : $r169 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r169.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : interfaceinvoke $r169.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.updateServices : return null
