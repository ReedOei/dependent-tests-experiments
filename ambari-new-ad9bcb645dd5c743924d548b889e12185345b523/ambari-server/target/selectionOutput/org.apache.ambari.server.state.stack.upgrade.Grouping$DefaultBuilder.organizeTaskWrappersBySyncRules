org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r5 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r6 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r6 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r6.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r6.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r10 = $r6
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r10 = $r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z1 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z1 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z1 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : return $r5
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : return $r5
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r4 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r7
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r4 = (org.apache.ambari.server.state.stack.upgrade.TaskWrapper) $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z3 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: boolean isAnyTaskSequential()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z3 = virtualinvoke r4.<org.apache.ambari.server.state.stack.upgrade.TaskWrapper: boolean isAnyTaskSequential()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z3 == 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z5 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $z5 = interfaceinvoke r10.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z5 != 0
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r10)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : if $z5 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r4)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8)
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r9 = new java.util.ArrayList
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r9 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r10 = $r9
org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : r10 = $r9 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.Grouping$DefaultBuilder.organizeTaskWrappersBySyncRules : $r8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r4)
