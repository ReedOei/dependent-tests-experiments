org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r8 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r2 = virtualinvoke $r8.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r2 = virtualinvoke $r8.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r9 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r3 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r3 = interfaceinvoke $r9.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("yarn-site") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if r4 != null
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r22 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED>
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if r4 != null >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r10 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("yarn.nodemanager.aux-services")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r10 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("yarn.nodemanager.aux-services") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r6 = (java.lang.String) $r10
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r6 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("yarn.nodemanager.aux-services")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z0 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("yarn.nodemanager.aux-services") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z0 == 0
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r18 = new java.util.ArrayList
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z0 == 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r11 = new java.util.ArrayList
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r11 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : specialinvoke $r11.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : specialinvoke $r11.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r25 = $r11
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r25 = $r11 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z1 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z1 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z1 != 0
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>("spark_shuffle")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : if $z1 != 0 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r7 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r25, ",")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r7 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r25, ",") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services", r7)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services", r7) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services.spark_shuffle.class", "org.apache.spark.network.yarn.YarnShuffleService")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("yarn.nodemanager.aux-services.spark_shuffle.class", "org.apache.spark.network.yarn.YarnShuffleService") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r5)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void setProperties(java.util.Map)>(r5) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>()
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r4.<org.apache.ambari.server.state.Config: void save()>() >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r15 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED>
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r15 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus COMPLETED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14 = newarray (java.lang.Object)[5]
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[0] = "yarn.nodemanager.aux-services"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[0] = "yarn.nodemanager.aux-services" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[1] = r6
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[1] = r6 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[2] = r7
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[2] = r7 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[3] = "org.apache.spark.network.yarn.YarnShuffleService"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[3] = "org.apache.spark.network.yarn.YarnShuffleService" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[4] = "org.apache.spark.network.yarn.YarnShuffleService"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r14[4] = "org.apache.spark.network.yarn.YarnShuffleService" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was set from %s to %s. %s was set to %s", $r14)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s was set from %s to %s. %s was set to %s", $r14) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r15, "{}", $r16, "")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r17 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r15, "{}", $r16, "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : return $r17
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>("spark_shuffle") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r7 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r25, ",")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r18 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r19 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r19 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r20 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r19) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r20)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : specialinvoke $r18.<java.util.ArrayList: void <init>(java.util.Collection)>($r20) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r25 = $r18
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : r25 = $r18 >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : goto [?= $z1 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")]
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : goto [?= $z1 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $z1 = interfaceinvoke r25.<java.util.List: boolean contains(java.lang.Object)>("spark_shuffle")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r22 = <org.apache.ambari.server.actionmanager.HostRoleStatus: org.apache.ambari.server.actionmanager.HostRoleStatus FAILED> >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r21 = newarray (java.lang.Object)[1]
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r21 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r21[0] = "yarn-site"
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r21[0] = "yarn-site" >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source type %s not found", $r21)
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Source type %s not found", $r21) >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r22, "{}", $r23, "")
org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : $r24 = virtualinvoke r0.<org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig: org.apache.ambari.server.agent.CommandReport createCommandReport(int,org.apache.ambari.server.actionmanager.HostRoleStatus,java.lang.String,java.lang.String,java.lang.String)>(0, $r22, "{}", $r23, "") >>>>>>>> org.apache.ambari.server.serveraction.upgrades.SparkShufflePropertyConfig.execute : return $r24
