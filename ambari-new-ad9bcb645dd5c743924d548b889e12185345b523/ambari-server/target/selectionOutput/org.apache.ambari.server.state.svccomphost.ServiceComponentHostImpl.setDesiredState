org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r4 = <org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3 = newarray (java.lang.Object)[4]
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[0] = $r5
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[0] = $r5 >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r6 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[1] = $r6
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[1] = $r6 >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[2] = $r7
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[2] = $r7 >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[3] = r1
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r3[3] = r1 >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Set DesiredState on serviceName = {} componentName = {} hostName = {} to {} ", $r3)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Set DesiredState on serviceName = {} componentName = {} hostName = {} to {} ", $r3) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : r2 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity getDesiredStateEntity()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : r2 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity getDesiredStateEntity()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : if r2 == null
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : if r2 == null >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity: void setDesiredState(org.apache.ambari.server.state.State)>(r1)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : if r2 == null >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r9 = <org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r9 = <org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting a member on an entity object that may have been previously deleted, serviceName = ")
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting a member on an entity object that may have been previously deleted, serviceName = ") >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName = ")
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", componentName = ") >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r14 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hostName = ")
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hostName = ") >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getHostName()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r17 = virtualinvoke r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>($r19)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : return
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : virtualinvoke r2.<org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity: void setDesiredState(org.apache.ambari.server.state.State)>(r1) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r20 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.apache.ambari.server.orm.dao.HostComponentDesiredStateDAO hostComponentDesiredStateDAO>
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : $r20 = r0.<org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl: org.apache.ambari.server.orm.dao.HostComponentDesiredStateDAO hostComponentDesiredStateDAO> >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : virtualinvoke $r20.<org.apache.ambari.server.orm.dao.HostComponentDesiredStateDAO: org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity merge(org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity)>(r2)
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : virtualinvoke $r20.<org.apache.ambari.server.orm.dao.HostComponentDesiredStateDAO: org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity merge(org.apache.ambari.server.orm.entities.HostComponentDesiredStateEntity)>(r2) >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : goto [?= return]
org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : goto [?= return] >>>>>>>> org.apache.ambari.server.state.svccomphost.ServiceComponentHostImpl.setDesiredState : return
