org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : r2 = interfaceinvoke r1.<org.apache.ambari.server.state.Host: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : if null == r2
org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : if null == r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById>
org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : if null == r2 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : return
org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostsById> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1)
org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.updateHostMappings : return
