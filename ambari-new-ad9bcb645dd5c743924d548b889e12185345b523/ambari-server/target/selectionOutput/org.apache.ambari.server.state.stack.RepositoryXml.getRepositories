org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r10 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : specialinvoke $r10.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : specialinvoke $r10.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r11 = virtualinvoke r0.<org.apache.ambari.server.state.stack.RepositoryXml: java.util.List getOses()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r2 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if $z0 == 0
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : return $r10
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r3 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r12
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r3 = (org.apache.ambari.server.state.stack.RepositoryXml$Os) $r12 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r4 = virtualinvoke r3.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r4 = virtualinvoke r3.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.lang.String getFamily()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",")
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : i0 = lengthof r5
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : i0 = lengthof r5 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : i1 = 0
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : i1 = 0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if i1 >= i0
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if i1 >= i0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r6 = r5[i1]
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if i1 >= i0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r6 = r5[i1] >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r13 = virtualinvoke r3.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r13 = virtualinvoke r3.<org.apache.ambari.server.state.stack.RepositoryXml$Os: java.util.List getRepos()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r7 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r7 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if $z1 == 0
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : i1 = i1 + 1
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : goto [?= (branch)]
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : if i1 >= i0
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r14 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r8 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r14
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : r8 = (org.apache.ambari.server.state.stack.RepositoryXml$Repo) $r14 >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r15 = new org.apache.ambari.server.state.RepositoryInfo
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r15 = new org.apache.ambari.server.state.RepositoryInfo >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : specialinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : specialinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r16 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getBaseUrl()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r16 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>($r16)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setBaseUrl(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r17 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getBaseUrl()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r17 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getBaseUrl()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setDefaultBaseUrl(java.lang.String)>($r17)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setDefaultBaseUrl(java.lang.String)>($r17) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getMirrorsList()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getMirrorsList()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setMirrorsList(java.lang.String)>($r18)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setMirrorsList(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r19 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r19 = virtualinvoke r6.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>($r19)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setOsType(java.lang.String)>($r19) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r20 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoId()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r20 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoId()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r20)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setRepoId(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r21 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoName()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r21 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getRepoName()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>($r21)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setRepoName(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getDistribution()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r22 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getDistribution()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setDistribution(java.lang.String)>($r22)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setDistribution(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r23 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getComponents()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r23 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.lang.String getComponents()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setComponents(java.lang.String)>($r23)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setComponents(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z2 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: boolean isUnique()>()
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z2 = virtualinvoke r8.<org.apache.ambari.server.state.stack.RepositoryXml$Repo: boolean isUnique()>() >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setUnique(boolean)>($z2)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setUnique(boolean)>($z2) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r24 = staticinvoke <org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.util.Set access$000(org.apache.ambari.server.state.stack.RepositoryXml$Repo)>(r8)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $r24 = staticinvoke <org.apache.ambari.server.state.stack.RepositoryXml$Repo: java.util.Set access$000(org.apache.ambari.server.state.stack.RepositoryXml$Repo)>(r8) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setTags(java.util.Set)>($r24)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : virtualinvoke $r15.<org.apache.ambari.server.state.RepositoryInfo: void setTags(java.util.Set)>($r24) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r15)
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.stack.RepositoryXml.getRepositories : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
