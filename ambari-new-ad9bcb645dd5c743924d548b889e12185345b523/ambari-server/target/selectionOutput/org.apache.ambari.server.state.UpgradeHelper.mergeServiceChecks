org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r10 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r10.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r10.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r11 = new java.util.LinkedHashSet
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r11 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r11.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r11.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r12 = new java.util.HashSet
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r12 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r12.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r12.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r13 = new java.util.LinkedHashSet
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r13 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r13.<java.util.LinkedHashSet: void <init>()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r13.<java.util.LinkedHashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r14 = newarray (java.util.List)[2]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r14 = newarray (java.util.List)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r15 = r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items>
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r15 = r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r14[0] = $r15
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r14[0] = $r15 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r16 = r1.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items>
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r16 = r1.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r14[1] = $r16
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r14[1] = $r16 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : i0 = lengthof $r14
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : i0 = lengthof $r14 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : i1 = 0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : i1 = 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if i1 >= i0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if i1 >= i0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r7 = $r14[i1]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if i1 >= i0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r17 = new java.util.LinkedHashSet
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r17 = new java.util.LinkedHashSet >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r18 = staticinvoke <org.apache.commons.collections.CollectionUtils: java.util.Collection subtract(java.util.Collection,java.util.Collection)>($r11, $r10)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r18 = staticinvoke <org.apache.commons.collections.CollectionUtils: java.util.Collection subtract(java.util.Collection,java.util.Collection)>($r11, $r10) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r17.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r18)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : specialinvoke $r17.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r18) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r19 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList(java.lang.Iterable)>($r10)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r19 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList(java.lang.Iterable)>($r10) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items> = $r19
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items> = $r19 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r20 = r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items>
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r20 = r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : interfaceinvoke $r20.<java.util.List: boolean addAll(java.util.Collection)>($r17)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : interfaceinvoke $r20.<java.util.List: boolean addAll(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r21 = r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items>
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r21 = r2.<org.apache.ambari.server.state.UpgradeHelper$UpgradeGroupHolder: java.util.List items> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : interfaceinvoke $r21.<java.util.List: boolean addAll(java.util.Collection)>($r13)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : interfaceinvoke $r21.<java.util.List: boolean addAll(java.util.Collection)>($r13) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : return
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r7 = $r14[i1] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z2 == 0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : i1 = i1 + 1
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if i1 >= i0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $r22 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r9 = (org.apache.ambari.server.state.stack.upgrade.StageWrapper) $r22
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r9 = (org.apache.ambari.server.state.stack.upgrade.StageWrapper) $r22 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z3 = r9 instanceof org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckStageWrapper
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z3 = r9 instanceof org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckStageWrapper >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z3 == 0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r24 = (org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckStageWrapper) r9
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r25 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.lang.String toString()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r25 = virtualinvoke r9.<org.apache.ambari.server.state.stack.upgrade.StageWrapper: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z4 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r25)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z4 = interfaceinvoke $r12.<java.util.Set: boolean contains(java.lang.Object)>(r25) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z4 != 0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : virtualinvoke $r13.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z4 != 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : virtualinvoke $r13.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r25)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>(r25) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : r24 = (org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckStageWrapper) r9 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z7 = r24.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckStageWrapper: boolean priority>
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : $z7 = r24.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckStageWrapper: boolean priority> >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z7 == 0
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : virtualinvoke $r10.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : virtualinvoke $r11.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : virtualinvoke $r11.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= $z2 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : virtualinvoke $r10.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)]
org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.UpgradeHelper.mergeServiceChecks : goto [?= (branch)]
