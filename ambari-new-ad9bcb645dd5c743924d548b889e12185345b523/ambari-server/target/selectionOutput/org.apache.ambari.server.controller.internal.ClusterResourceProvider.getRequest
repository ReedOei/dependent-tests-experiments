org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/security_type") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r2 = (java.lang.String) $r5
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r2 = (java.lang.String) $r5 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r2 != null
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r2 != null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r21 = null
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r2 != null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>()
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r2 != null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r17 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r18 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r19 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r19 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r19[0] = r2
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r19[0] = r2 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot set cluster security type to invalid value: %s", $r19)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot set cluster security type to invalid value: %s", $r19) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : throw $r18
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r21 = staticinvoke <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType valueOf(java.lang.String)>($r6)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r17 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r21 = staticinvoke <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType valueOf(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : goto [?= $r7 = new org.apache.ambari.server.controller.ClusterRequest]
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r21 = staticinvoke <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType valueOf(java.lang.String)>($r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r17 := @caughtexception
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : goto [?= $r7 = new org.apache.ambari.server.controller.ClusterRequest] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r7 = new org.apache.ambari.server.controller.ClusterRequest
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r7 = new org.apache.ambari.server.controller.ClusterRequest >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/cluster_id")
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r8 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/cluster_id") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r9 = (java.lang.Long) $r8
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r9 = (java.lang.Long) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/cluster_name")
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r10 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/cluster_name") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r11 = (java.lang.String) $r10
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r11 = (java.lang.String) $r10 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/provisioning_state")
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r12 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/provisioning_state") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r13 = (java.lang.String) $r12
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r13 = (java.lang.String) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/version")
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("Clusters/version") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r15 = (java.lang.String) $r14
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r15 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterResourceProvider: java.util.Map getSessionAttributes(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r16 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ClusterResourceProvider: java.util.Map getSessionAttributes(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : specialinvoke $r7.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,org.apache.ambari.server.state.SecurityType,java.lang.String,java.util.Set,java.util.Map)>($r9, $r11, $r13, r21, $r15, null, $r16)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : specialinvoke $r7.<org.apache.ambari.server.controller.ClusterRequest: void <init>(java.lang.Long,java.lang.String,java.lang.String,org.apache.ambari.server.state.SecurityType,java.lang.String,java.util.Set,java.util.Map)>($r9, $r11, $r13, r21, $r15, null, $r16) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r3 = staticinvoke <org.apache.ambari.server.controller.internal.ClusterResourceProvider: java.util.List getConfigurationRequests(java.lang.String,java.util.Map)>("Clusters", r1)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r3 = staticinvoke <org.apache.ambari.server.controller.internal.ClusterResourceProvider: java.util.List getConfigurationRequests(java.lang.String,java.util.Map)>("Clusters", r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if $z0 != 0
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : virtualinvoke $r7.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>(r3)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if $z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r4 = staticinvoke <org.apache.ambari.server.controller.internal.ClusterResourceProvider: org.apache.ambari.server.controller.ServiceConfigVersionRequest getServiceConfigVersionRequest(java.lang.String,java.util.Map)>("Clusters", r1)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r4 = staticinvoke <org.apache.ambari.server.controller.internal.ClusterResourceProvider: org.apache.ambari.server.controller.ServiceConfigVersionRequest getServiceConfigVersionRequest(java.lang.String,java.util.Map)>("Clusters", r1) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r4 == null
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : virtualinvoke $r7.<org.apache.ambari.server.controller.ClusterRequest: void setServiceConfigVersionRequest(org.apache.ambari.server.controller.ServiceConfigVersionRequest)>(r4)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : return $r7
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : virtualinvoke $r7.<org.apache.ambari.server.controller.ClusterRequest: void setServiceConfigVersionRequest(org.apache.ambari.server.controller.ServiceConfigVersionRequest)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : return $r7
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : virtualinvoke $r7.<org.apache.ambari.server.controller.ClusterRequest: void setDesiredConfig(java.util.List)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r4 = staticinvoke <org.apache.ambari.server.controller.internal.ClusterResourceProvider: org.apache.ambari.server.controller.ServiceConfigVersionRequest getServiceConfigVersionRequest(java.lang.String,java.util.Map)>("Clusters", r1)
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : r21 = null >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : goto [?= $r7 = new org.apache.ambari.server.controller.ClusterRequest]
org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : goto [?= $r7 = new org.apache.ambari.server.controller.ClusterRequest] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterResourceProvider.getRequest : $r7 = new org.apache.ambari.server.controller.ClusterRequest
