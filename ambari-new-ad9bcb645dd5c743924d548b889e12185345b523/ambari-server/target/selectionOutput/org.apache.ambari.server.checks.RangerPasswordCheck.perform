org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r12 = new org.apache.ambari.server.controller.internal.URLStreamProvider >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r13 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r13 = staticinvoke <org.apache.ambari.server.configuration.ComponentSSLConfiguration: org.apache.ambari.server.configuration.ComponentSSLConfiguration instance()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r12.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,org.apache.ambari.server.configuration.ComponentSSLConfiguration)>(2000, 2000, $r13)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r12.<org.apache.ambari.server.controller.internal.URLStreamProvider: void <init>(int,int,org.apache.ambari.server.configuration.ComponentSSLConfiguration)>(2000, 2000, $r13) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r59 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("admin-properties", "policymgr_external_url", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r59 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("admin-properties", "policymgr_external_url", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r59
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r59 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r59 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r4 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_username", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r4 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_username", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r4
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r5 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "admin_password", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r5
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r5 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_username", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r6 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_username", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r6
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r7 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r7 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String checkEmpty(java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("ranger-env", "ranger_admin_password", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r7
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r7 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if null != r7 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z0 = virtualinvoke r59.<java.lang.String: boolean endsWith(java.lang.String)>("/")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z0 = virtualinvoke r59.<java.lang.String: boolean endsWith(java.lang.String)>("/") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z0 == 0
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $i0 = virtualinvoke r59.<java.lang.String: int length()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z0 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14[0] = r59
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14[0] = r59 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14[1] = "service/public/api/repository/count"
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14[1] = "service/public/api/repository/count" >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r14)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r14) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r15 = newarray (java.lang.Object)[2]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r15 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r15[0] = r59
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r15[0] = r59 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r15[1] = "service/xusers/users"
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r15[1] = "service/xusers/users" >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r15)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/%s", $r15) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r16 = new java.util.ArrayList
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r16 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r16.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r16.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r17 = new java.util.ArrayList
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r17 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r17.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : i2 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>($r12, r8, r4, r5)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : specialinvoke $r17.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r52 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51[0] = r8
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51[0] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r53 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r53 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51[1] = $r53
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51[1] = $r53 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51[2] = $r50
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r51[2] = $r50 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r52.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not access the url {}.  Message: {}", $r51)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r52.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Could not access the url {}.  Message: {}", $r51) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r54 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r54 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r55 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r55 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r54.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Could not access the url {}.  Message: {}", r8, $r55)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r54.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Could not access the url {}.  Message: {}", r8, $r55) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r63 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_access", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r63 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_access", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56[0] = r4
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56[0] = r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56[1] = r8
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56[1] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r57 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r57 = virtualinvoke $r50.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56[2] = $r57
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r56[2] = $r57 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r63, $r56)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r63, $r56) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r58)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r58) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z2 != 0
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r35 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r16, 10)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z3 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z3 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z3 != 0
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r17, 10)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z3 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : z14 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: boolean checkRangerUser(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List)>($r12, r9, r4, r5, r6, r1, r2, $r17)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : z14 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: boolean checkRangerUser(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest,java.util.List)>($r12, r9, r4, r5, r6, r1, r2, $r17) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if z14 == 0
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if z14 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : i3 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>($r12, r8, r6, r7)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if z14 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if z14 == 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r42 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r43 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r43 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r42.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not access the url {}.  Message: {}", r8, $r43)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r42.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("Could not access the url {}.  Message: {}", r8, $r43) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r45 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r45 = <org.apache.ambari.server.checks.RangerPasswordCheck: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44[0] = r8
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44[0] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r46 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r46 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44[1] = $r46
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44[1] = $r46 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44[2] = $r41
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r44[2] = $r41 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not access the url {}.  Message: {}", $r44)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r45.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object[])>("Could not access the url {}.  Message: {}", $r44) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r67 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_access", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r67 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_access", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47[0] = r6
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47[0] = r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47[1] = r8
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47[1] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r48 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r48 = virtualinvoke $r41.<java.io.IOException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47[2] = $r48
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r47[2] = $r48 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r67, $r47)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r67, $r47) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r49)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r49) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z15 != 0
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z15 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r24 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r16, 10)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z15 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z4 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z4 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z4 != 0
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z4 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r21 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r17, 10)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : if $z4 != 0 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r20 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus PASS>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r20 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus PASS> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r20)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r20) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r21 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r17, 10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r21)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r22 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r22.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r22.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r23 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r23 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r23)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r23) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= return]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r24 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r16, 10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r24)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r25 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r25 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r25.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r25.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r26 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r26 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r26)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r26) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= return]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= return] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : i3 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>($r12, r8, r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i3) {     case 200:
org.apache.ambari.server.checks.RangerPasswordCheck.perform : i3 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>($r12, r8, r6, r7) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i3) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i3) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r64 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i3) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r65 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i3) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r65 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r65 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[0] = r6
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[0] = r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[0] = r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[1] = $r30
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[1] = $r30 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[2] = r8
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[2] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r65, $r29)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r29[2] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r65, $r29) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r31)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r65, $r29) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r31) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r64 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r27 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r64 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r27 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r27[0] = r6
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r27[0] = r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r64, $r27)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r27[0] = r6 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r64, $r27) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r28)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r64, $r27) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r41 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z15 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r17, 10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r32)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r33 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r33.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r33.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r34 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r34 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus WARNING> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r34)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r34) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r35 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,char)>($r16, 10) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r35)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setFailReason(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r36 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r36 = virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: java.util.LinkedHashSet getFailedOn()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r36.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER")
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke $r36.<java.util.LinkedHashSet: boolean add(java.lang.Object)>("RANGER") >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r37 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL>
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r37 = <org.apache.ambari.server.state.stack.PrereqCheckStatus: org.apache.ambari.server.state.stack.PrereqCheckStatus FAIL> >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r37)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : virtualinvoke r1.<org.apache.ambari.server.state.stack.PrerequisiteCheck: void setStatus(org.apache.ambari.server.state.stack.PrereqCheckStatus)>($r37) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : return
org.apache.ambari.server.checks.RangerPasswordCheck.perform : i2 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>($r12, r8, r4, r5) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i2) {     case 200:
org.apache.ambari.server.checks.RangerPasswordCheck.perform : i2 = specialinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: int checkLogin(org.apache.ambari.server.controller.internal.URLStreamProvider,java.lang.String,java.lang.String,java.lang.String)>($r12, r8, r4, r5) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i2) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i2) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r60 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i2) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r61 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : lookupswitch(i2) {     case 200: >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r61 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38 = newarray (java.lang.Object)[3]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r61 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("unknown_response", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[0] = r4
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[0] = r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[0] = r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[1] = $r39
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[1] = $r39 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[2] = r8
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[2] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r61, $r38)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r38[2] = r8 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r61, $r38) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r40)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r61, $r38) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r60 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r60 = virtualinvoke r0.<org.apache.ambari.server.checks.RangerPasswordCheck: java.lang.String getFailReason(java.lang.String,org.apache.ambari.server.state.stack.PrerequisiteCheck,org.apache.ambari.server.controller.PrereqCheckRequest)>("could_not_verify_password", r1, r2) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r18[0] = r4
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r18[0] = r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r60, $r18)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r18[0] = r4 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r60, $r18) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r19 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r60, $r18) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r50 := @caughtexception
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : goto [?= $z2 = interfaceinvoke $r16.<java.util.List: boolean isEmpty()>()]
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $i0 = virtualinvoke r59.<java.lang.String: int length()>() >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $i1 = $i0 - 1
org.apache.ambari.server.checks.RangerPasswordCheck.perform : $i1 = $i0 - 1 >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : r59 = virtualinvoke r59.<java.lang.String: java.lang.String substring(int,int)>(0, $i1)
org.apache.ambari.server.checks.RangerPasswordCheck.perform : r59 = virtualinvoke r59.<java.lang.String: java.lang.String substring(int,int)>(0, $i1) >>>>>>>> org.apache.ambari.server.checks.RangerPasswordCheck.perform : $r14 = newarray (java.lang.Object)[2]
