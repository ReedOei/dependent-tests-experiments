org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r10 = r0.<org.apache.ambari.server.upgrade.UpgradeCatalog251: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;")
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r11 = interfaceinvoke $r10.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/controller/AmbariManagementController;") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r11
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r1 = (org.apache.ambari.server.controller.AmbariManagementController) $r11 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r2 = interfaceinvoke r1.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r2 == null
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog251: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r2)
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r2 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r3 = virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog251: java.util.Map getCheckedClusterMap(org.apache.ambari.server.state.Clusters)>(r2) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r3 == null
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r3 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z0 = interfaceinvoke r3.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z0 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r12 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z0 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r12 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r4 = interfaceinvoke $r12.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z1 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z1 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : return
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r13
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r5 = (org.apache.ambari.server.state.Cluster) $r13 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r14 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r14 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r6 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r6 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("KAFKA")
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("KAFKA") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z2 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z2 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r15 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.SecurityType getSecurityType()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r16 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS>
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r16 = <org.apache.ambari.server.state.SecurityType: org.apache.ambari.server.state.SecurityType KERBEROS> >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $r15 != $r16
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $r15 != $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-broker")
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $r15 != $r16 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getDesiredConfigByType(java.lang.String)>("kafka-broker") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r7 == null
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>()
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if r7 == null >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r17 = interfaceinvoke r7.<org.apache.ambari.server.state.Config: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("listeners")
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>("listeners") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r8 = (java.lang.String) $r18
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r8 = (java.lang.String) $r18 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z3 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z3 == 0
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r9 = virtualinvoke r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\bPLAINTEXT\\b", "PLAINTEXTSASL")
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z3 == 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : r9 = virtualinvoke r8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\bPLAINTEXT\\b", "PLAINTEXTSASL") >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r8)
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $z4 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z4 != 0
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z4 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r19 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("listeners", r9)
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : if $z4 != 0 >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : $r19 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("listeners", r9) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog251: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("kafka-broker", $r19, 1, 0)
org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : virtualinvoke r0.<org.apache.ambari.server.upgrade.UpgradeCatalog251: void updateConfigurationProperties(java.lang.String,java.util.Map,boolean,boolean)>("kafka-broker", $r19, 1, 0) >>>>>>>> org.apache.ambari.server.upgrade.UpgradeCatalog251.updateKAFKAConfigs : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
