org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r6 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $z0 = interfaceinvoke $r6.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : if $z0 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r13 = staticinvoke <java.util.Collections: java.util.Set emptySet()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r7 = new java.util.HashSet
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r7 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : specialinvoke $r7.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : specialinvoke $r7.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifest()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r2 = specialinvoke r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Map buildManifest()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r8 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r8 = r0.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.List availableServices> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : if $z1 == 0
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : return $r7
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r4 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r9
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r4 = (org.apache.ambari.server.state.repository.AvailableServiceReference) $r9 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r10 = r4.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r10 = r4.<org.apache.ambari.server.state.repository.AvailableServiceReference: java.lang.String serviceIdReference> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r11 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r5 = (org.apache.ambari.server.state.repository.ManifestService) $r11
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : r5 = (org.apache.ambari.server.state.repository.ManifestService) $r11 >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r12 = r5.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName>
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r12 = r5.<org.apache.ambari.server.state.repository.ManifestService: java.lang.String serviceName> >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r12)
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : $r13 = staticinvoke <java.util.Collections: java.util.Set emptySet()>() >>>>>>>> org.apache.ambari.server.state.repository.VersionDefinitionXml.getAvailableServiceNames : return $r13
