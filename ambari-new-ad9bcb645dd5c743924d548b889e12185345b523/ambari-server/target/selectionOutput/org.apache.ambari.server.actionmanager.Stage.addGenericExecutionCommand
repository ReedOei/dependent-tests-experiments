org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r9 = new org.apache.ambari.server.agent.ExecutionCommand >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r10 = r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory ecwFactory>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r10 = r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory ecwFactory> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r8 = interfaceinvoke $r10.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper createFromCommand(org.apache.ambari.server.agent.ExecutionCommand)>($r9)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r8 = interfaceinvoke $r10.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapperFactory: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper createFromCommand(org.apache.ambari.server.agent.ExecutionCommand)>($r9) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r6.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExecutionCommandWrapper(org.apache.ambari.server.actionmanager.ExecutionCommandWrapper)>(r8)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke r6.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setExecutionCommandWrapper(org.apache.ambari.server.actionmanager.ExecutionCommandWrapper)>(r8) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setHostname(java.lang.String)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setHostname(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setClusterName(java.lang.String)>(r1)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setClusterName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l1 = r0.<org.apache.ambari.server.actionmanager.Stage: long requestId>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l1 = r0.<org.apache.ambari.server.actionmanager.Stage: long requestId> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l0 = r0.<org.apache.ambari.server.actionmanager.Stage: long stageId>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $l0 = r0.<org.apache.ambari.server.actionmanager.Stage: long stageId> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l1, $l0)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setRequestAndStage(long,long)>($l1, $l0) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r11 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String name()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r11 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setRole(java.lang.String)>($r11)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setRole(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleCommand(org.apache.ambari.server.RoleCommand)>(r4)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleCommand(org.apache.ambari.server.RoleCommand)>(r4) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setServiceName(java.lang.String)>("")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : virtualinvoke $r9.<org.apache.ambari.server.agent.ExecutionCommand: void setServiceName(java.lang.String)>("") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r12 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r48 = (java.util.Map) $r13
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r48 = (java.util.Map) $r13 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r48 != null
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r48 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r45 = new java.util.LinkedHashMap
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r48 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r14 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r14 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r15 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r15 = interfaceinvoke r48.<java.util.Map: java.lang.Object get(java.lang.Object)>($r14) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $r15 == null
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $r15 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r35 = new java.lang.RuntimeException
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $r15 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r16 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r16 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r6)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r6) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r18 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r18 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r49 = (java.util.List) $r19
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r49 = (java.util.List) $r19 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r49 != null
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r49 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r32 = new java.util.ArrayList
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if r49 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $z0 = interfaceinvoke r49.<java.util.List: boolean contains(java.lang.Object)>(r8)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $z0 = interfaceinvoke r49.<java.util.List: boolean contains(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $z0 == 0
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $z0 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r20 = new java.lang.RuntimeException
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : if $z0 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r49.<java.util.List: boolean add(java.lang.Object)>(r8)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke r49.<java.util.List: boolean add(java.lang.Object)>(r8) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : return r8
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r20 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the execution command second time for same stage: stage=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the execution command second time for same stage: stage=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r23 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r23 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", event=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", event=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : throw $r20
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r32 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r32.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r32.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r49 = $r32
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r49 = $r32 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r33 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r33 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map commandsToSend> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r32)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r32) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $z0 = interfaceinvoke r49.<java.util.List: boolean contains(java.lang.Object)>(r8)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r35 = new java.lang.RuntimeException >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r36 = new java.lang.StringBuilder
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r36 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r36.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the host role command second time for same stage: stage=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the host role command second time for same stage: stage=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r38 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r38 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: java.lang.String getActionId()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=")
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", role=") >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>($r44)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r35.<java.lang.RuntimeException: void <init>(java.lang.String)>($r44) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : throw $r35
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r45 = new java.util.LinkedHashMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r45.<java.util.LinkedHashMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : specialinvoke $r45.<java.util.LinkedHashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r48 = $r45
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : r48 = $r45 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r46 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands>
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r46 = r0.<org.apache.ambari.server.actionmanager.Stage: java.util.Map hostRoleCommands> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r45)
org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : interfaceinvoke $r46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r45) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addGenericExecutionCommand : $r14 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
