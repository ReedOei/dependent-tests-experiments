org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z0 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z0 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r90 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r2 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r3 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r92 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r92 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z1 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z1 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z1 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r86 = interfaceinvoke r92.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r94 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r94 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z2 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r13 = interfaceinvoke r94.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : return
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r13 = interfaceinvoke r94.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r95 = (org.apache.ambari.server.controller.HostRequest) $r13
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r95 = (org.apache.ambari.server.controller.HostRequest) $r13 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r14 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r14 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z3 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z3 = interfaceinvoke $r14.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z3 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r84 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r15 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r15 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r5 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r5 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l0 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r8 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r8 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r16 = new java.util.HashSet
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r17 = newarray (java.lang.String)[1]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r17 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r18 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r17 = newarray (java.lang.String)[1] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : z14 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: boolean updateHostRackInfoIfChanged(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Host,org.apache.ambari.server.controller.HostRequest)>(r6, r4, r95) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r20 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r20 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r20
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r20 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r65 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r21 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z15 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z14 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z15 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if z14 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: void registerRackChange(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z2 = interfaceinvoke r94.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r21 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r21
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r22 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r21 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r22 = interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: java.util.Map getHostsForCluster(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r23 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r23 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z4 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>($r23)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z4 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z4 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r24 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r24 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.util.List getDesiredConfigs()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r99 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r99 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z5 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r25 = interfaceinvoke r99.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z15 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotBlank(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r25 = interfaceinvoke r99.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r100 = (org.apache.ambari.server.controller.ConfigurationRequest) $r25
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r100 = (org.apache.ambari.server.controller.ConfigurationRequest) $r25 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r26 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r26 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r26
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r26 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r57 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r26 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r101 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r101 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r102 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r102 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r9 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>($r101, $r102)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r9 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Config getConfig(java.lang.String,java.lang.String)>($r101, $r102) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r9
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r9 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r10 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r9 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r10 = interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: java.lang.String getAuthName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l1 = virtualinvoke r7.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l1 = virtualinvoke r7.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.util.Map getDesiredConfigs(long)>($l1)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r27 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.util.Map getDesiredConfigs(long)>($l1) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r28 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r28 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r29 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r29 = interfaceinvoke $r27.<java.util.Map: java.lang.Object get(java.lang.Object)>($r28) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r11 = (org.apache.ambari.server.state.DesiredConfig) $r29
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r11 = (org.apache.ambari.server.state.DesiredConfig) $r29 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l2 = virtualinvoke r7.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l2 = virtualinvoke r7.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z6 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: boolean isSelected()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z6 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: boolean isSelected()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z7 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: boolean addDesiredConfig(long,boolean,java.lang.String,org.apache.ambari.server.state.Config)>($l2, $z6, r10, r9)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z7 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: boolean addDesiredConfig(long,boolean,java.lang.String,org.apache.ambari.server.state.Config)>($l2, $z6, r10, r9) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z7 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r12 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("configchange")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r12 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>("configchange") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(configchange) cluster \'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(configchange) cluster \'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r32 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r32 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', host \'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', host \'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r35 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r35 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' changed by: \'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' changed by: \'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; type=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'; type=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r40 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r40 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' version=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' version=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r43 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.lang.Long getVersion()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r43 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.lang.Long getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'tag=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'tag=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r46 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r46 = interfaceinvoke r9.<org.apache.ambari.server.state.Config: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null != r11
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null != r11 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r103 = ""
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null != r11 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r49 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r49 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", from=\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", from=\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r51 = virtualinvoke r11.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r51 = virtualinvoke r11.<org.apache.ambari.server.state.DesiredConfig: java.lang.String getTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r103 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r103 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r12.<org.slf4j.Logger: void info(java.lang.String)>($r55)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r12.<org.slf4j.Logger: void info(java.lang.String)>($r55) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z5 = interfaceinvoke r99.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r103 = "" >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103)]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r54 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r57 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $i3 = interfaceinvoke $r57.<java.util.Map: int size()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $i3 = interfaceinvoke $r57.<java.util.Map: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $i3 <= 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r59 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $i3 <= 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r101 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r59 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r60 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r60 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getVersionTag()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58[0] = $r60
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58[0] = $r60 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r61 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r61 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58[1] = $r61
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58[1] = $r61 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58[2] = r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r58[2] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r62 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'\'{0}\'\' to host \'\'{1}\'\' in cluster \'\'{2}\'\'", $r58)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r62 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Applying configuration with tag \'\'{0}\'\' to host \'\'{1}\'\' in cluster \'\'{2}\'\'", $r58) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r59.<org.slf4j.Logger: void info(java.lang.String)>($r62)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r59.<org.slf4j.Logger: void info(java.lang.String)>($r62) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r63 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r63 = interfaceinvoke r6.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>($r63)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: void setClusterName(java.lang.String)>($r63) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.ConfigurationResponse createConfiguration(org.apache.ambari.server.controller.ConfigurationRequest)>(r100)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r2.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.controller.ConfigurationResponse createConfiguration(org.apache.ambari.server.controller.ConfigurationRequest)>(r100) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r101 = virtualinvoke r100.<org.apache.ambari.server.controller.ConfigurationRequest: java.lang.String getType()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r65 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r65
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r65 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r67 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == $r65 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r67 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r66 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r66 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_TOGGLE_MAINTENANCE> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r67, r8, $r66)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z8 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r67, r8, $r66) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z8 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r79 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r68 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r68 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getMaintenanceState()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r97 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r68)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r97 = staticinvoke <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState valueOf(java.lang.String)>($r68) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l4 = virtualinvoke r7.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l4 = virtualinvoke r7.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r98 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l4)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r98 = interfaceinvoke r4.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.MaintenanceState getMaintenanceState(long)>($l4) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z9 = virtualinvoke r97.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>(r98)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z9 = virtualinvoke r97.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>(r98) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z9 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r69 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z9 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r69 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_HOST> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z10 = virtualinvoke r97.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r69)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z10 = virtualinvoke r97.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r69) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z10 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r78 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r70 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r70 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r71 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r71 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r71.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid arguments, can only set maintenance state to one of ") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r74 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r74 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState OFF> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r73 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r73 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState ON> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r75 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r74, $r73)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r75 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum)>($r74, $r73) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r76 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r75)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r76 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r75) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r77)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r70.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r77) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r70
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r78 = <org.apache.ambari.server.state.MaintenanceState: org.apache.ambari.server.state.MaintenanceState IMPLIED_FROM_SERVICE> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z11 = virtualinvoke r97.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r78)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z11 = virtualinvoke r97.<org.apache.ambari.server.state.MaintenanceState: boolean equals(java.lang.Object)>($r78) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z11 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r70 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z11 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l5 = virtualinvoke r7.<java.lang.Long: long longValue()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $l5 = virtualinvoke r7.<java.lang.Long: long longValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setMaintenanceState(long,org.apache.ambari.server.state.MaintenanceState)>($l5, r97)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setMaintenanceState(long,org.apache.ambari.server.state.MaintenanceState)>($l5, r97) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r79 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r79.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host maintenance state")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r79.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host maintenance state") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r79
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r81 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r80 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r80 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z12 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r81, r8, $r80)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z12 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r81, r8, $r80) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z12 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r83 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r82 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r82 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getPublicHostName()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setPublicHostName(java.lang.String)>($r82)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r4.<org.apache.ambari.server.state.Host: void setPublicHostName(java.lang.String)>($r82) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if null == r5
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r83 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r83.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host attributes")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r83.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host attributes") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r83
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r18 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r17[0] = $r18
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r18 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r17[0] = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r17[0] = $r18 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r19)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r16, r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r16.<java.util.HashSet: void <init>(java.util.Collection)>($r19) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r16, r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= z14 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: boolean updateHostRackInfoIfChanged(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Host,org.apache.ambari.server.controller.HostRequest)>(r6, r4, r95)]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke r3.<org.apache.ambari.server.state.Clusters: void mapAndPublishHostsToCluster(java.util.Set,java.lang.String)>($r16, r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r91 := @caughtexception
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= z14 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: boolean updateHostRackInfoIfChanged(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Host,org.apache.ambari.server.controller.HostRequest)>(r6, r4, r95)] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : z14 = specialinvoke r0.<org.apache.ambari.server.controller.internal.HostResourceProvider: boolean updateHostRackInfoIfChanged(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Host,org.apache.ambari.server.controller.HostRequest)>(r6, r4, r95)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r84 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r85 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r85 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r84.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Received an updateHost request, hostname={}, request={}", $r85, r95)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r84.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Received an updateHost request, hostname={}, request={}", $r85, r95) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r15 = virtualinvoke r95.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r86 = interfaceinvoke r92.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r93 = (org.apache.ambari.server.controller.HostRequest) $r86
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : r93 = (org.apache.ambari.server.controller.HostRequest) $r86 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r87 = virtualinvoke r93.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r87 = virtualinvoke r93.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $r87 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $r87 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r89 = virtualinvoke r93.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $r87 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r88 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r88 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r88.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname should be provided")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : specialinvoke $r88.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid arguments, hostname should be provided") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : throw $r88
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r89 = virtualinvoke r93.<org.apache.ambari.server.controller.HostRequest: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z13 = virtualinvoke $r89.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z13 = virtualinvoke $r89.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z13 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r88 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : if $z13 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z1 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : goto [?= $z1 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $z1 = interfaceinvoke r92.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : $r90 = <org.apache.ambari.server.controller.internal.HostResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r90.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : interfaceinvoke $r90.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHosts : return
