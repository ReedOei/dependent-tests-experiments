org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r5 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getRequestPropertyIds(org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r2, r3) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r17 = new java.util.HashSet
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r17 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r17.<java.util.HashSet: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r17.<java.util.HashSet: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r18 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String componentNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r18 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String componentNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r19 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r18)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r19 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r7 = (java.lang.String) $r19
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r7 = (java.lang.String) $r19 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map getComponentMetrics()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r20 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map getComponentMetrics()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r21 = interfaceinvoke $r20.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r21 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r21 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r21 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r76 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r76 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z0 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r70 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r5.<java.util.Set: boolean removeAll(java.util.Collection)>($r17)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke r5.<java.util.Set: boolean removeAll(java.util.Collection)>($r17) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z1 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z1 = interfaceinvoke r5.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z1 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r22 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r22 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r22 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r22 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r67 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r22 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r79 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r79 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r80 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r79)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r80 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r79) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r81 = (java.lang.String) $r80
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r81 = (java.lang.String) $r80 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r82 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r82 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r83 = interfaceinvoke $r82.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getJMXProtocol(java.lang.String,java.lang.String)>(r81, r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r83 = interfaceinvoke $r82.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getJMXProtocol(java.lang.String,java.lang.String)>(r81, r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z13 = 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z13 = 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z14 = virtualinvoke r83.<java.lang.String: boolean equals(java.lang.Object)>("https")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z14 = virtualinvoke r83.<java.lang.String: boolean equals(java.lang.Object)>("https") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z13 = 1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z14 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r8 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getHosts(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.String)>(r1, r81, r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r8 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getHosts(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.String)>(r1, r81, r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r8 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r8 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z2 = interfaceinvoke r8.<java.util.Set: boolean isEmpty()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r8 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r24 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r24 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r23 = new java.lang.StringBuilder
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r23 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r23.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No host name for ")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No host name for ") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>($r27)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z2 = interfaceinvoke r8.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z2 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r24 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r9 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r9 = interfaceinvoke r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z3 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r28 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r28 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r10 = (java.lang.String) $r28
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r10 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r84 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r81, r7, r10, z13)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r10 = (java.lang.String) $r28 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r73 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74[0] = r10
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74[0] = r10 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74[1] = r7
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74[1] = r7 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74[2] = null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r74[2] = null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r75 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to get JMX metrics from the host %s for the component %s. Spec: %s", $r74)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r75 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to get JMX metrics from the host %s for the component %s. Spec: %s", $r74) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r73.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r75, $r72)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r73.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r75, $r72) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String logException(java.lang.Throwable)>($r73)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : staticinvoke <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String logException(java.lang.Throwable)>($r73) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r84 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r81, r7, r10, z13) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r29 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r84 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getPort(java.lang.String,java.lang.String,java.lang.String,boolean)>(r81, r7, r10, z13) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r29 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r85 = interfaceinvoke $r29.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getPublicHostName(java.lang.String,java.lang.String)>(r81, r10)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r29 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.jmx.JMXHostProvider jmxHostProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r85 = interfaceinvoke $r29.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getPublicHostName(java.lang.String,java.lang.String)>(r81, r10) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r84 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r85 = interfaceinvoke $r29.<org.apache.ambari.server.controller.jmx.JMXHostProvider: java.lang.String getPublicHostName(java.lang.String,java.lang.String)>(r81, r10) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r84 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r63 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r84 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r11 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r10, r84, "/jmx")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r84 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r11 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r10, r84, "/jmx") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r32 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r11 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r10, r84, "/jmx") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r32 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r31 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r31 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r30 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r30 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r32.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r31, $r30, r11)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r30 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r32.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r31, $r30, r11) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r33 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r32.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r31, $r30, r11) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r33 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r86 = virtualinvoke $r33.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r11)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r33 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r86 = virtualinvoke $r33.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r86 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r86 = virtualinvoke $r33.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r11) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r86 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z10 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r85)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r86 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r86 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z15 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r86
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r86 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r86, r5, r1, r2, r4)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r86 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r34 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r86 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r34 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z4 = interfaceinvoke $r34.<java.util.Map: boolean containsKey(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r34 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z4 = interfaceinvoke $r34.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z4 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z4 = interfaceinvoke $r34.<java.util.Map: boolean containsKey(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r88 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= (branch)]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z3 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r88 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r88 = interfaceinvoke r5.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z5 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= (branch)]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r12 = (java.lang.String) $r35
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r35 = interfaceinvoke r88.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r12 = (java.lang.String) $r35 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r36 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r36 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r36 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r38 = (java.util.Map) $r37
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r37 = interfaceinvoke $r36.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r38 = (java.util.Map) $r37 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r38 = (java.util.Map) $r37 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r13 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r39 = interfaceinvoke $r38.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r13 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r13 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r40 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z5 = interfaceinvoke r88.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r40 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r14 = (java.lang.String) $r40
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r40 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r14 = (java.lang.String) $r40 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r89 = null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r89 = null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z7 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>(r12)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r89 = null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z7 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z7 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z7 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r54 = new java.lang.StringBuilder
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z7 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r41 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r41 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r41 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r43 = (java.util.Map) $r42
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r42 = interfaceinvoke $r41.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r43 = (java.util.Map) $r42 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r43 = (java.util.Map) $r42 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r89 = (java.lang.String) $r44
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r44 = interfaceinvoke $r43.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r89 = (java.lang.String) $r44 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r89 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r89 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r15 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r10, r84, r89)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r89 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r89 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r15 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r10, r84, r89) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r47 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r15 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r10, r84, r89) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r47 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r46 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r46 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r45 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r45 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r47.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r46, $r45, r15)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r45 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r47.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r46, $r45, r15) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r48 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r47.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r46, $r45, r15) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r48 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r90 = virtualinvoke $r48.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r15)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r48 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r90 = virtualinvoke $r48.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r90 != null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r90 = virtualinvoke $r48.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r15) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r90 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z8 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r85)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r90 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r90 != null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z16 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r90
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r90 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r49 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r12)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r90 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if null == r90 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r49 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r90, $r49, r1, r2, r4)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r49 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r12) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r90, $r49, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z6 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r90, $r49, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z8 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r85) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z8 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r85) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r16 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r85, r84, r89)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z8 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r16 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r85, r84, r89) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r52 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r16 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r85, r84, r89) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r52 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r51 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r51 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r50 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r50 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r52.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r51, $r50, r16)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r50 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r52.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r51, $r50, r16) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r53 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r52.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r51, $r50, r16) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r53 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r90 = virtualinvoke $r53.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r16)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r53 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r90 = virtualinvoke $r53.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z16 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r90 = virtualinvoke $r53.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r16) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r54 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r54 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r54.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z9 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>($r57)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z9 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>($r57) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z9 == 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z9 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>($r57) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r41 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z9 == 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r89 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r86, r5, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r34 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map AD_HOC_PROPERTIES>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: void getHadoopMetricValue(org.apache.ambari.server.controller.jmx.JMXMetricHolder,java.util.Set,org.apache.ambari.server.controller.spi.Resource,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket)>(r86, r5, r1, r2, r4) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z10 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r85) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z10 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r85) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r87 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r85, r84, "/jmx")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z10 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r87 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r85, r84, "/jmx") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r60 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r87 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String getSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r83, r85, r84, "/jmx") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r60 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r59 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r59 = <org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType: org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType JMX> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r58 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r58 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r60.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r59, $r58, r87)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r58 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.controller.utilities.StreamProvider streamProvider> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r60.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r59, $r58, r87) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r61 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : virtualinvoke $r60.<org.apache.ambari.server.state.services.MetricsRetrievalService: void submitRequest(org.apache.ambari.server.state.services.MetricsRetrievalService$MetricSourceType,org.apache.ambari.server.controller.utilities.StreamProvider,java.lang.String)>($r59, $r58, r87) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r61 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r86 = virtualinvoke $r61.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r87)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r61 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.apache.ambari.server.state.services.MetricsRetrievalService metricsRetrievalService> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r86 = virtualinvoke $r61.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r87) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z15 = virtualinvoke r4.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider$Ticket: boolean isValid()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r86 = virtualinvoke $r61.<org.apache.ambari.server.state.services.MetricsRetrievalService: org.apache.ambari.server.controller.jmx.JMXMetricHolder getCachedJMXMetric(java.lang.String)>(r87) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r63 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r62 = new java.lang.StringBuilder
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r62 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r62 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No port value for ")
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : specialinvoke $r62.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No port value for ") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get JMX metrics.  No port value for ") >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r63.<org.slf4j.Logger: void warn(java.lang.String)>($r66)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r63.<org.slf4j.Logger: void warn(java.lang.String)>($r66) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r63.<org.slf4j.Logger: void warn(java.lang.String)>($r66) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r72 := @caughtexception
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : z13 = 1 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r8 = specialinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set getHosts(org.apache.ambari.server.controller.spi.Resource,java.lang.String,java.lang.String)>(r1, r81, r7)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r67 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String statePropertyId> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r68 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r67)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r68 = interfaceinvoke r1.<org.apache.ambari.server.controller.spi.Resource: java.lang.Object getPropertyValue(java.lang.String)>($r67) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r78 = (java.lang.String) $r68
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r78 = (java.lang.String) $r68 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r78 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r78 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r69 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set healthyStates>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if r78 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r79 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r69 = <org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Set healthyStates> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z11 = interfaceinvoke $r69.<java.util.Set: boolean contains(java.lang.Object)>(r78)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z11 = interfaceinvoke $r69.<java.util.Set: boolean contains(java.lang.Object)>(r78) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : return r1
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z11 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r79 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.lang.String clusterNamePropertyId>
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r70 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r77 = (java.lang.String) $r70
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : r77 = (java.lang.String) $r70 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r71 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r77)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $r71 = interfaceinvoke r2.<org.apache.ambari.server.controller.spi.Request: org.apache.ambari.server.controller.spi.TemporalInfo getTemporalInfo(java.lang.String)>(r77) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r71 == null
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r71 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r77)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $r71 == null >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z12 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: boolean isSupportedPropertyId(java.lang.String,java.lang.String)>(r7, r77)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z12 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: boolean isSupportedPropertyId(java.lang.String,java.lang.String)>(r7, r77) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 != 0
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r77)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : if $z12 != 0 >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r77) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : goto [?= $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r77) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResource : $z12 = virtualinvoke r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: boolean isSupportedPropertyId(java.lang.String,java.lang.String)>(r7, r77)
