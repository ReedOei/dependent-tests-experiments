org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if z1 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z3 = r0.<org.apache.ambari.server.actionmanager.Stage: boolean supportsAutoSkipOnFailure>
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if z1 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z5 = 0
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z5 = 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r10 = specialinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper addGenericExecutionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,boolean,boolean)>(r5, "_internal_ambari", r3, r4, r6, z0, $z5)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r10 = specialinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper addGenericExecutionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,boolean,boolean)>(r5, "_internal_ambari", r3, r4, r6, z0, $z5) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r11 = virtualinvoke r10.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r11 = virtualinvoke r10.<org.apache.ambari.server.actionmanager.ExecutionCommandWrapper: org.apache.ambari.server.agent.ExecutionCommand getExecutionCommand()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r27 = new java.util.HashMap
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r27 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r27.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r27.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r7 == null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r7 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r27.<java.util.Map: void putAll(java.util.Map)>(r7)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r7 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r9 == null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r9 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $i0 = virtualinvoke r9.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r9 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r27)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r27) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r17 = new java.util.TreeMap
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r17 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r17.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r17.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>($r17)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurations(java.util.Map)>($r17) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r18 = new java.util.TreeMap
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r18 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r18.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r18.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>($r18)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationAttributes(java.util.Map)>($r18) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r26 != null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r26 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r23 = new java.util.TreeMap
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r26 != null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r26)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r26) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r19 = new java.util.HashMap
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTION_NAME", r1)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTION_NAME", r1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r2 == null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r2 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTION_USER_NAME", r2)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r2 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r19)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r19) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r8 == null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r8 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r21 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r8 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : return
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r21 = virtualinvoke r3.<org.apache.ambari.server.Role: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r16 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.HostRoleCommand getHostRoleCommand(java.lang.String,java.lang.String)>("_internal_ambari", $r21)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r16 = virtualinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.HostRoleCommand getHostRoleCommand(java.lang.String,java.lang.String)>("_internal_ambari", $r21) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r16 == null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r16 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>(r8)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r16 == null >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : return
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCommandDetail(java.lang.String)>(r8) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCustomCommandName(java.lang.String)>(r1)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r16.<org.apache.ambari.server.actionmanager.HostRoleCommand: void setCustomCommandName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : return
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ACTION_USER_NAME", r2) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setRoleParams(java.util.Map)>($r19)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r23 = new java.util.TreeMap >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r23.<java.util.TreeMap: void <init>()>()
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : specialinvoke $r23.<java.util.TreeMap: void <init>()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r26 = $r23
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r26 = $r23 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setConfigurationTags(java.util.Map)>(r26)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $i0 = virtualinvoke r9.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $l1 = (long) $i0
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $l1 = (long) $i0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r24 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $r24 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", $r24)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("command_timeout", $r24) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : virtualinvoke r11.<org.apache.ambari.server.agent.ExecutionCommand: void setCommandParams(java.util.Map)>($r27)
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : interfaceinvoke $r27.<java.util.Map: void putAll(java.util.Map)>(r7) >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if r9 == null
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z3 = r0.<org.apache.ambari.server.actionmanager.Stage: boolean supportsAutoSkipOnFailure> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if $z3 == 0
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if $z3 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z4 = r0.<org.apache.ambari.server.actionmanager.Stage: boolean skippable>
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if $z3 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z5 = 0
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z4 = r0.<org.apache.ambari.server.actionmanager.Stage: boolean skippable> >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if $z4 == 0
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if $z4 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z5 = 1
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : if $z4 == 0 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z5 = 0
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : $z5 = 1 >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : goto [?= r10 = specialinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper addGenericExecutionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,boolean,boolean)>(r5, "_internal_ambari", r3, r4, r6, z0, $z5)]
org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : goto [?= r10 = specialinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper addGenericExecutionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,boolean,boolean)>(r5, "_internal_ambari", r3, r4, r6, z0, $z5)] >>>>>>>> org.apache.ambari.server.actionmanager.Stage.addServerActionCommand : r10 = specialinvoke r0.<org.apache.ambari.server.actionmanager.Stage: org.apache.ambari.server.actionmanager.ExecutionCommandWrapper addGenericExecutionCommand(java.lang.String,java.lang.String,org.apache.ambari.server.Role,org.apache.ambari.server.RoleCommand,org.apache.ambari.server.state.ServiceComponentHostEvent,boolean,boolean)>(r5, "_internal_ambari", r3, r4, r6, z0, $z5)
