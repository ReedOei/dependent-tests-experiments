org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : $r2 = new org.apache.http.client.utils.URIBuilder >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : specialinvoke $r2.<org.apache.http.client.utils.URIBuilder: void <init>()>()
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : specialinvoke $r2.<org.apache.http.client.utils.URIBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : if z0 == 0
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : $r8 = "https"
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : $r8 = "http"
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : $r8 = "http" >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>(r0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setHost(java.lang.String)>(r0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPort(int)>(i0)
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPort(int)>(i0) >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/ws/v1/timeline/metrics")
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setPath(java.lang.String)>("/ws/v1/timeline/metrics") >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : return $r2
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : $r8 = "https" >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : goto [?= virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8)]
org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : goto [?= virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8)] >>>>>>>> org.apache.ambari.server.controller.metrics.timeline.AMSPropertyProvider.getAMSUriBuilder : virtualinvoke $r2.<org.apache.http.client.utils.URIBuilder: org.apache.http.client.utils.URIBuilder setScheme(java.lang.String)>($r8)
