org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : if $z0 == 0
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : return
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r3 = (org.apache.ambari.server.state.ServiceComponentHost) $r6
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r3 = (org.apache.ambari.server.state.ServiceComponentHost) $r6 >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $r7 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r4 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Service getService(java.lang.String)>($r7)
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r4 = virtualinvoke r0.<org.apache.ambari.server.state.cluster.ClusterImpl: org.apache.ambari.server.state.Service getService(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $r8 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $r8 = interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r8)
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r3)
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : interfaceinvoke r5.<org.apache.ambari.server.state.ServiceComponent: void addServiceComponentHost(org.apache.ambari.server.state.ServiceComponentHost)>(r3) >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.cluster.ClusterImpl.addServiceComponentHosts : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
