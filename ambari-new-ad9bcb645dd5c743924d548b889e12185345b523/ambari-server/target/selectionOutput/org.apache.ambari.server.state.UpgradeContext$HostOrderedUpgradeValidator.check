org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r13 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Upgrade/skip_failures") >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r6 = (java.lang.String) $r13
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r6 = (java.lang.String) $r13 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r6)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z0 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r37 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Upgrade/skip_manual_verification")
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("Upgrade/skip_manual_verification") >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r7 = (java.lang.String) $r14
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r7 = (java.lang.String) $r14 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r7)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z1 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r33 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z2 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("Upgrade/host_order")
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z2 = interfaceinvoke r5.<java.util.Map: boolean containsKey(java.lang.Object)>("Upgrade/host_order") >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z2 != 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r29 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r8 = specialinvoke r0.<org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator: java.util.List extractHostOrderItemsFromRequest(java.util.Map)>(r5)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r8 = specialinvoke r0.<org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator: java.util.List extractHostOrderItemsFromRequest(java.util.Map)>(r5) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r15 = new java.util.ArrayList
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r15 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $i0 = interfaceinvoke r8.<java.util.List: int size()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $i0 = interfaceinvoke r8.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r41 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r41 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z3 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r25 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z3 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r43 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r43 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Collection getHosts()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r16 = new java.util.HashSet
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r16 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $i1 = interfaceinvoke r43.<java.util.Collection: int size()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $i1 = interfaceinvoke r43.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r16.<java.util.HashSet: void <init>(int)>($i1)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r16.<java.util.HashSet: void <init>(int)>($i1) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r45 = interfaceinvoke r43.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r45 = interfaceinvoke r43.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z4 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z4 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z4 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r23 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z4 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r47 = staticinvoke <org.apache.commons.collections.CollectionUtils: java.util.Collection disjunction(java.util.Collection,java.util.Collection)>($r15, $r16)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r47 = staticinvoke <org.apache.commons.collections.CollectionUtils: java.util.Collection disjunction(java.util.Collection,java.util.Collection)>($r15, $r16) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z5 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(r47)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z5 = staticinvoke <org.apache.commons.collections.CollectionUtils: boolean isNotEmpty(java.util.Collection)>(r47) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z5 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r18 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z5 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r10 = virtualinvoke r4.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getGroups(org.apache.ambari.server.state.stack.upgrade.Direction)>(r2)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r10 = virtualinvoke r4.<org.apache.ambari.server.state.stack.UpgradePack: java.util.List getGroups(org.apache.ambari.server.state.stack.upgrade.Direction)>(r2) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r11 = interfaceinvoke r10.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z6 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r17 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z6 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : return
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r17 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r12 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r17
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r12 = (org.apache.ambari.server.state.stack.upgrade.Grouping) $r17 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z7 = r12 instanceof org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z7 = r12 instanceof org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z7 == 0
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r48 = (org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping) r12
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $z7 == 0 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r48 = (org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping) r12 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : virtualinvoke r48.<org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping: void setHostOrderItems(java.util.List)>(r8)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : virtualinvoke r48.<org.apache.ambari.server.state.stack.upgrade.HostOrderGrouping: void setHostOrderItems(java.util.List)>(r8) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r18 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r19 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r19 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r20 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED>
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r20 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED> >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r19[0] = $r20
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r19[0] = $r20 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r21 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r47, ", ")
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r21 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r47, ", ") >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r19[1] = $r21
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r19[1] = $r21 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The supplied list of hosts must match the cluster hosts in an upgrade of type %s. The following hosts are either missing or invalid: %s", $r19)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The supplied list of hosts must match the cluster hosts in an upgrade of type %s. The following hosts are either missing or invalid: %s", $r19) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r22)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r18.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : throw $r18
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r23 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r46 = (org.apache.ambari.server.state.Host) $r23
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r46 = (org.apache.ambari.server.state.Host) $r23 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r24 = interfaceinvoke r46.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r24 = interfaceinvoke r46.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r24)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>($r24) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z4 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z4 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z4 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r25 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r42 = (org.apache.ambari.server.state.stack.upgrade.HostOrderItem) $r25
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : r42 = (org.apache.ambari.server.state.stack.upgrade.HostOrderItem) $r25 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r26 = virtualinvoke r42.<org.apache.ambari.server.state.stack.upgrade.HostOrderItem: org.apache.ambari.server.state.stack.upgrade.HostOrderItem$HostOrderActionType getType()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r26 = virtualinvoke r42.<org.apache.ambari.server.state.stack.upgrade.HostOrderItem: org.apache.ambari.server.state.stack.upgrade.HostOrderItem$HostOrderActionType getType()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r27 = <org.apache.ambari.server.state.stack.upgrade.HostOrderItem$HostOrderActionType: org.apache.ambari.server.state.stack.upgrade.HostOrderItem$HostOrderActionType HOST_UPGRADE>
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r27 = <org.apache.ambari.server.state.stack.upgrade.HostOrderItem$HostOrderActionType: org.apache.ambari.server.state.stack.upgrade.HostOrderItem$HostOrderActionType HOST_UPGRADE> >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $r26 != $r27
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $r26 != $r27 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r28 = virtualinvoke r42.<org.apache.ambari.server.state.stack.upgrade.HostOrderItem: java.util.List getActionItems()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : if $r26 != $r27 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r28 = virtualinvoke r42.<org.apache.ambari.server.state.stack.upgrade.HostOrderItem: java.util.List getActionItems()>() >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : interfaceinvoke $r15.<java.util.List: boolean addAll(java.util.Collection)>($r28)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : interfaceinvoke $r15.<java.util.List: boolean addAll(java.util.Collection)>($r28) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : goto [?= $z3 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r29 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r30 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r30 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r30[0] = "Upgrade/host_order"
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r30[0] = "Upgrade/host_order" >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r31 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED>
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r31 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED> >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r30[1] = $r31
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r30[1] = $r31 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The %s property is required when creating a %s upgrade.", $r30)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The %s property is required when creating a %s upgrade.", $r30) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r29.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r32)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r29.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r32) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : throw $r29
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r33 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r34 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r34 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r34[0] = "Upgrade/skip_manual_verification"
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r34[0] = "Upgrade/skip_manual_verification" >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r35 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED>
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r35 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED> >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r34[1] = $r35
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r34[1] = $r35 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The %s property is not valid when creating a %s upgrade.", $r34)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r36 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The %s property is not valid when creating a %s upgrade.", $r34) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r33.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r36)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r33.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r36) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : throw $r33
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r37 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r38 = newarray (java.lang.Object)[2]
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r38 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r38[0] = "Upgrade/skip_failures"
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r38[0] = "Upgrade/skip_failures" >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r39 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED>
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r39 = <org.apache.ambari.server.state.stack.upgrade.UpgradeType: org.apache.ambari.server.state.stack.upgrade.UpgradeType HOST_ORDERED> >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r38[1] = $r39
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r38[1] = $r39 >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The %s property is not valid when creating a %s upgrade.", $r38)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : $r40 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The %s property is not valid when creating a %s upgrade.", $r38) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r37.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r40)
org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : specialinvoke $r37.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r40) >>>>>>>> org.apache.ambari.server.state.UpgradeContext$HostOrderedUpgradeValidator.check : throw $r37
