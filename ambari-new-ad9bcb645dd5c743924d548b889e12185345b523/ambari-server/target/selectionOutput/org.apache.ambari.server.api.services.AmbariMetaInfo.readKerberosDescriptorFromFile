org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : if $z0 != 0
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r5 = new java.io.File
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : if $z0 != 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r4 = <org.apache.ambari.server.api.services.AmbariMetaInfo: org.slf4j.Logger LOG>
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r4 = <org.apache.ambari.server.api.services.AmbariMetaInfo: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Missing path to Kerberos descriptor, returning null")
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : interfaceinvoke $r4.<org.slf4j.Logger: void debug(java.lang.String)>("Missing path to Kerberos descriptor, returning null") >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : return null
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r5 = new java.io.File >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $z1 = virtualinvoke $r5.<java.io.File: boolean canRead()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $z1 = virtualinvoke $r5.<java.io.File: boolean canRead()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : if $z1 == 0
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r10 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory kerberosDescriptorFactory>
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : if $z1 == 0 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r6 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r6 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r7 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r7 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r8 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r8 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r7[0] = $r8
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r7[0] = $r8 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to read Kerberos descriptor file %s", $r7)
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to read Kerberos descriptor file %s", $r7) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r9)
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : specialinvoke $r6.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : throw $r6
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r10 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory kerberosDescriptorFactory> >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r11 = virtualinvoke $r10.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosDescriptor createInstance(java.io.File)>($r5)
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r10 = r0.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory kerberosDescriptorFactory> >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r12 := @caughtexception
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r13 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r14 = newarray (java.lang.Object)[1]
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r14 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r15 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r15 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r14[0] = $r15
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r14[0] = $r15 >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to parse Kerberos descriptor file %s", $r14)
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Failed to parse Kerberos descriptor file %s", $r14) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : specialinvoke $r13.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r12)
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : specialinvoke $r13.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r12) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : throw $r13
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r11 = virtualinvoke $r10.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosDescriptor createInstance(java.io.File)>($r5) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : return $r11
org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r11 = virtualinvoke $r10.<org.apache.ambari.server.state.kerberos.KerberosDescriptorFactory: org.apache.ambari.server.state.kerberos.KerberosDescriptor createInstance(java.io.File)>($r5) >>>>>>>> org.apache.ambari.server.api.services.AmbariMetaInfo.readKerberosDescriptorFromFile : $r12 := @caughtexception
