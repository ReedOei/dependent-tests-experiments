org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r3 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List components> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $r3 == null
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $r3 == null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r4 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List components>
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $r3 == null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : return 0
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r4 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List components> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z0 = interfaceinvoke $r4.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z0 == 0
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : return 0
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r5 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List components>
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r5 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.List components> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : r1 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z1 == 0
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : return 1
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : r2 = (org.apache.ambari.server.state.ComponentInfo) $r6
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : r2 = (org.apache.ambari.server.state.ComponentInfo) $r6 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z2 = virtualinvoke r2.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>()
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z2 = virtualinvoke r2.<org.apache.ambari.server.state.ComponentInfo: boolean isClient()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z2 != 0
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : return 0
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : if $z2 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceInfo.isClientOnlyService : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
