org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r6 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.state.Clusters clusterFsm> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>(r1)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r7 = interfaceinvoke $r6.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $z0 == 0
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r8 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r8 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $z1 = virtualinvoke $r8.<org.apache.ambari.server.agent.ActionQueue: boolean hasPendingTask(java.lang.String)>(r1)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $z1 = virtualinvoke $r8.<org.apache.ambari.server.agent.ActionQueue: boolean hasPendingTask(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $z1 == 0
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $z1 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r9 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $z1 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : return
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r9 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Host {} has pending tasks", r1)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Host {} has pending tasks", r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void setHasPendingTasks(boolean)>(1)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void setHasPendingTasks(boolean)>(1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : return
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : r4 = (org.apache.ambari.server.state.Cluster) $r10
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : r4 = (org.apache.ambari.server.state.Cluster) $r10 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $i0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: int getClusterSize()>()
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $i0 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: int getClusterSize()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void setClusterSize(int)>($i0)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void setClusterSize(int)>($i0) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>(r1)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if r5 == null
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if r5 == null >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $i1 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if r5 == null >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $i1 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $i1 <= 0
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void setHasMappedComponents(boolean)>(1)
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : if $i1 <= 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void setHasMappedComponents(boolean)>(1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : goto [?= $r8 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.agent.ActionQueue actionQueue>]
org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : goto [?= $r8 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.agent.ActionQueue actionQueue>] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.annotateResponse : $r8 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.agent.ActionQueue actionQueue>
