org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r3 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r4 = interfaceinvoke r1.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r4 = interfaceinvoke r1.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduling job: {}", $r4)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Scheduling job: {}", $r4) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $z0 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean isSchedulerAvailable()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $z0 = virtualinvoke r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: boolean isSchedulerAvailable()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : if $z0 == 0
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r6 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : if $z0 == 0 >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r5 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG>
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r5 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>("Scheduler unavailable, cannot schedule jobs.")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String)>("Scheduler unavailable, cannot schedule jobs.") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r6 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r6.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r1)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r6 = r0.<org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.apache.ambari.server.scheduler.ExecutionScheduler executionScheduler> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r7 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r9 = <org.apache.ambari.server.scheduler.ExecutionScheduleManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r8 = new java.lang.StringBuilder
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r8 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add trigger for execution job: ")
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add trigger for execution job: ") >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r11 = interfaceinvoke r1.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r11 = interfaceinvoke r1.<org.quartz.Trigger: org.quartz.JobKey getJobKey()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r13, $r7)
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r9.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r13, $r7) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : return
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r6.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : goto [?= return]
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : interfaceinvoke $r6.<org.apache.ambari.server.scheduler.ExecutionScheduler: void scheduleJob(org.quartz.Trigger)>(r1) >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : $r7 := @caughtexception
org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : goto [?= return] >>>>>>>> org.apache.ambari.server.scheduler.ExecutionScheduleManager.scheduleJob : return
