org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r5 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : specialinvoke $r5.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : specialinvoke $r5.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r6 = r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.orm.dao.HostConfigMappingDAO hostConfigMappingDAO>
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r6 = r0.<org.apache.ambari.server.state.host.HostImpl: org.apache.ambari.server.orm.dao.HostConfigMappingDAO hostConfigMappingDAO> >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r7 = virtualinvoke r0.<org.apache.ambari.server.state.host.HostImpl: java.lang.Long getHostId()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r8 = virtualinvoke $r6.<org.apache.ambari.server.orm.dao.HostConfigMappingDAO: java.util.Set findSelected(long,java.lang.Long)>(l0, $r7)
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r8 = virtualinvoke $r6.<org.apache.ambari.server.orm.dao.HostConfigMappingDAO: java.util.Set findSelected(long,java.lang.Long)>(l0, $r7) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : if $z0 == 0
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : return $r5
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : r3 = (org.apache.ambari.server.orm.cache.HostConfigMapping) $r9
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : r3 = (org.apache.ambari.server.orm.cache.HostConfigMapping) $r9 >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r10 = new org.apache.ambari.server.state.DesiredConfig
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r10 = new org.apache.ambari.server.state.DesiredConfig >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : specialinvoke $r10.<org.apache.ambari.server.state.DesiredConfig: void <init>()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : specialinvoke $r10.<org.apache.ambari.server.state.DesiredConfig: void <init>()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r11 = interfaceinvoke r3.<org.apache.ambari.server.orm.cache.HostConfigMapping: java.lang.String getVersion()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r11 = interfaceinvoke r3.<org.apache.ambari.server.orm.cache.HostConfigMapping: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : virtualinvoke $r10.<org.apache.ambari.server.state.DesiredConfig: void setTag(java.lang.String)>($r11)
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : virtualinvoke $r10.<org.apache.ambari.server.state.DesiredConfig: void setTag(java.lang.String)>($r11) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r12 = interfaceinvoke r3.<org.apache.ambari.server.orm.cache.HostConfigMapping: java.lang.String getServiceName()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r12 = interfaceinvoke r3.<org.apache.ambari.server.orm.cache.HostConfigMapping: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : virtualinvoke $r10.<org.apache.ambari.server.state.DesiredConfig: void setServiceName(java.lang.String)>($r12)
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : virtualinvoke $r10.<org.apache.ambari.server.state.DesiredConfig: void setServiceName(java.lang.String)>($r12) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r13 = interfaceinvoke r3.<org.apache.ambari.server.orm.cache.HostConfigMapping: java.lang.String getType()>()
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $r13 = interfaceinvoke r3.<org.apache.ambari.server.orm.cache.HostConfigMapping: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r10)
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r10) >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.host.HostImpl.getDesiredConfigs : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
