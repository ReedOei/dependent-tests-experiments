org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : r3 = virtualinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.sql.DatabaseMetaData getDatabaseMetaData()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r7 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String dbSchema>
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r7 = r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String dbSchema> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r8 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r8 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : r4 = interfaceinvoke r3.<java.sql.DatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)>(null, $r7, $r8)
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : r4 = interfaceinvoke r3.<java.sql.DatabaseMetaData: java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String)>(null, $r7, $r8) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if r4 == null
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if r4 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z0 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if r4 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if r4 == null >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke r4.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : throw $r13
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r10 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r2)
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r10 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r11 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1)
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r11 = specialinvoke r0.<org.apache.ambari.server.orm.DBAccessorImpl: java.lang.String convertObjectName(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("FK {} not found for table {}", $r10, $r11)
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("FK {} not found for table {}", $r10, $r11) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : return null
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z0 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z0 == 0
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z0 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r12 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("FK_NAME")
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke r4.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z0 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke r4.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : goto [?= $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>]
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : goto [?= $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>] >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r9 = <org.apache.ambari.server.orm.DBAccessorImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r12 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("FK_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>(r2, $r12)
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r12 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("FK_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>(r2, $r12) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z1 == 0
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z1 = staticinvoke <org.apache.commons.lang.StringUtils: boolean equalsIgnoreCase(java.lang.String,java.lang.String)>(r2, $r12) >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : r5 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("FK_NAME")
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $z0 = interfaceinvoke r4.<java.sql.ResultSet: boolean next()>()
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : if $z1 == 0 >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : r5 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("FK_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke r4.<java.sql.ResultSet: void close()>()
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : r5 = interfaceinvoke r4.<java.sql.ResultSet: java.lang.String getString(java.lang.String)>("FK_NAME") >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : $r13 := @caughtexception
org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : interfaceinvoke r4.<java.sql.ResultSet: void close()>() >>>>>>>> org.apache.ambari.server.orm.DBAccessorImpl.getCheckedForeignKey : return r5
