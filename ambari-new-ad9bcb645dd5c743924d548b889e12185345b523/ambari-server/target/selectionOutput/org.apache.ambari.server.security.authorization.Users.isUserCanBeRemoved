org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r4 = r0.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.orm.dao.PrincipalDAO principalDAO> >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1) >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : r2 = virtualinvoke $r4.<org.apache.ambari.server.orm.dao.PrincipalDAO: java.util.List findByPermissionId(java.lang.Integer)>($r5)
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : r2 = virtualinvoke $r4.<org.apache.ambari.server.orm.dao.PrincipalDAO: java.util.List findByPermissionId(java.lang.Integer)>($r5) >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r6 = new java.util.HashSet
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r6 = new java.util.HashSet >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r7 = r0.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.orm.dao.UserDAO userDAO>
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r7 = r0.<org.apache.ambari.server.security.authorization.Users: org.apache.ambari.server.orm.dao.UserDAO userDAO> >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r8 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.UserDAO: java.util.List findUsersByPrincipal(java.util.List)>(r2)
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $r8 = virtualinvoke $r7.<org.apache.ambari.server.orm.dao.UserDAO: java.util.List findUsersByPrincipal(java.util.List)>(r2) >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>($r8)
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>($r8) >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r1)
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z0 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : if $z0 == 0
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $i0 = interfaceinvoke $r6.<java.util.Set: int size()>()
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z1 = 1
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z1 = 1 >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : return $z1
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $i0 = interfaceinvoke $r6.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : if $i0 >= 2
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : if $i0 >= 2 >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z1 = 0
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : if $i0 >= 2 >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z1 = 1
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : $z1 = 0 >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : goto [?= return $z1]
org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : goto [?= return $z1] >>>>>>>> org.apache.ambari.server.security.authorization.Users.isUserCanBeRemoved : return $z1
