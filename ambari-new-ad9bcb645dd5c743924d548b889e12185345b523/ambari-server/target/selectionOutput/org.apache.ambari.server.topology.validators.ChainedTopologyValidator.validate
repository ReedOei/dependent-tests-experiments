org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r4 = r0.<org.apache.ambari.server.topology.validators.ChainedTopologyValidator: java.util.List validators> >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : if $z0 == 0
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : if $z0 == 0 >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : return
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : r3 = (org.apache.ambari.server.topology.TopologyValidator) $r5
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : r3 = (org.apache.ambari.server.topology.TopologyValidator) $r5 >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r6 = <org.apache.ambari.server.topology.validators.ChainedTopologyValidator: org.slf4j.Logger LOGGER>
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r6 = <org.apache.ambari.server.topology.validators.ChainedTopologyValidator: org.slf4j.Logger LOGGER> >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Performing topology validation: {}", $r7)
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Performing topology validation: {}", $r7) >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : interfaceinvoke r3.<org.apache.ambari.server.topology.TopologyValidator: void validate(org.apache.ambari.server.topology.ClusterTopology)>(r1)
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : interfaceinvoke r3.<org.apache.ambari.server.topology.TopologyValidator: void validate(org.apache.ambari.server.topology.ClusterTopology)>(r1) >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.topology.validators.ChainedTopologyValidator.validate : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
