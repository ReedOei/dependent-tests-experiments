org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : $r3 = interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.UpgradeState getUpgradeState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : if $r3 != r2
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : if $r3 != r2 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : return
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : if $r3 != r2 >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: void setUpgradeState(org.apache.ambari.server.state.UpgradeState)>(r2)
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: void setUpgradeState(org.apache.ambari.server.state.UpgradeState)>(r2) >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.orm.entities.HostVersionEntity recalculateHostVersionState()>()
org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : interfaceinvoke r1.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.orm.entities.HostVersionEntity recalculateHostVersionState()>() >>>>>>>> org.apache.ambari.server.events.listeners.upgrade.StackVersionListener.setUpgradeStateAndRecalculateHostVersions : return
