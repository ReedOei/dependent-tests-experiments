org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r13 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r14 = interfaceinvoke $r13.<java.util.Map: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r3 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r3 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : if $z0 == 0
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : if $z0 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : return $r12
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r4 = (org.apache.ambari.server.topology.HostGroupInfo) $r15
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r4 = (org.apache.ambari.server.topology.HostGroupInfo) $r15 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r16 = new java.util.HashMap
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r16 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : specialinvoke $r16.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : specialinvoke $r16.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r16)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r16) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r6 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r6 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.lang.String getHostGroupName()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r18 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r18 = virtualinvoke r4.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $i0 = interfaceinvoke $r18.<java.util.Collection: int size()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $i0 = interfaceinvoke $r18.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r19 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cardinality", $r19)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cardinality", $r19) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r21 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r21 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r22 = interfaceinvoke $r21.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r23 = specialinvoke r0.<org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer: java.util.List processHostGroupComponents(org.apache.ambari.server.topology.HostGroup)>($r22)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r23 = specialinvoke r0.<org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer: java.util.List processHostGroupComponents(org.apache.ambari.server.topology.HostGroup)>($r22) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("components", $r23)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("components", $r23) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r25 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r25 = interfaceinvoke r1.<org.apache.ambari.server.topology.ClusterTopology: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r27 = (org.apache.ambari.server.topology.HostGroupInfo) $r26
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r27 = (org.apache.ambari.server.topology.HostGroupInfo) $r26 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r7 = virtualinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r7 = virtualinvoke $r27.<org.apache.ambari.server.topology.HostGroupInfo: org.apache.ambari.server.topology.Configuration getConfiguration()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r28 = new java.util.ArrayList
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r28 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : specialinvoke $r28.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : specialinvoke $r28.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r29 = virtualinvoke r7.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r29 = virtualinvoke r7.<org.apache.ambari.server.topology.Configuration: java.util.Map getProperties()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Set entrySet()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r30 = interfaceinvoke $r29.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r9 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r9 = interfaceinvoke $r30.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : if $z2 == 0
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r32 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : if $z2 == 0 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configurations", $r28)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("configurations", $r28) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r32 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r10 = (java.util.Map$Entry) $r32
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r10 = (java.util.Map$Entry) $r32 >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r33 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r33 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r34 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>()
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $r34 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r33, $r34)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : r11 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r33, $r34) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>(r11)
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>(r11) >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : goto [?= $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.api.query.render.ClusterBlueprintRenderer.formatGroupsAsList : $z2 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
