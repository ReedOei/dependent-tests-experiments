org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $z0 = interfaceinvoke r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z0 == 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : return 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r4 = (org.apache.ambari.server.state.Service) $r7
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r4 = (org.apache.ambari.server.state.Service) $r7 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r4
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r4 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : return 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r5 = interfaceinvoke r4.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.api.services.AmbariMetaInfo m_metaInfo>
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.api.services.AmbariMetaInfo m_metaInfo> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r9 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r8 = r0.<org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder: org.apache.ambari.server.api.services.AmbariMetaInfo m_metaInfo> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r15 = staticinvoke <org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping: org.slf4j.Logger access$200()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r16 = new java.lang.StringBuilder
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r16 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : specialinvoke $r16.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not determine if service ")
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not determine if service ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can run a service check. Exception: ")
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can run a service check. Exception: ") >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r20 = virtualinvoke $r14.<org.apache.ambari.server.AmbariException: java.lang.String getMessage()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r20 = virtualinvoke $r14.<org.apache.ambari.server.AmbariException: java.lang.String getMessage()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>($r22)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>($r22) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : return 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r9 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r10 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r9 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r10 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r23 = virtualinvoke $r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, r2)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r10 = virtualinvoke r5.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r23 = virtualinvoke $r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r6 = virtualinvoke r23.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r23 = virtualinvoke $r8.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r9, $r10, r2) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r6 = virtualinvoke r23.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r6
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : r6 = virtualinvoke r23.<org.apache.ambari.server.state.ServiceInfo: org.apache.ambari.server.state.CommandScriptDefinition getCommandScript()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r11 = virtualinvoke r6.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : goto [?= return 0]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == r6 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : goto [?= return 0] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : return 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r11 = virtualinvoke r6.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == $r11
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r11 = virtualinvoke r6.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : goto [?= return 0]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if null == $r11 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $z1 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r12 = virtualinvoke r6.<org.apache.ambari.server.state.CommandScriptDefinition: java.lang.String getScript()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $z1 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z1 != 0
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $z1 = virtualinvoke $r12.<java.lang.String: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r13 = virtualinvoke r23.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>()
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : goto [?= return 0]
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : if $z1 != 0 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r13 = virtualinvoke r23.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: void setServiceDisplay(java.lang.String,java.lang.String)>(r2, $r13)
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r13 = virtualinvoke r23.<org.apache.ambari.server.state.ServiceInfo: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: void setServiceDisplay(java.lang.String,java.lang.String)>(r2, $r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : return 1
org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : virtualinvoke r1.<org.apache.ambari.server.state.UpgradeContext: void setServiceDisplay(java.lang.String,java.lang.String)>(r2, $r13) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.ServiceCheckGrouping$ServiceCheckBuilder.checkServiceValidity : $r14 := @caughtexception
