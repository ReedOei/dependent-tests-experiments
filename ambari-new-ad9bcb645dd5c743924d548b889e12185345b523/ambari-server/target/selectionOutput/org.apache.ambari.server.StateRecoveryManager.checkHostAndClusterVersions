org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r3 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r1 = virtualinvoke $r3.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findAll()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r1 = virtualinvoke $r3.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r33 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r33 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z0 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r20 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z0 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r4 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO serviceComponentDAO>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r4 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO serviceComponentDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r36 = virtualinvoke $r4.<org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO: java.util.List findAll()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r36 = virtualinvoke $r4.<org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r37 = interfaceinvoke r36.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r37 = interfaceinvoke r36.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z1 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r5 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z1 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : return
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r5 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r38 = (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity) $r5
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r38 = (org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity) $r5 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r6 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r6 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r7 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: org.apache.ambari.server.state.RepositoryVersionState getRepositoryState()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r7 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: org.apache.ambari.server.state.RepositoryVersionState getRepositoryState()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $r6 != $r7
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $r6 != $r7 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r8 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $r6 != $r7 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r8 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: void setRepositoryState(org.apache.ambari.server.state.RepositoryVersionState)>($r8)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: void setRepositoryState(org.apache.ambari.server.state.RepositoryVersionState)>($r8) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r9 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO serviceComponentDAO>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r9 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO serviceComponentDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r9.<org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO: org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity merge(org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity)>(r38)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r9.<org.apache.ambari.server.orm.dao.ServiceComponentDesiredStateDAO: org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity merge(org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity)>(r38) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11 = newarray (java.lang.Object)[6]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11 = newarray (java.lang.Object)[6] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r12 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.Long getClusterId()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r12 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.Long getClusterId()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[0] = $r12
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[0] = $r12 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r13 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r13 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[1] = $r13
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[1] = $r13 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r14 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r14 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: java.lang.String getComponentName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[2] = $r14
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[2] = $r14 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r15 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r15 = virtualinvoke r38.<org.apache.ambari.server.orm.entities.ServiceComponentDesiredStateEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r16 = virtualinvoke $r15.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r16 = virtualinvoke $r15.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[3] = $r16
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[3] = $r16 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r17 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r17 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[4] = $r17
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[4] = $r17 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r18 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r18 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[5] = $r18
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r11[5] = $r18 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of cluster %s of component %s/%s for version %s from %s to %s", $r11)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of cluster %s of component %s/%s for version %s from %s to %s", $r11) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r19 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r19 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>(r2)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z1 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r20 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r34 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r20
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r34 = (org.apache.ambari.server.orm.entities.HostVersionEntity) $r20 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r21 = virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r21 = virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.state.RepositoryVersionState getState()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r22 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r22 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z2 = virtualinvoke $r21.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r22)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z2 = virtualinvoke $r21.<org.apache.ambari.server.state.RepositoryVersionState: boolean equals(java.lang.Object)>($r22) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z2 == 0
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r23 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : if $z2 == 0 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r23 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r23)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: void setState(org.apache.ambari.server.state.RepositoryVersionState)>($r23) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24 = newarray (java.lang.Object)[4]
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r25 = virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r25 = virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getDisplayName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[0] = $r26
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[0] = $r26 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r27 = virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>()
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r27 = virtualinvoke r34.<org.apache.ambari.server.orm.entities.HostVersionEntity: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[1] = $r27
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[1] = $r27 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r28 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALLING> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[2] = $r28
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[2] = $r28 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r29 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r29 = <org.apache.ambari.server.state.RepositoryVersionState: org.apache.ambari.server.state.RepositoryVersionState INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[3] = $r29
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r24[3] = $r29 >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of host version %s on host %s from %s to %s", $r24)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Recovered state of host version %s on host %s from %s to %s", $r24) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r30 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r30 = <org.apache.ambari.server.StateRecoveryManager: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>(r35)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : interfaceinvoke $r30.<org.slf4j.Logger: void warn(java.lang.String)>(r35) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r31 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO>
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : $r31 = r0.<org.apache.ambari.server.StateRecoveryManager: org.apache.ambari.server.orm.dao.HostVersionDAO hostVersionDAO> >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r31.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r34)
org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : virtualinvoke $r31.<org.apache.ambari.server.orm.dao.HostVersionDAO: java.lang.Object merge(java.lang.Object)>(r34) >>>>>>>> org.apache.ambari.server.StateRecoveryManager.checkHostAndClusterVersions : goto [?= $z0 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>()]
