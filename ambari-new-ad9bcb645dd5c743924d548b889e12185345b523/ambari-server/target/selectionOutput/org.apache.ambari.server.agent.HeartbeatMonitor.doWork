org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r10 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r1 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r1 = interfaceinvoke $r10.<org.apache.ambari.server.state.Clusters: java.util.List getHosts()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l0 = staticinvoke <java.lang.System: long currentTimeMillis()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z9 == 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z9 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z9 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : return
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r3 = (org.apache.ambari.server.state.Host) $r11
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r3 = (org.apache.ambari.server.state.Host) $r11 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r12 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostState getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r12 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostState getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r13 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEARTBEAT_LOST>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r13 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState HEARTBEAT_LOST> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $r12 != $r13
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $r12 != $r13 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $r12 != $r13 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r4 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostState getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r5 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: org.apache.ambari.server.state.HostState getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r6 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l11 = 0L
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l11 = 0L >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r14 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r14 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r4)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r14 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r58 := @caughtexception
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r59 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r59.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in getting host object; Is it fatal?", $r58)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r59.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Exception in getting host object; Is it fatal?", $r58) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i1 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i1 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i2 = 2 * $i1
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i2 = 2 * $i1 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l3 = (long) $i2
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l3 = (long) $i2 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l4 = l11 + $l3
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l4 = l11 + $l3 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $b5 = $l4 cmp l0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $b5 = $l4 cmp l0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $b5 >= 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $b5 >= 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r22 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $b5 >= 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r16 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState WAITING_FOR_HOST_STATUS_UPDATES>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r16 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState WAITING_FOR_HOST_STATUS_UPDATES> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if r5 != $r16
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if r5 != $r16 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l12 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: long getTimeInState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if r5 != $r16 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r64 = virtualinvoke r0.<org.apache.ambari.server.agent.HeartbeatMonitor: java.util.List generateStatusCommands(java.lang.String)>(r6)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r64 = virtualinvoke r0.<org.apache.ambari.server.agent.HeartbeatMonitor: java.util.List generateStatusCommands(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r65 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r65 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i13 = interfaceinvoke r64.<java.util.List: int size()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i13 = interfaceinvoke r64.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r65.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Generated {} status commands for host: {}", $r66, r6)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r65.<org.slf4j.Logger: void trace(java.lang.String,java.lang.Object,java.lang.Object)>("Generated {} status commands for host: {}", $r66, r6) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z10 = interfaceinvoke r64.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z10 = interfaceinvoke r64.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z10 == 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z10 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= (branch)]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z10 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r67 = interfaceinvoke r64.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r67 = interfaceinvoke r64.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z0 == 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r17 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z0 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r17 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r68 = (org.apache.ambari.server.agent.StatusCommand) $r17
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r68 = (org.apache.ambari.server.agent.StatusCommand) $r17 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r18 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r18 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : virtualinvoke $r18.<org.apache.ambari.server.agent.ActionQueue: void enqueue(java.lang.String,org.apache.ambari.server.agent.AgentCommand)>(r6, r68)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : virtualinvoke $r18.<org.apache.ambari.server.agent.ActionQueue: void enqueue(java.lang.String,org.apache.ambari.server.agent.AgentCommand)>(r6, r68) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z0 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l12 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: long getTimeInState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i6 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i6 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i7 = 5 * $i6
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i7 = 5 * $i6 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l8 = (long) $i7
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l8 = (long) $i7 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l9 = l12 + $l8
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $l9 = l12 + $l8 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $b10 = $l9 cmp l0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $b10 = $l9 cmp l0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $b10 >= 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $b10 >= 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r19 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $b10 >= 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r64 = virtualinvoke r0.<org.apache.ambari.server.agent.HeartbeatMonitor: java.util.List generateStatusCommands(java.lang.String)>(r6)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r19 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>("timeSpentInState + 5*threadWakeupInterval < now, Go back to init")
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>("timeSpentInState + 5*threadWakeupInterval < now, Go back to init") >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r20 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState INIT>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r20 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState INIT> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r20)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void setState(org.apache.ambari.server.state.HostState)>($r20) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r64 = virtualinvoke r0.<org.apache.ambari.server.agent.HeartbeatMonitor: java.util.List generateStatusCommands(java.lang.String)>(r6)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r22 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Heartbeat lost from host ")
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Heartbeat lost from host ") >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String)>($r25)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r22.<org.slf4j.Logger: void warn(java.lang.String)>($r25) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r26 = new org.apache.ambari.server.state.host.HostHeartbeatLostEvent
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r26 = new org.apache.ambari.server.state.host.HostHeartbeatLostEvent >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : specialinvoke $r26.<org.apache.ambari.server.state.host.HostHeartbeatLostEvent: void <init>(java.lang.String)>(r4)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : specialinvoke $r26.<org.apache.ambari.server.state.host.HostHeartbeatLostEvent: void <init>(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void handleEvent(org.apache.ambari.server.state.HostEvent)>($r26)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke r3.<org.apache.ambari.server.state.Host: void handleEvent(org.apache.ambari.server.state.HostEvent)>($r26) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r27 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.state.Clusters clusters>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r27 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.state.Clusters clusters> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r28 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r28 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r29 = interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r28)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r29 = interfaceinvoke $r27.<org.apache.ambari.server.state.Clusters: java.util.Set getClustersForHost(java.lang.String)>($r28) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r61 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r61 = interfaceinvoke $r29.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z1 == 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z1 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r33 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z1 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r30 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.agent.ActionQueue actionQueue>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r30 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : virtualinvoke $r30.<org.apache.ambari.server.agent.ActionQueue: java.util.List dequeueAll(java.lang.String)>(r4)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : virtualinvoke $r30.<org.apache.ambari.server.agent.ActionQueue: java.util.List dequeueAll(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r32 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.actionmanager.ActionManager actionManager>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r32 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: org.apache.ambari.server.actionmanager.ActionManager actionManager> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : virtualinvoke $r32.<org.apache.ambari.server.actionmanager.ActionManager: void handleLostHost(java.lang.String)>(r4)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : virtualinvoke $r32.<org.apache.ambari.server.actionmanager.ActionManager: void handleLostHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r16 = <org.apache.ambari.server.state.HostState: org.apache.ambari.server.state.HostState WAITING_FOR_HOST_STATUS_UPDATES>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r33 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r62 = (org.apache.ambari.server.state.Cluster) $r33
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r62 = (org.apache.ambari.server.state.Cluster) $r33 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r34 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r34 = interfaceinvoke r3.<org.apache.ambari.server.state.Host: java.lang.String getHostName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r35 = interfaceinvoke r62.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>($r34)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r35 = interfaceinvoke r62.<org.apache.ambari.server.state.Cluster: java.util.List getServiceComponentHosts(java.lang.String)>($r34) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r63 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r63 = interfaceinvoke $r35.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z2 == 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z2 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r36 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z2 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z1 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r36 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r7 = (org.apache.ambari.server.state.ServiceComponentHost) $r36
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r7 = (org.apache.ambari.server.state.ServiceComponentHost) $r36 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r37 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r37 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r8 = interfaceinvoke r62.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r37)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r8 = interfaceinvoke r62.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r37) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r38 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r38 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: java.lang.String getServiceComponentName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r38)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : r9 = interfaceinvoke r8.<org.apache.ambari.server.state.Service: org.apache.ambari.server.state.ServiceComponent getServiceComponent(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z3 = interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z3 = interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: boolean isClientComponent()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z3 != 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z3 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r39 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z3 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r39 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r40 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r40 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z4 = virtualinvoke $r39.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r40)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z4 = virtualinvoke $r39.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r40) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z4 != 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z4 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r41 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z4 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r41 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r42 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r42 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALLING> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z5 = virtualinvoke $r41.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r42)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z5 = virtualinvoke $r41.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r42) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z5 != 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z5 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r43 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z5 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r43 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r44 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALL_FAILED>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r44 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INSTALL_FAILED> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z6 = virtualinvoke $r43.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r44)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z6 = virtualinvoke $r43.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r44) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z6 != 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z6 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r45 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z6 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r45 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r46 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State UNINSTALLED>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r46 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State UNINSTALLED> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z7 = virtualinvoke $r45.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r46)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z7 = virtualinvoke $r45.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r46) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z7 != 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z7 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r47 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z7 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r47 = interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: org.apache.ambari.server.state.State getState()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r48 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State DISABLED>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r48 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State DISABLED> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z8 = virtualinvoke $r47.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r48)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z8 = virtualinvoke $r47.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r48) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z8 != 0
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z8 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r50 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : if $z8 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r50 = <org.apache.ambari.server.agent.HeartbeatMonitor: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r49 = new java.lang.StringBuilder
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r49 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting component state to UNKNOWN for component ")
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting component state to UNKNOWN for component ") >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r52 = interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r52 = interfaceinvoke r9.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ")
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ") >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r50.<org.slf4j.Logger: void warn(java.lang.String)>($r56)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke $r50.<org.slf4j.Logger: void warn(java.lang.String)>($r56) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r57 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State UNKNOWN>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r57 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State UNKNOWN> >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r57)
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : interfaceinvoke r7.<org.apache.ambari.server.state.ServiceComponentHost: void setState(org.apache.ambari.server.state.State)>($r57) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z2 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l11 = interfaceinvoke $r15.<org.apache.ambari.server.state.Host: long getLastHeartbeatTime()>()
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r15 = interfaceinvoke $r14.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Host getHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r58 := @caughtexception
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l11 = interfaceinvoke $r15.<org.apache.ambari.server.state.Host: long getLastHeartbeatTime()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $i1 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval>]
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : l11 = interfaceinvoke $r15.<org.apache.ambari.server.state.Host: long getLastHeartbeatTime()>() >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $r58 := @caughtexception
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $i1 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval>] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $i1 = r0.<org.apache.ambari.server.agent.HeartbeatMonitor: int threadWakeupInterval>
org.apache.ambari.server.agent.HeartbeatMonitor.doWork : goto [?= $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartbeatMonitor.doWork : $z9 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
