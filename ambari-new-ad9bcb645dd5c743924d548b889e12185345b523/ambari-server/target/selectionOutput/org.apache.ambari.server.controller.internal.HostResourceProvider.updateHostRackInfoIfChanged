org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.Long getResourceId()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Host: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : r6 = virtualinvoke r3.<org.apache.ambari.server.controller.HostRequest: java.lang.String getRackInfo()>()
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : r6 = virtualinvoke r3.<org.apache.ambari.server.controller.HostRequest: java.lang.String getRackInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if r6 == null
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r5)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if r6 == null >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z3 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z3 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : z0 = $z3
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : z0 = $z3 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z3 == 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $r8 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : return z0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $r8 = <org.apache.ambari.server.security.authorization.ResourceType: org.apache.ambari.server.security.authorization.ResourceType CLUSTER> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $r7 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS>
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $r7 = <org.apache.ambari.server.security.authorization.RoleAuthorization: org.apache.ambari.server.security.authorization.RoleAuthorization HOST_ADD_DELETE_HOSTS> >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r8, r4, $r7)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z1 = staticinvoke <org.apache.ambari.server.security.authorization.AuthorizationHelper: boolean isAuthorized(org.apache.ambari.server.security.authorization.ResourceType,java.lang.Long,org.apache.ambari.server.security.authorization.RoleAuthorization)>($r8, r4, $r7) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z1 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $r9 = new org.apache.ambari.server.security.authorization.AuthorizationException
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : interfaceinvoke r2.<org.apache.ambari.server.state.Host: void setRackInfo(java.lang.String)>(r6)
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : interfaceinvoke r2.<org.apache.ambari.server.state.Host: void setRackInfo(java.lang.String)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : return z0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $r9 = new org.apache.ambari.server.security.authorization.AuthorizationException >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : specialinvoke $r9.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host rack information")
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : specialinvoke $r9.<org.apache.ambari.server.security.authorization.AuthorizationException: void <init>(java.lang.String)>("The authenticated user is not authorized to update host rack information") >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : throw $r9
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z2 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z2 != 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z3 = 1
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z3 = 0
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : $z3 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : goto [?= z0 = $z3]
org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : goto [?= z0 = $z3] >>>>>>>> org.apache.ambari.server.controller.internal.HostResourceProvider.updateHostRackInfoIfChanged : z0 = $z3
