org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r11 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB configs consistency")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r11.<org.slf4j.Logger: void info(java.lang.String)>("Checking DB configs consistency") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r12 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r12 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r12 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r49 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r12 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r13 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r13 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r14 = interfaceinvoke $r13.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/orm/dao/ClusterDAO;") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r0 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r14
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r0 = (org.apache.ambari.server.orm.dao.ClusterDAO) $r14 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r1 = virtualinvoke r0.<org.apache.ambari.server.orm.dao.ClusterDAO: java.util.List findAll()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r1 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r1 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r52 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r1 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z7 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z7 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r17 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z7 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r15 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r15 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>("DB configs consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r15.<org.slf4j.Logger: void error(java.lang.String)>("DB configs consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r16 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r16 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("DB configs consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r16.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("DB configs consistency check failed. Run \"ambari-server start --skip-database-validation\" to skip validation.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : throw $r16
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r17 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>("DB configs consistency check passed.")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r17.<org.slf4j.Logger: void info(java.lang.String)>("DB configs consistency check passed.") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= return]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : return
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r52 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z0 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r18 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z0 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if z7 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r18 = interfaceinvoke r52.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r2 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r18
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r2 = (org.apache.ambari.server.orm.entities.ClusterEntity) $r18 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r3 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterConfigEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r3 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterConfigEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if null != r3
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if null != r3 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : return
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if null != r3 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r19 = new java.util.HashMap
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r19 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r19.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : specialinvoke $r19.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r53 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r53 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z1 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r41 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r56 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r56 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: java.util.Collection getClusterServiceEntities()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r57 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ClusterStateEntity getClusterStateEntity()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r57 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.ClusterEntity: org.apache.ambari.server.orm.entities.ClusterStateEntity getClusterStateEntity()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r57 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r57 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r58 = virtualinvoke r57.<org.apache.ambari.server.orm.entities.ClusterStateEntity: org.apache.ambari.server.orm.entities.StackEntity getCurrentStack()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if r57 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r58 = virtualinvoke r57.<org.apache.ambari.server.orm.entities.ClusterStateEntity: org.apache.ambari.server.orm.entities.StackEntity getCurrentStack()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r20 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r21 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r21 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r22 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r22 = virtualinvoke r58.<org.apache.ambari.server.orm.entities.StackEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r59 = virtualinvoke $r20.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r21, $r22)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r59 = virtualinvoke $r20.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r21, $r22) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r5 = interfaceinvoke r56.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r5 = interfaceinvoke r56.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z2 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z0 = interfaceinvoke r52.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r6 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r23
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r6 = (org.apache.ambari.server.orm.entities.ClusterServiceEntity) $r23 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r24 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r24 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r25 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r25 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity getServiceDesiredStateEntity()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r26 = virtualinvoke $r25.<org.apache.ambari.server.orm.entities.ServiceDesiredStateEntity: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z3 = virtualinvoke $r24.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r26)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z3 = virtualinvoke $r24.<org.apache.ambari.server.state.State: boolean equals(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z3 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r7 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r7 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.ClusterServiceEntity: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r27 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r27 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r28 = virtualinvoke r59.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r28 = virtualinvoke r59.<org.apache.ambari.server.state.StackInfo: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r29 = virtualinvoke r59.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r29 = virtualinvoke r59.<org.apache.ambari.server.state.StackInfo: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r8 = virtualinvoke $r27.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r28, $r29, r7)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r8 = virtualinvoke $r27.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r28, $r29, r7) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.ServiceInfo: java.util.Map getConfigTypeAttributes()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r30 = virtualinvoke r8.<org.apache.ambari.server.state.ServiceInfo: java.util.Map getConfigTypeAttributes()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r31 = interfaceinvoke $r30.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r31 = interfaceinvoke $r30.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r9 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r9 = interfaceinvoke $r31.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z4 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r32 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r32 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r10 = (java.lang.String) $r32
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r10 = (java.lang.String) $r32 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r33 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r33 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r33 != null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r33 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r33 != null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r34 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r34 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r35 = (java.lang.Integer) $r34
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r35 = (java.lang.Integer) $r34 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i0 = virtualinvoke $r35.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i0 = virtualinvoke $r35.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i0 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i0 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r36 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r36 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r37 = (java.lang.Integer) $r36
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r37 = (java.lang.Integer) $r36 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i1 = virtualinvoke $r37.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i1 = virtualinvoke $r37.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i1 <= 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r38 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r38 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Configuration {} has more than 1 enabled entry for service {}", r10, r7)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r38.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Configuration {} has more than 1 enabled entry for service {}", r10, r7) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r39 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r39 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Configuration {} has no enabled entries for service {}", r10, r7)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r39.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Configuration {} has no enabled entries for service {}", r10, r7) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : z7 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r40 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r40 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r40.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Configuration {} is missing for service {}", r10, r7)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r40.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Configuration {} is missing for service {}", r10, r7) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z4 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r41 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r54 = (org.apache.ambari.server.orm.entities.ClusterConfigEntity) $r41
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r54 = (org.apache.ambari.server.orm.entities.ClusterConfigEntity) $r41 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r55 = virtualinvoke r54.<org.apache.ambari.server.orm.entities.ClusterConfigEntity: java.lang.String getType()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : r55 = virtualinvoke r54.<org.apache.ambari.server.orm.entities.ClusterConfigEntity: java.lang.String getType()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z5 = virtualinvoke r54.<org.apache.ambari.server.orm.entities.ClusterConfigEntity: boolean isSelected()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z5 = virtualinvoke r54.<org.apache.ambari.server.orm.entities.ClusterConfigEntity: boolean isSelected()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z5 == 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r44 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z6 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r55)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z6 = interfaceinvoke $r19.<java.util.Map: boolean containsKey(java.lang.Object)>(r55) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z6 != 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $z6 != 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r55, $r42)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r55, $r42) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r44 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r44 == null
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r44 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r47 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : if $r44 == null >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i3 = 0
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i3 = 0 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = $i3 + 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = $i3 + 1 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r55, $r45)
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r55, $r45) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $z1 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r47 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r55) >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r48 = (java.lang.Integer) $r47
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r48 = (java.lang.Integer) $r47 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i3 = virtualinvoke $r48.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i3 = virtualinvoke $r48.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $i2 = $i3 + 1]
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : goto [?= $i2 = $i3 + 1] >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $i2 = $i3 + 1
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r49 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector> >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r50 = interfaceinvoke $r49.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;")
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r50 = interfaceinvoke $r49.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/apache/ambari/server/api/services/AmbariMetaInfo;") >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r51 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r50
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r51 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r50 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r51
org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : <org.apache.ambari.server.controller.utilities.DatabaseChecker: org.apache.ambari.server.api.services.AmbariMetaInfo ambariMetaInfo> = $r51 >>>>>>>> org.apache.ambari.server.controller.utilities.DatabaseChecker.checkDBConfigsConsistency : $r13 = <org.apache.ambari.server.controller.utilities.DatabaseChecker: com.google.inject.Injector injector>
