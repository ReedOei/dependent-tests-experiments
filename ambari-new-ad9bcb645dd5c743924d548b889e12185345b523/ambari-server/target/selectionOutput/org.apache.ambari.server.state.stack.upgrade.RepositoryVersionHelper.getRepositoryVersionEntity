org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r10 = null >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r10 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r3 = <org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r3 = <org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r4 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Service component not passed in, attempt to resolve the repository for cluster {}", $r4)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Service component not passed in, attempt to resolve the repository for cluster {}", $r4) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r5 = <org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.slf4j.Logger LOG>
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : return r10
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r5 = <org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r6 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Cluster {} has no specific Repository Versions.  Using stack-defined values", $r6)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Cluster {} has no specific Repository Versions.  Using stack-defined values", $r6) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : return null
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r7 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getServiceName()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null == r2 >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r8 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r9 = new org.apache.ambari.server.controller.spi.SystemException >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : specialinvoke $r9.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String,java.lang.Throwable)>("Unhandled exception", $r8)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : specialinvoke $r9.<org.apache.ambari.server.controller.spi.SystemException: void <init>(java.lang.String,java.lang.Throwable)>("Unhandled exception", $r8) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : throw $r9
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r7 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r7)
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r7 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r8 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r10 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>()
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r11 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service getService(java.lang.String)>($r7) >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r8 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r10 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r10 = interfaceinvoke r11.<org.apache.ambari.server.state.Service: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : $r8 := @caughtexception
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : r10 = interfaceinvoke r2.<org.apache.ambari.server.state.ServiceComponent: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getDesiredRepositoryVersion()>() >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : goto [?= (branch)]
org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.state.stack.upgrade.RepositoryVersionHelper.getRepositoryVersionEntity : if null != r10
