org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $z0 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceInfo: boolean hasConfigDependency(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z0 != 0
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : return 0
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z0 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: void buildConfigLayout()>()
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : specialinvoke r0.<org.apache.ambari.server.state.ServiceInfo: void buildConfigLayout()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $r6 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configLayout>
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $r6 = r0.<org.apache.ambari.server.state.ServiceInfo: java.util.Map configLayout> >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : r3 = (java.util.Set) $r7
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : r3 = (java.util.Set) $r7 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : r4 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z1 == 0
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z1 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : return 0
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : r5 = (java.lang.String) $r8
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : r5 = (java.lang.String) $r8 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if r3 == null
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if r3 == null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $z2 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r5)
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if r3 == null >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : $z2 = interfaceinvoke r3.<java.util.Set: boolean contains(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z2 == 0
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : return 1
org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : if $z2 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceInfo.hasDependencyAndPropertyFor : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
