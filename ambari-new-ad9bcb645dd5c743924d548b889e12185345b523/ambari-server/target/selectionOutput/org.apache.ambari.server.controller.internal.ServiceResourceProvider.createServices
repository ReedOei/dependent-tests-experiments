org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z3 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z3 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r37 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r2 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r2 = interfaceinvoke $r11.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.state.Clusters getClusters()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void validateCreateRequests(java.util.Set,org.apache.ambari.server.state.Clusters)>(r1, r2)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: void validateCreateRequests(java.util.Set,org.apache.ambari.server.state.Clusters)>(r1, r2) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z4 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : return
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r4 = (org.apache.ambari.server.controller.ServiceRequest) $r12
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r4 = (org.apache.ambari.server.controller.ServiceRequest) $r12 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r13 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r13 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r5 = interfaceinvoke r2.<org.apache.ambari.server.state.Clusters: org.apache.ambari.server.state.Cluster getCluster(java.lang.String)>($r13) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r6 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getResolvedRepository()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r6 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: org.apache.ambari.server.orm.entities.RepositoryVersionEntity getResolvedRepository()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if null != r6
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if null != r6 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r36 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if null != r6 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r14 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r14 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r15 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r15 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $r14 == $r15
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $r14 == $r15 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.State getProvisioningState()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $r14 == $r15 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r16 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r16 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service addService(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r16, r6)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r7 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.Service addService(java.lang.String,org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>($r16, r6) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r8 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r8 = virtualinvoke r6.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r17 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r9 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r9 = interfaceinvoke $r17.<org.apache.ambari.server.controller.AmbariManagementController: org.apache.ambari.server.api.services.AmbariMetaInfo getAmbariMetaInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r18 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r19 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r19 = virtualinvoke r8.<org.apache.ambari.server.state.StackId: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r20 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r10 = virtualinvoke r9.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r18, $r19, $r20)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : r10 = virtualinvoke r9.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.ServiceInfo getService(java.lang.String,java.lang.String,java.lang.String)>($r18, $r19, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z0 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z0 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreSupported()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z1 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreRequired()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z1 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreRequired()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r22 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r22 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r23 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r23 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21[0] = $r23
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21[0] = $r23 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21[1] = $r24
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21[1] = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21[2] = $r25
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r21[2] = $r25 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Service: {}, credential_store_supported = {} and credential_store_required = {} from stack definition", $r21)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Service: {}, credential_store_supported = {} and credential_store_required = {} from stack definition", $r21) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r26 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r26 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r26)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z5 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isNotEmpty(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z5 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r27 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z0 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z1 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z9 = 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z9 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z9)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z9) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r43 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r43 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r45 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r45 = interfaceinvoke r7.<org.apache.ambari.server.state.Service: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44[0] = $r45
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44[0] = $r45 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z11 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z11 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44[1] = $r46
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44[1] = $r46 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r47 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z9) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44[2] = $r47
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r44[2] = $r47 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Service: {}, credential_store_enabled = {} from stack definition and resulting credential store enabled status is = {}", $r44)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r43.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Service: {}, credential_store_enabled = {} from stack definition and resulting credential store enabled status is = {}", $r44) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r48 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r48 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r48.<org.apache.ambari.server.controller.AmbariManagementController: void initializeWidgetsAndLayouts(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service)>(r5, r7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r48.<org.apache.ambari.server.controller.AmbariManagementController: void initializeWidgetsAndLayouts(org.apache.ambari.server.state.Cluster,org.apache.ambari.server.state.Service)>(r5, r7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z6 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z9 = 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z9 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z9)]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z9)] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z9)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z6 = virtualinvoke r10.<org.apache.ambari.server.state.ServiceInfo: boolean isCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z6 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z9 = 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z9 = 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r27 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getCredentialStoreEnabled()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z7 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r27)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : z7 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z0 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z1 != 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z8 = 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z8 = 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z8)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z8) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r38 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r38 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r40 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r40 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39[0] = $r40
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39[0] = $r40 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z7)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z7) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39[1] = $r41
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39[1] = $r41 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39[2] = $r42
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r39[2] = $r42 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r38.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Service: {}, credential_store_enabled = {} from request and resulting credential store enabled status is = {}", $r39)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r38.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("Service: {}, credential_store_enabled = {} from request and resulting credential store enabled status is = {}", $r39) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $r48 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= $r48 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r48 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.apache.ambari.server.controller.AmbariManagementController getManagementController()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z7 == 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z1 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z8 = 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z8 = 1 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z8)]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : goto [?= interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z8)] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke r7.<org.apache.ambari.server.state.Service: void setCredentialStoreEnabled(boolean)>($z8)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z8 = 1
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if z7 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $z8 = 0
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r28 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: org.apache.ambari.server.state.State getProvisioningState()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r29 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r29 = <org.apache.ambari.server.state.State: org.apache.ambari.server.state.State INIT> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $r28 != $r29
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $r28 != $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r30 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : if $r28 != $r29 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r16 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r30 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31 = newarray (java.lang.Object)[4]
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31 = newarray (java.lang.Object)[4] >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r32 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r32 = virtualinvoke r4.<org.apache.ambari.server.controller.ServiceRequest: java.lang.String getServiceName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[0] = $r32
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[0] = $r32 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r33 = interfaceinvoke r5.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[1] = $r33
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[1] = $r33 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r34 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r34 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[2] = $r34
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[2] = $r34 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[3] = r6
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r31[3] = r6 >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to add %s to %s because the cluster is still being provisioned and the repository for the service is not %s: %s", $r31)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to add %s to %s because the cluster is still being provisioned and the repository for the service is not %s: %s", $r31) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke $r30.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r35)
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke $r30.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : throw $r30
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r36 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke $r36.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Could not find any repository on the request.")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : specialinvoke $r36.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>("Could not find any repository on the request.") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : throw $r36
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : $r37 = <org.apache.ambari.server.controller.internal.ServiceResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set")
org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : interfaceinvoke $r37.<org.slf4j.Logger: void warn(java.lang.String)>("Received an empty requests set") >>>>>>>> org.apache.ambari.server.controller.internal.ServiceResourceProvider.createServices : return
