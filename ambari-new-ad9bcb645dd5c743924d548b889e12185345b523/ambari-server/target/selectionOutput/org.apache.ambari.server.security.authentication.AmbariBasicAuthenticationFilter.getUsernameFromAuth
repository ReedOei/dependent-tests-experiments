org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(6) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r3 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r3 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r4 = staticinvoke <org.springframework.security.crypto.codec.Base64: byte[] decode(byte[])>(r3)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r3 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r9 := @caughtexception
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r10 = new org.springframework.security.authentication.BadCredentialsException >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : specialinvoke $r10.<org.springframework.security.authentication.BadCredentialsException: void <init>(java.lang.String)>("Failed to decode basic authentication token")
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : specialinvoke $r10.<org.springframework.security.authentication.BadCredentialsException: void <init>(java.lang.String)>("Failed to decode basic authentication token") >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : throw $r10
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r4 = staticinvoke <org.springframework.security.crypto.codec.Base64: byte[] decode(byte[])>(r3) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : goto [?= $r6 = new java.lang.String]
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : r4 = staticinvoke <org.springframework.security.crypto.codec.Base64: byte[] decode(byte[])>(r3) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r9 := @caughtexception
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : goto [?= $r6 = new java.lang.String] >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r6 = new java.lang.String
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r6 = new java.lang.String >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>(r4, r2)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : specialinvoke $r6.<java.lang.String: void <init>(byte[],java.lang.String)>(r4, r2) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(":")
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : i0 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(":") >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : if i0 != -1
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : if i0 != -1 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r8 = new org.springframework.security.authentication.BadCredentialsException
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : if i0 != -1 >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : return $r7
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : $r8 = new org.springframework.security.authentication.BadCredentialsException >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : specialinvoke $r8.<org.springframework.security.authentication.BadCredentialsException: void <init>(java.lang.String)>("Invalid basic authentication token")
org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : specialinvoke $r8.<org.springframework.security.authentication.BadCredentialsException: void <init>(java.lang.String)>("Invalid basic authentication token") >>>>>>>> org.apache.ambari.server.security.authentication.AmbariBasicAuthenticationFilter.getUsernameFromAuth : throw $r8
