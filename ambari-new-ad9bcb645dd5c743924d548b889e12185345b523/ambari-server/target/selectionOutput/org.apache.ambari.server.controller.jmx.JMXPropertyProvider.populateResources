org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResources : $r4 = r0.<org.apache.ambari.server.controller.jmx.JMXPropertyProvider: java.util.Map clusterComponentPortsMap> >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResources : interfaceinvoke $r4.<java.util.Map: void clear()>()
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResources : interfaceinvoke $r4.<java.util.Map: void clear()>() >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResources : $r5 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3)
org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResources : $r5 = specialinvoke r0.<org.apache.ambari.server.controller.metrics.ThreadPoolEnabledPropertyProvider: java.util.Set populateResources(java.util.Set,org.apache.ambari.server.controller.spi.Request,org.apache.ambari.server.controller.spi.Predicate)>(r1, r2, r3) >>>>>>>> org.apache.ambari.server.controller.jmx.JMXPropertyProvider.populateResources : return $r5
