org.apache.ambari.server.topology.TopologyManager.processAndPersistTopologyRequest : $r6 = r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.PersistedState persistedState> >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAndPersistTopologyRequest : r4 = interfaceinvoke $r6.<org.apache.ambari.server.topology.PersistedState: org.apache.ambari.server.topology.PersistedTopologyRequest persistTopologyRequest(org.apache.ambari.server.controller.internal.BaseClusterRequest)>(r1)
org.apache.ambari.server.topology.TopologyManager.processAndPersistTopologyRequest : r4 = interfaceinvoke $r6.<org.apache.ambari.server.topology.PersistedState: org.apache.ambari.server.topology.PersistedTopologyRequest persistTopologyRequest(org.apache.ambari.server.controller.internal.BaseClusterRequest)>(r1) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAndPersistTopologyRequest : r5 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.LogicalRequest createLogicalRequest(org.apache.ambari.server.topology.PersistedTopologyRequest,org.apache.ambari.server.topology.ClusterTopology,java.lang.Long)>(r4, r2, r3)
org.apache.ambari.server.topology.TopologyManager.processAndPersistTopologyRequest : r5 = virtualinvoke r0.<org.apache.ambari.server.topology.TopologyManager: org.apache.ambari.server.topology.LogicalRequest createLogicalRequest(org.apache.ambari.server.topology.PersistedTopologyRequest,org.apache.ambari.server.topology.ClusterTopology,java.lang.Long)>(r4, r2, r3) >>>>>>>> org.apache.ambari.server.topology.TopologyManager.processAndPersistTopologyRequest : return r5
