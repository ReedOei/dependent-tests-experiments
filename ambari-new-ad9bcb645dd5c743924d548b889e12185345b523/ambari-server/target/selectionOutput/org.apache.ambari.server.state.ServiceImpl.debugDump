org.apache.ambari.server.state.ServiceImpl.debugDump : $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service={ serviceName=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: java.lang.String getName()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r5 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterName=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r8 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ServiceImpl.debugDump : $r8 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r9 = interfaceinvoke $r8.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r9 = interfaceinvoke $r8.<org.apache.ambari.server.state.Cluster: java.lang.String getClusterName()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", clusterId=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r12 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster>
org.apache.ambari.server.state.ServiceImpl.debugDump : $r12 = r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.Cluster cluster> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $l0 = interfaceinvoke $r12.<org.apache.ambari.server.state.Cluster: long getClusterId()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $l0 = interfaceinvoke $r12.<org.apache.ambari.server.state.Cluster: long getClusterId()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredStackVersion=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredStackVersion=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.StackId getDesiredStackId()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r15 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.StackId getDesiredStackId()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredState=")
org.apache.ambari.server.state.ServiceImpl.debugDump : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", desiredState=") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.State getDesiredState()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r18 = virtualinvoke r0.<org.apache.ambari.server.state.ServiceImpl: org.apache.ambari.server.state.State getDesiredState()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18)
org.apache.ambari.server.state.ServiceImpl.debugDump : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", components=[ ")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", components=[ ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : z1 = 1
org.apache.ambari.server.state.ServiceImpl.debugDump : z1 = 1 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r21 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components>
org.apache.ambari.server.state.ServiceImpl.debugDump : $r21 = r0.<org.apache.ambari.server.state.ServiceImpl: java.util.concurrent.ConcurrentMap components> >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r22 = interfaceinvoke $r21.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $r22 = interfaceinvoke $r21.<java.util.concurrent.ConcurrentMap: java.util.Collection values()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : r2 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : r2 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : if $z0 == 0
org.apache.ambari.server.state.ServiceImpl.debugDump : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $r24 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] }")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ] }") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : return
org.apache.ambari.server.state.ServiceImpl.debugDump : $r24 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : r3 = (org.apache.ambari.server.state.ServiceComponent) $r24
org.apache.ambari.server.state.ServiceImpl.debugDump : r3 = (org.apache.ambari.server.state.ServiceComponent) $r24 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : if z1 != 0
org.apache.ambari.server.state.ServiceImpl.debugDump : if z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ")
org.apache.ambari.server.state.ServiceImpl.debugDump : if z1 != 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : z1 = 0
org.apache.ambari.server.state.ServiceImpl.debugDump : z1 = 0 >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n      ")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n      ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: void debugDump(java.lang.StringBuilder)>(r1)
org.apache.ambari.server.state.ServiceImpl.debugDump : interfaceinvoke r3.<org.apache.ambari.server.state.ServiceComponent: void debugDump(java.lang.StringBuilder)>(r1) >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ")
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.state.ServiceImpl.debugDump : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.state.ServiceImpl.debugDump : virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , ") >>>>>>>> org.apache.ambari.server.state.ServiceImpl.debugDump : z1 = 0
