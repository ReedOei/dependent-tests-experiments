org.apache.ambari.server.security.SecurityFilter.doFilter : r4 = (javax.servlet.http.HttpServletRequest) r1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : $r6 = interfaceinvoke r4.<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : r5 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r7 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.SecurityFilter.doFilter : $r7 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Filtering {} for security purposes", r5)
org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Filtering {} for security purposes", r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $i0 = interfaceinvoke r1.<javax.servlet.ServletRequest: int getLocalPort()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : $i0 = interfaceinvoke r1.<javax.servlet.ServletRequest: int getLocalPort()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r8 = <org.apache.ambari.server.security.SecurityFilter: org.apache.ambari.server.configuration.Configuration config>
org.apache.ambari.server.security.SecurityFilter.doFilter : $r8 = <org.apache.ambari.server.security.SecurityFilter: org.apache.ambari.server.configuration.Configuration config> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $i1 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: int getTwoWayAuthPort()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : $i1 = virtualinvoke $r8.<org.apache.ambari.server.configuration.Configuration: int getTwoWayAuthPort()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : if $i0 == $i1
org.apache.ambari.server.security.SecurityFilter.doFilter : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $z0 = specialinvoke r0.<org.apache.ambari.server.security.SecurityFilter: boolean isRequestAllowed(java.lang.String)>(r5)
org.apache.ambari.server.security.SecurityFilter.doFilter : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r9 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.SecurityFilter.doFilter : $r9 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $i2 = interfaceinvoke r1.<javax.servlet.ServletRequest: int getLocalPort()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : $i2 = interfaceinvoke r1.<javax.servlet.ServletRequest: int getLocalPort()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)
org.apache.ambari.server.security.SecurityFilter.doFilter : $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Request can continue on secure port {}", $r10)
org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Request can continue on secure port {}", $r10) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : return
org.apache.ambari.server.security.SecurityFilter.doFilter : $z0 = specialinvoke r0.<org.apache.ambari.server.security.SecurityFilter: boolean isRequestAllowed(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : if $z0 == 0
org.apache.ambari.server.security.SecurityFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2)
org.apache.ambari.server.security.SecurityFilter.doFilter : if $z0 == 0 >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r12 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG>
org.apache.ambari.server.security.SecurityFilter.doFilter : $r12 = <org.apache.ambari.server.security.SecurityFilter: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r11 = new java.lang.StringBuilder
org.apache.ambari.server.security.SecurityFilter.doFilter : $r11 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This request is not allowed on this port: ")
org.apache.ambari.server.security.SecurityFilter.doFilter : $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This request is not allowed on this port: ") >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)
org.apache.ambari.server.security.SecurityFilter.doFilter : $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.security.SecurityFilter.doFilter : $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r15)
org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : goto [?= return]
org.apache.ambari.server.security.SecurityFilter.doFilter : goto [?= return] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : return
org.apache.ambari.server.security.SecurityFilter.doFilter : interfaceinvoke r3.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r1, r2) >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : goto [?= return]
org.apache.ambari.server.security.SecurityFilter.doFilter : goto [?= return] >>>>>>>> org.apache.ambari.server.security.SecurityFilter.doFilter : return
