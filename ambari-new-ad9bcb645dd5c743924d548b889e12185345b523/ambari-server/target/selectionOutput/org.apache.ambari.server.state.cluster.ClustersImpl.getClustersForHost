org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r3 = r0.<org.apache.ambari.server.state.cluster.ClustersImpl: java.util.concurrent.ConcurrentHashMap hostClusterMap> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : r2 = (java.util.Set) $r4
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : r2 = (java.util.Set) $r4 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : if r2 != null
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r9 = new org.apache.ambari.server.HostNotFoundException
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : if r2 != null >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r5 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r5 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $z0 = interfaceinvoke $r5.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : if $z0 == 0
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r7 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG>
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : if $z0 == 0 >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2)
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : return $r6
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r7 = <org.apache.ambari.server.state.cluster.ClustersImpl: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $i0 = interfaceinvoke r2.<java.util.Set: int size()>()
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $i0 = interfaceinvoke r2.<java.util.Set: int size()>() >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Looking up clusters for hostname, hostname={}, mappedClusters={}", r1, $r8)
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Looking up clusters for hostname, hostname={}, mappedClusters={}", r1, $r8) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r2)
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : $r9 = new org.apache.ambari.server.HostNotFoundException >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : specialinvoke $r9.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r1)
org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : specialinvoke $r9.<org.apache.ambari.server.HostNotFoundException: void <init>(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.state.cluster.ClustersImpl.getClustersForHost : throw $r9
