org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r7 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("blueprint") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r2 == null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("null")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r2 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r8 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r8 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r8.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Blueprint name must be specified for all host groups")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r8.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Blueprint name must be specified for all host groups") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r8
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("null") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z2 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r8 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_group")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r9 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_group") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r3 == null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("null")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r3 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r10 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r10 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r10.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("A name must be specified for all host groups")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r10.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("A name must be specified for all host groups") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r10
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("null") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z3 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r10 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r59 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r59 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r11 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint getBlueprint()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r11 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r11 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r59 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint parseBlueprint(java.lang.String)>(r2)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r11 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r12 = interfaceinvoke r59.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r12 = interfaceinvoke r59.<org.apache.ambari.server.topology.Blueprint: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r12)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z4 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r54 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z4 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r4 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r4 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("host_count")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z0 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("host_count") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("host_predicate")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>("host_predicate") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 == null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 == null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r60 = (org.apache.ambari.server.topology.HostGroupInfo) $r14
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r60 = (org.apache.ambari.server.topology.HostGroupInfo) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r60 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r60 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r35 = interfaceinvoke r59.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r60 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r15 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r15 = new org.apache.ambari.server.topology.Configuration >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r16 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r16 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r17 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r17 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r15.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r16, $r17)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r15.<org.apache.ambari.server.topology.Configuration: void <init>(java.util.Map,java.util.Map)>($r16, $r17) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r15)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setConfiguration(org.apache.ambari.server.topology.Configuration)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i0 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i0 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: int getRequestedHostCount()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r18 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r18 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i1 = interfaceinvoke $r18.<java.util.Collection: int size()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i1 = interfaceinvoke $r18.<java.util.Collection: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $i0 == $i1
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r20 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $i0 == $i1 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r4)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void addHost(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r19 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String processRackInfo(java.util.Map)>(r1)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r19 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.lang.String processRackInfo(java.util.Map)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void addHostRackInfo(java.lang.String,java.lang.String)>(r4, $r19)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void addHostRackInfo(java.lang.String,java.lang.String)>(r4, $r19) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : return
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r20 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r21 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r21 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r20.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r24)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r20.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r24) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r20
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r34 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_predicate")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r25 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r25 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z5 = interfaceinvoke $r25.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $z5 = interfaceinvoke $r25.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z5 != 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r29 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $z5 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r26 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_count")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r26 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_count") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r27 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r27)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r27) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i2 = virtualinvoke $r28.<java.lang.Integer: int intValue()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $i2 = virtualinvoke $r28.<java.lang.Integer: int intValue()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setRequestedCount(int)>($i2)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setRequestedCount(int)>($i2) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= return]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= return] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : return
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r29 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r30 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r30 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r30.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify both host_name and host_count for the same hostgroup: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify both host_name and host_count for the same hostgroup: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r29.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r33)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r29.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r29
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r34 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("host_predicate") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r34)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r34) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void validateHostPredicateProperties(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void validateHostPredicateProperties(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setPredicate(java.lang.String)>(r5)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void validateHostPredicateProperties(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r55 := @caughtexception
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r56 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57[0] = r5
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57[0] = r5 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57[1] = $r55
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r57[1] = $r55 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to compile host predicate \'%s\': %s", $r57)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unable to compile host predicate \'%s\': %s", $r57) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r56.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String,java.lang.Throwable)>($r58, $r55)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r56.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String,java.lang.Throwable)>($r58, $r55) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r56
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setPredicate(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= $r25 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: void setPredicate(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r55 := @caughtexception
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= $r25 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r25 = virtualinvoke r60.<org.apache.ambari.server.topology.HostGroupInfo: java.util.Collection getHostNames()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r35 = interfaceinvoke r59.<org.apache.ambari.server.topology.Blueprint: org.apache.ambari.server.topology.HostGroup getHostGroup(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r35 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r35 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r39 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if $r35 != null >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r36 = new org.apache.ambari.server.topology.HostGroupInfo
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r36 = new org.apache.ambari.server.topology.HostGroupInfo >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r36.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r36.<org.apache.ambari.server.topology.HostGroupInfo: void <init>(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r60 = $r36
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r60 = $r36 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r37 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r36)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r36) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r15 = new org.apache.ambari.server.topology.Configuration
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r39 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r40 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r40 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r40.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid host group specified in request: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r39.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r43)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r39.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r39
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r44 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r13 = virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: java.util.Map getHostGroupInfo()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r44 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r45 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r45 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r45.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must specify either host_name or host_count for hostgroup: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Must specify either host_name or host_count for hostgroup: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r44.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r48)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r44.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r48) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r44
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z0 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r49 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r49 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r50 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r50 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r50.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify host_count or host_predicate if host_name is specified in hostgroup: ")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t specify host_count or host_predicate if host_name is specified in hostgroup: ") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r49.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r53)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r49.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>($r53) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r49
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r49 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : if r4 != null
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : $r54 = new org.apache.ambari.server.topology.InvalidTopologyTemplateException >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r54.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Currently, a scaling request may only refer to a single blueprint")
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : specialinvoke $r54.<org.apache.ambari.server.topology.InvalidTopologyTemplateException: void <init>(java.lang.String)>("Currently, a scaling request may only refer to a single blueprint") >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : throw $r54
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r59 = specialinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: org.apache.ambari.server.topology.Blueprint parseBlueprint(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void setBlueprint(org.apache.ambari.server.topology.Blueprint)>(r59)
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : virtualinvoke r0.<org.apache.ambari.server.controller.internal.ScaleClusterRequest: void setBlueprint(org.apache.ambari.server.topology.Blueprint)>(r59) >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= r4 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)]
org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : goto [?= r4 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)] >>>>>>>> org.apache.ambari.server.controller.internal.ScaleClusterRequest.parseHostGroups : r4 = staticinvoke <org.apache.ambari.server.controller.internal.HostResourceProvider: java.lang.String getHostNameFromProperties(java.util.Map)>(r1)
