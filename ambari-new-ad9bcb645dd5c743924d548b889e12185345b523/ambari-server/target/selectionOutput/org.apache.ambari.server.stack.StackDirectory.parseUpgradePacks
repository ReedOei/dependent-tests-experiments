org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r7 = new java.util.HashMap >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r7.<java.util.HashMap: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r7.<java.util.HashMap: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r36 = null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r36 = null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("upgrades")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z0 = interfaceinvoke r1.<java.util.Collection: boolean contains(java.lang.Object)>("upgrades") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z0 == 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r14 = new java.io.File
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z0 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r38 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r38 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $r38 != null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $r38 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r12 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $r38 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z1 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z1 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z1 != 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.util.Map upgradePacks> = $r7
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z1 != 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 == null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 == null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack configUpgradePack> = r36
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 == null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r8 = new org.apache.ambari.server.state.stack.ConfigUpgradePack
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r8 = new org.apache.ambari.server.state.stack.ConfigUpgradePack >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r8.<org.apache.ambari.server.state.stack.ConfigUpgradePack: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r8.<org.apache.ambari.server.state.stack.ConfigUpgradePack: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r9 = new java.util.ArrayList
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r9 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r8.<org.apache.ambari.server.state.stack.ConfigUpgradePack: java.util.List services> = $r9
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r8.<org.apache.ambari.server.state.stack.ConfigUpgradePack: java.util.List services> = $r9 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack configUpgradePack> = $r8
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack configUpgradePack> = $r8 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r10 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r10 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r11 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r11 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain config upgrade pack file", $r11)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain config upgrade pack file", $r11) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : return
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack configUpgradePack> = r36 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= return]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= return] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : return
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.util.Map upgradePacks> = $r7 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 == null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r12 = <org.apache.ambari.server.stack.StackDirectory: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r13 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r13 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getPath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain an upgrade directory ", $r13)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("Stack \'{}\' doesn\'t contain an upgrade directory ", $r13) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z1 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r14 = new java.io.File >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r15 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r15 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r15.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r16 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r16 = virtualinvoke r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r18 = <java.io.File: java.lang.String separator>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r18 = <java.io.File: java.lang.String separator> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("upgrades")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("upgrades") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r21)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r21) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z2 = virtualinvoke $r14.<java.io.File: boolean isDirectory()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z2 = virtualinvoke $r14.<java.io.File: boolean isDirectory()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z2 == 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r22 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z2 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r38 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r22 = virtualinvoke $r14.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir> = $r22
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir> = $r22 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r23 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter XML_FILENAME_FILTER>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r23 = <org.apache.ambari.server.stack.StackDirectory: java.io.FilenameFilter XML_FILENAME_FILTER> >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r3 = virtualinvoke $r14.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r23)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r3 = virtualinvoke $r14.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r23) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i0 = lengthof r3
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i0 = lengthof r3 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r4 = r3[i1]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r38 = r0.<org.apache.ambari.server.stack.StackDirectory: java.lang.String upgradesDir>
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r4 = r3[i1] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r24 = virtualinvoke r4.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r24 = virtualinvoke r4.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String toLowerCase()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r25 = virtualinvoke $r24.<java.lang.String: java.lang.String toLowerCase()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z3 = virtualinvoke $r25.<java.lang.String: boolean startsWith(java.lang.String)>("config-upgrade.xml")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $z3 = virtualinvoke $r25.<java.lang.String: boolean startsWith(java.lang.String)>("config-upgrade.xml") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z3 == 0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 != null
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if $z3 == 0 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r26 = virtualinvoke r4.<java.io.File: java.lang.String getName()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r26 = virtualinvoke r4.<java.io.File: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r26)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r5 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r6 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.UpgradePack parseUpgradePack(java.lang.String,java.io.File)>(r5, r4)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r6 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.UpgradePack parseUpgradePack(java.lang.String,java.io.File)>(r5, r4) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : virtualinvoke r6.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r5)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : virtualinvoke r6.<org.apache.ambari.server.state.stack.UpgradePack: void setName(java.lang.String)>(r5) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = i1 + 1
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = i1 + 1 >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= (branch)]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if i1 >= i0
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r36 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack parseConfigUpgradePack(java.io.File)>(r4)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : if r36 != null >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r28 = new org.apache.ambari.server.AmbariException
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r28 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are multiple files with name like %s")
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There are multiple files with name like %s") >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r31 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r31 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r34 = newarray (java.lang.Object)[0]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r34 = newarray (java.lang.Object)[0] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r33, $r34)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : $r35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r33, $r34) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r28.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r35)
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : specialinvoke $r28.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : throw $r28
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : r36 = specialinvoke r0.<org.apache.ambari.server.stack.StackDirectory: org.apache.ambari.server.state.stack.ConfigUpgradePack parseConfigUpgradePack(java.io.File)>(r4) >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= i1 = i1 + 1]
org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : goto [?= i1 = i1 + 1] >>>>>>>> org.apache.ambari.server.stack.StackDirectory.parseUpgradePacks : i1 = i1 + 1
