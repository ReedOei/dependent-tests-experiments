org.apache.ambari.server.bootstrap.BSRunner.createHostString : $r5 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : if r1 != null
org.apache.ambari.server.bootstrap.BSRunner.createHostString : if r1 != null >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : return ""
org.apache.ambari.server.bootstrap.BSRunner.createHostString : if r1 != null >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : i3 = 0
org.apache.ambari.server.bootstrap.BSRunner.createHostString : i3 = 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : if $z0 == 0
org.apache.ambari.server.bootstrap.BSRunner.createHostString : if $z0 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : if $z0 == 0 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : return $r6
org.apache.ambari.server.bootstrap.BSRunner.createHostString : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : r4 = (java.lang.String) $r7
org.apache.ambari.server.bootstrap.BSRunner.createHostString : r4 = (java.lang.String) $r7 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)
org.apache.ambari.server.bootstrap.BSRunner.createHostString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4) >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $i0 = i3
org.apache.ambari.server.bootstrap.BSRunner.createHostString : $i0 = i3 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : i3 = i3 + 1
org.apache.ambari.server.bootstrap.BSRunner.createHostString : i3 = i3 + 1 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $i1 = interfaceinvoke r1.<java.util.List: int size()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : $i1 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $i2 = $i1 - 1
org.apache.ambari.server.bootstrap.BSRunner.createHostString : $i2 = $i1 - 1 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : if $i0 == $i2
org.apache.ambari.server.bootstrap.BSRunner.createHostString : if $i0 == $i2 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
org.apache.ambari.server.bootstrap.BSRunner.createHostString : if $i0 == $i2 >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.bootstrap.BSRunner.createHostString : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.bootstrap.BSRunner.createHostString : virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",") >>>>>>>> org.apache.ambari.server.bootstrap.BSRunner.createHostString : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
