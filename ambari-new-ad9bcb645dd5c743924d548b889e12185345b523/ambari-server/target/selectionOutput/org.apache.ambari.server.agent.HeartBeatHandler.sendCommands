org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r9 = r0.<org.apache.ambari.server.agent.HeartBeatHandler: org.apache.ambari.server.agent.ActionQueue actionQueue> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r3 = virtualinvoke $r9.<org.apache.ambari.server.agent.ActionQueue: java.util.List dequeueAll(java.lang.String)>(r1)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r3 = virtualinvoke $r9.<org.apache.ambari.server.agent.ActionQueue: java.util.List dequeueAll(java.lang.String)>(r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if r3 == null
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if r3 == null >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if r3 == null >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : return
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z0 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z0 != 0
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z0 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z0 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : return
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z1 == 0
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z1 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z1 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : return
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r5 = (org.apache.ambari.server.agent.AgentCommand) $r10
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r5 = (org.apache.ambari.server.agent.AgentCommand) $r10 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r11 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r11 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z2 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r11 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r40 := @caughtexception
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r41 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : specialinvoke $r41.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get jaxb string for command", $r40)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : specialinvoke $r41.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get jaxb string for command", $r40) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : throw $r41
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z2 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z2 == 0
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z2 = interfaceinvoke $r11.<org.slf4j.Logger: boolean isDebugEnabled()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r40 := @caughtexception
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z2 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r36 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z2 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $r12 = <org.apache.ambari.server.agent.HeartBeatHandler$1: int[] $SwitchMap$org$apache$ambari$server$agent$AgentCommand$AgentCommandType>]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $r12 = <org.apache.ambari.server.agent.HeartBeatHandler$1: int[] $SwitchMap$org$apache$ambari$server$agent$AgentCommand$AgentCommandType>] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r12 = <org.apache.ambari.server.agent.HeartBeatHandler$1: int[] $SwitchMap$org$apache$ambari$server$agent$AgentCommand$AgentCommandType>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r12 = <org.apache.ambari.server.agent.HeartBeatHandler$1: int[] $SwitchMap$org$apache$ambari$server$agent$AgentCommand$AgentCommandType> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r13 = virtualinvoke r5.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType getCommandType()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r13 = virtualinvoke r5.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType getCommandType()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $i0 = virtualinvoke $r13.<org.apache.ambari.server.agent.AgentCommand$AgentCommandType: int ordinal()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $i0 = virtualinvoke $r13.<org.apache.ambari.server.agent.AgentCommand$AgentCommandType: int ordinal()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $i1 = $r12[$i0]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $i1 = $r12[$i0] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1:
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r43 = (org.apache.ambari.server.agent.ExecutionCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r28 = (org.apache.ambari.server.agent.StatusCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r27 = (org.apache.ambari.server.agent.CancelCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r26 = (org.apache.ambari.server.agent.AlertDefinitionCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r25 = (org.apache.ambari.server.agent.AlertExecutionCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : tableswitch($i1) {     case 1: >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r30 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r30 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r29 = new java.lang.StringBuilder
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r29 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no action for agent command =")
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("There is no action for agent command =") >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r32 = virtualinvoke r5.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType getCommandType()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r32 = virtualinvoke r5.<org.apache.ambari.server.agent.AgentCommand: org.apache.ambari.server.agent.AgentCommand$AgentCommandType getCommandType()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r33 = virtualinvoke $r32.<org.apache.ambari.server.agent.AgentCommand$AgentCommandType: java.lang.String name()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r33 = virtualinvoke $r32.<org.apache.ambari.server.agent.AgentCommand$AgentCommandType: java.lang.String name()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String)>($r35)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r30.<org.slf4j.Logger: void error(java.lang.String)>($r35) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r25 = (org.apache.ambari.server.agent.AlertExecutionCommand) r5 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addAlertExecutionCommand(org.apache.ambari.server.agent.AlertExecutionCommand)>($r25)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addAlertExecutionCommand(org.apache.ambari.server.agent.AlertExecutionCommand)>($r25) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r26 = (org.apache.ambari.server.agent.AlertDefinitionCommand) r5 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addAlertDefinitionCommand(org.apache.ambari.server.agent.AlertDefinitionCommand)>($r26)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addAlertDefinitionCommand(org.apache.ambari.server.agent.AlertDefinitionCommand)>($r26) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r27 = (org.apache.ambari.server.agent.CancelCommand) r5 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addCancelCommand(org.apache.ambari.server.agent.CancelCommand)>($r27)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addCancelCommand(org.apache.ambari.server.agent.CancelCommand)>($r27) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r28 = (org.apache.ambari.server.agent.StatusCommand) r5 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addStatusCommand(org.apache.ambari.server.agent.StatusCommand)>($r28)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addStatusCommand(org.apache.ambari.server.agent.StatusCommand)>($r28) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r43 = (org.apache.ambari.server.agent.ExecutionCommand) r5 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r15 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r15 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14 = newarray (java.lang.Object)[5]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14 = newarray (java.lang.Object)[5] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r16 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getHostname()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r16 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getHostname()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[0] = $r16
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[0] = $r16 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r17 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r17 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getRole()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[1] = $r17
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[1] = $r17 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r18 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r18 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: org.apache.ambari.server.RoleCommand getRoleCommand()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[2] = $r18
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[2] = $r18 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r19 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getCommandId()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r19 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.lang.String getCommandId()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[3] = $r19
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[3] = $r19 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $l2 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $l2 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: long getTaskId()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[4] = $r20
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r14[4] = $r20 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("HeartBeatHandler.sendCommands: sending ExecutionCommand for host {}, role {}, roleCommand {}, and command ID {}, task ID {}", $r14)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object[])>("HeartBeatHandler.sendCommands: sending ExecutionCommand for host {}, role {}, roleCommand {}, and command ID {}, task ID {}", $r14) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r6 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getHostLevelParams()>()
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r6 = virtualinvoke r43.<org.apache.ambari.server.agent.ExecutionCommand: java.util.Map getHostLevelParams()>() >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if r6 == null
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if r6 == null >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r21 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("custom_command")
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if r6 == null >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r47 = (org.apache.ambari.server.agent.ExecutionCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r47 = (org.apache.ambari.server.agent.ExecutionCommand) r5 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addExecutionCommand(org.apache.ambari.server.agent.ExecutionCommand)>($r47)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r2.<org.apache.ambari.server.agent.HeartBeatResponse: void addExecutionCommand(org.apache.ambari.server.agent.ExecutionCommand)>($r47) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r21 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>("custom_command") >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r7 = (java.lang.String) $r21
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : r7 = (java.lang.String) $r21 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r22 = "SET_KEYTAB"
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r22 = "SET_KEYTAB" >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z3 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z3 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z3 != 0
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z3 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r23 = "REMOVE_KEYTAB"
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z3 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r44 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r44 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r45 = newarray (java.lang.Object)[1]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r45 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r45[0] = r7
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r45[0] = r7 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s called", $r45)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r46 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s called", $r45) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r46)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r0.<org.apache.ambari.server.agent.HeartBeatHandler: void injectKeytab(org.apache.ambari.server.agent.ExecutionCommand,java.lang.String,java.lang.String)>(r43, r7, r1)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r44.<org.slf4j.Logger: void info(java.lang.String)>($r46) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r38 := @caughtexception
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r39 = new org.apache.ambari.server.AmbariException >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : specialinvoke $r39.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Could not inject keytab into command", $r38)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : specialinvoke $r39.<org.apache.ambari.server.AmbariException: void <init>(java.lang.String,java.lang.Throwable)>("Could not inject keytab into command", $r38) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : throw $r39
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r0.<org.apache.ambari.server.agent.HeartBeatHandler: void injectKeytab(org.apache.ambari.server.agent.ExecutionCommand,java.lang.String,java.lang.String)>(r43, r7, r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $r47 = (org.apache.ambari.server.agent.ExecutionCommand) r5]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : virtualinvoke r0.<org.apache.ambari.server.agent.HeartBeatHandler: void injectKeytab(org.apache.ambari.server.agent.ExecutionCommand,java.lang.String,java.lang.String)>(r43, r7, r1) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r38 := @caughtexception
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $r47 = (org.apache.ambari.server.agent.ExecutionCommand) r5] >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r47 = (org.apache.ambari.server.agent.ExecutionCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r23 = "REMOVE_KEYTAB" >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z4 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z4 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z4 != 0
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z4 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r24 = "CHECK_KEYTABS"
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z4 != 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r44 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r24 = "CHECK_KEYTABS" >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z5 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $z5 = virtualinvoke $r24.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z5 == 0
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z5 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r44 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG>
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : if $z5 == 0 >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r47 = (org.apache.ambari.server.agent.ExecutionCommand) r5
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r36 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r37 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String jaxbToString(java.lang.Object)>(r5)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r36 = <org.apache.ambari.server.agent.HeartBeatHandler: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r40 := @caughtexception
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r37 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String jaxbToString(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sending command string = {}", $r37)
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r37 = staticinvoke <org.apache.ambari.server.utils.StageUtils: java.lang.String jaxbToString(java.lang.Object)>(r5) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r40 := @caughtexception
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sending command string = {}", $r37) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : goto [?= $r12 = <org.apache.ambari.server.agent.HeartBeatHandler$1: int[] $SwitchMap$org$apache$ambari$server$agent$AgentCommand$AgentCommandType>]
org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : interfaceinvoke $r36.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("Sending command string = {}", $r37) >>>>>>>> org.apache.ambari.server.agent.HeartBeatHandler.sendCommands : $r40 := @caughtexception
