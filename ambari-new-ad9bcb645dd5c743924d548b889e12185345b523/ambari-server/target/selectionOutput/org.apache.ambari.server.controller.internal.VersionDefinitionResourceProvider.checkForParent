org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r2 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.orm.entities.RepositoryVersionEntity entity> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r7 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r8 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r8 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $r7 != $r8
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : return
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $r7 != $r8 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r9 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO s_repoVersionDAO>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r9 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO s_repoVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r11 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r11 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType STANDARD> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r3 = virtualinvoke $r9.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStackAndType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.RepositoryType)>($r10, $r11)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r3 = virtualinvoke $r9.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByStackAndType(org.apache.ambari.server.state.StackId,org.apache.ambari.server.state.RepositoryType)>($r10, $r11) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z1 = interfaceinvoke r3.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z1 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r53 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r12 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r13 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r14 = $r13.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r14 = $r13.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r15 = $r14.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r15 = $r14.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isBlank(java.lang.String)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r59 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r59 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z2 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r46 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z3 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z3 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z3 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r39 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z3 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i0 = interfaceinvoke $r12.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i0 = interfaceinvoke $r12.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i0 <= 1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r21 = new org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$2
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i0 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r16 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r16 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r65 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r16
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r65 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if null != r65
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if null != r65 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r17 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if null != r65 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setParent(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r65)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: void setParent(org.apache.ambari.server.orm.entities.RepositoryVersionEntity)>(r65) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : return
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r17 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r18 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r18 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r19 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r19 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r18[0] = $r19
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r18[0] = $r19 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find any parent repository for %s.", $r18)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not find any parent repository for %s.", $r18) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r17
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r21 = new org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$2 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r21.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$2: void <init>(org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider)>(r0)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r21.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$2: void <init>(org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider)>(r0) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r64 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection transform(java.util.Collection,com.google.common.base.Function)>($r12, $r21)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r64 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection transform(java.util.Collection,com.google.common.base.Function)>($r12, $r21) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r22 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO s_repoVersionDAO>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r22 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.apache.ambari.server.orm.dao.RepositoryVersionDAO s_repoVersionDAO> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r5 = virtualinvoke $r22.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByServiceDesiredVersion(java.util.List)>($r12)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r5 = virtualinvoke $r22.<org.apache.ambari.server.orm.dao.RepositoryVersionDAO: java.util.List findByServiceDesiredVersion(java.util.List)>($r12) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z4 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z4 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z4 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r34 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z4 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i1 = interfaceinvoke r5.<java.util.List: int size()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i1 = interfaceinvoke r5.<java.util.List: int size()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i1 <= 1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r6 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection transform(java.util.Collection,com.google.common.base.Function)>(r5, $r21)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i1 <= 1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r23 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r23 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r65 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r23
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r65 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r23 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r25 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.slf4j.Logger LOG>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r25 = <org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider: org.slf4j.Logger LOG> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24 = newarray (java.lang.Object)[3]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24 = newarray (java.lang.Object)[3] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r26 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r26 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24[0] = $r26
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24[0] = $r26 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r64, ", ")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r27 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r64, ", ") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24[1] = $r27
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24[1] = $r27 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r28 = virtualinvoke r65.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r28 = virtualinvoke r65.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24[2] = $r28
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r24[2] = $r28 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Patch {} was found to match more than one repository in {}. Repository {} is in use and will be the parent.", $r24)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object[])>("Patch {} was found to match more than one repository in {}. Repository {} is in use and will be the parent.", $r24) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= (branch)]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if null != r65
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r6 = staticinvoke <com.google.common.collect.Collections2: java.util.Collection transform(java.util.Collection,com.google.common.base.Function)>(r5, $r21) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r29 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r29 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r31 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r31 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30[0] = $r31
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30[0] = $r31 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r6, ", ")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r32 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r6, ", ") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30[1] = $r32
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r30[1] = $r32 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Patch %s was found to match more than one repository in use: %s. Move all services to a common version and try again.", $r30)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Patch %s was found to match more than one repository in use: %s. Move all services to a common version and try again.", $r30) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r33) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r29
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r34 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r36 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r36 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35[0] = $r36
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35[0] = $r36 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r37 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r64, ", ")
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r37 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>(r64, ", ") >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35[1] = $r37
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r35[1] = $r37 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not determine which version to associate patch %s. Remove one of %s and try again.", $r35)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r38 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not determine which version to associate patch %s. Remove one of %s and try again.", $r35) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r34
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r39 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40 = newarray (java.lang.Object)[1]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40 = newarray (java.lang.Object)[1] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r44 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r41 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r41 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r42 = $r41.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r42 = $r41.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r62 = $r42.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r62 = $r42.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40[0] = $r62
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40[0] = $r62 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No versions matched pattern %s", $r40)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No versions matched pattern %s", $r40) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r39.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r43) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r39
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r44 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r45 = $r44.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r45 = $r44.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r62 = $r45.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r62 = $r45.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $r40[0] = $r62]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $r40[0] = $r62] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r40[0] = $r62
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r46 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r60 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r46
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r60 = (org.apache.ambari.server.orm.entities.RepositoryVersionEntity) $r46 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r61 = virtualinvoke r60.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r61 = virtualinvoke r60.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i2 = virtualinvoke r61.<java.lang.String: int lastIndexOf(int)>(45)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i2 = virtualinvoke r61.<java.lang.String: int lastIndexOf(int)>(45) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i2 <= -1
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i2 <= -1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i3 = virtualinvoke r61.<java.lang.String: int lastIndexOf(int)>(45)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $i2 <= -1 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r50 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r47 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r47 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48 = $r47.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r48 = $r47.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r49 = $r48.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r49 = $r48.<org.apache.ambari.server.state.repository.Release: java.lang.String compatibleWith> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z5 = virtualinvoke r61.<java.lang.String: boolean matches(java.lang.String)>($r49)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z5 = virtualinvoke r61.<java.lang.String: boolean matches(java.lang.String)>($r49) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z5 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r60)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z5 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r60) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r50 = r1.<org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider$XmlHolder: org.apache.ambari.server.state.repository.VersionDefinitionXml xml> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r51 = $r50.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r51 = $r50.<org.apache.ambari.server.state.repository.VersionDefinitionXml: org.apache.ambari.server.state.repository.Release release> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r52 = $r51.<org.apache.ambari.server.state.repository.Release: java.lang.String version>
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r52 = $r51.<org.apache.ambari.server.state.repository.Release: java.lang.String version> >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z6 = virtualinvoke r61.<java.lang.String: boolean equals(java.lang.Object)>($r52)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $z6 = virtualinvoke r61.<java.lang.String: boolean equals(java.lang.Object)>($r52) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z6 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r60)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if $z6 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r60) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= (branch)]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= (branch)] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : goto [?= $z2 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $i3 = virtualinvoke r61.<java.lang.String: int lastIndexOf(int)>(45) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r61 = virtualinvoke r61.<java.lang.String: java.lang.String substring(int,int)>(0, $i3)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : r61 = virtualinvoke r61.<java.lang.String: java.lang.String substring(int,int)>(0, $i3) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : if z0 == 0
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r53 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r54 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r54 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r55 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r55 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r54[0] = $r55
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r54[0] = $r55 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r56 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r56 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.StackId getStackId()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r57 = virtualinvoke $r56.<org.apache.ambari.server.state.StackId: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r57 = virtualinvoke $r56.<org.apache.ambari.server.state.StackId: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r54[1] = $r57
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r54[1] = $r57 >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Patch %s was uploaded, but there are no repositories for %s", $r54)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : $r58 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Patch %s was uploaded, but there are no repositories for %s", $r54) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r58)
org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : specialinvoke $r53.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r58) >>>>>>>> org.apache.ambari.server.controller.internal.VersionDefinitionResourceProvider.checkForParent : throw $r53
