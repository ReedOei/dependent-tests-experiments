org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r19 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if z0 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r23 = r22
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r23 = r22 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r24 = $r23
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r24 = $r23 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z1 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("NAMENODE")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z1 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>("NAMENODE") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z1 == 0
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.internal.nameservices")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r5 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r5 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r7 = (java.util.Map) $r6
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r7 = (java.util.Map) $r6 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r9 = (java.lang.String[]) $r8
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r9 = (java.lang.String[]) $r8 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : return $r9
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $z2 = interfaceinvoke r4.<java.util.Map: boolean containsKey(java.lang.Object)>("dfs.internal.nameservices") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z2 == 0
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r10 = new java.lang.StringBuilder
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : if $z2 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r5 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r10 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HA")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HA") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r25 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r25 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r13 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties>
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r13 = <org.apache.ambari.server.controller.internal.AbstractProviderModule: java.util.Map serviceDesiredProperties> >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r15 = (java.util.Map) $r14
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r15 = (java.util.Map) $r14 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r25) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r17 = (java.lang.String[]) $r16
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r17 = (java.lang.String[]) $r16 >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r18 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.lang.String[] getNamenodeHaProperty(java.util.Map,java.lang.String[],java.lang.String,java.lang.String)>(r4, $r17, r2, r3)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r18 = specialinvoke r0.<org.apache.ambari.server.controller.internal.AbstractProviderModule: java.lang.String[] getNamenodeHaProperty(java.util.Map,java.lang.String[],java.lang.String,java.lang.String)>(r4, $r17, r2, r3) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : return $r18
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r19 = new java.lang.StringBuilder >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22)
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22) >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HTTPS")
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-HTTPS") >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : goto [?= r24 = $r23]
org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : goto [?= r24 = $r23] >>>>>>>> org.apache.ambari.server.controller.internal.AbstractProviderModule.getPortProperties : r24 = $r23
