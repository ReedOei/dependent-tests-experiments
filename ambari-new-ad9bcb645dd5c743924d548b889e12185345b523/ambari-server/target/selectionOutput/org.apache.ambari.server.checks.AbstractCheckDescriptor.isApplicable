org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r5 = newarray (org.apache.ambari.server.checks.AbstractCheckDescriptor$CheckQualification)[2] >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r6 = new org.apache.ambari.server.checks.AbstractCheckDescriptor$ServiceQualification
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r6 = new org.apache.ambari.server.checks.AbstractCheckDescriptor$ServiceQualification >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : specialinvoke $r6.<org.apache.ambari.server.checks.AbstractCheckDescriptor$ServiceQualification: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor)>(r0)
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : specialinvoke $r6.<org.apache.ambari.server.checks.AbstractCheckDescriptor$ServiceQualification: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor)>(r0) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r5[0] = $r6
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r5[0] = $r6 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r7 = new org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r7 = new org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : specialinvoke $r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,java.lang.Class)>(r0, $r8)
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : specialinvoke $r7.<org.apache.ambari.server.checks.AbstractCheckDescriptor$OrchestrationQualification: void <init>(org.apache.ambari.server.checks.AbstractCheckDescriptor,java.lang.Class)>(r0, $r8) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r5[1] = $r7
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r5[1] = $r7 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r5)
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>($r5) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r9 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.util.List getQualifications()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r9 = virtualinvoke r0.<org.apache.ambari.server.checks.AbstractCheckDescriptor: java.util.List getQualifications()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r9)
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r9) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : if $z1 == 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : if $z1 == 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : return 1
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : r4 = (org.apache.ambari.server.checks.AbstractCheckDescriptor$CheckQualification) $r10
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : r4 = (org.apache.ambari.server.checks.AbstractCheckDescriptor$CheckQualification) $r10 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $z2 = interfaceinvoke r4.<org.apache.ambari.server.checks.AbstractCheckDescriptor$CheckQualification: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1)
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $z2 = interfaceinvoke r4.<org.apache.ambari.server.checks.AbstractCheckDescriptor$CheckQualification: boolean isApplicable(org.apache.ambari.server.controller.PrereqCheckRequest)>(r1) >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : if $z2 != 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : return 0
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : if $z2 != 0 >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : goto [?= $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.checks.AbstractCheckDescriptor.isApplicable : $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
