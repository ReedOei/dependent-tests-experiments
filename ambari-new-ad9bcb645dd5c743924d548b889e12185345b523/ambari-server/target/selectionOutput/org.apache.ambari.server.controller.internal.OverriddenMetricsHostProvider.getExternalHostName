org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.getExternalHostName : $r3 = specialinvoke r0.<org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider: java.util.Optional getOverriddenHost(java.lang.String)>(r2) >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.getExternalHostName : $r4 = dynamicinvoke "apply" <java.util.function.Function (java.lang.String,org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider)>(r1, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Ljava/lang/Object;", handle: <org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider: java.lang.String lambda$getExternalHostName$0(java.lang.String,java.lang.String)>, class "(Ljava/lang/String;)Ljava/lang/String;")
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.getExternalHostName : $r4 = dynamicinvoke "apply" <java.util.function.Function (java.lang.String,org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider)>(r1, r0) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(class "(Ljava/lang/Object;)Ljava/lang/Object;", handle: <org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider: java.lang.String lambda$getExternalHostName$0(java.lang.String,java.lang.String)>, class "(Ljava/lang/String;)Ljava/lang/String;") >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.getExternalHostName : $r5 = virtualinvoke $r3.<java.util.Optional: java.util.Optional map(java.util.function.Function)>($r4)
org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.getExternalHostName : $r5 = virtualinvoke $r3.<java.util.Optional: java.util.Optional map(java.util.function.Function)>($r4) >>>>>>>> org.apache.ambari.server.controller.internal.OverriddenMetricsHostProvider.getExternalHostName : return $r5
