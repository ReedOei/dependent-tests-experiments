org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r10 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: org.apache.ambari.server.state.RepositoryType getType()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r11 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r11 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $r10 != $r11
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $r10 != $r11 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r12 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $r10 != $r11 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r12 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : specialinvoke $r12.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : specialinvoke $r12.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r13 = new java.util.ArrayList
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r13 = new java.util.ArrayList >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : specialinvoke $r13.<java.util.ArrayList: void <init>()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : specialinvoke $r13.<java.util.ArrayList: void <init>()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r14 = interfaceinvoke r1.<org.apache.ambari.server.state.Cluster: java.util.Map getServices()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set keySet()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : interfaceinvoke $r13.<java.util.Collection: boolean addAll(java.util.Collection)>($r15)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : interfaceinvoke $r13.<java.util.Collection: boolean addAll(java.util.Collection)>($r15) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r16 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.inject.Provider metaInfo>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r16 = <org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider: com.google.inject.Provider metaInfo> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r17 = interfaceinvoke $r16.<com.google.inject.Provider: java.lang.Object get()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r18 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r17
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r18 = (org.apache.ambari.server.api.services.AmbariMetaInfo) $r17 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r19 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r19 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r20 = virtualinvoke r2.<org.apache.ambari.server.orm.entities.RepositoryVersionEntity: java.lang.String getStackVersion()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r6 = virtualinvoke $r18.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r19, $r20)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r6 = virtualinvoke $r18.<org.apache.ambari.server.api.services.AmbariMetaInfo: org.apache.ambari.server.state.StackInfo getStack(java.lang.String,java.lang.String)>($r19, $r20) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r21 = virtualinvoke r3.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Collection getAvailableServices(org.apache.ambari.server.state.StackInfo)>(r6)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r21 = virtualinvoke r3.<org.apache.ambari.server.state.repository.VersionDefinitionXml: java.util.Collection getAvailableServices(org.apache.ambari.server.state.StackInfo)>(r6) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r7 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r7 = interfaceinvoke $r21.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z1 == 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z1 == 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z2 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z2 = interfaceinvoke $r12.<java.util.Collection: boolean isEmpty()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z2 != 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r22 = new java.lang.IllegalArgumentException
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z2 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : return
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r22 = new java.lang.IllegalArgumentException >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r23 = newarray (java.lang.Object)[2]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r23 = newarray (java.lang.Object)[2] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r24 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH>
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r24 = <org.apache.ambari.server.state.RepositoryType: org.apache.ambari.server.state.RepositoryType PATCH> >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r23[0] = $r24
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r23[0] = $r24 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r25 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, ",")
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r25 = staticinvoke <org.apache.commons.lang.StringUtils: java.lang.String join(java.util.Collection,java.lang.String)>($r12, ",") >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r23[1] = $r25
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r23[1] = $r25 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s VDF includes services that are not installed: %s", $r23)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s VDF includes services that are not installed: %s", $r23) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : throw $r22
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r8 = (org.apache.ambari.server.state.repository.AvailableService) $r27
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r8 = (org.apache.ambari.server.state.repository.AvailableService) $r27 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r9 = virtualinvoke r8.<org.apache.ambari.server.state.repository.AvailableService: java.lang.String getName()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : r9 = virtualinvoke r8.<org.apache.ambari.server.state.repository.AvailableService: java.lang.String getName()>() >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z3 = interfaceinvoke $r13.<java.util.Collection: boolean contains(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z3 = interfaceinvoke $r13.<java.util.Collection: boolean contains(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z3 != 0
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r9)
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : if $z3 != 0 >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : interfaceinvoke $r12.<java.util.Collection: boolean add(java.lang.Object)>(r9) >>>>>>>> org.apache.ambari.server.controller.internal.ClusterStackVersionResourceProvider.checkPatchVDFAvailableServices : goto [?= $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
