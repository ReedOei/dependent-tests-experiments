{
  "HBASE_REGIONSERVER": {
    "Component": [
      {
        "type": "jmx",
        "metrics": {
          "default": {
            "metrics/hbase/regionserver/slowPutCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowPutCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/percentFilesLocal": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.percentFilesLocal",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_min": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheFree": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheFreeSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/mutationsWithoutWALSize": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheMissCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheMissCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/flushQueueSize": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.flushQueueLength",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_99th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_99th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/ScanNext_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.ScanNext_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Increment_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Increment_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Append_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Append_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/ScanNext_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.ScanNext_95th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Append_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Append_95th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Increment_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Increment_95th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/updatesBlockedTime": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.updatesBlockedTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/IPC/numActiveHandler": {
              "metric": "Hadoop:service=HBase,name=IPC,sub=IPC.numActiveHandler",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/IPC/numCallsInGeneralQueue": {
              "metric": "Hadoop:service=HBase,name=IPC,sub=IPC.numCallsInGeneralQueue",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/IPC/numOpenConnections": {
              "metric": "Hadoop:service=HBase,name=IPC,sub=IPC.numOpenConnections",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowAppendCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowAppendCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheSize": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowIncrementCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowIncrementCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheEvictedCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheEvictionCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_95th_percentile",
              "unit": "ms",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_median": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_median",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_mean": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowGetCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowGetCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_75th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_75th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_min": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/storefileIndexSizeMB": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileIndexSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_median": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_median",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_max": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/totalStaticIndexSizeKB": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticIndexSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_mean": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/requests": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.totalRequestCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/storefiles": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/mutationsWithoutWALCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_median": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_median",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowDeleteCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowDeleteCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_99th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_99th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/stores": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_min": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_95th_percentile",
              "unit": "ms",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_95th_percentile",
              "unit": "ms",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_max": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_mean": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_75th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_75th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_max": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_75th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_75th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/totalStaticBloomSizeKB": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticBloomSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheHitCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheHitCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_99th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_99th_percentile",
              "pointInTime": true,
              "temporal": false
            }
          }
        }
      }
    ],
    "HostComponent": [
      {
        "type": "jmx",
        "metrics": {
          "default": {
            "metrics/hbase/regionserver/slowPutCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowPutCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/percentFilesLocal": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.percentFilesLocal",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_min": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheFree": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheFreeSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/mutationsWithoutWALSize": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheMissCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheMissCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/flushQueueSize": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.flushQueueLength",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_99th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_99th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/ScanNext_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.ScanNext_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Increment_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Increment_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Append_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Append_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/ScanNext_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.ScanNext_95th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Append_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Append_95th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/Increment_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Increment_95th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/updatesBlockedTime": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.updatesBlockedTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/IPC/numActiveHandler": {
              "metric": "Hadoop:service=HBase,name=IPC,sub=IPC.numActiveHandler",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/IPC/numCallsInGeneralQueue": {
              "metric": "Hadoop:service=HBase,name=IPC,sub=IPC.numCallsInGeneralQueue",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/IPC/numOpenConnections": {
              "metric": "Hadoop:service=HBase,name=IPC,sub=IPC.numOpenConnections",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowAppendCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowAppendCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheSize": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowIncrementCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowIncrementCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheEvictedCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheEvictionCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_95th_percentile",
              "unit": "ms",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_median": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_median",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_mean": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowGetCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowGetCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_75th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_75th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_min": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/storefileIndexSizeMB": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileIndexSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_median": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_median",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_max": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/totalStaticIndexSizeKB": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticIndexSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_num_ops": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_mean": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/requests": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.totalRequestCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/storefiles": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeFileCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/mutationsWithoutWALCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.mutationsWithoutWALCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_median": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_median",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/slowDeleteCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.slowDeleteCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_99th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_99th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/stores": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.storeCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_min": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_95th_percentile",
              "unit": "ms",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_95th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_95th_percentile",
              "unit": "ms",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_max": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_mean": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_75th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_75th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/deleteRequestLatency_max": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Delete_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/putRequestLatency_75th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Mutate_75th_percentile",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/totalStaticBloomSizeKB": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.staticBloomSize",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/blockCacheHitCount": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.blockCacheHitCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/regionserver/getRequestLatency_99th_percentile": {
              "metric": "Hadoop:service=HBase,name=RegionServer,sub=Server.Get_99th_percentile",
              "pointInTime": true,
              "temporal": false
            }
          }
        }
      }
    ]
  },
  "HBASE_MASTER": {
    "Component": [
      {
        "type": "jmx",
        "metrics": {
          "default": {
            "metrics/rpc/regionServerReport.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/jvm/memMaxM": {
              "metric": "Hadoop:service=HBase,name=JvmMetrics.MemMaxM",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/Revision": {
              "metric": "hadoop:service=HBase,name=Info.revision",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/AverageLoad": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.averageLoad",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReport.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/ServerName": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.serverName",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeMaxTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/ZookeeperQuorum": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.zookeeperQuorum",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsDate": {
              "metric": "hadoop:service=HBase,name=Info.hdfsDate",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsUrl": {
              "metric": "hadoop:service=HBase,name=Info.hdfsUrl",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/revision": {
              "metric": "hadoop:service=HBase,name=Info.revision",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/MasterActiveTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.masterActiveTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthorizationFailures": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationFailures",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsUser": {
              "metric": "hadoop:service=HBase,name=Info.hdfsUser",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/version": {
              "metric": "hadoop:service=HBase,name=Info.version",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeMaxTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeNumOps": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/NumOpenConnections": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.NumOpenConnections",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/IsActiveMaster": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.isActiveMaster",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/MasterStartTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.masterStartTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSize_num_ops": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/MasterActiveTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.masterActiveTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTime_avg_time": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeAvgTime": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/cluster_requests": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.clusterRequests",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthenticationFailures": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationFailures",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/Coprocessors": {
              "metric": "hadoop:service=Master,name=Master.Coprocessors",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/RegionsInTransition": {
              "metric": "hadoop:service=Master,name=Master.RegionsInTransition",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/master/AssignmentManger/ritCount": {
              "metric": "Hadoop:service=HBase,name=Master,sub=AssignmentManger.ritCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsVersion": {
              "metric": "hadoop:service=HBase,name=Info.hdfsVersion",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReport.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/RegionServers": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.numRegionServers",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/ClusterId": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.clusterId",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeNumOps": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitSizeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicationCallQueueLen": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicationCallQueueLen",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeMinTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTime_num_ops": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/RegionsInTransition": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.ritCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReport.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthenticationSuccesses": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationSuccesses",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/HeapMemoryUsed": {
              "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/ReceivedBytes": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.ReceivedBytes",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/NonHeapMemoryMax": {
              "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/DeadRegionServers": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.numDeadRegionServers",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/AverageLoad": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.averageLoad",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/MasterStartTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.masterStartTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/priorityCallQueueLen": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.priorityCallQueueLen",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/callQueueLen": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.callQueueLen",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsRevision": {
              "metric": "hadoop:service=HBase,name=Info.hdfsRevision",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/url": {
              "metric": "hadoop:service=HBase,name=Info.url",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/NonHeapMemoryUsed": {
              "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/HeapMemoryMax": {
              "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSize_avg_time": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/date": {
              "metric": "hadoop:service=HBase,name=Info.date",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/user": {
              "metric": "java.lang:type=Runtime.SystemProperties.user.name",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/SentBytes": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.SentBytes",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeMinTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeAvgTime": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitSizeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthorizationSuccesses": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationSuccesses",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "ServiceComponentInfo/Version": {
              "metric": "hadoop:service=HBase,name=Info.version",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            }
          }
        }
      }
    ],
    "HostComponent": [
      {
        "type": "jmx",
        "metrics": {
          "default": {
            "metrics/rpc/regionServerReport.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/jvm/memMaxM": {
              "metric": "Hadoop:service=HBase,name=JvmMetrics.MemMaxM",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/AverageLoad": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.averageLoad",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReport.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/ServerName": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.serverName",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeMaxTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/ZookeeperQuorum": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.zookeeperQuorum",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsDate": {
              "metric": "hadoop:service=HBase,name=Info.hdfsDate",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsUrl": {
              "metric": "hadoop:service=HBase,name=Info.hdfsUrl",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/jvm/NonHeapMemoryMax": {
              "metric": "java.lang:type=Memory.NonHeapMemoryUsage[max]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/revision": {
              "metric": "hadoop:service=HBase,name=Info.revision",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/MasterActiveTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.masterActiveTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/master/AssignmentManger/ritCount": {
              "metric": "Hadoop:service=HBase,name=Master,sub=AssignmentManger.ritCount",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthorizationFailures": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationFailures",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsUser": {
              "metric": "hadoop:service=HBase,name=Info.hdfsUser",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/version": {
              "metric": "hadoop:service=HBase,name=Info.version",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeMaxTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_max",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeNumOps": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/NumOpenConnections": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.NumOpenConnections",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/IsActiveMaster": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.isActiveMaster",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/MasterStartTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.masterStartTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSize_num_ops": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTime_avg_time": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeAvgTime": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/multiAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.multiAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/cluster_requests": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.clusterRequests",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthenticationFailures": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationFailures",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/Coprocessors": {
              "metric": "hadoop:service=Master,name=Master.Coprocessors",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/RegionsInTransition": {
              "metric": "hadoop:service=Master,name=Master.RegionsInTransition",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsVersion": {
              "metric": "hadoop:service=HBase,name=Info.hdfsVersion",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getLastFlushTimeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getLastFlushTimeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatusAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatusAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReport.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/RegionServers": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.numRegionServers",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/ClusterId": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.tag.clusterId",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcQueueTimeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcQueueTimeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatus.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatus.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeNumOps": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitSizeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unlockRowMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unlockRowMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/jvm/HeapMemoryMax": {
              "metric": "java.lang:type=Memory.HeapMemoryUsage[max]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcSlowResponseMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcSlowResponseMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitchMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitchMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/jvm/HeapMemoryUsed": {
              "metric": "java.lang:type=Memory.HeapMemoryUsage[used]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicationCallQueueLen": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicationCallQueueLen",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalErrorMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalErrorMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumn.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumn.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offline.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offline.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTimeMinTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/replicateLogEntriesMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.replicateLogEntriesMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitTime_num_ops": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitTime_num_ops",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReport.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReport.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthenticationSuccesses": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthenticationSuccesses",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/execCoprocessorNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.execCoprocessorNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/jvm/NonHeapMemoryUsed": {
              "metric": "java.lang:type=Memory.NonHeapMemoryUsage[used]",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rollHLogWriterAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rollHLogWriterAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/ReceivedBytes": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.ReceivedBytes",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTableNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTableNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClusterStatus.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClusterStatus.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumnAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumnAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/reportRSFatalError.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.reportRSFatalError.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/DeadRegionServers": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.numDeadRegionServers",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/appendMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.appendMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/priorityCallQueueLen": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.priorityCallQueueLen",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/bulkLoadHFilesNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.bulkLoadHFilesNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/callQueueLen": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.callQueueLen",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassignAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassignAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getAlterStatusNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getAlterStatusNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyColumn.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyColumn.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getCompactionStateNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getCompactionStateNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptorsAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptorsAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMaster.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMaster.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/hdfsRevision": {
              "metric": "hadoop:service=HBase,name=Info.hdfsRevision",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/url": {
              "metric": "hadoop:service=HBase,name=Info.url",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignature.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignature.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/nextMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.nextMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balance.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balance.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHServerInfoNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHServerInfoNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteColumnMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteColumnMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getStoreFileListNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getStoreFileListNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumn.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumn.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitchMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitchMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunningMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunningMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/closeRegionAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.closeRegionAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/disableTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.disableTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assign.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assign.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/moveNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.moveNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementColumnValueMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementColumnValueMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSize_avg_time": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_mean",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/load/AverageLoad": {
              "metric": "hadoop:service=Master,name=Master.AverageLoad",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndDeleteAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndDeleteAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/synchronousBalanceSwitch.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.synchronousBalanceSwitch.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/date": {
              "metric": "hadoop:service=HBase,name=Info.date",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/flushRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.flushRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getOnlineRegionsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getOnlineRegionsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/user": {
              "metric": "java.lang:type=Runtime.SystemProperties.user.name",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getClosestRowBeforeAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getClosestRowBeforeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/offlineNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.offlineNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/SentBytes": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.SentBytes",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/incrementMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.incrementMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/deleteTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.deleteTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/checkAndPutAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.checkAndPutAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openScannerAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openScannerAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/assignMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.assignMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/compactRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.compactRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/openRegionMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.openRegionMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/addColumnMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.addColumnMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/RpcProcessingTimeNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.RpcProcessingTimeNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/existsMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.existsMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeMinTime": {
              "metric": "Hadoop:service=HBase,name=Master,sub=Server.HlogSplitSize_min",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdown.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdown.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTableAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTableAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartup.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartup.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/lockRowNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.lockRowNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolVersion.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolVersion.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/balanceSwitch.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.balanceSwitch.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getProtocolSignatureMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getProtocolSignatureMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/modifyTable.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.modifyTable.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/splitRegionMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.splitRegionMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/mutateRowMinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.mutateRowMinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/hbase/master/splitSizeAvgTime": {
              "metric": "hadoop:service=Master,name=MasterStatistics.splitSizeAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerReportAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerReportAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/putAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.putAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getNumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getNumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/shutdownMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.shutdownMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getBlockCacheColumnFamilySummariesAvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getBlockCacheColumnFamilySummariesAvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.MaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.MaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/regionServerStartupMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.regionServerStartupMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/createTableMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.createTableMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getHTableDescriptors.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getHTableDescriptors.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/rpcAuthorizationSuccesses": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.rpcAuthorizationSuccesses",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/isMasterRunning.aboveOneSec.NumOps": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.isMasterRunning.aboveOneSec.NumOps",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/enableTable.aboveOneSec.AvgTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.enableTable.aboveOneSec.AvgTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/getRegionInfoMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.getRegionInfoMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/unassign.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.unassign.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/stopMasterMaxTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.stopMasterMaxTime",
              "pointInTime": true,
              "temporal": false
            },
            "metrics/rpc/move.aboveOneSec.MinTime": {
              "metric": "hadoop:service=HBase,name=RPCStatistics.move.aboveOneSec.MinTime",
              "pointInTime": true,
              "temporal": false
            }
          }
        }
      }
    ]
  }
}
