org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = #Infinity >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r1 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i1 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i1 = interfaceinvoke $r1.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i1 <= 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : return d0
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r2 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = interfaceinvoke $r2.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, 0)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = interfaceinvoke $r2.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, 0) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset>
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : return d0
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $r3 = r0.<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.xy.XYDataset dataset> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d2 = interfaceinvoke $r3.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $d3 = d2 - d1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : $d3 = d2 - d1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d3)
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d3) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = d2
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : d1 = d2 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = i2 + 1
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : i2 = i2 + 1 >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : goto [?= (branch)]
org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries : if i2 >= i1
