org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.OHLCDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z6 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z9 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r20.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r20.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r20
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r19 = (java.lang.Comparable) $r18
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r19 = (java.lang.Comparable) $r18 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z9 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z9 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z9 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r13 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z9 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r13 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r14 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r14 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z10 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z10 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z10 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r15 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r16 = (java.lang.Comparable) $r15
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r16 = (java.lang.Comparable) $r15 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i6 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r16)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i6 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r16) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i7 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i6)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i7 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i6) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i8 >= i7
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i8 >= i7 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d9 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(i6, i8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i8 >= i7 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z10 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d9 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(i6, i8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z11 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d9)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z11 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d9) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z11 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z11 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d10 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i6, i8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z11 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = i8 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = i8 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i8 >= i7
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d10 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i6, i8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d11 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(i6, i8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d11 = interfaceinvoke r13.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(i6, i8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z12 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d10)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z12 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d10) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d10)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d11) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z13 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z13 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z13 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = i8 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d11) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i8 = i8 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d10) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z6 = r0 instanceof org.jfree.data.statistics.BoxAndWhiskerXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z6 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z6 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r8 = (org.jfree.data.statistics.BoxAndWhiskerXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z6 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r8 = (org.jfree.data.statistics.BoxAndWhiskerXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z7 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z7 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z7 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r11 = (java.lang.Comparable) $r10
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r11 = (java.lang.Comparable) $r10 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r11) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i5 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i5 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i5 >= i4
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i5 >= i4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d6 = interfaceinvoke r8.<org.jfree.data.statistics.BoxAndWhiskerXYDataset: double getXValue(int,int)>(i3, i5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i5 >= i4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z7 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d6 = interfaceinvoke r8.<org.jfree.data.statistics.BoxAndWhiskerXYDataset: double getXValue(int,int)>(i3, i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z8 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d6)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z8 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d6) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z8 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z8 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r12 = interfaceinvoke r8.<org.jfree.data.statistics.BoxAndWhiskerXYDataset: java.lang.Number getMinRegularValue(int,int)>(i3, i5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z8 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i5 = i5 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i5 = i5 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i5 >= i4
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r12 = interfaceinvoke r8.<org.jfree.data.statistics.BoxAndWhiskerXYDataset: java.lang.Number getMinRegularValue(int,int)>(i3, i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r6 = interfaceinvoke r8.<org.jfree.data.statistics.BoxAndWhiskerXYDataset: java.lang.Number getMaxRegularValue(int,int)>(i3, i5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r6 = interfaceinvoke r8.<org.jfree.data.statistics.BoxAndWhiskerXYDataset: java.lang.Number getMaxRegularValue(int,int)>(i3, i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r12 == null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r12 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $d7 = virtualinvoke r12.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r12 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r6 == null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r6 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $d8 = virtualinvoke r6.<java.lang.Number: double doubleValue()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r6 == null >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i5 = i5 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $d8 = virtualinvoke r6.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d8)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i5 = i5 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $d7 = virtualinvoke r12.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d7)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, $d7) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if r6 == null
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.OHLCDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r3 = (org.jfree.data.xy.OHLCDataset) r0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r3 = (org.jfree.data.xy.OHLCDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z2 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $b12 = d0 cmpl #Infinity] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r5 = (java.lang.Comparable) $r7
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r5 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i1 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i2 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i2 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d2 = interfaceinvoke r3.<org.jfree.data.xy.OHLCDataset: double getXValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i2 >= i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d2 = interfaceinvoke r3.<org.jfree.data.xy.OHLCDataset: double getXValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z3 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d2)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z3 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d3 = interfaceinvoke r3.<org.jfree.data.xy.OHLCDataset: double getLowValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z3 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i2 = i2 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i2 >= i1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d3 = interfaceinvoke r3.<org.jfree.data.xy.OHLCDataset: double getLowValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d4 = interfaceinvoke r3.<org.jfree.data.xy.OHLCDataset: double getHighValue(int,int)>(i0, i2)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d4 = interfaceinvoke r3.<org.jfree.data.xy.OHLCDataset: double getHighValue(int,int)>(i0, i2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z4 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z5 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z5 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z5 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i2 = i2 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
