org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : specialinvoke $r2.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : specialinvoke $r2.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : r3 = $r2
org.jfree.chart.plot.PolarPlot.buildRadialTicks : r3 = $r2 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z0 == 0
org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : return r3
org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : r5 = (org.jfree.chart.axis.ValueTick) $r6
org.jfree.chart.plot.PolarPlot.buildRadialTicks : r5 = (org.jfree.chart.axis.ValueTick) $r6 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z1 = virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: boolean isRadiusMinorGridlinesVisible()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z1 = virtualinvoke r0.<org.jfree.chart.plot.PolarPlot: boolean isRadiusMinorGridlinesVisible()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z1 != 0
org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r7 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR>
org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.jfree.chart.plot.PolarPlot.buildRadialTicks : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5) >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.PolarPlot.buildRadialTicks : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r7 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR> >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r8 = virtualinvoke r5.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.plot.PolarPlot.buildRadialTicks : $r8 = virtualinvoke r5.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z2 = virtualinvoke $r7.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r8)
org.jfree.chart.plot.PolarPlot.buildRadialTicks : $z2 = virtualinvoke $r7.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r8) >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z2 == 0
org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r5)
org.jfree.chart.plot.PolarPlot.buildRadialTicks : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.PolarPlot.buildRadialTicks : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
