org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r1 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r1.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r2 = $r1
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r2 = $r1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r12 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r12 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $r12 == null
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $r12 == null >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r13 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $r12 == null >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : return r2
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r13 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i0 = interfaceinvoke $r13.<java.util.Map: int size()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i0 = interfaceinvoke $r13.<java.util.Map: int size()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $i0 <= 0
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $i0 <= 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r14 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $i0 <= 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : return r2
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r14 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i1 = interfaceinvoke $r14.<java.util.Map: int size()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i1 = interfaceinvoke $r14.<java.util.Map: int size()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i2 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i2 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $i1 > $i2
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $i1 > $i2 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r15 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $i1 > $i2 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r23 = new java.util.HashSet
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r23 = new java.util.HashSet >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r23.<java.util.HashSet: void <init>()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r23.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r24 = $r23
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r24 = $r23 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r25 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r25 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r26 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r27 = interfaceinvoke $r26.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z1 == 0
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r28 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : return r2
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r28 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r29 = (java.util.Map$Entry) $r28
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r29 = (java.util.Map$Entry) $r28 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r30 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r30 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z2 = interfaceinvoke r24.<java.util.Set: boolean add(java.lang.Object)>($r30)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z2 = interfaceinvoke r24.<java.util.Set: boolean add(java.lang.Object)>($r30) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z2 == 0
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r31 = new java.lang.StringBuilder
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r31 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r31.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r32 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r32 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r33 = (java.lang.Integer) $r32
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r33 = (java.lang.Integer) $r32 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r34 = specialinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.lang.Number getMinPaintValue(java.lang.Integer)>($r33)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r34 = specialinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.lang.Number getMinPaintValue(java.lang.Integer)>($r33) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ")
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ") >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r38 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r38 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r39 = (java.lang.Integer) $r38
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r39 = (java.lang.Integer) $r38 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r40 = specialinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.lang.Number getMaxPaintValue(java.lang.Integer)>($r39)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r40 = specialinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.lang.Number getMaxPaintValue(java.lang.Integer)>($r39) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r41 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r41 = virtualinvoke $r40.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r44 = r43
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r44 = r43 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r45 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r45 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r45.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r45.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r46 = $r45
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r46 = $r45 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r47 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r47 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r48 = (java.lang.Integer) $r47
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r48 = (java.lang.Integer) $r47 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i4 = virtualinvoke $r48.<java.lang.Integer: int intValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i4 = virtualinvoke $r48.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r49 = virtualinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.awt.Paint getSeriesPaint(int)>($i4)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r49 = virtualinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.awt.Paint getSeriesPaint(int)>($i4) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r50 = <java.awt.Color: java.awt.Color black>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r50 = <java.awt.Color: java.awt.Color black> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r11 = <org.jfree.chart.renderer.WaferMapRenderer: java.awt.Stroke DEFAULT_STROKE>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r11 = <org.jfree.chart.renderer.WaferMapRenderer: java.awt.Stroke DEFAULT_STROKE> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r51 = new org.jfree.chart.LegendItem
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r51 = new org.jfree.chart.LegendItem >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r51.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(r43, r44, null, null, r46, r49, r11, r50)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r51.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(r43, r44, null, null, r46, r49, r11, r50) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>($r51)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>($r51) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r15 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r16 = interfaceinvoke $r15.<java.util.Map: java.util.Set entrySet()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r3 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r3 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z0 == 0
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= return r2]
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= return r2] >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : return r2
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r17 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r4 = (java.util.Map$Entry) $r17
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r4 = (java.util.Map$Entry) $r17 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r18 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r18 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r5 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r5 = virtualinvoke $r18.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r6 = r5
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r6 = r5 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r19 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r19 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r19.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r19.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r7 = $r19
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r7 = $r19 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r20 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r21 = (java.lang.Integer) $r20
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r21 = (java.lang.Integer) $r20 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i3 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $i3 = virtualinvoke $r21.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r8 = virtualinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.awt.Paint lookupSeriesPaint(int)>($i3)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r8 = virtualinvoke r0.<org.jfree.chart.renderer.WaferMapRenderer: java.awt.Paint lookupSeriesPaint(int)>($i3) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r9 = <java.awt.Color: java.awt.Color black>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r9 = <java.awt.Color: java.awt.Color black> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r10 = <org.jfree.chart.renderer.WaferMapRenderer: java.awt.Stroke DEFAULT_STROKE>
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : r10 = <org.jfree.chart.renderer.WaferMapRenderer: java.awt.Stroke DEFAULT_STROKE> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r22 = new org.jfree.chart.LegendItem
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $r22 = new org.jfree.chart.LegendItem >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r22.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(r5, r6, null, null, r7, r8, r10, r9)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : specialinvoke $r22.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(r5, r6, null, null, r7, r8, r10, r9) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>($r22)
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : virtualinvoke r2.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>($r22) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
