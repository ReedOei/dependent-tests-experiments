org.jfree.chart.block.GridArrangement.arrangeNN : d0 = 0.0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.GridArrangement.arrangeNN : d1 = 0.0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.GridArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.GridArrangement.arrangeNN : r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.GridArrangement.arrangeNN : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : if $z0 == 0
org.jfree.chart.block.GridArrangement.arrangeNN : if $z0 == 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.GridArrangement.arrangeNN : if $z0 == 0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $i0 = r0.<org.jfree.chart.block.GridArrangement: int columns>
org.jfree.chart.block.GridArrangement.arrangeNN : $i0 = r0.<org.jfree.chart.block.GridArrangement: int columns> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d5 = (double) $i0
org.jfree.chart.block.GridArrangement.arrangeNN : $d5 = (double) $i0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d6 = $d5 * d0
org.jfree.chart.block.GridArrangement.arrangeNN : d6 = $d5 * d0 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $i1 = r0.<org.jfree.chart.block.GridArrangement: int rows>
org.jfree.chart.block.GridArrangement.arrangeNN : $i1 = r0.<org.jfree.chart.block.GridArrangement: int rows> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d7 = (double) $i1
org.jfree.chart.block.GridArrangement.arrangeNN : $d7 = (double) $i1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d2 = $d7 * d1
org.jfree.chart.block.GridArrangement.arrangeNN : d2 = $d7 * d1 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r10 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.GridArrangement.arrangeNN : $r10 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : specialinvoke $r10.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(d6, d2)
org.jfree.chart.block.GridArrangement.arrangeNN : specialinvoke $r10.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(d6, d2) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r8 = $r10
org.jfree.chart.block.GridArrangement.arrangeNN : r8 = $r10 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r11 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r8)
org.jfree.chart.block.GridArrangement.arrangeNN : $r11 = virtualinvoke r0.<org.jfree.chart.block.GridArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r8) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : return $r11
org.jfree.chart.block.GridArrangement.arrangeNN : $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r9
org.jfree.chart.block.GridArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r9 >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : if r5 == null
org.jfree.chart.block.GridArrangement.arrangeNN : if r5 == null >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.GridArrangement.arrangeNN : if r5 == null >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.GridArrangement.arrangeNN : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.GridArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : r7 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6)
org.jfree.chart.block.GridArrangement.arrangeNN : r7 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d3 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.GridArrangement.arrangeNN : $d3 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d3)
org.jfree.chart.block.GridArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d3) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : $d4 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.GridArrangement.arrangeNN : $d4 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4)
org.jfree.chart.block.GridArrangement.arrangeNN : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4) >>>>>>>> org.jfree.chart.block.GridArrangement.arrangeNN : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
