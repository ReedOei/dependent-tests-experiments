org.jfree.data.Range.min : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.Range.min : if $z0 == 0
org.jfree.data.Range.min : if $z0 == 0 >>>>>>>> org.jfree.data.Range.min : return d1
org.jfree.data.Range.min : if $z0 == 0 >>>>>>>> org.jfree.data.Range.min : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.Range.min : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.Range.min : if $z1 == 0
org.jfree.data.Range.min : if $z1 == 0 >>>>>>>> org.jfree.data.Range.min : return d0
org.jfree.data.Range.min : if $z1 == 0 >>>>>>>> org.jfree.data.Range.min : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1)
org.jfree.data.Range.min : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1) >>>>>>>> org.jfree.data.Range.min : return $d2
