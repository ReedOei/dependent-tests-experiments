org.jfree.data.time.TimeSeries.addOrUpdate : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r2 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>()
org.jfree.data.time.TimeSeries.addOrUpdate : r2 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.addOrUpdate : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $r7 != null
org.jfree.data.time.TimeSeries.addOrUpdate : if $r7 != null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2
org.jfree.data.time.TimeSeries.addOrUpdate : if $r7 != null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r8 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.addOrUpdate : $r8 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r2)
org.jfree.data.time.TimeSeries.addOrUpdate : $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $z1 != 0
org.jfree.data.time.TimeSeries.addOrUpdate : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r9 = new java.lang.StringBuilder
org.jfree.data.time.TimeSeries.addOrUpdate : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r19 = null
org.jfree.data.time.TimeSeries.addOrUpdate : r19 = null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r20 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.addOrUpdate : $r20 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r20, r1)
org.jfree.data.time.TimeSeries.addOrUpdate : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r20, r1) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if i0 < 0
org.jfree.data.time.TimeSeries.addOrUpdate : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r21 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.addOrUpdate : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r27 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r27 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r28 = (org.jfree.data.time.TimeSeriesDataItem) $r27
org.jfree.data.time.TimeSeries.addOrUpdate : r28 = (org.jfree.data.time.TimeSeriesDataItem) $r27 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r29 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.addOrUpdate : $r29 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $i3 = neg i0
org.jfree.data.time.TimeSeries.addOrUpdate : $i3 = neg i0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $i4 = $i3 - 1
org.jfree.data.time.TimeSeries.addOrUpdate : $i4 = $i3 - 1 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : interfaceinvoke $r29.<java.util.List: void add(int,java.lang.Object)>($i4, r28)
org.jfree.data.time.TimeSeries.addOrUpdate : interfaceinvoke $r29.<java.util.List: void add(int,java.lang.Object)>($i4, r28) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r28)
org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r28) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $i5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $i5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $i6 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.addOrUpdate : $i6 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $i5 <= $i6
org.jfree.data.time.TimeSeries.addOrUpdate : if $i5 <= $i6 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r30 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.addOrUpdate : if $i5 <= $i6 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)
org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>()
org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : return r19
org.jfree.data.time.TimeSeries.addOrUpdate : $r30 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object remove(int)>(0)
org.jfree.data.time.TimeSeries.addOrUpdate : $r31 = interfaceinvoke $r30.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r32 = (org.jfree.data.time.TimeSeriesDataItem) $r31
org.jfree.data.time.TimeSeries.addOrUpdate : r32 = (org.jfree.data.time.TimeSeriesDataItem) $r31 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)>(r32)
org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForRemovedItem(org.jfree.data.time.TimeSeriesDataItem)>(r32) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)
org.jfree.data.time.TimeSeries.addOrUpdate : $r21 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.time.TimeSeries.addOrUpdate : $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r4 = (org.jfree.data.time.TimeSeriesDataItem) $r22
org.jfree.data.time.TimeSeries.addOrUpdate : r4 = (org.jfree.data.time.TimeSeriesDataItem) $r22 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r23 = virtualinvoke r4.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r23 = virtualinvoke r4.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r19 = (org.jfree.data.time.TimeSeriesDataItem) $r23
org.jfree.data.time.TimeSeries.addOrUpdate : r19 = (org.jfree.data.time.TimeSeriesDataItem) $r23 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : z0 = 0
org.jfree.data.time.TimeSeries.addOrUpdate : z0 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r5 = virtualinvoke r4.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : r5 = virtualinvoke r4.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if r5 == null
org.jfree.data.time.TimeSeries.addOrUpdate : if r5 == null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d2 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : if r5 == null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d2 = #NaN
org.jfree.data.time.TimeSeries.addOrUpdate : $d2 = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : d0 = $d2
org.jfree.data.time.TimeSeries.addOrUpdate : d0 = $d2 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.time.TimeSeries.addOrUpdate : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $z2 != 0
org.jfree.data.time.TimeSeries.addOrUpdate : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d3 = r0.<org.jfree.data.time.TimeSeries: double minY>
org.jfree.data.time.TimeSeries.addOrUpdate : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r24 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r24 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r4.<org.jfree.data.time.TimeSeriesDataItem: void setValue(java.lang.Number)>($r24)
org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r4.<org.jfree.data.time.TimeSeriesDataItem: void setValue(java.lang.Number)>($r24) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if z0 == 0
org.jfree.data.time.TimeSeries.addOrUpdate : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke r0.<org.jfree.data.time.TimeSeries: void findBoundsByIteration()>()
org.jfree.data.time.TimeSeries.addOrUpdate : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r25 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r25 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $r25 == null
org.jfree.data.time.TimeSeries.addOrUpdate : if $r25 == null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r26 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : if $r25 == null >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)]
org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)] >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)
org.jfree.data.time.TimeSeries.addOrUpdate : $r26 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : d1 = virtualinvoke $r26.<java.lang.Number: double doubleValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : d1 = virtualinvoke $r26.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d5 = r0.<org.jfree.data.time.TimeSeries: double minY>
org.jfree.data.time.TimeSeries.addOrUpdate : $d5 = r0.<org.jfree.data.time.TimeSeries: double minY> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d6 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double minIgnoreNaN(double,double)>($d5, d1)
org.jfree.data.time.TimeSeries.addOrUpdate : $d6 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double minIgnoreNaN(double,double)>($d5, d1) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r0.<org.jfree.data.time.TimeSeries: double minY> = $d6
org.jfree.data.time.TimeSeries.addOrUpdate : r0.<org.jfree.data.time.TimeSeries: double minY> = $d6 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d7 = r0.<org.jfree.data.time.TimeSeries: double maxY>
org.jfree.data.time.TimeSeries.addOrUpdate : $d7 = r0.<org.jfree.data.time.TimeSeries: double maxY> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d8 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double maxIgnoreNaN(double,double)>($d7, d1)
org.jfree.data.time.TimeSeries.addOrUpdate : $d8 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double maxIgnoreNaN(double,double)>($d7, d1) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r0.<org.jfree.data.time.TimeSeries: double maxY> = $d8
org.jfree.data.time.TimeSeries.addOrUpdate : r0.<org.jfree.data.time.TimeSeries: double maxY> = $d8 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)]
org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke r0.<org.jfree.data.time.TimeSeries: void findBoundsByIteration()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= (branch)]
org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= (branch)] >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)]
org.jfree.data.time.TimeSeries.addOrUpdate : $d3 = r0.<org.jfree.data.time.TimeSeries: double minY> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $b1 = d0 cmpg $d3
org.jfree.data.time.TimeSeries.addOrUpdate : $b1 = d0 cmpg $d3 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $b1 <= 0
org.jfree.data.time.TimeSeries.addOrUpdate : if $b1 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $d4 = r0.<org.jfree.data.time.TimeSeries: double maxY>
org.jfree.data.time.TimeSeries.addOrUpdate : if $b1 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $z3 = 1
org.jfree.data.time.TimeSeries.addOrUpdate : $z3 = 1 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= z0 = $z3]
org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= z0 = $z3] >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : z0 = $z3
org.jfree.data.time.TimeSeries.addOrUpdate : z0 = $z3 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r24 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $d4 = r0.<org.jfree.data.time.TimeSeries: double maxY> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $b2 = d0 cmpl $d4
org.jfree.data.time.TimeSeries.addOrUpdate : $b2 = d0 cmpl $d4 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : if $b2 < 0
org.jfree.data.time.TimeSeries.addOrUpdate : if $b2 < 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $z3 = 1
org.jfree.data.time.TimeSeries.addOrUpdate : if $b2 < 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $z3 = 0
org.jfree.data.time.TimeSeries.addOrUpdate : $z3 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : z0 = $z3
org.jfree.data.time.TimeSeries.addOrUpdate : $d2 = virtualinvoke r5.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= d0 = $d2]
org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= d0 = $d2] >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : d0 = $d2
org.jfree.data.time.TimeSeries.addOrUpdate : $r9 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You are trying to add data where the time period class is ")
org.jfree.data.time.TimeSeries.addOrUpdate : $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You are trying to add data where the time period class is ") >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r11 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r11 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)
org.jfree.data.time.TimeSeries.addOrUpdate : $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but the TimeSeries is expecting an instance of ")
org.jfree.data.time.TimeSeries.addOrUpdate : $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", but the TimeSeries is expecting an instance of ") >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r14 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.addOrUpdate : $r14 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>()
org.jfree.data.time.TimeSeries.addOrUpdate : $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)
org.jfree.data.time.TimeSeries.addOrUpdate : $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".")
org.jfree.data.time.TimeSeries.addOrUpdate : $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".") >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.time.TimeSeries.addOrUpdate : r3 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : $r18 = new org.jfree.data.general.SeriesException
org.jfree.data.time.TimeSeries.addOrUpdate : $r18 = new org.jfree.data.general.SeriesException >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke $r18.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>(r3)
org.jfree.data.time.TimeSeries.addOrUpdate : specialinvoke $r18.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>(r3) >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : throw $r18
org.jfree.data.time.TimeSeries.addOrUpdate : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2 >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= r19 = null]
org.jfree.data.time.TimeSeries.addOrUpdate : goto [?= r19 = null] >>>>>>>> org.jfree.data.time.TimeSeries.addOrUpdate : r19 = null
