org.jfree.data.general.WaferMapDataset.addValue : $r1 = new java.lang.Double >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : $d0 = (double) i0
org.jfree.data.general.WaferMapDataset.addValue : $d0 = (double) i0 >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : specialinvoke $r1.<java.lang.Double: void <init>(double)>($d0)
org.jfree.data.general.WaferMapDataset.addValue : specialinvoke $r1.<java.lang.Double: void <init>(double)>($d0) >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : $r2 = new java.lang.Integer
org.jfree.data.general.WaferMapDataset.addValue : $r2 = new java.lang.Integer >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.data.general.WaferMapDataset.addValue : specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : $r3 = new java.lang.Integer
org.jfree.data.general.WaferMapDataset.addValue : $r3 = new java.lang.Integer >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i2)
org.jfree.data.general.WaferMapDataset.addValue : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i2) >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : virtualinvoke r0.<org.jfree.data.general.WaferMapDataset: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r1, $r2, $r3)
org.jfree.data.general.WaferMapDataset.addValue : virtualinvoke r0.<org.jfree.data.general.WaferMapDataset: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>($r1, $r2, $r3) >>>>>>>> org.jfree.data.general.WaferMapDataset.addValue : return
