org.jfree.chart.plot.MeterPlot.fillArc : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "paint") >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d2 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d1)
org.jfree.chart.plot.MeterPlot.fillArc : d2 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d1) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d3 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0)
org.jfree.chart.plot.MeterPlot.fillArc : d3 = virtualinvoke r0.<org.jfree.chart.plot.MeterPlot: double valueToAngle(double)>(d0) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d4 = d3 - d2
org.jfree.chart.plot.MeterPlot.fillArc : d4 = d3 - d2 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.MeterPlot.fillArc : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.MeterPlot.fillArc : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.MeterPlot.fillArc : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.MeterPlot.fillArc : d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : z1 = 0
org.jfree.chart.plot.MeterPlot.fillArc : z1 = 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r5 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.fillArc : $r5 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r6 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape PIE>
org.jfree.chart.plot.MeterPlot.fillArc : $r6 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape PIE> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $r5 != $r6
org.jfree.chart.plot.MeterPlot.fillArc : if $r5 != $r6 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2
org.jfree.chart.plot.MeterPlot.fillArc : if $r5 != $r6 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r7 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.fillArc : $r7 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r8 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CHORD>
org.jfree.chart.plot.MeterPlot.fillArc : $r8 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CHORD> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $r7 != $r8
org.jfree.chart.plot.MeterPlot.fillArc : if $r7 != $r8 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0
org.jfree.chart.plot.MeterPlot.fillArc : if $r7 != $r8 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r9 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape>
org.jfree.chart.plot.MeterPlot.fillArc : $r9 = r0.<org.jfree.chart.plot.MeterPlot: org.jfree.chart.plot.DialShape shape> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r10 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CIRCLE>
org.jfree.chart.plot.MeterPlot.fillArc : $r10 = <org.jfree.chart.plot.DialShape: org.jfree.chart.plot.DialShape CIRCLE> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $r9 != $r10
org.jfree.chart.plot.MeterPlot.fillArc : if $r9 != $r10 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2
org.jfree.chart.plot.MeterPlot.fillArc : if $r9 != $r10 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r11 = new java.lang.IllegalStateException
org.jfree.chart.plot.MeterPlot.fillArc : $r11 = new java.lang.IllegalStateException >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DialShape not recognised.")
org.jfree.chart.plot.MeterPlot.fillArc : specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DialShape not recognised.") >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : throw $r11
org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0
org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : d4 = 360.0
org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $r12 = new java.awt.geom.Arc2D$Double
org.jfree.chart.plot.MeterPlot.fillArc : $r12 = new java.awt.geom.Arc2D$Double >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : specialinvoke $r12.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d5, d6, d7, d8, d2, d4, b0)
org.jfree.chart.plot.MeterPlot.fillArc : specialinvoke $r12.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d5, d6, d7, d8, d2, d4, b0) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : r4 = $r12
org.jfree.chart.plot.MeterPlot.fillArc : r4 = $r12 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4)
org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : return
org.jfree.chart.plot.MeterPlot.fillArc : d4 = 360.0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)]
org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)] >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : $i1 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle>
org.jfree.chart.plot.MeterPlot.fillArc : if z0 == 0 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2
org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)]
org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)] >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
org.jfree.chart.plot.MeterPlot.fillArc : $i1 = r0.<org.jfree.chart.plot.MeterPlot: int meterAngle> >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : if $i1 <= 180
org.jfree.chart.plot.MeterPlot.fillArc : if $i1 <= 180 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : b0 = 1
org.jfree.chart.plot.MeterPlot.fillArc : if $i1 <= 180 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2
org.jfree.chart.plot.MeterPlot.fillArc : b0 = 1 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)]
org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)] >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
org.jfree.chart.plot.MeterPlot.fillArc : b0 = 2 >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)]
org.jfree.chart.plot.MeterPlot.fillArc : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)] >>>>>>>> org.jfree.chart.plot.MeterPlot.fillArc : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r3)
