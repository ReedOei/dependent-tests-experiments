org.jfree.data.general.DatasetUtilities.iterateDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i4)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : return null
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $b7 <= 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $r2 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : return $r2
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i6 >= i5
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i6 >= i5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i4, i6)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i6 >= i5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = i4 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = i4 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i4 >= i0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i4, i6) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d6 = d5
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d6 = d5 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z5 != 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z5 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z5 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = i6 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = i6 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i6 >= i5
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d6)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d6) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i6 = i6 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : r1 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i4 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : r1 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i1 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i1 >= i0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= $b7 = d0 cmpl d1]
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= $b7 = d0 cmpl d1] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $b7 = d0 cmpl d1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i3 = 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i3 >= i2
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i1 >= i0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d2 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d3 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d3 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d4 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d4 = interfaceinvoke r1.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z2 != 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z2 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z2 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z3 != 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z4 != 0
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if $z4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : if i3 >= i2
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2)
org.jfree.data.general.DatasetUtilities.iterateDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateDomainBounds : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d3)
