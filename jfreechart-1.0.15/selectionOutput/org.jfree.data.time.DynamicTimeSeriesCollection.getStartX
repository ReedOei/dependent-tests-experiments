org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $r2 = r0.<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.time.RegularTimePeriod[] pointsInTime> >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $i2 = virtualinvoke r0.<org.jfree.data.time.DynamicTimeSeriesCollection: int translateGet(int)>(i1)
org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $i2 = virtualinvoke r0.<org.jfree.data.time.DynamicTimeSeriesCollection: int translateGet(int)>(i1) >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : r1 = $r2[$i2]
org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : r1 = $r2[$i2] >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $r3 = new java.lang.Long
org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $r3 = new java.lang.Long >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $r4 = r0.<org.jfree.data.time.DynamicTimeSeriesCollection: java.util.Calendar workingCalendar>
org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $r4 = r0.<org.jfree.data.time.DynamicTimeSeriesCollection: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $l3 = virtualinvoke r1.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>($r4)
org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : $l3 = virtualinvoke r1.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>($r4) >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : specialinvoke $r3.<java.lang.Long: void <init>(long)>($l3)
org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : specialinvoke $r3.<java.lang.Long: void <init>(long)>($l3) >>>>>>>> org.jfree.data.time.DynamicTimeSeriesCollection.getStartX : return $r3
