org.jfree.chart.block.ColumnArrangement.arrangeRF : r4 = virtualinvoke r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.Size2D arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.ColumnArrangement.arrangeRF : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $d0 = r4.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeRF : $d0 = r4.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0)
org.jfree.chart.block.ColumnArrangement.arrangeRF : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : if $z0 == 0
org.jfree.chart.block.ColumnArrangement.arrangeRF : if $z0 == 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : return r4
org.jfree.chart.block.ColumnArrangement.arrangeRF : if $z0 == 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $r7 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.ColumnArrangement.arrangeRF : $r7 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $d1 = virtualinvoke r4.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.ColumnArrangement.arrangeRF : $d1 = virtualinvoke r4.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $d2 = virtualinvoke $r7.<org.jfree.data.Range: double constrain(double)>($d1)
org.jfree.chart.block.ColumnArrangement.arrangeRF : $d2 = virtualinvoke $r7.<org.jfree.data.Range: double constrain(double)>($d1) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d2)
org.jfree.chart.block.ColumnArrangement.arrangeRF : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d2) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : $r8 = virtualinvoke r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r5)
org.jfree.chart.block.ColumnArrangement.arrangeRF : $r8 = virtualinvoke r0.<org.jfree.chart.block.ColumnArrangement: org.jfree.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r5) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeRF : return $r8
