org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z0 = r0 instanceof org.jfree.data.RangeInfo
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z0 = r0 instanceof org.jfree.data.RangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z0 == 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : r1 = (org.jfree.data.RangeInfo) r0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d2 = #Infinity
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d2 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i1 = 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $b4 = d2 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $b4 = d2 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $b4 != 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : return null
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $r5 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $r5 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : specialinvoke $r5.<java.lang.Double: void <init>(double)>(d2)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : specialinvoke $r5.<java.lang.Double: void <init>(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : return $r5
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i3 = 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i3 >= i2
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : r2 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z2 = r0 instanceof org.jfree.data.xy.OHLCDataset
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z2 = r0 instanceof org.jfree.data.xy.OHLCDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z2 == 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : r4 = (org.jfree.data.xy.OHLCDataset) r0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z2 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z3 != 0
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d2 = staticinvoke <java.lang.Math: double min(double,double)>(d2, d0)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if $z3 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : if i3 >= i2
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d2 = staticinvoke <java.lang.Math: double min(double,double)>(d2, d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : r4 = (org.jfree.data.xy.OHLCDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d0 = interfaceinvoke r4.<org.jfree.data.xy.OHLCDataset: double getLowValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d0 = interfaceinvoke r4.<org.jfree.data.xy.OHLCDataset: double getLowValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)]
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : r2 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d0 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : d0 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)]
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : goto [?= $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : r1 = (org.jfree.data.RangeInfo) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $r3 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $r3 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $d1 = interfaceinvoke r1.<org.jfree.data.RangeInfo: double getRangeLowerBound(boolean)>(1)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : $d1 = interfaceinvoke r1.<org.jfree.data.RangeInfo: double getRangeLowerBound(boolean)>(1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>($d1)
org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : specialinvoke $r3.<java.lang.Double: void <init>(double)>($d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMinimumRangeValue : return $r3
