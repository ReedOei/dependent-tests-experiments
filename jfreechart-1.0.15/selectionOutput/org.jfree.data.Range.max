org.jfree.data.Range.max : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.Range.max : if $z0 == 0
org.jfree.data.Range.max : if $z0 == 0 >>>>>>>> org.jfree.data.Range.max : return d1
org.jfree.data.Range.max : if $z0 == 0 >>>>>>>> org.jfree.data.Range.max : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.Range.max : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.Range.max : if $z1 == 0
org.jfree.data.Range.max : if $z1 == 0 >>>>>>>> org.jfree.data.Range.max : return d0
org.jfree.data.Range.max : if $z1 == 0 >>>>>>>> org.jfree.data.Range.max : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.data.Range.max : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1) >>>>>>>> org.jfree.data.Range.max : return $d2
