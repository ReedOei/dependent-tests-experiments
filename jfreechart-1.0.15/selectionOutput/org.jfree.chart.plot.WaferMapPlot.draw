org.jfree.chart.plot.WaferMapPlot.draw : $d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $b0 = $d0 cmpg 10.0
org.jfree.chart.plot.WaferMapPlot.draw : $b0 = $d0 cmpg 10.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : if $b0 > 0
org.jfree.chart.plot.WaferMapPlot.draw : if $b0 > 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $z2 = 1
org.jfree.chart.plot.WaferMapPlot.draw : if $b0 > 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $z2 = 0
org.jfree.chart.plot.WaferMapPlot.draw : $z2 = 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : z0 = $z2
org.jfree.chart.plot.WaferMapPlot.draw : z0 = $z2 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $b1 = $d1 cmpg 10.0
org.jfree.chart.plot.WaferMapPlot.draw : $b1 = $d1 cmpg 10.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : if $b1 > 0
org.jfree.chart.plot.WaferMapPlot.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $z3 = 1
org.jfree.chart.plot.WaferMapPlot.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : $z3 = 0
org.jfree.chart.plot.WaferMapPlot.draw : $z3 = 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : z1 = $z3
org.jfree.chart.plot.WaferMapPlot.draw : z1 = $z3 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : if z0 != 0
org.jfree.chart.plot.WaferMapPlot.draw : if z0 != 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : if z1 == 0
org.jfree.chart.plot.WaferMapPlot.draw : if z0 != 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : return
org.jfree.chart.plot.WaferMapPlot.draw : if z1 == 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : return
org.jfree.chart.plot.WaferMapPlot.draw : if z1 == 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : if r5 == null
org.jfree.chart.plot.WaferMapPlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.WaferMapPlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.WaferMapPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: void drawChipGrid(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: void drawChipGrid(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: void drawWaferEdge(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: void drawWaferEdge(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : return
org.jfree.chart.plot.WaferMapPlot.draw : virtualinvoke r5.<org.jfree.chart.plot.PlotRenderingInfo: void setPlotArea(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.WaferMapPlot.draw : $z3 = 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : goto [?= z1 = $z3]
org.jfree.chart.plot.WaferMapPlot.draw : goto [?= z1 = $z3] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : z1 = $z3
org.jfree.chart.plot.WaferMapPlot.draw : $z2 = 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : goto [?= z0 = $z2]
org.jfree.chart.plot.WaferMapPlot.draw : goto [?= z0 = $z2] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.draw : z0 = $z2
