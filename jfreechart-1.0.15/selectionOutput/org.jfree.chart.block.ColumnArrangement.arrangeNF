org.jfree.chart.block.ColumnArrangement.arrangeNF : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d0 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : d0 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $b1 = d0 cmpg 0.0
org.jfree.chart.block.ColumnArrangement.arrangeNF : $b1 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : if $b1 > 0
org.jfree.chart.block.ColumnArrangement.arrangeNF : if $b1 > 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d0 = #Infinity
org.jfree.chart.block.ColumnArrangement.arrangeNF : if $b1 > 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = 0.0
org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = 0.0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = 0.0
org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = 0.0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d3 = 0.0
org.jfree.chart.block.ColumnArrangement.arrangeNF : d3 = 0.0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r8 = new java.util.ArrayList
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r8 = new java.util.ArrayList >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r8.<java.util.ArrayList: void <init>()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r8.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : r5 = $r8
org.jfree.chart.block.ColumnArrangement.arrangeNF : r5 = $r8 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : i0 = 0
org.jfree.chart.block.ColumnArrangement.arrangeNF : i0 = 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $i2 = interfaceinvoke r4.<java.util.List: int size()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : $i2 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : if i0 >= $i2
org.jfree.chart.block.ColumnArrangement.arrangeNF : if i0 >= $i2 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.block.ColumnArrangement.arrangeNF : if i0 >= $i2 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r14 = new org.jfree.ui.Size2D
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r14 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d27 = d1 + d3
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d27 = d1 + d3 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d28 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d28 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r14.<org.jfree.ui.Size2D: void <init>(double,double)>($d27, $d28)
org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r14.<org.jfree.ui.Size2D: void <init>(double,double)>($d27, $d28) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : return $r14
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : r6 = (org.jfree.chart.block.Block) $r9
org.jfree.chart.block.ColumnArrangement.arrangeNF : r6 = (org.jfree.chart.block.Block) $r9 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r10 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r10 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : r7 = interfaceinvoke r6.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r10)
org.jfree.chart.block.ColumnArrangement.arrangeNF : r7 = interfaceinvoke r6.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r10) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d4 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d4 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d5 = d2 + $d4
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d5 = d2 + $d4 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $b3 = $d5 cmpg d0
org.jfree.chart.block.ColumnArrangement.arrangeNF : $b3 = $d5 cmpg d0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : if $b3 > 0
org.jfree.chart.block.ColumnArrangement.arrangeNF : if $b3 > 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6)
org.jfree.chart.block.ColumnArrangement.arrangeNF : if $b3 > 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : if $z1 == 0
org.jfree.chart.block.ColumnArrangement.arrangeNF : if $z1 == 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r12 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.ColumnArrangement.arrangeNF : if $z1 == 0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r5.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d19 = d1 + d3
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d19 = d1 + d3 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d20 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d20 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = $d19 + $d20
org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = $d19 + $d20 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d21 = 0.0
org.jfree.chart.block.ColumnArrangement.arrangeNF : d21 = 0.0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d3 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeNF : d3 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r13 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r13 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d22 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d22 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d23 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d23 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d24 = staticinvoke <java.lang.Math: double min(double,double)>($d23, d0)
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d24 = staticinvoke <java.lang.Math: double min(double,double)>($d23, d0) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r13.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d21, $d22, $d24)
org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r13.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d21, $d22, $d24) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r13)
org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r13) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d25 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d25 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d26 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d26 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = $d25 + $d26
org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = $d25 + $d26 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6)
org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : i0 = i0 + 1
org.jfree.chart.block.ColumnArrangement.arrangeNF : i0 = i0 + 1 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : goto [?= $i2 = interfaceinvoke r4.<java.util.List: int size()>()]
org.jfree.chart.block.ColumnArrangement.arrangeNF : goto [?= $i2 = interfaceinvoke r4.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $i2 = interfaceinvoke r4.<java.util.List: int size()>()
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r12 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d12 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d12 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d13 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d13 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d14 = d0 - d2
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d14 = d0 - d2 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d15 = staticinvoke <java.lang.Math: double min(double,double)>($d13, $d14)
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d15 = staticinvoke <java.lang.Math: double min(double,double)>($d13, $d14) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d2, $d12, $d15)
org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d2, $d12, $d15) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r12)
org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r12) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = 0.0
org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = 0.0 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d16 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d16 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d17 = d1 + $d16
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d17 = d1 + $d16 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d18 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d18 = r0.<org.jfree.chart.block.ColumnArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = $d17 + $d18
org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = $d17 + $d18 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : goto [?= i0 = i0 + 1]
org.jfree.chart.block.ColumnArrangement.arrangeNF : goto [?= i0 = i0 + 1] >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : i0 = i0 + 1
org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.ColumnArrangement.arrangeNF : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d6 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d6 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d7 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d7 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d2, $d6, $d7)
org.jfree.chart.block.ColumnArrangement.arrangeNF : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d2, $d6, $d7) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11)
org.jfree.chart.block.ColumnArrangement.arrangeNF : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d8 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d8 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d9 = d2 + $d8
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d9 = d2 + $d8 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d10 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d10 = r0.<org.jfree.chart.block.ColumnArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = $d9 + $d10
org.jfree.chart.block.ColumnArrangement.arrangeNF : d2 = $d9 + $d10 >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : $d11 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.ColumnArrangement.arrangeNF : $d11 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d11)
org.jfree.chart.block.ColumnArrangement.arrangeNF : d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d11) >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : goto [?= i0 = i0 + 1]
org.jfree.chart.block.ColumnArrangement.arrangeNF : goto [?= i0 = i0 + 1] >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : i0 = i0 + 1
org.jfree.chart.block.ColumnArrangement.arrangeNF : d0 = #Infinity >>>>>>>> org.jfree.chart.block.ColumnArrangement.arrangeNF : d1 = 0.0
