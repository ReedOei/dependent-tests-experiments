org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r3 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : r1 = (org.jfree.data.xy.XYIntervalSeriesCollection) $r3
org.jfree.data.xy.XYIntervalSeriesCollection.clone : r1 = (org.jfree.data.xy.XYIntervalSeriesCollection) $r3 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : i0 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYIntervalSeriesCollection.clone : i0 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r2 = new java.util.ArrayList
org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r2 = new java.util.ArrayList >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0)
org.jfree.data.xy.XYIntervalSeriesCollection.clone : specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : r1.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> = $r2
org.jfree.data.xy.XYIntervalSeriesCollection.clone : r1.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> = $r2 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : i1 = 0
org.jfree.data.xy.XYIntervalSeriesCollection.clone : i1 = 0 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r4 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r4 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $i2 = interfaceinvoke $r4.<java.util.List: int size()>()
org.jfree.data.xy.XYIntervalSeriesCollection.clone : $i2 = interfaceinvoke $r4.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : if i1 >= $i2
org.jfree.data.xy.XYIntervalSeriesCollection.clone : if i1 >= $i2 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r5 = r1.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
org.jfree.data.xy.XYIntervalSeriesCollection.clone : if i1 >= $i2 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : return r1
org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r5 = r1.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r6 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: org.jfree.data.xy.XYIntervalSeries getSeries(int)>(i1)
org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r6 = virtualinvoke r0.<org.jfree.data.xy.XYIntervalSeriesCollection: org.jfree.data.xy.XYIntervalSeries getSeries(int)>(i1) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r7 = virtualinvoke $r6.<org.jfree.data.xy.XYIntervalSeries: java.lang.Object clone()>()
org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r7 = virtualinvoke $r6.<org.jfree.data.xy.XYIntervalSeries: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r7)
org.jfree.data.xy.XYIntervalSeriesCollection.clone : interfaceinvoke $r5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r7) >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : i1 = i1 + 1
org.jfree.data.xy.XYIntervalSeriesCollection.clone : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : goto [?= $r4 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>]
org.jfree.data.xy.XYIntervalSeriesCollection.clone : goto [?= $r4 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>] >>>>>>>> org.jfree.data.xy.XYIntervalSeriesCollection.clone : $r4 = r0.<org.jfree.data.xy.XYIntervalSeriesCollection: java.util.List data>
