org.jfree.data.DefaultKeyedValues.sortByKeys : $r5 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r2 = newarray (org.jfree.data.DefaultKeyedValue)[i0]
org.jfree.data.DefaultKeyedValues.sortByKeys : r2 = newarray (org.jfree.data.DefaultKeyedValue)[i0] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = 0
org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : if i1 >= i0
org.jfree.data.DefaultKeyedValues.sortByKeys : if i1 >= i0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r3 = new org.jfree.data.DefaultKeyedValue
org.jfree.data.DefaultKeyedValues.sortByKeys : if i1 >= i0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r12 = new org.jfree.data.KeyedValueComparator
org.jfree.data.DefaultKeyedValues.sortByKeys : $r12 = new org.jfree.data.KeyedValueComparator >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r13 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r13 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r12.<org.jfree.data.KeyedValueComparator: void <init>(org.jfree.data.KeyedValueComparatorType,org.jfree.util.SortOrder)>($r13, r1)
org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r12.<org.jfree.data.KeyedValueComparator: void <init>(org.jfree.data.KeyedValueComparatorType,org.jfree.util.SortOrder)>($r13, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r14 = $r12
org.jfree.data.DefaultKeyedValues.sortByKeys : r14 = $r12 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r14)
org.jfree.data.DefaultKeyedValues.sortByKeys : staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r14) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void clear()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void clear()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = 0
org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $i3 = lengthof r2
org.jfree.data.DefaultKeyedValues.sortByKeys : $i3 = lengthof r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : if i2 >= $i3
org.jfree.data.DefaultKeyedValues.sortByKeys : if i2 >= $i3 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r4 = r2[i2]
org.jfree.data.DefaultKeyedValues.sortByKeys : if i2 >= $i3 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : return
org.jfree.data.DefaultKeyedValues.sortByKeys : r4 = r2[i2] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r15 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : $r15 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r16 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Number getValue()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : $r16 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>($r15, $r16)
org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>($r15, $r16) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = i2 + 1
org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = i2 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= $i3 = lengthof r2]
org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= $i3 = lengthof r2] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $i3 = lengthof r2
org.jfree.data.DefaultKeyedValues.sortByKeys : $r3 = new org.jfree.data.DefaultKeyedValue >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r6 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r6 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues.sortByKeys : $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r8 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues.sortByKeys : $r8 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues.sortByKeys : $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r11 = (java.lang.Number) $r10
org.jfree.data.DefaultKeyedValues.sortByKeys : $r11 = (java.lang.Number) $r10 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r3.<org.jfree.data.DefaultKeyedValue: void <init>(java.lang.Comparable,java.lang.Number)>($r8, $r11)
org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r3.<org.jfree.data.DefaultKeyedValue: void <init>(java.lang.Comparable,java.lang.Number)>($r8, $r11) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r2[i1] = $r3
org.jfree.data.DefaultKeyedValues.sortByKeys : r2[i1] = $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = i1 + 1
org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = i1 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= (branch)]
org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= (branch)] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : if i1 >= i0
