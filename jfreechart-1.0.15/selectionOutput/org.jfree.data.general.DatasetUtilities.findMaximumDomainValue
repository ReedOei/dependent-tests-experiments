org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z0 = r0 instanceof org.jfree.data.DomainInfo
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z0 = r0 instanceof org.jfree.data.DomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z0 == 0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r1 = (org.jfree.data.DomainInfo) r0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d2 = #-Infinity
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d2 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i1 = 0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $b4 = d2 cmpl #-Infinity
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $b4 = d2 cmpl #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $b4 != 0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r3 = null
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $r5 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $r5 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : specialinvoke $r5.<java.lang.Double: void <init>(double)>(d2)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : specialinvoke $r5.<java.lang.Double: void <init>(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r3 = $r5
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r3 = $r5 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : return r3
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r3 = null >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= return r3]
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= return r3] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : return r3
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i3 = 0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i3 >= i2
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i1 >= i0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z1 = r0 instanceof org.jfree.data.xy.IntervalXYDataset >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r2 = (org.jfree.data.xy.IntervalXYDataset) r0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d0 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z2 != 0
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z2 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d2 = staticinvoke <java.lang.Math: double max(double,double)>(d2, d0)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if $z2 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : if i3 >= i2
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d2 = staticinvoke <java.lang.Math: double max(double,double)>(d2, d0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r2 = (org.jfree.data.xy.IntervalXYDataset) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d0 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : d0 = interfaceinvoke r2.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)]
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : goto [?= $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)] >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : r1 = (org.jfree.data.DomainInfo) r0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $r4 = new java.lang.Double
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $d1 = interfaceinvoke r1.<org.jfree.data.DomainInfo: double getDomainUpperBound(boolean)>(1)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : $d1 = interfaceinvoke r1.<org.jfree.data.DomainInfo: double getDomainUpperBound(boolean)>(1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d1)
org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findMaximumDomainValue : return $r4
