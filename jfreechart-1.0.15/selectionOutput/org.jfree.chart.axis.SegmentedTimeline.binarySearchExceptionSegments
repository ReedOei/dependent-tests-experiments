org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>()
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i4 = i0 + i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i4 = i0 + i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i2 = $i4 / 2
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i2 = $i4 / 2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : r2 = (org.jfree.chart.axis.SegmentedTimeline$Segment) $r5
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : r2 = (org.jfree.chart.axis.SegmentedTimeline$Segment) $r5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r2)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return i2
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z1 == 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return i2
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean before(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean before(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z2 == 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = i2 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean after(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean after(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z3 == 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = i2 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r6 = new java.lang.IllegalStateException
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r6 = new java.lang.IllegalStateException >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid condition.")
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid condition.") >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : throw $r6
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = i2 - 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)]
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)]
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = i2 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)]
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)]
