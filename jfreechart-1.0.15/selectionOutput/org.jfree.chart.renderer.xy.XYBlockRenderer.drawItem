org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d0 = interfaceinvoke r8.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d1 = interfaceinvoke r8.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d1 = interfaceinvoke r8.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d2 = 0.0
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d2 = 0.0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $z0 = r8 instanceof org.jfree.data.xy.XYZDataset
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $z0 = r8 instanceof org.jfree.data.xy.XYZDataset >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if $z0 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r14 = (org.jfree.data.xy.XYZDataset) r8
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r15 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r15 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r10 = interfaceinvoke $r15.<org.jfree.chart.renderer.PaintScale: java.awt.Paint getPaint(double)>(d2)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r10 = interfaceinvoke $r15.<org.jfree.chart.renderer.PaintScale: java.awt.Paint getPaint(double)>(d2) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d7 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d8 = d0 + $d7
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d8 = d0 + $d7 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r16 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r16 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d3 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d8, r3, $r16)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d3 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d8, r3, $r16) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d9 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d10 = d1 + $d9
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d10 = d1 + $d9 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r17 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r17 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d4 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d10, r3, $r17)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d4 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d10, r3, $r17) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d11 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockWidth> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d12 = d0 + $d11
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d12 = d0 + $d11 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d13 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d13 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double xOffset> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d14 = $d12 + $d13
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d14 = $d12 + $d13 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r18 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r18 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d5 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d14, r3, $r18)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d5 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d14, r3, $r18) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d15 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d15 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double blockHeight> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d16 = d1 + $d15
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d16 = d1 + $d15 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d17 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d17 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: double yOffset> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d18 = $d16 + $d17
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d18 = $d16 + $d17 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r19 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r19 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d6 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d18, r3, $r19)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d6 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d18, r3, $r19) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r11 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r11 = virtualinvoke r5.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r20 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r20 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $z1 = virtualinvoke r11.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r20)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $z1 = virtualinvoke r11.<org.jfree.chart.plot.PlotOrientation: boolean equals(java.lang.Object)>($r20) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if $z1 == 0
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r22 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r22 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d25 = staticinvoke <java.lang.Math: double min(double,double)>(d3, d5)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d25 = staticinvoke <java.lang.Math: double min(double,double)>(d3, d5) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d26 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d6)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d26 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d6) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d27 = d5 - d3
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d27 = d5 - d3 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d28 = staticinvoke <java.lang.Math: double abs(double)>($d27)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d28 = staticinvoke <java.lang.Math: double abs(double)>($d27) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d29 = d6 - d4
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d29 = d6 - d4 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d30 = staticinvoke <java.lang.Math: double abs(double)>($d29)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d30 = staticinvoke <java.lang.Math: double abs(double)>($d29) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : specialinvoke $r22.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d25, $d26, $d28, $d30)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : specialinvoke $r22.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d25, $d26, $d28, $d30) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r12 = $r22
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r12 = $r22 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r12)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r12) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r23 = new java.awt.BasicStroke
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r23 = new java.awt.BasicStroke >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : specialinvoke $r23.<java.awt.BasicStroke: void <init>(float)>(1.0F)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : specialinvoke $r23.<java.awt.BasicStroke: void <init>(float)>(1.0F) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r23)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r23) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r12)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r12) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r13 = virtualinvoke r2.<org.jfree.chart.renderer.xy.XYItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r13 = virtualinvoke r2.<org.jfree.chart.renderer.xy.XYItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>() >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if r13 == null
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if r13 == null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,double,double)>(r13, r12, r8, i0, i1, 0.0, 0.0)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : if r13 == null >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : return
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,double,double)>(r13, r12, r8, i0, i1, 0.0, 0.0) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : return
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r21 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d19 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d6)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d19 = staticinvoke <java.lang.Math: double min(double,double)>(d4, d6) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d20 = staticinvoke <java.lang.Math: double min(double,double)>(d3, d5)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d20 = staticinvoke <java.lang.Math: double min(double,double)>(d3, d5) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d21 = d6 - d4
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d21 = d6 - d4 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d22 = staticinvoke <java.lang.Math: double abs(double)>($d21) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d23 = d3 - d5
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d23 = d3 - d5 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d24 = staticinvoke <java.lang.Math: double abs(double)>($d23)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $d24 = staticinvoke <java.lang.Math: double abs(double)>($d23) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d19, $d20, $d22, $d24)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d19, $d20, $d22, $d24) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r12 = $r21
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : r12 = $r21 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10)]
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : goto [?= virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10)] >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r10)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r14 = (org.jfree.data.xy.XYZDataset) r8 >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d2 = interfaceinvoke $r14.<org.jfree.data.xy.XYZDataset: double getZValue(int,int)>(i0, i1)
org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : d2 = interfaceinvoke $r14.<org.jfree.data.xy.XYZDataset: double getZValue(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem : $r15 = r0.<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.chart.renderer.PaintScale paintScale>
