org.jfree.chart.axis.SegmentedTimeline.addExceptions : r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.SegmentedTimeline.addExceptions : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.addExceptions : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.SegmentedTimeline.addExceptions : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : return
org.jfree.chart.axis.SegmentedTimeline.addExceptions : $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : $r4 = (java.util.Date) $r3
org.jfree.chart.axis.SegmentedTimeline.addExceptions : $r4 = (java.util.Date) $r3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: void addException(java.util.Date)>($r4)
org.jfree.chart.axis.SegmentedTimeline.addExceptions : virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: void addException(java.util.Date)>($r4) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.SegmentedTimeline.addExceptions : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addExceptions : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
