org.jfree.chart.block.BlockContainer.draw : r4 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z0 == 0
org.jfree.chart.block.BlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15
org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z2 == 0
org.jfree.chart.block.BlockContainer.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r22 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if r4 == null
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r23 = new org.jfree.chart.block.BlockResult
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : $r23 = new org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.block.BlockContainer.draw : specialinvoke $r23.<org.jfree.chart.block.BlockResult: void <init>()>()
org.jfree.chart.block.BlockContainer.draw : specialinvoke $r23.<org.jfree.chart.block.BlockResult: void <init>()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r22 = $r23
org.jfree.chart.block.BlockContainer.draw : r22 = $r23 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r22.<org.jfree.chart.block.BlockResult: void setEntityCollection(org.jfree.chart.entity.EntityCollection)>(r4)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r22.<org.jfree.chart.block.BlockResult: void setEntityCollection(org.jfree.chart.entity.EntityCollection)>(r4) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20
org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1
org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4
org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7)
org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r10 = $r21
org.jfree.chart.block.BlockContainer.draw : r10 = $r21 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if r4 == null
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z3 = r11 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.BlockContainer.draw : $z3 = r11 instanceof org.jfree.chart.block.EntityBlockResult >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z3 == 0
org.jfree.chart.block.BlockContainer.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r12 = (org.jfree.chart.block.EntityBlockResult) r11
org.jfree.chart.block.BlockContainer.draw : if $z3 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.BlockContainer.draw : r12 = (org.jfree.chart.block.EntityBlockResult) r11 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r13 = interfaceinvoke r12.<org.jfree.chart.block.EntityBlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.block.BlockContainer.draw : r13 = interfaceinvoke r12.<org.jfree.chart.block.EntityBlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r4.<org.jfree.chart.entity.StandardEntityCollection: void addAll(org.jfree.chart.entity.EntityCollection)>(r13)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r4.<org.jfree.chart.entity.StandardEntityCollection: void addAll(org.jfree.chart.entity.EntityCollection)>(r13) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z1 == 0
org.jfree.chart.block.BlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r14 = new org.jfree.chart.entity.StandardEntityCollection
org.jfree.chart.block.BlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $r14 = new org.jfree.chart.entity.StandardEntityCollection >>>>>>>> org.jfree.chart.block.BlockContainer.draw : specialinvoke $r14.<org.jfree.chart.entity.StandardEntityCollection: void <init>()>()
org.jfree.chart.block.BlockContainer.draw : specialinvoke $r14.<org.jfree.chart.entity.StandardEntityCollection: void <init>()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r4 = $r14
org.jfree.chart.block.BlockContainer.draw : r4 = $r14 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
