org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b0 <= 0
org.jfree.chart.block.LineBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : return
org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b1 > 0
org.jfree.chart.block.LineBorder.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : return
org.jfree.chart.block.LineBorder.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12
org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0
org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14
org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0
org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16
org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17
org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>()
org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : r3 = $r10
org.jfree.chart.block.LineBorder.draw : r3 = $r10 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b2 <= 0
org.jfree.chart.block.LineBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b3 <= 0
org.jfree.chart.block.LineBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b4 <= 0
org.jfree.chart.block.LineBorder.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b5 <= 0
org.jfree.chart.block.LineBorder.draw : if $b5 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : if $b5 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : return
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : return
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
