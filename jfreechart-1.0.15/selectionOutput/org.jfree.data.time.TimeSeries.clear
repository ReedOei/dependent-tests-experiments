org.jfree.data.time.TimeSeries.clear : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.clear : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeries.clear : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeries.clear : if $i0 <= 0
org.jfree.data.time.TimeSeries.clear : if $i0 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.clear : $r2 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.clear : if $i0 <= 0 >>>>>>>> org.jfree.data.time.TimeSeries.clear : return
org.jfree.data.time.TimeSeries.clear : $r2 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.clear : interfaceinvoke $r2.<java.util.List: void clear()>()
org.jfree.data.time.TimeSeries.clear : interfaceinvoke $r2.<java.util.List: void clear()>() >>>>>>>> org.jfree.data.time.TimeSeries.clear : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = null
org.jfree.data.time.TimeSeries.clear : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = null >>>>>>>> org.jfree.data.time.TimeSeries.clear : r0.<org.jfree.data.time.TimeSeries: double minY> = #NaN
org.jfree.data.time.TimeSeries.clear : r0.<org.jfree.data.time.TimeSeries: double minY> = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.clear : r0.<org.jfree.data.time.TimeSeries: double maxY> = #NaN
org.jfree.data.time.TimeSeries.clear : r0.<org.jfree.data.time.TimeSeries: double maxY> = #NaN >>>>>>>> org.jfree.data.time.TimeSeries.clear : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>()
org.jfree.data.time.TimeSeries.clear : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.time.TimeSeries.clear : return
