org.jfree.data.Range.scale : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "base") >>>>>>>> org.jfree.data.Range.scale : $b0 = d0 cmpg 0.0
org.jfree.data.Range.scale : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.data.Range.scale : if $b0 >= 0
org.jfree.data.Range.scale : if $b0 >= 0 >>>>>>>> org.jfree.data.Range.scale : $r1 = new java.lang.IllegalArgumentException
org.jfree.data.Range.scale : if $b0 >= 0 >>>>>>>> org.jfree.data.Range.scale : $r2 = new org.jfree.data.Range
org.jfree.data.Range.scale : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.scale : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.scale : $d1 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.scale : $d2 = $d1 * d0
org.jfree.data.Range.scale : $d2 = $d1 * d0 >>>>>>>> org.jfree.data.Range.scale : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.scale : $d3 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.scale : $d4 = $d3 * d0
org.jfree.data.Range.scale : $d4 = $d3 * d0 >>>>>>>> org.jfree.data.Range.scale : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4)
org.jfree.data.Range.scale : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.data.Range.scale : return $r2
org.jfree.data.Range.scale : $r1 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.data.Range.scale : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative \'factor\' argument.")
org.jfree.data.Range.scale : specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative \'factor\' argument.") >>>>>>>> org.jfree.data.Range.scale : throw $r1
