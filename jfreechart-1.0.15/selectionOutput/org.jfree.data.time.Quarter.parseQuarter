org.jfree.data.time.Quarter.parseQuarter : i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("Q") >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : if i0 != -1
org.jfree.data.time.Quarter.parseQuarter : if i0 != -1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r5 = new org.jfree.data.time.TimePeriodFormatException
org.jfree.data.time.Quarter.parseQuarter : if i0 != -1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i2 = virtualinvoke r0.<java.lang.String: int length()>()
org.jfree.data.time.Quarter.parseQuarter : $i2 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i3 = $i2 - 1
org.jfree.data.time.Quarter.parseQuarter : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : if i0 != $i3
org.jfree.data.time.Quarter.parseQuarter : if i0 != $i3 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r6 = new org.jfree.data.time.TimePeriodFormatException
org.jfree.data.time.Quarter.parseQuarter : if i0 != $i3 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i4 = i0 + 1
org.jfree.data.time.Quarter.parseQuarter : $i4 = i0 + 1 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i5 = i0 + 2
org.jfree.data.time.Quarter.parseQuarter : $i5 = i0 + 2 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5)
org.jfree.data.time.Quarter.parseQuarter : r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1)
org.jfree.data.time.Quarter.parseQuarter : i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r7 = new java.lang.StringBuilder
org.jfree.data.time.Quarter.parseQuarter : $r7 = new java.lang.StringBuilder >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()
org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r7.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)
org.jfree.data.time.Quarter.parseQuarter : $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)
org.jfree.data.time.Quarter.parseQuarter : $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i6 = i0 + 2
org.jfree.data.time.Quarter.parseQuarter : $i6 = i0 + 2 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $i7 = virtualinvoke r0.<java.lang.String: int length()>()
org.jfree.data.time.Quarter.parseQuarter : $i7 = virtualinvoke r0.<java.lang.String: int length()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7)
org.jfree.data.time.Quarter.parseQuarter : $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i6, $i7) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)
org.jfree.data.time.Quarter.parseQuarter : $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.data.time.Quarter.parseQuarter : r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r12 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(47, 32)
org.jfree.data.time.Quarter.parseQuarter : r12 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(47, 32) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r13 = virtualinvoke r12.<java.lang.String: java.lang.String replace(char,char)>(44, 32)
org.jfree.data.time.Quarter.parseQuarter : r13 = virtualinvoke r12.<java.lang.String: java.lang.String replace(char,char)>(44, 32) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r14 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(45, 32)
org.jfree.data.time.Quarter.parseQuarter : r14 = virtualinvoke r13.<java.lang.String: java.lang.String replace(char,char)>(45, 32) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r15 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>()
org.jfree.data.time.Quarter.parseQuarter : $r15 = virtualinvoke r14.<java.lang.String: java.lang.String trim()>() >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r3 = staticinvoke <org.jfree.data.time.Year: org.jfree.data.time.Year parseYear(java.lang.String)>($r15)
org.jfree.data.time.Quarter.parseQuarter : r3 = staticinvoke <org.jfree.data.time.Year: org.jfree.data.time.Year parseYear(java.lang.String)>($r15) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : $r16 = new org.jfree.data.time.Quarter
org.jfree.data.time.Quarter.parseQuarter : $r16 = new org.jfree.data.time.Quarter >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r16.<org.jfree.data.time.Quarter: void <init>(int,org.jfree.data.time.Year)>(i1, r3)
org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r16.<org.jfree.data.time.Quarter: void <init>(int,org.jfree.data.time.Year)>(i1, r3) >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : r4 = $r16
org.jfree.data.time.Quarter.parseQuarter : r4 = $r16 >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : return r4
org.jfree.data.time.Quarter.parseQuarter : $r6 = new org.jfree.data.time.TimePeriodFormatException >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r6.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Q found at end of string.")
org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r6.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Q found at end of string.") >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : throw $r6
org.jfree.data.time.Quarter.parseQuarter : $r5 = new org.jfree.data.time.TimePeriodFormatException >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r5.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Missing Q.")
org.jfree.data.time.Quarter.parseQuarter : specialinvoke $r5.<org.jfree.data.time.TimePeriodFormatException: void <init>(java.lang.String)>("Missing Q.") >>>>>>>> org.jfree.data.time.Quarter.parseQuarter : throw $r5
