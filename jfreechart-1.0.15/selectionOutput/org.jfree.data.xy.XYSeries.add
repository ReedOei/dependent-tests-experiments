org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z1 == 0
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z4 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>
org.jfree.data.xy.XYSeries.add : $z4 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z4 != 0
org.jfree.data.xy.XYSeries.add : if $z4 != 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r13 = virtualinvoke r3.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYSeries.add : if $z4 != 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r15 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r15 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount>
org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i7 <= $i8
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r16 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>()
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : return
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.xy.XYSeries.add : return
org.jfree.data.xy.XYSeries.add : $r16 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object remove(int)>(0)
org.jfree.data.xy.XYSeries.add : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object remove(int)>(0) >>>>>>>> org.jfree.data.xy.XYSeries.add : r18 = (org.jfree.data.xy.XYDataItem) $r17
org.jfree.data.xy.XYSeries.add : r18 = (org.jfree.data.xy.XYDataItem) $r17 >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)>(r18)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)>(r18) >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : $r13 = virtualinvoke r3.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYSeries.add : i6 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>($r13)
org.jfree.data.xy.XYSeries.add : i6 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>($r13) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i6 < 0
org.jfree.data.xy.XYSeries.add : if i6 < 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r14 = new org.jfree.data.general.SeriesException
org.jfree.data.xy.XYSeries.add : if i6 < 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r15 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r14 = new org.jfree.data.general.SeriesException >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r14.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.")
org.jfree.data.xy.XYSeries.add : specialinvoke $r14.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.") >>>>>>>> org.jfree.data.xy.XYSeries.add : throw $r14
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3)
org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= 0
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z2 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>
org.jfree.data.xy.XYSeries.add : $z2 = r0.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z2 == 0
org.jfree.data.xy.XYSeries.add : if $z2 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r6 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if $z2 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r12 = new org.jfree.data.general.SeriesException
org.jfree.data.xy.XYSeries.add : $r12 = new org.jfree.data.general.SeriesException >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r12.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.")
org.jfree.data.xy.XYSeries.add : specialinvoke $r12.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.") >>>>>>>> org.jfree.data.xy.XYSeries.add : throw $r12
org.jfree.data.xy.XYSeries.add : $r6 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i1 = interfaceinvoke $r6.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.add : i1 = interfaceinvoke $r6.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= i1
org.jfree.data.xy.XYSeries.add : if i0 >= i1 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r7 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if i0 >= i1 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r9 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r9 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i5 = interfaceinvoke $r9.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.add : $i5 = interfaceinvoke $r9.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= $i5
org.jfree.data.xy.XYSeries.add : if i0 >= $i5 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r10 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : if i0 >= $i5 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r11 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r11 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)] >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : $r10 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(i0, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r10.<java.util.List: void add(int,java.lang.Object)>(i0, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : $r7 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeries.add : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.add : $i4 = virtualinvoke r3.<org.jfree.data.xy.XYDataItem: int compareTo(java.lang.Object)>($r8)
org.jfree.data.xy.XYSeries.add : $i4 = virtualinvoke r3.<org.jfree.data.xy.XYDataItem: int compareTo(java.lang.Object)>($r8) >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i4 != 0
org.jfree.data.xy.XYSeries.add : if $i4 != 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = i0 + 1
org.jfree.data.xy.XYSeries.add : if $i4 != 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r9 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : i0 = i0 + 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= i1
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i2 = neg i0
org.jfree.data.xy.XYSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1
org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
