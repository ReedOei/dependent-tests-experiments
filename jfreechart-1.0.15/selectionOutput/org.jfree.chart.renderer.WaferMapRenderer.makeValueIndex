org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d3 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d4 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d4 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d0 = $d3 - $d4
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d0 = $d3 - $d4 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $i1 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $i1 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d5 = (double) $i1
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d5 = (double) $i1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d1 = d0 / $d5
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d1 = d0 / $d5 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : i0 = 0
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : i0 = 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d6 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d6 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d2 = $d6 + d1
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d2 = $d6 + d1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if $z0 == 0
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : return
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : r5 = (java.lang.Number) $r6
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : r5 = (java.lang.Number) $r6 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d7 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d7 = virtualinvoke r5.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $b2 = $d7 cmpl d2
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $b2 = $d7 cmpl d2 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if $b2 <= 0
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if $b2 <= 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d2 = d2 + d1
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if $b2 <= 0 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $r7 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex>
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $r7 = r0.<org.jfree.chart.renderer.WaferMapRenderer: java.util.Map paintIndex> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $r8 = new java.lang.Integer
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $r8 = new java.lang.Integer >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : specialinvoke $r8.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : specialinvoke $r8.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r8)
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r8) >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : goto [?= $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : d2 = d2 + d1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : i0 = i0 + 1
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : i0 = i0 + 1 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $i3 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $i3 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if i0 <= $i3
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if i0 <= $i3 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : i0 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit>
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : if i0 <= $i3 >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d7 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : i0 = r0.<org.jfree.chart.renderer.WaferMapRenderer: int paintLimit> >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : goto [?= $d7 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()]
org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : goto [?= $d7 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()] >>>>>>>> org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex : $d7 = virtualinvoke r5.<java.lang.Number: double doubleValue()>()
