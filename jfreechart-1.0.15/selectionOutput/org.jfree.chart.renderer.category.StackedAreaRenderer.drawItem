org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean isSeriesVisible(int)>(i0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z0 != 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : return
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z0 != 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : n0 = null
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : n0 = null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r8 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r8 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d0 = 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d0 = 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r9 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, i1)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r9 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r9 == null
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r9 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d0 = virtualinvoke r9.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r9 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r18 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r18 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r19 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] getStackValues(org.jfree.data.category.CategoryDataset,int,int,int[])>(r7, i0, i1, $r18)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r19 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] getStackValues(org.jfree.data.category.CategoryDataset,int,int,int[])>(r7, i0, i1, $r18) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i4 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: int getColumnCount()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i4 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: int getColumnCount()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r20 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r20 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d2 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i4, r3, $r20)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d2 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i4, r3, $r20) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d3 = 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d3 = 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i5 = i1 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i5 = i1 - 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i6 = staticinvoke <java.lang.Math: int max(int,int)>($i5, 0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r21 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, $i6)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r21 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, $i6) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r21 == null
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r21 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d3 = virtualinvoke r21.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r21 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i9 = i1 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i9 = i1 - 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r23 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r23 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r24 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] getStackValues(org.jfree.data.category.CategoryDataset,int,int,int[])>(r7, i0, $i10, $r23)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r24 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] getStackValues(org.jfree.data.category.CategoryDataset,int,int,int[])>(r7, i0, $i10, $r23) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i11 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: int getColumnCount()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i11 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: int getColumnCount()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r25 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r25 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d5 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i11, r3, $r25)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d5 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryStart(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i11, r3, $r25) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : i3 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: int getColumnCount()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : i3 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: int getColumnCount()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d6 = 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d6 = 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i12 = i1 + 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i12 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i13 = i3 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i13 = i3 - 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i13)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i13) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r26 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, $i14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r26 = interfaceinvoke r7.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i0, $i14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r26 == null
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r26 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d6 = virtualinvoke r26.<java.lang.Number: double doubleValue()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r26 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i18 = i1 + 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i18 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i19 = i3 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i19 = i3 - 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i19)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i20 = staticinvoke <java.lang.Math: int min(int,int)>($i18, $i19) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r28 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r28 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r29 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] getStackValues(org.jfree.data.category.CategoryDataset,int,int,int[])>(r7, i0, $i20, $r28)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r29 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] getStackValues(org.jfree.data.category.CategoryDataset,int,int,int[])>(r7, i0, $i20, $r28) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i21 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: int getColumnCount()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i21 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: int getColumnCount()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r30 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r30 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d8 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i21, r3, $r30)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d8 = virtualinvoke r5.<org.jfree.chart.axis.CategoryAxis: double getCategoryEnd(int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(i1, $i21, r3, $r30) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d9 = d5
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d9 = d5 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d10 = d8
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d10 = d8 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r10 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] averageStackValues(double[],double[])>(r24, r19)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r10 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] averageStackValues(double[],double[])>(r24, r19) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r11 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] averageStackValues(double[],double[])>(r19, r29)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r11 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] averageStackValues(double[],double[])>(r19, r29) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r12 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] adjustedStackValues(double[],double[])>(r24, r19)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r12 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] adjustedStackValues(double[],double[])>(r24, r19) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r13 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] adjustedStackValues(double[],double[])>(r19, r29)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r13 = specialinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: double[] adjustedStackValues(double[],double[])>(r19, r29) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r14 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r14 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r31 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r31 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : specialinvoke $r31.<java.awt.geom.GeneralPath: void <init>()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : specialinvoke $r31.<java.awt.geom.GeneralPath: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r15 = $r31
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r15 = $r31 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r32 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r32 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : specialinvoke $r32.<java.awt.geom.GeneralPath: void <init>()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : specialinvoke $r32.<java.awt.geom.GeneralPath: void <init>()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r16 = $r32
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r16 = $r32 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b22 = d0 cmpl 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b22 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b22 < 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b22 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d14 = r19[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b22 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d31 = r19[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d31 = r19[0] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d32 = d0 + $d31
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d32 = d0 + $d31 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d33 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d32, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d33 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d32, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f0 = (float) $d33
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f0 = (float) $d33 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d34 = r19[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d34 = r19[0] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d35 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d34, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d35 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d34, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f20 = (float) $d35
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f20 = (float) $d35 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d36 = r12[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d36 = r12[0] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d37 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d36, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d37 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d36, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f21 = (float) $d37
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f21 = (float) $d37 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b25 = d3 cmpl 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b25 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b25 < 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b25 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f22 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b25 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d38 = d3 + d0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d38 = d3 + d0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d39 = $d38 / 2.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d39 = $d38 / 2.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d40 = r10[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d40 = r10[0] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d41 = $d39 + $d40
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d41 = $d39 + $d40 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d42 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d41, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d42 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d41, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f25 = (float) $d42
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f25 = (float) $d42 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f26 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f26 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f26, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f26, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f27 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f27 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f27, f20)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f27, f20) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f28 = (float) d9
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f28 = (float) d9 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f28, f21)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f28, f21) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f29 = (float) d9
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f29 = (float) d9 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f29, f25)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f29, f25) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d43 = r13[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d43 = r13[0] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d44 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d43, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d44 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d43, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f30 = (float) $d44
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f30 = (float) $d44 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b26 = d6 cmpl 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b26 = d6 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b26 < 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b26 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f31 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b26 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d45 = d0 + d6
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d45 = d0 + d6 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d46 = $d45 / 2.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d46 = $d45 / 2.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d47 = r11[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d47 = r11[0] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d48 = $d46 + $d47
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d48 = $d46 + $d47 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d49 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d48, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d49 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d48, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f34 = (float) $d49
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f34 = (float) $d49 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f35 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f35 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f35, f20)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f35, f20) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f36 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f36 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f36, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f36, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f37 = (float) d10
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f37 = (float) d10 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f37, f34)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f37, f34) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f38 = (float) d10
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f38 = (float) d10 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f38, f30)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f38, f30) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r34 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: java.awt.Paint getItemPaint(int,int)>(i0, i1)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r40 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : return
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r40 = virtualinvoke r4.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d50 = (double) f0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d50 = (double) f0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b29 = d0 cmpg 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b29 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b29 >= 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b29 >= 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z4 = 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b29 >= 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z4 = 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z4 = 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,double,double,boolean)>(r1, $r40, r7, i0, i1, d2, $d50, $z4)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,double,double,boolean)>(r1, $r40, r7, i0, i1, d2, $d50, $z4) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : return
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z4 = 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,double,double,boolean)>(r1, $r40, r7, i0, i1, d2, $d50, $z4)]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,double,double,boolean)>(r1, $r40, r7, i0, i1, d2, $d50, $z4)] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.chart.plot.PlotOrientation,org.jfree.data.category.CategoryDataset,int,int,double,double,boolean)>(r1, $r40, r7, i0, i1, d2, $d50, $z4)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r34 = virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: java.awt.Paint getItemPaint(int,int)>(i0, i1) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r34)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r34) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r15)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r15) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r8 == null
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r8 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r35 = new java.awt.geom.GeneralPath
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if r8 == null >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= return]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= return] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : return
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r35 = new java.awt.geom.GeneralPath >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : specialinvoke $r35.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r15)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : specialinvoke $r35.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(r15) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r36 = $r35
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r36 = $r35 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r36.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>(r16, 0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r36.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>(r16, 0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r37 = r36
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : r37 = r36 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void addItemEntity(org.jfree.chart.entity.EntityCollection,org.jfree.data.category.CategoryDataset,int,int,java.awt.Shape)>(r8, r7, i0, i1, r37)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: void addItemEntity(org.jfree.chart.entity.EntityCollection,org.jfree.data.category.CategoryDataset,int,int,java.awt.Shape)>(r8, r7, i0, i1, r37) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= return]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f31 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f31, f20)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f31, f20) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f32 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f32 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f32, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f32, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f33 = (float) d10
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f33 = (float) d10 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f33, f30)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f33, f30) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f22 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f22, f20)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f22, f20) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f23 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f23 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f23, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f23, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f24 = (float) d9
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f24 = (float) d9 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f24, f21)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f24, f21) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: java.lang.Object clone()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= $d43 = r13[0]]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= $d43 = r13[0]] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d43 = r13[0]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d14 = r19[1] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d15 = d0 + $d14
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d15 = d0 + $d14 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d16 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d15, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d16 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d15, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f0 = (float) $d16
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f0 = (float) $d16 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d17 = r19[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d17 = r19[1] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d18 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d17, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d18 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d17, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f1 = (float) $d18
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f1 = (float) $d18 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d19 = r12[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d19 = r12[1] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d20 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d19, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d20 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d19, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f2 = (float) $d20
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f2 = (float) $d20 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b23 = d3 cmpl 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b23 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b23 < 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b23 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d21 = d3 + d0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b23 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f9 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f9 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f9, f1)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f9, f1) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f10 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f10 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f10, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f10, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f11 = (float) d9
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f11 = (float) d9 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f11, f2)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f11, f2) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d25 = r13[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d25 = r13[1] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d26 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d25, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d26 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d25, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f12 = (float) $d26
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f12 = (float) $d26 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b24 = d6 cmpl 0.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $b24 = d6 cmpl 0.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b24 < 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b24 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d27 = d0 + d6
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $b24 < 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f17 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f17 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f17, f1)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f17, f1) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f18 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f18 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f18, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f18, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f19 = (float) d10
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f19 = (float) d10 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f19, f12)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f19, f12) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if i2 != 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d27 = d0 + d6 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d28 = $d27 / 2.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d28 = $d27 / 2.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d29 = r11[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d29 = r11[1] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d12 = $d28 + $d29
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d12 = $d28 + $d29 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d30 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d12, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d30 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d12, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f4 = (float) $d30
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f4 = (float) $d30 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f13 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f13 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f13, f1)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f13, f1) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f14 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f14 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f14, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f14, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f15 = (float) d10
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f15 = (float) d10 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f15, f4)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f15, f4) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f16 = (float) d10
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f16 = (float) d10 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f16, f12)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f16, f12) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r16.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= (branch)]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d21 = d3 + d0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d22 = $d21 / 2.0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d22 = $d21 / 2.0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d23 = r10[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d23 = r10[1] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d11 = $d22 + $d23
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d11 = $d22 + $d23 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d24 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d11, r3, r14)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d24 = virtualinvoke r6.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d11, r3, r14) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f3 = (float) $d24
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : f3 = (float) $d24 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f5 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f5 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f5, f0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void moveTo(float,float)>($f5, f0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f6 = (float) d2
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f6 = (float) d2 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f6, f1)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f6, f1) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f7 = (float) d9
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f7 = (float) d9 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f7, f2)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f7, f2) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f8 = (float) d9
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $f8 = (float) d9 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f8, f3)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void lineTo(float,float)>($f8, f3) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void closePath()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : virtualinvoke r15.<java.awt.geom.GeneralPath: void closePath()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= $d25 = r13[1]]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : goto [?= $d25 = r13[1]] >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $d25 = r13[1]
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d6 = virtualinvoke r26.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z3 = r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean renderAsPercentages>
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z3 = r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean renderAsPercentages> >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z3 == 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i15 = i1 + 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z3 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i18 = i1 + 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i15 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i16 = i3 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i16 = i3 - 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i16) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r27 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r27 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d7 = staticinvoke <org.jfree.data.DataUtilities: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(r7, $i17, $r27)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d7 = staticinvoke <org.jfree.data.DataUtilities: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(r7, $i17, $r27) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d6 = d6 / d7
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d6 = d6 / d7 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i18 = i1 + 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d3 = virtualinvoke r21.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z2 = r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean renderAsPercentages>
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z2 = r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean renderAsPercentages> >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z2 == 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i7 = i1 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i9 = i1 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i7 = i1 - 1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 0)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, 0) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r22 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r22 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d4 = staticinvoke <org.jfree.data.DataUtilities: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(r7, $i8, $r22)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d4 = staticinvoke <org.jfree.data.DataUtilities: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(r7, $i8, $r22) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d3 = d3 / d4
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d3 = d3 / d4 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $i9 = i1 - 1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d0 = virtualinvoke r9.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z1 = r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean renderAsPercentages>
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $z1 = r0.<org.jfree.chart.renderer.category.StackedAreaRenderer: boolean renderAsPercentages> >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z1 == 0
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r17 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r18 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r17 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>() >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d1 = staticinvoke <org.jfree.data.DataUtilities: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(r7, i1, $r17)
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d1 = staticinvoke <org.jfree.data.DataUtilities: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(r7, i1, $r17) >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d0 = d0 / d1
org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : d0 = d0 / d1 >>>>>>>> org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem : $r18 = virtualinvoke r2.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>()
