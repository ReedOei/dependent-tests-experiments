org.jfree.chart.plot.WaferMapPlot.drawChipGrid : r3 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r5 = virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: java.awt.geom.Ellipse2D getWaferEdge(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r5 = virtualinvoke r0.<org.jfree.chart.plot.WaferMapPlot: java.awt.geom.Ellipse2D getWaferEdge(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r5)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r5) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r6 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r6 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : r4 = $r6
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : r4 = $r6 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i0 = 35
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i0 = 35 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i1 = 20
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i1 = 20 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d0 = 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d0 = 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r7 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r7 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $r7 == null
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $r7 == null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r8 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $r7 == null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d3 = 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d3 = 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d4 = 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d4 = 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $b5 = $d9 cmpl $d10
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $b5 = $d9 cmpl $d10 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b5 == 0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b5 == 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d5 = 0.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b5 == 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i8 = 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i8 = 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i8 > i0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i8 > i0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d44 = d1 - d3
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i8 > i0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r3)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : return
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d44 = d1 - d3 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d45 = (double) i8
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d45 = (double) i8 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d46 = d3 * $d45
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d46 = d3 * $d45 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d47 = $d44 + $d46
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d47 = $d44 + $d46 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i9 = i8 - 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i9 = i8 - 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d48 = (double) $i9
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d48 = (double) $i9 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d49 = d0 * $d48
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d49 = d0 * $d48 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d7 = $d47 + $d49
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d7 = $d47 + $d49 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i2 = 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i2 = 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i2 > i1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i2 > i1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d50 = d2 - d4
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i2 > i1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i8 = i8 + 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i8 = i8 + 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= (branch)]
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i8 > i0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d50 = d2 - d4 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d51 = (double) i2
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d51 = (double) i2 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d52 = d4 * $d51
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d52 = d4 * $d51 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d53 = $d50 + $d52
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d53 = $d50 + $d52 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i10 = i2 - 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i10 = i2 - 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d54 = (double) $i10
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d54 = (double) $i10 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d55 = d0 * $d54
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d55 = d0 * $d54 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d8 = $d53 + $d55
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d8 = $d53 + $d55 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r4.<java.awt.geom.Rectangle2D: void setFrame(double,double,double,double)>(d7, d8, d3, d4)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r4.<java.awt.geom.Rectangle2D: void setFrame(double,double,double,double)>(d7, d8, d3, d4) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r11 = <java.awt.Color: java.awt.Color white>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r11 = <java.awt.Color: java.awt.Color white> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r11)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r11) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r12 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r12 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i11 = i8 - 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i11 = i8 - 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i12 = i1 - i2
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i12 = i1 - i2 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i13 = $i12 - 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i13 = $i12 - 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r13 = virtualinvoke $r12.<org.jfree.data.general.WaferMapDataset: java.lang.Number getChipValue(int,int)>($i11, $i13)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r13 = virtualinvoke $r12.<org.jfree.data.general.WaferMapDataset: java.lang.Number getChipValue(int,int)>($i11, $i13) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $r13 == null
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $r13 == null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r14 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.chart.renderer.WaferMapRenderer renderer>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $r13 == null >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r18 = <java.awt.Color: java.awt.Color lightGray>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r18 = <java.awt.Color: java.awt.Color lightGray> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r18)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r18) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i2 = i2 + 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= (branch)]
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if i2 > i1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r14 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.chart.renderer.WaferMapRenderer renderer> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r15 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r15 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i14 = i8 - 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i14 = i8 - 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i15 = i1 - i2
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i15 = i1 - i2 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i16 = $i15 - 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i16 = $i15 - 1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r16 = virtualinvoke $r15.<org.jfree.data.general.WaferMapDataset: java.lang.Number getChipValue(int,int)>($i14, $i16)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r16 = virtualinvoke $r15.<org.jfree.data.general.WaferMapDataset: java.lang.Number getChipValue(int,int)>($i14, $i16) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r17 = virtualinvoke $r14.<org.jfree.chart.renderer.WaferMapRenderer: java.awt.Paint getChipColor(java.lang.Number)>($r16)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r17 = virtualinvoke $r14.<org.jfree.chart.renderer.WaferMapRenderer: java.awt.Paint getChipColor(java.lang.Number)>($r16) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17) >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r4)
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d5 = 0.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d6 = 0.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d6 = 0.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $b6 = $d11 cmpl $d12
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $b6 = $d11 cmpl $d12 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b6 <= 0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b6 <= 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d13 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b6 <= 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d13 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d13 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d14 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d14 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $b7 = $d15 cmpl d14
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $b7 = $d15 cmpl d14 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b7 != 0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b7 != 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d16 = d13 - d14
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : if $b7 != 0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d30 = d13 - d14
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d30 = d13 - d14 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d31 = $d30 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d31 = $d30 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d1 = d1 + $d31
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d1 = d1 + $d31 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d32 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d32 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d33 = (double) i0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d33 = (double) i0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d34 = d0 * $d33
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d34 = d0 * $d33 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d35 = $d34 - 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d35 = $d34 - 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d36 = $d32 - $d35
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d36 = $d32 - $d35 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d37 = (double) i0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d37 = (double) i0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d3 = $d36 / $d37
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d3 = $d36 / $d37 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d38 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d38 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d39 = (double) i1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d39 = (double) i1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d40 = d0 * $d39
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d40 = d0 * $d39 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d41 = $d40 - 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d41 = $d40 - 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d42 = $d38 - $d41
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d42 = $d38 - $d41 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d43 = (double) i1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d43 = (double) i1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d4 = $d42 / $d43
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d4 = $d42 / $d43 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i8 = 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d16 = d13 - d14 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d17 = $d16 / 2.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d17 = $d16 / 2.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d2 = d2 + $d17
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d2 = d2 + $d17 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d18 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d19 = (double) i0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d19 = (double) i0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d20 = d0 * $d19
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d20 = d0 * $d19 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d21 = $d20 - 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d21 = $d20 - 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d22 = $d18 - $d21
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d22 = $d18 - $d21 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d23 = (double) i0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d23 = (double) i0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d3 = $d22 / $d23
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d3 = $d22 / $d23 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d24 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d25 = (double) i1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d25 = (double) i1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d26 = d0 * $d25
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d26 = d0 * $d25 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d27 = $d26 - 1.0
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d27 = $d26 - 1.0 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d28 = $d24 - $d27
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d28 = $d24 - $d27 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d29 = (double) i1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d29 = (double) i1 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d4 = $d28 / $d29
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d4 = $d28 / $d29 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= i8 = 1]
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= i8 = 1] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i8 = 1
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d13 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d14 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d14 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= $d15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()]
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : goto [?= $d15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()] >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $d15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r8 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i3 = virtualinvoke $r8.<org.jfree.data.general.WaferMapDataset: int getMaxChipX()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i3 = virtualinvoke $r8.<org.jfree.data.general.WaferMapDataset: int getMaxChipX()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i0 = $i3 + 2
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i0 = $i3 + 2 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r9 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r9 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i4 = virtualinvoke $r9.<org.jfree.data.general.WaferMapDataset: int getMaxChipY()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $i4 = virtualinvoke $r9.<org.jfree.data.general.WaferMapDataset: int getMaxChipY()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i1 = $i4 + 2
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : i1 = $i4 + 2 >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r10 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset>
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : $r10 = r0.<org.jfree.chart.plot.WaferMapPlot: org.jfree.data.general.WaferMapDataset dataset> >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d0 = virtualinvoke $r10.<org.jfree.data.general.WaferMapDataset: double getChipSpace()>()
org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d0 = virtualinvoke $r10.<org.jfree.data.general.WaferMapDataset: double getChipSpace()>() >>>>>>>> org.jfree.chart.plot.WaferMapPlot.drawChipGrid : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
