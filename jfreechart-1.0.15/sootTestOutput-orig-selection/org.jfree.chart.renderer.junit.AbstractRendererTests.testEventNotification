org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1)
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1) >>>>>>>> org.jfree.chart.renderer.junit.RendererChangeDetector.setNotified : r0.<org.jfree.chart.renderer.junit.RendererChangeDetector: boolean notified> = z0
org.jfree.chart.renderer.junit.RendererChangeDetector.setNotified : r0.<org.jfree.chart.renderer.junit.RendererChangeDetector: boolean notified> = z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setPaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setPaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> = r1
org.jfree.chart.renderer.AbstractRenderer.setPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r4 = r2[i0]
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if $r4 != class "org/jfree/chart/event/RendererChangeListener"
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if $r4 != class "org/jfree/chart/event/RendererChangeListener" >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i2 = i0 + 1
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r6 = (org.jfree.chart.event.RendererChangeListener) $r5
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r6 = (org.jfree.chart.event.RendererChangeListener) $r5 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.RendererChangeListener: void rendererChanged(org.jfree.chart.event.RendererChangeEvent)>(r1)
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.RendererChangeListener: void rendererChanged(org.jfree.chart.event.RendererChangeEvent)>(r1) >>>>>>>> org.jfree.chart.renderer.junit.RendererChangeDetector.rendererChanged : r0.<org.jfree.chart.renderer.junit.RendererChangeDetector: boolean notified> = 1
org.jfree.chart.renderer.junit.RendererChangeDetector.rendererChanged : r0.<org.jfree.chart.renderer.junit.RendererChangeDetector: boolean notified> = 1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = i0 + -2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : goto [?= (branch)]
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.junit.RendererChangeDetector.getNotified : $z0 = r0.<org.jfree.chart.renderer.junit.RendererChangeDetector: boolean notified>
org.jfree.chart.renderer.junit.RendererChangeDetector.getNotified : $z0 = r0.<org.jfree.chart.renderer.junit.RendererChangeDetector: boolean notified> >>>>>>>> org.jfree.chart.renderer.junit.RendererChangeDetector.getNotified : return $z0
org.jfree.chart.renderer.junit.RendererChangeDetector.getNotified : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint basePaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setOutlinePaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setOutlinePaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint outlinePaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesOutlinePaint(int,java.awt.Paint,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesOutlinePaint(int,java.awt.Paint,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList outlinePaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseOutlinePaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseOutlinePaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseOutlinePaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlinePaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setStroke(java.awt.Stroke,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setStroke(java.awt.Stroke,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> = r1
org.jfree.chart.renderer.AbstractRenderer.setStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseStroke(java.awt.Stroke,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseStroke(java.awt.Stroke,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "stroke")
org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "stroke") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseStroke> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setOutlineStroke(java.awt.Stroke,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setOutlineStroke(java.awt.Stroke,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> = r1
org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke outlineStroke> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesOutlineStroke(int,java.awt.Stroke,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesOutlineStroke(int,java.awt.Stroke,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList outlineStrokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseOutlineStroke(java.awt.Stroke,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseOutlineStroke(java.awt.Stroke,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "stroke")
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "stroke") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke baseOutlineStroke> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseOutlineStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setShape(java.awt.Shape,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setShape(java.awt.Shape,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = r1
org.jfree.chart.renderer.AbstractRenderer.setShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseShape(java.awt.Shape,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseShape(java.awt.Shape,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "shape")
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "shape") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelsVisible(java.lang.Boolean,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelsVisible(java.lang.Boolean,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> = r1
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelsVisible(int,java.lang.Boolean,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList itemLabelsVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke $r2.<org.jfree.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelsVisible(java.lang.Boolean,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelsVisible(java.lang.Boolean,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean baseItemLabelsVisible> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelFont(java.awt.Font,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelFont(java.awt.Font,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont> = r1
org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font itemLabelFont> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelFont(int,java.awt.Font,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelFont(int,java.awt.Font,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList itemLabelFontList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : virtualinvoke $r2.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : virtualinvoke $r2.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelFont(java.awt.Font,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelFont(java.awt.Font,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseItemLabelFont> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelFont : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelPaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelPaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint itemLabelPaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelPaint(int,java.awt.Paint,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesItemLabelPaint(int,java.awt.Paint,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList itemLabelPaintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelPaint(java.awt.Paint,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseItemLabelPaint(java.awt.Paint,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint")
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "paint") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseItemLabelPaint> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseItemLabelPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setPositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setPositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPositiveItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList positiveItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : virtualinvoke $r2.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : virtualinvoke $r2.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBasePositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition basePositiveItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBasePositiveItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)>(i0, r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesNegativeItemLabelPosition(int,org.jfree.chart.labels.ItemLabelPosition,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList negativeItemLabelPositionList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : virtualinvoke $r2.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : virtualinvoke $r2.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.labels.ItemLabelPosition baseNegativeItemLabelPosition> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseNegativeItemLabelPosition : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
