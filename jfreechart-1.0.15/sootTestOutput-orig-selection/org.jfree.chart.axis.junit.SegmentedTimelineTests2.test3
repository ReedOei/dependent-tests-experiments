org.jfree.chart.axis.SegmentedTimeline.setAdjustForDaylightSaving : r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving> = z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0
org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-")
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-") >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if r1 == null
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if r1 == null >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : return $l0
org.jfree.chart.axis.SegmentedTimeline.getSegmentSize : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b2 = $l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b2 = $l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b2 >= 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b2 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l3 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l3 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getStartTime : return $l0
org.jfree.chart.axis.SegmentedTimeline.getStartTime : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b5 = $l3 cmp $l4
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b5 = $l3 cmp $l4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b5 <= 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b5 <= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l6 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l6 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l8 = $l6 % $l7
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l8 = $l6 % $l7 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b9 = $l8 cmp 0L
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b9 = $l8 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b9 == 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b9 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l11 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l11 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l12 = $l10 - $l11
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l12 = $l10 - $l11 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l13 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l13 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l14 = $l12 % $l13
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $l14 = $l12 % $l13 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b15 = $l14 cmp 0L
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : $b15 = $l14 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b15 == 0
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : if $b15 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> = r1
org.jfree.chart.axis.SegmentedTimeline.setBaseTimeline : r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> = r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : r1 = virtualinvoke $r3.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : r1 = virtualinvoke $r3.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, l0)
org.jfree.chart.axis.SegmentedTimeline.getSegment : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$000 : return $l0
org.jfree.chart.axis.SegmentedTimeline.access$000 : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $b2 = l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $b2 = l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : if $b2 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : if $b2 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l3 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r2)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l3 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l4 = l0 - $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l4 = l0 - $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$100 : return $l0
org.jfree.chart.axis.SegmentedTimeline.access$100 : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l6 = $l4 / $l5
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l6 = $l4 / $l5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : return $l6
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : return $l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : return $r1
org.jfree.chart.axis.SegmentedTimeline.getSegment : return $r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l5 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l5 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentStart : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentStart : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentStart : return $l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentStart : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $b6 = $l5 cmp l1
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $b6 = $l5 cmp l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $b6 > 0
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $b6 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExcludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExcludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$300 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$300 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l3 = (long) $i2
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l3 = (long) $i2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : l0 = $l1 % $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : l0 = $l1 % $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : if $b4 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : if $b4 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$200 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$200 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $l2 = (long) $i1
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $l2 = (long) $i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $b3 = $l0 cmp $l2
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $b3 = $l0 cmp $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : if $b3 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : if $b3 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $z0 = 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $z0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc(long)>(1L)
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc(long)>(1L) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l3 = $l2 + l0
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l3 = $l2 + l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> = $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> = $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l4 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r2)
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l4 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : l1 = l0 * $l4
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : l1 = l0 * $l4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l5 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l5 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l6 = $l5 + l1
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l6 = $l5 + l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> = $l6
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> = $l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l7 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l8 = $l7 + l1
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l8 = $l7 + l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd> = $l8
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd> = $l8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond>
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l10 = $l9 + l1
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : $l10 = $l9 + l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond> = $l10
org.jfree.chart.axis.SegmentedTimeline$Segment.inc : r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond> = $l10 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= $l5 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()]
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= $l5 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $z0 = 1
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : $z0 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : goto [?= return $z0]
org.jfree.chart.axis.SegmentedTimeline$Segment.inExcludeSegments : goto [?= return $z0] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l7 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l7 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $b8 = $l7 cmp l1
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $b8 = $l7 cmp l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $b8 > 0
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $b8 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l9 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l9 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $i10 = virtualinvoke $r4.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsExcluded()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $i10 = virtualinvoke $r4.<org.jfree.chart.axis.SegmentedTimeline: int getSegmentsExcluded()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded>
org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsExcluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : return $i0
org.jfree.chart.axis.SegmentedTimeline.getSegmentsExcluded : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l11 = (long) $i10
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l11 = (long) $i10 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r5 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r5 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l12 = virtualinvoke $r5.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l12 = virtualinvoke $r5.<org.jfree.chart.axis.SegmentedTimeline: long getSegmentSize()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l13 = $l11 * $l12
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l13 = $l11 * $l12 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l14 = $l9 + $l13
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l14 = $l9 + $l13 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l2 = $l14 - 1L
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l2 = $l14 - 1L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l15 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l15 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : r2 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>($l15)
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : r2 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>($l15) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l16 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l16 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $b17 = $l16 cmp l2
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $b17 = $l16 cmp l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $b17 > 0
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $b17 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l2 = (long) $i1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l2 = (long) $i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $b3 = $l0 cmp $l2
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $b3 = $l0 cmp $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $b3 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $b3 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $z1 == 0
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= $l16 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()]
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= $l16 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $i0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$400(org.jfree.chart.axis.SegmentedTimeline,org.jfree.chart.axis.SegmentedTimeline$Segment)>($r1, r0)
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $i0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$400(org.jfree.chart.axis.SegmentedTimeline,org.jfree.chart.axis.SegmentedTimeline$Segment)>($r1, r0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>()
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$400 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$400 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : if $i0 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : if $i0 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $z0 = 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $z0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z1 = 1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z1 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : goto [?= return $z1]
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : goto [?= return $z1] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return $z1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return $z1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : l4 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentEnd : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentEnd : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentEnd : return $l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentEnd : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $z2 != 0
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : if $z2 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r6 = new org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r6 = new org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : specialinvoke $r6.<org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange: void <init>(org.jfree.chart.axis.SegmentedTimeline,long,long)>(r0, l3, l4)
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : specialinvoke $r6.<org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange: void <init>(org.jfree.chart.axis.SegmentedTimeline,long,long)>(r0, l3, l4) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumber : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumber : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumber : return $l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumber : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: void addException(org.jfree.chart.axis.SegmentedTimeline$Segment)>($r6)
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: void addException(org.jfree.chart.axis.SegmentedTimeline$Segment)>($r6) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.addException : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : r1 = virtualinvoke $r2.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : r1 = virtualinvoke $r2.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentEnd> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $b3 = $l1 cmp $l2
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $b3 = $l1 cmp $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : if $b3 >= 0
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : if $b3 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>()
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : goto [?= $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()]
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : goto [?= $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : return 1
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.inIncludeSegments : return 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.addException : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.addException : i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.addException : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : $i1 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.addException : $i1 = i0 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : $i2 = neg $i1
org.jfree.chart.axis.SegmentedTimeline.addException : $i2 = neg $i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addException : interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i2, r1)
org.jfree.chart.axis.SegmentedTimeline.addException : interfaceinvoke $r2.<java.util.List: void add(int,java.lang.Object)>($i2, r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i4 = i0 + i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i4 = i0 + i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i2 = $i4 / 2
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i2 = $i4 / 2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : r2 = (org.jfree.chart.axis.SegmentedTimeline$Segment) $r5
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : r2 = (org.jfree.chart.axis.SegmentedTimeline$Segment) $r5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r2)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(long,long)>($l0, $l1)
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(long,long)>($l0, $l1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $b3 = $l2 cmp l0
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $b3 = $l2 cmp l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : if $b3 > 0
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : if $b3 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $z0 = 0
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $z0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean contains(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $b5 = l1 cmp $l4
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : $b5 = l1 cmp $l4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.contains : if $b5 > 0
org.jfree.chart.axis.SegmentedTimeline$Segment.contains : if $b5 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z1 == 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean before(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean before(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$Segment.before : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentEnd> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.before : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : $b2 = $l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline$Segment.before : $b2 = $l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : if $b2 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.before : if $b2 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : $z0 = 1
org.jfree.chart.axis.SegmentedTimeline$Segment.before : $z0 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : goto [?= return $z0]
org.jfree.chart.axis.SegmentedTimeline$Segment.before : goto [?= return $z0] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.before : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z2 == 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = i2 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = i2 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)]
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline>
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline baseTimeline> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $i18 = virtualinvoke $r7.<org.jfree.chart.axis.SegmentedTimeline: int getGroupSegmentCount()>()
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $i18 = virtualinvoke $r7.<org.jfree.chart.axis.SegmentedTimeline: int getGroupSegmentCount()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getGroupSegmentCount : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.SegmentedTimeline.getGroupSegmentCount : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getGroupSegmentCount : return $i0
org.jfree.chart.axis.SegmentedTimeline.getGroupSegmentCount : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l19 = (long) $i18
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : $l19 = (long) $i18 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc(long)>($l19)
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void inc(long)>($l19) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= $l7 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()]
org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions : goto [?= $l7 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentStart()>()] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r1)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.getTime : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.SegmentedTimeline.getTime : virtualinvoke $r3.<java.util.Calendar: void setTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r5 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r5 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i1 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i1 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r6 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r6 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i2 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(2)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i2 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i3 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(5)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i3 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(5) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r8 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r8 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i4 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(11)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i4 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(11) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r9 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r9 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i5 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(12)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i5 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(12) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r10 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r10 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i6 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(13)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i6 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(13) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : virtualinvoke $r4.<java.util.Calendar: void set(int,int,int,int,int,int)>($i1, $i2, $i3, $i4, $i5, $i6)
org.jfree.chart.axis.SegmentedTimeline.getTime : virtualinvoke $r4.<java.util.Calendar: void set(int,int,int,int,int,int)>($i1, $i2, $i3, $i4, $i5, $i6) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r11 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r11 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r12 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r12 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $i7 = virtualinvoke $r12.<java.util.Calendar: int get(int)>(14)
org.jfree.chart.axis.SegmentedTimeline.getTime : $i7 = virtualinvoke $r12.<java.util.Calendar: int get(int)>(14) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : virtualinvoke $r11.<java.util.Calendar: void set(int,int)>(14, $i7)
org.jfree.chart.axis.SegmentedTimeline.getTime : virtualinvoke $r11.<java.util.Calendar: void set(int,int)>(14, $i7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $r13 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTime : $r13 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : r2 = virtualinvoke $r13.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : r2 = virtualinvoke $r13.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r2.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r2.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : return l0
org.jfree.chart.axis.SegmentedTimeline.getTime : return l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long toTimelineValue(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long toTimelineValue(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l1 = l0 - $l9
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l1 = l0 - $l9 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l2 = l1 % $l10
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l2 = l1 % $l10 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l11 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l11 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l3 = l1 / $l11
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l3 = l1 / $l11 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l12 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l12 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b13 = l2 cmp $l12
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b13 = l2 cmp $l12 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b13 < 0
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b13 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.before : $z0 = 0
org.jfree.chart.axis.SegmentedTimeline$Segment.before : $z0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean after(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $z3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean after(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$Segment.after : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.after : $l1 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentEnd()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : $b2 = $l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline$Segment.after : $b2 = $l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : if $b2 <= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.after : if $b2 <= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : $z0 = 1
org.jfree.chart.axis.SegmentedTimeline$Segment.after : $z0 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : goto [?= return $z0]
org.jfree.chart.axis.SegmentedTimeline$Segment.after : goto [?= return $z0] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.after : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.after : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z3 == 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = i2 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = i2 - 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l22 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l22 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l23 = l0 - $l22
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l23 = l0 - $l22 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l24 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l24 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l6 = l23 % $l24
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l6 = l23 % $l24 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l25 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l25 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l7 = l23 / $l25
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l7 = l23 / $l25 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l26 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l26 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l27 = l0 - 1L
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l27 = l0 - 1L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l8 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>($l26, $l27)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l8 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>($l26, $l27) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $b3 = l1 cmp l0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $b3 = l1 cmp l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $b3 >= 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $b3 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : i2 = 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : i2 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r2 = (org.jfree.chart.axis.SegmentedTimeline$Segment) $r5
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r2 = (org.jfree.chart.axis.SegmentedTimeline$Segment) $r5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline$Segment intersect(long,long)>(l0, l1)
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r3 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline$Segment intersect(long,long)>(l0, l1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : l2 = staticinvoke <java.lang.Math: long max(long,long)>(l0, $l4)
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : l2 = staticinvoke <java.lang.Math: long max(long,long)>(l0, $l4) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $l5 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentEnd>
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $l5 = r0.<org.jfree.chart.axis.SegmentedTimeline$SegmentRange: long segmentEnd> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : l3 = staticinvoke <java.lang.Math: long min(long,long)>(l1, $l5)
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : l3 = staticinvoke <java.lang.Math: long min(long,long)>(l1, $l5) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $b6 = l2 cmp l3
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : $b6 = l2 cmp l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : if $b6 > 0
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : if $b6 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : return null
org.jfree.chart.axis.SegmentedTimeline$SegmentRange.intersect : return null >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if r3 == null
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if r3 == null >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $l7 = (long) i2
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $l7 = (long) i2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : return $l7
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : return $l7 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l28 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l28 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b29 = l6 cmp $l28
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b29 = l6 cmp $l28 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b29 >= 0
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b29 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l30 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l30 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l31 = $l30 * l7
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l31 = $l30 * l7 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l32 = $l31 + l6
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l32 = $l31 + l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l33 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l33 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l34 = l8 * $l33
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l34 = l8 * $l33 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l4 = $l32 - $l34
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l4 = $l32 - $l34 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : goto [?= return l4]
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : goto [?= return l4] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return l4
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return l4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return $l1
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l4 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l5 = $l4 + l0
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l5 = $l4 + l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l6 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l6 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l7 = l0 / $l6
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l7 = l0 / $l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l8 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsExcludedSize>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l8 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsExcludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l9 = $l7 * $l8
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l9 = $l7 * $l8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l10 = $l5 + $l9
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l10 = $l5 + $l9 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, $l10)
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, $l10) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : r2 = $r1
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : r2 = $r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l1 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l11 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l11 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $b12 = l1 cmp $l11
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $b12 = l1 cmp $l11 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $b12 > 0
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $b12 > 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l13 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l13 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l14 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l14 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l15 = $l13 / $l14
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l15 = $l13 / $l14 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l16 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l16 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l17 = $l15 * $l16
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l17 = $l15 * $l16 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l18 = $l17 - 1L
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l18 = $l17 - 1L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l19 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>(l1, $l18)
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l19 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>(l1, $l18) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l2 = $l19
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l2 = $l19 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $b20 = $l19 cmp 0L
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $b20 = $l19 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $b20 <= 0
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $b20 <= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l23 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l23 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $z1 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $z1 != 0
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExcludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $z2 = virtualinvoke r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExcludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $z2 == 0
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l1 = l23 + 1L
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : l1 = l23 + 1L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : goto [?= $l11 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>]
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : goto [?= $l11 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentStart>] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l25 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond>
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l25 = r2.<org.jfree.chart.axis.SegmentedTimeline$Segment: long millisecond> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l26 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTimeFromLong(long)>($l25)
org.jfree.chart.axis.SegmentedTimeline.toMillisecond : $l26 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTimeFromLong(long)>($l25) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : l1 = l0
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : l1 = l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r1 = new java.util.Date
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r1 = new java.util.Date >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : specialinvoke $r1.<java.util.Date: void <init>(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : specialinvoke $r1.<java.util.Date: void <init>(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r1)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : virtualinvoke $r2.<java.util.Calendar: void setTime(java.util.Date)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i2 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i2 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r5 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r5 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i3 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i3 = virtualinvoke $r5.<java.util.Calendar: int get(int)>(2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r6 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r6 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i4 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(5)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i4 = virtualinvoke $r6.<java.util.Calendar: int get(int)>(5) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r7 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i5 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(11)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i5 = virtualinvoke $r7.<java.util.Calendar: int get(int)>(11) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r8 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r8 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i6 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(12)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i6 = virtualinvoke $r8.<java.util.Calendar: int get(int)>(12) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r9 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r9 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i7 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(13)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i7 = virtualinvoke $r9.<java.util.Calendar: int get(int)>(13) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : virtualinvoke $r3.<java.util.Calendar: void set(int,int,int,int,int,int)>($i2, $i3, $i4, $i5, $i6, $i7)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : virtualinvoke $r3.<java.util.Calendar: void set(int,int,int,int,int,int)>($i2, $i3, $i4, $i5, $i6, $i7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r10 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r10 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r11 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r11 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendarNoDST> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i8 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(14)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $i8 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(14) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(14, $i8)
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(14, $i8) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r12 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar>
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r12 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r13 = virtualinvoke $r12.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : $r13 = virtualinvoke $r12.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : l1 = virtualinvoke $r13.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : l1 = virtualinvoke $r13.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : return l1
org.jfree.chart.axis.SegmentedTimeline.getTimeFromLong : return l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toMillisecond : return $l26
