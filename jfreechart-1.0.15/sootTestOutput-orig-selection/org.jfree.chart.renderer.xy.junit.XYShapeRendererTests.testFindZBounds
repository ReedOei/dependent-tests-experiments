org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseShape(java.awt.Shape,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setBaseShape(java.awt.Shape,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "shape")
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "shape") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesShape : r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> = z0
org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesShape : r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> = z0 >>>>>>>> org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : if r1 == null
org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : if r1 == null >>>>>>>> org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : return null
org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : return null >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : if r1 != null
org.jfree.data.xy.DefaultXYZDataset.addSeries : if r1 != null >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : if r2 != null
org.jfree.data.xy.DefaultXYZDataset.addSeries : if r2 != null >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $i1 = lengthof r2
org.jfree.data.xy.DefaultXYZDataset.addSeries : $i1 = lengthof r2 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : if $i1 == 3
org.jfree.data.xy.DefaultXYZDataset.addSeries : if $i1 == 3 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r6 = r2[0]
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r6 = r2[0] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $i2 = lengthof $r6
org.jfree.data.xy.DefaultXYZDataset.addSeries : $i2 = lengthof $r6 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r7 = r2[1]
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r7 = r2[1] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $i3 = lengthof $r7
org.jfree.data.xy.DefaultXYZDataset.addSeries : $i3 = lengthof $r7 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : if $i2 != $i3
org.jfree.data.xy.DefaultXYZDataset.addSeries : if $i2 != $i3 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r8 = r2[0]
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r8 = r2[0] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $i4 = lengthof $r8
org.jfree.data.xy.DefaultXYZDataset.addSeries : $i4 = lengthof $r8 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r9 = r2[2]
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r9 = r2[2] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $i5 = lengthof $r9
org.jfree.data.xy.DefaultXYZDataset.addSeries : $i5 = lengthof $r9 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : if $i4 == $i5
org.jfree.data.xy.DefaultXYZDataset.addSeries : if $i4 == $i5 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : i0 = virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: int indexOf(java.lang.Comparable)>(r1)
org.jfree.data.xy.DefaultXYZDataset.addSeries : i0 = virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: int indexOf(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.indexOf : $r2 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultXYZDataset.indexOf : $r2 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.indexOf : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.xy.DefaultXYZDataset.indexOf : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.indexOf : return $i0
org.jfree.data.xy.DefaultXYZDataset.indexOf : return $i0 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : if i0 != -1
org.jfree.data.xy.DefaultXYZDataset.addSeries : if i0 != -1 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r11 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r11 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.DefaultXYZDataset.addSeries : interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r12 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r12 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r2)
org.jfree.data.xy.DefaultXYZDataset.addSeries : interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : goto [?= $r16 = new org.jfree.data.general.DatasetChangeEvent]
org.jfree.data.xy.DefaultXYZDataset.addSeries : goto [?= $r16 = new org.jfree.data.general.DatasetChangeEvent] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : $r16 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.xy.DefaultXYZDataset.addSeries : $r16 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : specialinvoke $r16.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.xy.DefaultXYZDataset.addSeries : specialinvoke $r16.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.addSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r16)
org.jfree.data.xy.DefaultXYZDataset.addSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r16) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : $r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findZBounds(org.jfree.data.xy.XYZDataset)>(r1)
org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : $r2 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findZBounds(org.jfree.data.xy.XYZDataset)>(r1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findZBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findZBounds(org.jfree.data.xy.XYZDataset,boolean)>(r0, 1)
org.jfree.data.general.DatasetUtilities.findZBounds : $r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findZBounds(org.jfree.data.xy.XYZDataset,boolean)>(r0, 1) >>>>>>>> org.jfree.data.general.DatasetUtilities.findZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findZBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findZBounds : r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateZBounds(org.jfree.data.xy.XYZDataset,boolean)>(r0, z0)
org.jfree.data.general.DatasetUtilities.findZBounds : r1 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateZBounds(org.jfree.data.xy.XYZDataset,boolean)>(r0, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateZBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateZBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int getSeriesCount()>()
org.jfree.data.general.DatasetUtilities.iterateZBounds : i0 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultXYZDataset.getSeriesCount : $r1 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.DefaultXYZDataset.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getSeriesCount : return $i0
org.jfree.data.xy.DefaultXYZDataset.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : i1 = 0
org.jfree.data.general.DatasetUtilities.iterateZBounds : i1 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : if i1 >= i0
org.jfree.data.general.DatasetUtilities.iterateZBounds : if i1 >= i0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int getItemCount(int)>(i1)
org.jfree.data.general.DatasetUtilities.iterateZBounds : i2 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: int getItemCount(int)>(i1) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : if i0 < 0
org.jfree.data.xy.DefaultXYZDataset.getItemCount : if i0 < 0 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: int getSeriesCount()>()
org.jfree.data.xy.DefaultXYZDataset.getItemCount : $i1 = virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : if i0 < $i1
org.jfree.data.xy.DefaultXYZDataset.getItemCount : if i0 < $i1 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r3 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r3 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r5 = (double[][]) $r4
org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r5 = (double[][]) $r4 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : r1 = (double[][]) $r5
org.jfree.data.xy.DefaultXYZDataset.getItemCount : r1 = (double[][]) $r5 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r6 = r1[0]
org.jfree.data.xy.DefaultXYZDataset.getItemCount : $r6 = r1[0] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : $i2 = lengthof $r6
org.jfree.data.xy.DefaultXYZDataset.getItemCount : $i2 = lengthof $r6 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getItemCount : return $i2
org.jfree.data.xy.DefaultXYZDataset.getItemCount : return $i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : i3 = 0
org.jfree.data.general.DatasetUtilities.iterateZBounds : i3 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : if i3 >= i2
org.jfree.data.general.DatasetUtilities.iterateZBounds : if i3 >= i2 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : d2 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: double getZValue(int,int)>(i1, i3)
org.jfree.data.general.DatasetUtilities.iterateZBounds : d2 = interfaceinvoke r0.<org.jfree.data.xy.XYZDataset: double getZValue(int,int)>(i1, i3) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : $r2 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultXYZDataset.getZValue : $r2 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.DefaultXYZDataset.getZValue : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : $r4 = (double[][]) $r3
org.jfree.data.xy.DefaultXYZDataset.getZValue : $r4 = (double[][]) $r3 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : r1 = (double[][]) $r4
org.jfree.data.xy.DefaultXYZDataset.getZValue : r1 = (double[][]) $r4 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : $r5 = r1[2]
org.jfree.data.xy.DefaultXYZDataset.getZValue : $r5 = r1[2] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : $d0 = $r5[i1]
org.jfree.data.xy.DefaultXYZDataset.getZValue : $d0 = $r5[i1] >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.getZValue : return $d0
org.jfree.data.xy.DefaultXYZDataset.getZValue : return $d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2)
org.jfree.data.general.DatasetUtilities.iterateZBounds : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : if $z1 != 0
org.jfree.data.general.DatasetUtilities.iterateZBounds : if $z1 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2)
org.jfree.data.general.DatasetUtilities.iterateZBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2)
org.jfree.data.general.DatasetUtilities.iterateZBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : i3 = i3 + 1
org.jfree.data.general.DatasetUtilities.iterateZBounds : i3 = i3 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateZBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : i1 = i1 + 1
org.jfree.data.general.DatasetUtilities.iterateZBounds : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : $b4 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateZBounds : $b4 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : if $b4 != 0
org.jfree.data.general.DatasetUtilities.iterateZBounds : if $b4 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : $r1 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateZBounds : $r1 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateZBounds : specialinvoke $r1.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateZBounds : return $r1
org.jfree.data.general.DatasetUtilities.iterateZBounds : return $r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findZBounds : return r1
org.jfree.data.general.DatasetUtilities.findZBounds : return r1 >>>>>>>> org.jfree.data.general.DatasetUtilities.findZBounds : return $r1
org.jfree.data.general.DatasetUtilities.findZBounds : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : return $r2
org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds : return $r2 >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : i0 = virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: int indexOf(java.lang.Comparable)>(r1)
org.jfree.data.xy.DefaultXYZDataset.removeSeries : i0 = virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: int indexOf(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : if i0 < 0
org.jfree.data.xy.DefaultXYZDataset.removeSeries : if i0 < 0 >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : $r2 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesKeys>
org.jfree.data.xy.DefaultXYZDataset.removeSeries : $r2 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesKeys> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.xy.DefaultXYZDataset.removeSeries : interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : $r4 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList>
org.jfree.data.xy.DefaultXYZDataset.removeSeries : $r4 = r0.<org.jfree.data.xy.DefaultXYZDataset: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(i0)
org.jfree.data.xy.DefaultXYZDataset.removeSeries : interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>(i0) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : $r6 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.xy.DefaultXYZDataset.removeSeries : $r6 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : specialinvoke $r6.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.xy.DefaultXYZDataset.removeSeries : specialinvoke $r6.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.xy.DefaultXYZDataset.removeSeries : virtualinvoke r0.<org.jfree.data.xy.DefaultXYZDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r6)
