org.jfree.data.time.Quarter.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] FIRST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getFirstMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] FIRST_MONTH_IN_QUARTER> >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Quarter: byte quarter>
org.jfree.data.time.Quarter.getFirstMillisecond : $b1 = r0.<org.jfree.data.time.Quarter: byte quarter> >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : i0 = $r2[$b1]
org.jfree.data.time.Quarter.getFirstMillisecond : i0 = $r2[$b1] >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $s2 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getFirstMillisecond : $s2 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $i3 = i0 - 1
org.jfree.data.time.Quarter.getFirstMillisecond : $i3 = i0 - 1 >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s2, $i3, 1, 0, 0, 0)
org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s2, $i3, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Quarter.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.getFirstMillisecond : $l4 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Quarter.getFirstMillisecond : return $l4
org.jfree.data.time.Quarter.getFirstMillisecond : return $l4 >>>>>>>> org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long firstMillisecond> = $l0
org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Quarter.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Quarter.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Quarter: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] LAST_MONTH_IN_QUARTER>
org.jfree.data.time.Quarter.getLastMillisecond : $r2 = <org.jfree.data.time.Quarter: int[] LAST_MONTH_IN_QUARTER> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $b2 = r0.<org.jfree.data.time.Quarter: byte quarter>
org.jfree.data.time.Quarter.getLastMillisecond : $b2 = r0.<org.jfree.data.time.Quarter: byte quarter> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : i0 = $r2[$b2]
org.jfree.data.time.Quarter.getLastMillisecond : i0 = $r2[$b2] >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $s3 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getLastMillisecond : $s3 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : i1 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>(i0, $s3)
org.jfree.data.time.Quarter.getLastMillisecond : i1 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>(i0, $s3) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $s4 = r0.<org.jfree.data.time.Quarter: short year>
org.jfree.data.time.Quarter.getLastMillisecond : $s4 = r0.<org.jfree.data.time.Quarter: short year> >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $i5 = i0 - 1
org.jfree.data.time.Quarter.getLastMillisecond : $i5 = i0 - 1 >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s4, $i5, i1, 23, 59, 59)
org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s4, $i5, i1, 23, 59, 59) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Quarter.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Quarter.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Quarter.getLastMillisecond : return $l6
org.jfree.data.time.Quarter.getLastMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long lastMillisecond> = $l1
org.jfree.data.time.Quarter.peg : r0.<org.jfree.data.time.Quarter: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.RegularTimePeriod.getFirstMillisecond : r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r1)
org.jfree.data.time.RegularTimePeriod.getFirstMillisecond : r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r1) >>>>>>>> org.jfree.data.time.RegularTimePeriod.getFirstMillisecond : $l0 = virtualinvoke r0.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>(r2)
org.jfree.data.time.RegularTimePeriod.getFirstMillisecond : $l0 = virtualinvoke r0.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond(java.util.Calendar)>(r2) >>>>>>>> org.jfree.data.time.RegularTimePeriod.getFirstMillisecond : return $l0
