org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : i0 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>()
org.jfree.data.xy.MatrixSeries.zeroAll : i0 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.getRowCount : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data>
org.jfree.data.xy.MatrixSeries.getRowCount : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data> >>>>>>>> org.jfree.data.xy.MatrixSeries.getRowCount : $i0 = lengthof $r1
org.jfree.data.xy.MatrixSeries.getRowCount : $i0 = lengthof $r1 >>>>>>>> org.jfree.data.xy.MatrixSeries.getRowCount : return $i0
org.jfree.data.xy.MatrixSeries.getRowCount : return $i0 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : i1 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>()
org.jfree.data.xy.MatrixSeries.zeroAll : i1 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.getColumnsCount : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data>
org.jfree.data.xy.MatrixSeries.getColumnsCount : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data> >>>>>>>> org.jfree.data.xy.MatrixSeries.getColumnsCount : $r2 = $r1[0]
org.jfree.data.xy.MatrixSeries.getColumnsCount : $r2 = $r1[0] >>>>>>>> org.jfree.data.xy.MatrixSeries.getColumnsCount : $i0 = lengthof $r2
org.jfree.data.xy.MatrixSeries.getColumnsCount : $i0 = lengthof $r2 >>>>>>>> org.jfree.data.xy.MatrixSeries.getColumnsCount : return $i0
org.jfree.data.xy.MatrixSeries.getColumnsCount : return $i0 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : i2 = 0
org.jfree.data.xy.MatrixSeries.zeroAll : i2 = 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : if i2 >= i0
org.jfree.data.xy.MatrixSeries.zeroAll : if i2 >= i0 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : i3 = 0
org.jfree.data.xy.MatrixSeries.zeroAll : i3 = 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : if i3 >= i1
org.jfree.data.xy.MatrixSeries.zeroAll : if i3 >= i1 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data>
org.jfree.data.xy.MatrixSeries.zeroAll : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data> >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : $r2 = $r1[i2]
org.jfree.data.xy.MatrixSeries.zeroAll : $r2 = $r1[i2] >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : $r2[i3] = 0.0
org.jfree.data.xy.MatrixSeries.zeroAll : $r2[i3] = 0.0 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : i3 = i3 + 1
org.jfree.data.xy.MatrixSeries.zeroAll : i3 = i3 + 1 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : goto [?= (branch)]
org.jfree.data.xy.MatrixSeries.zeroAll : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : i2 = i2 + 1
org.jfree.data.xy.MatrixSeries.zeroAll : i2 = i2 + 1 >>>>>>>> org.jfree.data.xy.MatrixSeries.zeroAll : virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: void fireSeriesChanged()>()
org.jfree.data.xy.MatrixSeries.zeroAll : virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.update : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data>
org.jfree.data.xy.MatrixSeries.update : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data> >>>>>>>> org.jfree.data.xy.MatrixSeries.update : $r2 = $r1[i0]
org.jfree.data.xy.MatrixSeries.update : $r2 = $r1[i0] >>>>>>>> org.jfree.data.xy.MatrixSeries.update : $r2[i1] = d0
org.jfree.data.xy.MatrixSeries.update : $r2[i1] = d0 >>>>>>>> org.jfree.data.xy.MatrixSeries.update : virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: void fireSeriesChanged()>()
org.jfree.data.xy.MatrixSeries.update : virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.MatrixSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.xy.MatrixSeriesCollection: java.util.List seriesList>
org.jfree.data.xy.MatrixSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.xy.MatrixSeriesCollection: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.MatrixSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.MatrixSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.MatrixSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.MatrixSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.MatrixSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.xy.MatrixSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.MatrixSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : if r1 != null
org.jfree.data.xy.MatrixSeriesCollection.equals : if r1 != null >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : if r1 != r0
org.jfree.data.xy.MatrixSeriesCollection.equals : if r1 != r0 >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : $z0 = r1 instanceof org.jfree.data.xy.MatrixSeriesCollection
org.jfree.data.xy.MatrixSeriesCollection.equals : $z0 = r1 instanceof org.jfree.data.xy.MatrixSeriesCollection >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : if $z0 == 0
org.jfree.data.xy.MatrixSeriesCollection.equals : if $z0 == 0 >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : r2 = (org.jfree.data.xy.MatrixSeriesCollection) r1
org.jfree.data.xy.MatrixSeriesCollection.equals : r2 = (org.jfree.data.xy.MatrixSeriesCollection) r1 >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : $r3 = r0.<org.jfree.data.xy.MatrixSeriesCollection: java.util.List seriesList>
org.jfree.data.xy.MatrixSeriesCollection.equals : $r3 = r0.<org.jfree.data.xy.MatrixSeriesCollection: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : $r4 = r2.<org.jfree.data.xy.MatrixSeriesCollection: java.util.List seriesList>
org.jfree.data.xy.MatrixSeriesCollection.equals : $r4 = r2.<org.jfree.data.xy.MatrixSeriesCollection: java.util.List seriesList> >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.data.xy.MatrixSeriesCollection.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if r1 != r0
org.jfree.data.xy.MatrixSeries.equals : if r1 != r0 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $z0 = r1 instanceof org.jfree.data.xy.MatrixSeries
org.jfree.data.xy.MatrixSeries.equals : $z0 = r1 instanceof org.jfree.data.xy.MatrixSeries >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if $z0 != 0
org.jfree.data.xy.MatrixSeries.equals : if $z0 != 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : r2 = (org.jfree.data.xy.MatrixSeries) r1
org.jfree.data.xy.MatrixSeries.equals : r2 = (org.jfree.data.xy.MatrixSeries) r1 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $i2 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>()
org.jfree.data.xy.MatrixSeries.equals : $i2 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $i3 = virtualinvoke r2.<org.jfree.data.xy.MatrixSeries: int getRowCount()>()
org.jfree.data.xy.MatrixSeries.equals : $i3 = virtualinvoke r2.<org.jfree.data.xy.MatrixSeries: int getRowCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if $i2 == $i3
org.jfree.data.xy.MatrixSeries.equals : if $i2 == $i3 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>()
org.jfree.data.xy.MatrixSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>()
org.jfree.data.xy.MatrixSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if $i4 == $i5
org.jfree.data.xy.MatrixSeries.equals : if $i4 == $i5 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : i0 = 0
org.jfree.data.xy.MatrixSeries.equals : i0 = 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $i6 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>()
org.jfree.data.xy.MatrixSeries.equals : $i6 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if i0 >= $i6
org.jfree.data.xy.MatrixSeries.equals : if i0 >= $i6 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : i1 = 0
org.jfree.data.xy.MatrixSeries.equals : i1 = 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $i7 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>()
org.jfree.data.xy.MatrixSeries.equals : $i7 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>() >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if i1 >= $i7
org.jfree.data.xy.MatrixSeries.equals : if i1 >= $i7 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $d0 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: double get(int,int)>(i0, i1)
org.jfree.data.xy.MatrixSeries.equals : $d0 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: double get(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.MatrixSeries.get : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data>
org.jfree.data.xy.MatrixSeries.get : $r1 = r0.<org.jfree.data.xy.MatrixSeries: double[][] data> >>>>>>>> org.jfree.data.xy.MatrixSeries.get : $r2 = $r1[i0]
org.jfree.data.xy.MatrixSeries.get : $r2 = $r1[i0] >>>>>>>> org.jfree.data.xy.MatrixSeries.get : $d0 = $r2[i1]
org.jfree.data.xy.MatrixSeries.get : $d0 = $r2[i1] >>>>>>>> org.jfree.data.xy.MatrixSeries.get : return $d0
org.jfree.data.xy.MatrixSeries.get : return $d0 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $d1 = virtualinvoke r2.<org.jfree.data.xy.MatrixSeries: double get(int,int)>(i0, i1)
org.jfree.data.xy.MatrixSeries.equals : $d1 = virtualinvoke r2.<org.jfree.data.xy.MatrixSeries: double get(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $b8 = $d0 cmpl $d1
org.jfree.data.xy.MatrixSeries.equals : $b8 = $d0 cmpl $d1 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : if $b8 == 0
org.jfree.data.xy.MatrixSeries.equals : if $b8 == 0 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : i1 = i1 + 1
org.jfree.data.xy.MatrixSeries.equals : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>()]
org.jfree.data.xy.MatrixSeries.equals : goto [?= $i7 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getColumnsCount()>()] >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : i0 = i0 + 1
org.jfree.data.xy.MatrixSeries.equals : i0 = i0 + 1 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : goto [?= $i6 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>()]
org.jfree.data.xy.MatrixSeries.equals : goto [?= $i6 = virtualinvoke r0.<org.jfree.data.xy.MatrixSeries: int getRowCount()>()] >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : $z1 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1)
org.jfree.data.xy.MatrixSeries.equals : $z1 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.equals : if r1 != r0
org.jfree.data.general.Series.equals : if r1 != r0 >>>>>>>> org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series
org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series >>>>>>>> org.jfree.data.general.Series.equals : if $z0 != 0
org.jfree.data.general.Series.equals : if $z0 != 0 >>>>>>>> org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1
org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1 >>>>>>>> org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.general.Series.equals : if $z1 != 0
org.jfree.data.general.Series.equals : if $z1 != 0 >>>>>>>> org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description>
org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description> >>>>>>>> org.jfree.data.general.Series.getDescription : return $r1
org.jfree.data.general.Series.getDescription : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.general.Series.equals : if $z2 != 0
org.jfree.data.general.Series.equals : if $z2 != 0 >>>>>>>> org.jfree.data.general.Series.equals : return 1
org.jfree.data.general.Series.equals : return 1 >>>>>>>> org.jfree.data.xy.MatrixSeries.equals : return $z1
org.jfree.data.xy.MatrixSeries.equals : return $z1 >>>>>>>> org.jfree.data.xy.MatrixSeriesCollection.equals : return $z1
