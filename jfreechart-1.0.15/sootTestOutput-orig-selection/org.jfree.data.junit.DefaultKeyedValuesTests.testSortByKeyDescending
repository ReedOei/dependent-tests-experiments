org.jfree.data.DefaultKeyedValues.addValue : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.setValue : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.DefaultKeyedValues.getIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.getIndex : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.getIndex : $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4
org.jfree.data.DefaultKeyedValues.getIndex : r2 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null
org.jfree.data.DefaultKeyedValues.getIndex : if r2 != null >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return -1
org.jfree.data.DefaultKeyedValues.getIndex : return -1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0
org.jfree.data.DefaultKeyedValues.setValue : if i0 < 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r7 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.setValue : $r8 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>(r2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.setValue : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer
org.jfree.data.DefaultKeyedValues.setValue : $r10 = new java.lang.Integer >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.setValue : $r11 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.setValue : $i1 = virtualinvoke $r11.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1
org.jfree.data.DefaultKeyedValues.setValue : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2)
org.jfree.data.DefaultKeyedValues.setValue : specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i2) >>>>>>>> org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10)
org.jfree.data.DefaultKeyedValues.setValue : virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r10) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r5 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r5 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r2 = newarray (org.jfree.data.DefaultKeyedValue)[i0]
org.jfree.data.DefaultKeyedValues.sortByKeys : r2 = newarray (org.jfree.data.DefaultKeyedValue)[i0] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = 0
org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : if i1 >= i0
org.jfree.data.DefaultKeyedValues.sortByKeys : if i1 >= i0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r3 = new org.jfree.data.DefaultKeyedValue
org.jfree.data.DefaultKeyedValues.sortByKeys : $r3 = new org.jfree.data.DefaultKeyedValue >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r6 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r6 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues.sortByKeys : $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r8 = (java.lang.Comparable) $r7
org.jfree.data.DefaultKeyedValues.sortByKeys : $r8 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r9 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1)
org.jfree.data.DefaultKeyedValues.sortByKeys : $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r11 = (java.lang.Number) $r10
org.jfree.data.DefaultKeyedValues.sortByKeys : $r11 = (java.lang.Number) $r10 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r3.<org.jfree.data.DefaultKeyedValue: void <init>(java.lang.Comparable,java.lang.Number)>($r8, $r11)
org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r3.<org.jfree.data.DefaultKeyedValue: void <init>(java.lang.Comparable,java.lang.Number)>($r8, $r11) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r2[i1] = $r3
org.jfree.data.DefaultKeyedValues.sortByKeys : r2[i1] = $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = i1 + 1
org.jfree.data.DefaultKeyedValues.sortByKeys : i1 = i1 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= (branch)]
org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= (branch)] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r12 = new org.jfree.data.KeyedValueComparator
org.jfree.data.DefaultKeyedValues.sortByKeys : $r12 = new org.jfree.data.KeyedValueComparator >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r13 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY>
org.jfree.data.DefaultKeyedValues.sortByKeys : $r13 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY> >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r12.<org.jfree.data.KeyedValueComparator: void <init>(org.jfree.data.KeyedValueComparatorType,org.jfree.util.SortOrder)>($r13, r1)
org.jfree.data.DefaultKeyedValues.sortByKeys : specialinvoke $r12.<org.jfree.data.KeyedValueComparator: void <init>(org.jfree.data.KeyedValueComparatorType,org.jfree.util.SortOrder)>($r13, r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r14 = $r12
org.jfree.data.DefaultKeyedValues.sortByKeys : r14 = $r12 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r14)
org.jfree.data.DefaultKeyedValues.sortByKeys : staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r2, r14) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if r2 != null
org.jfree.data.KeyedValueComparator.compare : if r2 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if r1 != null
org.jfree.data.KeyedValueComparator.compare : if r1 != null >>>>>>>> org.jfree.data.KeyedValueComparator.compare : r3 = (org.jfree.data.KeyedValue) r1
org.jfree.data.KeyedValueComparator.compare : r3 = (org.jfree.data.KeyedValue) r1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : r4 = (org.jfree.data.KeyedValue) r2
org.jfree.data.KeyedValueComparator.compare : r4 = (org.jfree.data.KeyedValue) r2 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r8 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.data.KeyedValueComparatorType type>
org.jfree.data.KeyedValueComparator.compare : $r8 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.data.KeyedValueComparatorType type> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r5 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY>
org.jfree.data.KeyedValueComparator.compare : $r5 = <org.jfree.data.KeyedValueComparatorType: org.jfree.data.KeyedValueComparatorType BY_KEY> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $r8 != $r5
org.jfree.data.KeyedValueComparator.compare : if $r8 != $r5 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r9 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order>
org.jfree.data.KeyedValueComparator.compare : $r9 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.data.KeyedValueComparator.compare : $r10 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10)
org.jfree.data.KeyedValueComparator.compare : $z0 = virtualinvoke $r9.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r10) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $z0 == 0
org.jfree.data.KeyedValueComparator.compare : if $z0 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r13 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order>
org.jfree.data.KeyedValueComparator.compare : $r13 = r0.<org.jfree.data.KeyedValueComparator: org.jfree.util.SortOrder order> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r14 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder DESCENDING>
org.jfree.data.KeyedValueComparator.compare : $r14 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder DESCENDING> >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $z1 = virtualinvoke $r13.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r14)
org.jfree.data.KeyedValueComparator.compare : $z1 = virtualinvoke $r13.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r14) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : if $z1 == 0
org.jfree.data.KeyedValueComparator.compare : if $z1 == 0 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r15 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.KeyedValueComparator.compare : $r15 = interfaceinvoke r4.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.DefaultKeyedValue.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValue: java.lang.Comparable key>
org.jfree.data.DefaultKeyedValue.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValue: java.lang.Comparable key> >>>>>>>> org.jfree.data.DefaultKeyedValue.getKey : return $r1
org.jfree.data.DefaultKeyedValue.getKey : return $r1 >>>>>>>> org.jfree.data.KeyedValueComparator.compare : $r16 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.KeyedValueComparator.compare : $r16 = interfaceinvoke r3.<org.jfree.data.KeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.KeyedValueComparator.compare : i0 = interfaceinvoke $r15.<java.lang.Comparable: int compareTo(java.lang.Object)>($r16)
org.jfree.data.KeyedValueComparator.compare : i0 = interfaceinvoke $r15.<java.lang.Comparable: int compareTo(java.lang.Object)>($r16) >>>>>>>> org.jfree.data.KeyedValueComparator.compare : goto [?= return i0]
org.jfree.data.KeyedValueComparator.compare : goto [?= return i0] >>>>>>>> org.jfree.data.KeyedValueComparator.compare : return i0
org.jfree.data.KeyedValueComparator.compare : return i0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void clear()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void clear()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.clear : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.clear : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.clear : virtualinvoke $r1.<java.util.ArrayList: void clear()>()
org.jfree.data.DefaultKeyedValues.clear : virtualinvoke $r1.<java.util.ArrayList: void clear()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.clear : $r2 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.clear : $r2 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.clear : virtualinvoke $r2.<java.util.ArrayList: void clear()>()
org.jfree.data.DefaultKeyedValues.clear : virtualinvoke $r2.<java.util.ArrayList: void clear()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.clear : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap>
org.jfree.data.DefaultKeyedValues.clear : $r3 = r0.<org.jfree.data.DefaultKeyedValues: java.util.HashMap indexMap> >>>>>>>> org.jfree.data.DefaultKeyedValues.clear : virtualinvoke $r3.<java.util.HashMap: void clear()>()
org.jfree.data.DefaultKeyedValues.clear : virtualinvoke $r3.<java.util.HashMap: void clear()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = 0
org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $i3 = lengthof r2
org.jfree.data.DefaultKeyedValues.sortByKeys : $i3 = lengthof r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : if i2 >= $i3
org.jfree.data.DefaultKeyedValues.sortByKeys : if i2 >= $i3 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : r4 = r2[i2]
org.jfree.data.DefaultKeyedValues.sortByKeys : r4 = r2[i2] >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r15 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Comparable getKey()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : $r15 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : $r16 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Number getValue()>()
org.jfree.data.DefaultKeyedValues.sortByKeys : $r16 = virtualinvoke r4.<org.jfree.data.DefaultKeyedValue: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValue.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValue: java.lang.Number value>
org.jfree.data.DefaultKeyedValue.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValue: java.lang.Number value> >>>>>>>> org.jfree.data.DefaultKeyedValue.getValue : return $r1
org.jfree.data.DefaultKeyedValue.getValue : return $r1 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>($r15, $r16)
org.jfree.data.DefaultKeyedValues.sortByKeys : virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: void addValue(java.lang.Comparable,java.lang.Number)>($r15, $r16) >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = i2 + 1
org.jfree.data.DefaultKeyedValues.sortByKeys : i2 = i2 + 1 >>>>>>>> org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= $i3 = lengthof r2]
org.jfree.data.DefaultKeyedValues.sortByKeys : goto [?= $i3 = lengthof r2] >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys>
org.jfree.data.DefaultKeyedValues.getKey : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList keys> >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getKey : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : $r3 = (java.lang.Comparable) $r2
org.jfree.data.DefaultKeyedValues.getKey : $r3 = (java.lang.Comparable) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getKey : return $r3
org.jfree.data.DefaultKeyedValues.getKey : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1)
org.jfree.data.DefaultKeyedValues.getValue : i0 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: int getIndex(java.lang.Comparable)>(r1) >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>()
org.jfree.data.DefaultKeyedValues.getIndex : $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.DefaultKeyedValues.getIndex : return $i0
org.jfree.data.DefaultKeyedValues.getIndex : return $i0 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : if i0 >= 0
org.jfree.data.DefaultKeyedValues.getValue : if i0 >= 0 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r7 = virtualinvoke r0.<org.jfree.data.DefaultKeyedValues: java.lang.Number getValue(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values>
org.jfree.data.DefaultKeyedValues.getValue : $r1 = r0.<org.jfree.data.DefaultKeyedValues: java.util.ArrayList values> >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0)
org.jfree.data.DefaultKeyedValues.getValue : $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2
org.jfree.data.DefaultKeyedValues.getValue : $r3 = (java.lang.Number) $r2 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r3
org.jfree.data.DefaultKeyedValues.getValue : return $r3 >>>>>>>> org.jfree.data.DefaultKeyedValues.getValue : return $r7
