org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.TimeSeriesCollection.indexOf : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.time.TimeSeriesCollection.indexOf : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.indexOf : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.indexOf : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.indexOf : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeriesCollection.indexOf : $i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.indexOf : return $i0
org.jfree.data.time.TimeSeriesCollection.indexOf : return $i0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : if r1 != r0
org.jfree.data.time.TimeSeries.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : return 1
org.jfree.data.time.TimeSeries.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeries
org.jfree.data.time.TimeSeries.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeries >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z0 != 0
org.jfree.data.time.TimeSeries.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : r2 = (org.jfree.data.time.TimeSeries) r1
org.jfree.data.time.TimeSeries.equals : r2 = (org.jfree.data.time.TimeSeries) r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>()
org.jfree.data.time.TimeSeries.equals : $r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.getDomainDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain>
org.jfree.data.time.TimeSeries.getDomainDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain> >>>>>>>> org.jfree.data.time.TimeSeries.getDomainDescription : return $r1
org.jfree.data.time.TimeSeries.getDomainDescription : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>()
org.jfree.data.time.TimeSeries.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.data.time.TimeSeries.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z1 != 0
org.jfree.data.time.TimeSeries.equals : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>()
org.jfree.data.time.TimeSeries.equals : $r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.getRangeDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range>
org.jfree.data.time.TimeSeries.getRangeDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range> >>>>>>>> org.jfree.data.time.TimeSeries.getRangeDescription : return $r1
org.jfree.data.time.TimeSeries.getRangeDescription : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>()
org.jfree.data.time.TimeSeries.equals : $r6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.time.TimeSeries.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z2 != 0
org.jfree.data.time.TimeSeries.equals : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.equals : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r8 = r2.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.equals : $r8 = r2.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8)
org.jfree.data.time.TimeSeries.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z3 != 0
org.jfree.data.time.TimeSeries.equals : if $z3 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $l1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>()
org.jfree.data.time.TimeSeries.equals : $l1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>() >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemAge : $l0 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge>
org.jfree.data.time.TimeSeries.getMaximumItemAge : $l0 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge> >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemAge : return $l0
org.jfree.data.time.TimeSeries.getMaximumItemAge : return $l0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $l2 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>()
org.jfree.data.time.TimeSeries.equals : $l2 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $b3 = $l1 cmp $l2
org.jfree.data.time.TimeSeries.equals : $b3 = $l1 cmp $l2 >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $b3 == 0
org.jfree.data.time.TimeSeries.equals : if $b3 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemCount : $i0 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.getMaximumItemCount : $i0 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemCount : return $i0
org.jfree.data.time.TimeSeries.getMaximumItemCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $i4 == $i5
org.jfree.data.time.TimeSeries.equals : if $i4 == $i5 >>>>>>>> org.jfree.data.time.TimeSeries.equals : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.equals : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : return $i0
org.jfree.data.time.TimeSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : if i0 == $i6
org.jfree.data.time.TimeSeries.equals : if i0 == $i6 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.equals : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r10 = r2.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.equals : $r10 = r2.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.data.time.TimeSeries.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z4 != 0
org.jfree.data.time.TimeSeries.equals : if $z4 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z5 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeries.equals : $z5 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.equals : if r1 != r0
org.jfree.data.general.Series.equals : if r1 != r0 >>>>>>>> org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series
org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series >>>>>>>> org.jfree.data.general.Series.equals : if $z0 != 0
org.jfree.data.general.Series.equals : if $z0 != 0 >>>>>>>> org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1
org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1 >>>>>>>> org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.general.Series.equals : if $z1 != 0
org.jfree.data.general.Series.equals : if $z1 != 0 >>>>>>>> org.jfree.data.general.Series.equals : return 0
org.jfree.data.general.Series.equals : return 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : return $z5
org.jfree.data.time.TimeSeries.equals : return $z5 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.removeSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.time.TimeSeriesCollection.removeSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.removeSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.removeSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.removeSeries : interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeriesCollection.removeSeries : interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.removeSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void removeChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.time.TimeSeriesCollection.removeSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void removeChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.removeChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.removeChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.removeChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.removeChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : if r1 != r0
org.jfree.data.time.TimeSeriesCollection.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : return 1
org.jfree.data.time.TimeSeriesCollection.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.removeSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.time.TimeSeriesCollection.removeSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description>
org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description> >>>>>>>> org.jfree.data.general.Series.getDescription : return $r1
org.jfree.data.general.Series.getDescription : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.general.Series.equals : if $z2 != 0
org.jfree.data.general.Series.equals : if $z2 != 0 >>>>>>>> org.jfree.data.general.Series.equals : return 1
