org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "zone") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "locale")
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "locale") >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r10 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r10 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r10.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r10.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r2 = $r10
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r2 = $r10 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r11 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r11 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r11.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("HH:mm:ss.SSS", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r11.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("HH:mm:ss.SSS", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r3 = $r11
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r3 = $r11 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r12 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r12 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r12.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("HH:mm:ss", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r12.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("HH:mm:ss", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r4 = $r12
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r4 = $r12 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r13 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r13 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("HH:mm", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r13.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("HH:mm", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r5 = $r13
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r5 = $r13 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r14 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r14 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("d-MMM, HH:mm", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("d-MMM, HH:mm", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r6 = $r14
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r6 = $r14 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r15 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r15 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r15.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("d-MMM", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r15.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("d-MMM", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r7 = $r15
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r7 = $r15 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r16 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r16 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r16.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MMM-yyyy", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r16.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MMM-yyyy", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r8 = $r16
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r8 = $r16 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r17 = new java.text.SimpleDateFormat
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r17 = new java.text.SimpleDateFormat >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r17.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", r1)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r17.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", r1) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r9 = $r17
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : r9 = $r17 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r3.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r4.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r6.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r6.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r7.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r8.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r8.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r9.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r9.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r18 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r18 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r19 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r19 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r18.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r19, 1, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r18.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r19, 1, r3) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1
org.jfree.chart.axis.DateTickUnitType.equals : if r0 != r1 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType
org.jfree.chart.axis.DateTickUnitType.equals : $z0 = r1 instanceof org.jfree.chart.axis.DateTickUnitType >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : if $z0 != 0
org.jfree.chart.axis.DateTickUnitType.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1
org.jfree.chart.axis.DateTickUnitType.equals : r2 = (org.jfree.chart.axis.DateTickUnitType) r1 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.equals : $r3 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnitType: java.lang.String toString()>()
org.jfree.chart.axis.DateTickUnitType.equals : $r4 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnitType: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name>
org.jfree.chart.axis.DateTickUnitType.toString : $r1 = r0.<org.jfree.chart.axis.DateTickUnitType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.DateTickUnitType.toString : return $r1
org.jfree.chart.axis.DateTickUnitType.toString : return $r1 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.DateTickUnitType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : if $z1 != 0
org.jfree.chart.axis.DateTickUnitType.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : return 0
org.jfree.chart.axis.DateTickUnitType.equals : return 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z0 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z1 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z2 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z2 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z2 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z3 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z3 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z3 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z4 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r5)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z4 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z4 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z4 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z5 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z5 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z5 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z6 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r7)
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $z6 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.axis.DateTickUnitType.equals : return 1
org.jfree.chart.axis.DateTickUnitType.equals : return 1 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z6 == 0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : if $z6 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l13 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l13 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l13
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l13 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType")
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "unitType") >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r1 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z0 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r2 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r2) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z1 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r3 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z2 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r3)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z2 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z2 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r4 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z3 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z3 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z3 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r5 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z4 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r5)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z4 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z4 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z4 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r6 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z5 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z5 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z5 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $r7 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z6 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r7)
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : $z6 = virtualinvoke r0.<org.jfree.chart.axis.DateTickUnitType: boolean equals(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z6 == 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : if $z6 == 0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 6
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 6 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r18) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r20 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r20 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r21 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r21 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r22 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r22 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r20.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r21, 5, $r22, 1, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r20.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r21, 5, $r22, 1, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r20)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r20) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r23 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r23 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r24 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r24 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r25 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r25 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r23.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r24, 10, $r25, 1, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r23.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r24, 10, $r25, 1, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r23)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r23) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r26 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r26 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r27 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r27 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r28 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r28 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r26.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r27, 25, $r28, 5, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r26.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r27, 25, $r28, 5, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r26)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r26) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r29 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r29 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r30 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r30 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r31 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r31 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r29.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r30, 50, $r31, 10, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r29.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r30, 50, $r31, 10, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r32 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r32 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r33 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r33 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r34 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r34 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r32.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r33, 100, $r34, 10, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r32.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r33, 100, $r34, 10, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r35 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r35 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r36 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r36 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r37 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r37 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r35.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r36, 250, $r37, 10, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r35.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r36, 250, $r37, 10, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r38 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r38 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r39 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r39 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r40 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r40 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r38.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r39, 500, $r40, 50, r3)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r38.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r39, 500, $r40, 50, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r41 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r41 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r42 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r42 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r43 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r43 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MILLISECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r41.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r42, 1, $r43, 50, r4)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r41.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r42, 1, $r43, 50, r4) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l11 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l11 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l12 = 1000L * $l11
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l12 = 1000L * $l11 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l12
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l12 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 5
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 5 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r44 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r44 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r45 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r45 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r46 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r46 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r44.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r45, 5, $r46, 1, r4)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r44.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r45, 5, $r46, 1, r4) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r47 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r47 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r48 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r48 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r49 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r49 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r47.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r48, 10, $r49, 1, r4)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r47.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r48, 10, $r49, 1, r4) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r50 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r50 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r51 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r51 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r52 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r52 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r50.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r51, 30, $r52, 5, r4)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r50.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r51, 30, $r52, 5, r4) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r53 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r53 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r54 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r54 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r55 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r55 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r53.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r54, 1, $r55, 5, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r53.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r54, 1, $r55, 5, r5) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l9 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l9 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l10 = 60000L * $l9
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l10 = 60000L * $l9 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l10
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l10 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 4
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 4 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r56 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r56 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r57 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r57 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r58 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r58 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType SECOND> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r56.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r57, 2, $r58, 10, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r56.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r57, 2, $r58, 10, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r59 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r59 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r60 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r60 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r61 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r61 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r59.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r60, 5, $r61, 1, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r59.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r60, 5, $r61, 1, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r62 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r62 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r63 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r63 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r64 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r64 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r62.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r63, 10, $r64, 1, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r62.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r63, 10, $r64, 1, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r65 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r65 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r66 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r66 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r67 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r67 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r65.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r66, 15, $r67, 5, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r65.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r66, 15, $r67, 5, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r68 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r68 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r69 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r69 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r70 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r70 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r68.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r69, 20, $r70, 5, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r68.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r69, 20, $r70, 5, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r71 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r71 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r72 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r72 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r73 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r73 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r71.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r72, 30, $r73, 5, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r71.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r72, 30, $r73, 5, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r74 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r74 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r75 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r75 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r76 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r76 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r74.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r75, 1, $r76, 5, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r74.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r75, 1, $r76, 5, r5) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l7 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l7 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l8 = 3600000L * $l7
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l8 = 3600000L * $l7 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l8
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l8 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 3
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 3 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r77 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r77 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r78 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r78 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r79 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r79 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r77.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r78, 2, $r79, 10, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r77.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r78, 2, $r79, 10, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r80 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r80 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r81 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r81 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r82 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r82 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MINUTE> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r80.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r81, 4, $r82, 30, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r80.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r81, 4, $r82, 30, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r83 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r83 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r84 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r84 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r85 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r85 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r83.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r84, 6, $r85, 1, r5)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r83.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r84, 6, $r85, 1, r5) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r86 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r86 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r87 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r87 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r88 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r88 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r86.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r87, 12, $r88, 1, r6)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r86.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r87, 12, $r88, 1, r6) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r89 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r89 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r90 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r90 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r91 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r91 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r89.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r90, 1, $r91, 1, r7)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r89.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r90, 1, $r91, 1, r7) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l5 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l5 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l6 = 86400000L * $l5
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l6 = 86400000L * $l5 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l6
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l6 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 2
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 2 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r92 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r92 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r93 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r93 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r94 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r94 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType HOUR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r92.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r93, 2, $r94, 1, r7)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r92.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r93, 2, $r94, 1, r7) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r92)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r92) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r95 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r95 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r96 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r96 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r97 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r97 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r95.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r96, 7, $r97, 1, r7)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r95.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r96, 7, $r97, 1, r7) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r95)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r95) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r98 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r98 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r99 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r99 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r100 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r100 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r98.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r99, 15, $r100, 1, r7)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r98.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r99, 15, $r100, 1, r7) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r98)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r98) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r101 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r101 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r102 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r102 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r103 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r103 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r101.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r102, 1, $r103, 1, r8)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r101.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r102, 1, $r103, 1, r8) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l3 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l4 = 2678400000L * $l3
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l4 = 2678400000L * $l3 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l4
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l4 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 1 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r101)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r101) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r104 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r104 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r105 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r105 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r106 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r106 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType DAY> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r104.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r105, 2, $r106, 1, r8)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r104.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r105, 2, $r106, 1, r8) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r104)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r104) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r107 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r107 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r108 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r108 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r109 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r109 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r107.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r108, 3, $r109, 1, r8)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r107.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r108, 3, $r109, 1, r8) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r107)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r107) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r110 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r110 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r111 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r111 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r112 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r112 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r110.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r111, 4, $r112, 1, r8)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r110.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r111, 4, $r112, 1, r8) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r110)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r110) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r113 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r113 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r114 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r114 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r115 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r115 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r113.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r114, 6, $r115, 1, r8)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r113.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r114, 6, $r115, 1, r8) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r113)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r113) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r116 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r116 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r117 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r117 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r118 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r118 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r116.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r117, 1, $r118, 1, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r116.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r117, 1, $r118, 1, r9) >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l1 = (long) i0
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l1 = (long) i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l2 = 31536000000L * $l1
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : $l2 = 31536000000L * $l1 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l2
org.jfree.chart.axis.DateTickUnit.getMillisecondCount : return $l2 >>>>>>>> org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 0
org.jfree.chart.axis.DateTickUnit.unitTypeToInt : return 0 >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r116)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r116) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r119 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r119 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r120 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r120 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r121 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r121 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType MONTH> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r119.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r120, 2, $r121, 3, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r119.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r120, 2, $r121, 3, r9) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r119)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r119) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r122 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r122 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r123 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r123 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r124 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r124 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r122.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r123, 5, $r124, 1, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r122.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r123, 5, $r124, 1, r9) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r122)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r122) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r125 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r125 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r126 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r126 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r127 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r127 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r125.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r126, 10, $r127, 1, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r125.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r126, 10, $r127, 1, r9) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r125)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r125) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r128 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r128 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r129 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r129 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r130 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r130 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r128.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r129, 25, $r130, 5, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r128.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r129, 25, $r130, 5, r9) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r128)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r128) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r131 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r131 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r132 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r132 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r133 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r133 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r131.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r132, 50, $r133, 10, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r131.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r132, 50, $r133, 10, r9) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r131)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r131) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r134 = new org.jfree.chart.axis.DateTickUnit
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r134 = new org.jfree.chart.axis.DateTickUnit >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r135 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r135 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r136 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR>
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : $r136 = <org.jfree.chart.axis.DateTickUnitType: org.jfree.chart.axis.DateTickUnitType YEAR> >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r134.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r135, 100, $r136, 20, r9)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : specialinvoke $r134.<org.jfree.chart.axis.DateTickUnit: void <init>(org.jfree.chart.axis.DateTickUnitType,int,org.jfree.chart.axis.DateTickUnitType,int,java.text.DateFormat)>($r135, 100, $r136, 20, r9) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r134)
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : virtualinvoke r2.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r134) >>>>>>>> org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : return r2
org.jfree.chart.axis.DateAxis.createStandardDateTickUnits : return r2 >>>>>>>> org.jfree.chart.axis.DateAxis.setTickUnit : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> = r1
org.jfree.chart.axis.DateAxis.setTickUnit : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> = r1 >>>>>>>> org.jfree.chart.axis.DateAxis.setTickUnit : if z1 == 0
org.jfree.chart.axis.DateAxis.setTickUnit : if z1 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setTickUnit : if z0 == 0
org.jfree.chart.axis.DateAxis.setTickUnit : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRangeMinimumSize(double,boolean)>(d0, 1)
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void setAutoRangeMinimumSize(double,boolean)>(d0, 1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b0 = d0 cmpg 0.0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if $b0 > 0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if $b0 > 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $d1 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $d1 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b1 = $d1 cmpl d0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $b1 = $d1 cmpl d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if $b1 == 0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if $b1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> = d0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> = d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $z1 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if $z1 == 0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>()
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.DateAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.DateAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.axis.Axis.getPlot : return $r1
org.jfree.chart.axis.Axis.getPlot : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.autoAdjustRange : if r1 != null
org.jfree.chart.axis.DateAxis.autoAdjustRange : if r1 != null >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if z0 == 0
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $r2 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : $r2 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : specialinvoke $r2.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2)
org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r2) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.DateAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.DateAxis.setRange : $z2 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setRange : $z2 = r1 instanceof org.jfree.data.time.DateRange >>>>>>>> org.jfree.chart.axis.DateAxis.setRange : if $z2 != 0
org.jfree.chart.axis.DateAxis.setRange : if $z2 != 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, z0, z1)
org.jfree.chart.axis.DateAxis.setRange : specialinvoke r0.<org.jfree.chart.axis.ValueAxis: void setRange(org.jfree.data.Range,boolean,boolean)>(r1, z0, z1) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "date")
org.jfree.chart.axis.DateAxis.setMinimumDate : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "date") >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>()
org.jfree.chart.axis.DateAxis.setMinimumDate : r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : n0 = null
org.jfree.chart.axis.DateAxis.getMaximumDate : n0 = null >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMaximumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
org.jfree.chart.axis.ValueAxis.getRange : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMaximumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : if $z0 == 0
org.jfree.chart.axis.DateAxis.getMaximumDate : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMaximumDate : r2 = (org.jfree.data.time.DateRange) r1 >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>()
org.jfree.chart.axis.DateAxis.getMaximumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>() >>>>>>>> org.jfree.data.time.DateRange.getUpperDate : $r1 = new java.util.Date
org.jfree.data.time.DateRange.getUpperDate : $r1 = new java.util.Date >>>>>>>> org.jfree.data.time.DateRange.getUpperDate : $l0 = r0.<org.jfree.data.time.DateRange: long upperDate>
org.jfree.data.time.DateRange.getUpperDate : $l0 = r0.<org.jfree.data.time.DateRange: long upperDate> >>>>>>>> org.jfree.data.time.DateRange.getUpperDate : specialinvoke $r1.<java.util.Date: void <init>(long)>($l0)
org.jfree.data.time.DateRange.getUpperDate : specialinvoke $r1.<java.util.Date: void <init>(long)>($l0) >>>>>>>> org.jfree.data.time.DateRange.getUpperDate : return $r1
org.jfree.data.time.DateRange.getUpperDate : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMaximumDate : goto [?= return r3] >>>>>>>> org.jfree.chart.axis.DateAxis.getMaximumDate : return r3
org.jfree.chart.axis.DateAxis.getMaximumDate : return r3 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : l0 = virtualinvoke r2.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.setMinimumDate : l0 = virtualinvoke r2.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : l1 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.setMinimumDate : l1 = virtualinvoke r1.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : $b3 = l0 cmp l1
org.jfree.chart.axis.DateAxis.setMinimumDate : $b3 = l0 cmp l1 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : if $b3 > 0
org.jfree.chart.axis.DateAxis.setMinimumDate : if $b3 > 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>()
org.jfree.chart.axis.DateAxis.setMinimumDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : n0 = null
org.jfree.chart.axis.DateAxis.getMinimumDate : n0 = null >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.getMinimumDate : r1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.getMinimumDate : $z0 = r1 instanceof org.jfree.data.time.DateRange >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : if $z0 == 0
org.jfree.chart.axis.DateAxis.getMinimumDate : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : r2 = (org.jfree.data.time.DateRange) r1
org.jfree.chart.axis.DateAxis.getMinimumDate : r2 = (org.jfree.data.time.DateRange) r1 >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>()
org.jfree.chart.axis.DateAxis.getMinimumDate : r3 = virtualinvoke r2.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>() >>>>>>>> org.jfree.data.time.DateRange.getLowerDate : $r1 = new java.util.Date
org.jfree.data.time.DateRange.getLowerDate : $r1 = new java.util.Date >>>>>>>> org.jfree.data.time.DateRange.getLowerDate : $l0 = r0.<org.jfree.data.time.DateRange: long lowerDate>
org.jfree.data.time.DateRange.getLowerDate : $l0 = r0.<org.jfree.data.time.DateRange: long lowerDate> >>>>>>>> org.jfree.data.time.DateRange.getLowerDate : specialinvoke $r1.<java.util.Date: void <init>(long)>($l0)
org.jfree.data.time.DateRange.getLowerDate : specialinvoke $r1.<java.util.Date: void <init>(long)>($l0) >>>>>>>> org.jfree.data.time.DateRange.getLowerDate : return $r1
org.jfree.data.time.DateRange.getLowerDate : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : goto [?= return r3]
org.jfree.chart.axis.DateAxis.getMinimumDate : goto [?= return r3] >>>>>>>> org.jfree.chart.axis.DateAxis.getMinimumDate : return r3
org.jfree.chart.axis.DateAxis.getMinimumDate : return r3 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : $l4 = virtualinvoke r3.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.setMinimumDate : $l4 = virtualinvoke r3.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : l2 = l0 - $l4
org.jfree.chart.axis.DateAxis.setMinimumDate : l2 = l0 - $l4 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : $r4 = new java.util.Date
org.jfree.chart.axis.DateAxis.setMinimumDate : $r4 = new java.util.Date >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : $l5 = l1 + l2
org.jfree.chart.axis.DateAxis.setMinimumDate : $l5 = l1 + l2 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : specialinvoke $r4.<java.util.Date: void <init>(long)>($l5)
org.jfree.chart.axis.DateAxis.setMinimumDate : specialinvoke $r4.<java.util.Date: void <init>(long)>($l5) >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : r2 = $r4
org.jfree.chart.axis.DateAxis.setMinimumDate : r2 = $r4 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : $r5 = new org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setMinimumDate : $r5 = new org.jfree.data.time.DateRange >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : specialinvoke $r5.<org.jfree.data.time.DateRange: void <init>(java.util.Date,java.util.Date)>(r1, r2)
org.jfree.chart.axis.DateAxis.setMinimumDate : specialinvoke $r5.<org.jfree.data.time.DateRange: void <init>(java.util.Date,java.util.Date)>(r1, r2) >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r5, 1, 0)
org.jfree.chart.axis.DateAxis.setMinimumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r5, 1, 0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> = 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : $r6 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateAxis.setMinimumDate : $r6 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : specialinvoke $r6.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.DateAxis.setMinimumDate : specialinvoke $r6.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.setMinimumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r6)
org.jfree.chart.axis.DateAxis.setMinimumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r6) >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "maximumDate")
org.jfree.chart.axis.DateAxis.setMaximumDate : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "maximumDate") >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>()
org.jfree.chart.axis.DateAxis.setMaximumDate : r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : l0 = virtualinvoke r2.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.setMaximumDate : l0 = virtualinvoke r2.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : l1 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.setMaximumDate : l1 = virtualinvoke r1.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : $b3 = l0 cmp l1
org.jfree.chart.axis.DateAxis.setMaximumDate : $b3 = l0 cmp l1 >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : if $b3 < 0
org.jfree.chart.axis.DateAxis.setMaximumDate : if $b3 < 0 >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : $r5 = new org.jfree.data.time.DateRange
org.jfree.chart.axis.DateAxis.setMaximumDate : $r5 = new org.jfree.data.time.DateRange >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : specialinvoke $r5.<org.jfree.data.time.DateRange: void <init>(java.util.Date,java.util.Date)>(r2, r1)
org.jfree.chart.axis.DateAxis.setMaximumDate : specialinvoke $r5.<org.jfree.data.time.DateRange: void <init>(java.util.Date,java.util.Date)>(r2, r1) >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r5, 1, 0)
org.jfree.chart.axis.DateAxis.setMaximumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r5, 1, 0) >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : $r6 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateAxis.setMaximumDate : $r6 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : specialinvoke $r6.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.DateAxis.setMaximumDate : specialinvoke $r6.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.setMaximumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r6)
org.jfree.chart.axis.DateAxis.setMaximumDate : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r6) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $r0 = new org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : specialinvoke $r0.<org.jfree.chart.axis.SegmentedTimeline: void <init>(long,int,int)>(86400000L, 5, 2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : r1 = $r0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>()
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : $l0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long firstMondayAfter1900()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : i0 = virtualinvoke $r0.<java.util.TimeZone: int getRawOffset()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r4 = new java.util.SimpleTimeZone >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r1 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-")
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UTC-") >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r4.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(i0, $r7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r2 = $r4 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r8 = new java.util.GregorianCalendar >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : specialinvoke $r8.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : r3 = $r8 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(1900, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : virtualinvoke r3.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7)
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>(7) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : if $i1 == 2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $r9 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : $l2 = virtualinvoke $r9.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2
org.jfree.chart.axis.SegmentedTimeline.firstMondayAfter1900 : return $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline: void setStartTime(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0
org.jfree.chart.axis.SegmentedTimeline.setStartTime : r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> = l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1
org.jfree.chart.axis.SegmentedTimeline.newMondayThroughFridayTimeline : return r1 >>>>>>>> org.jfree.chart.axis.DateAxis.setTimeline : $r2 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.setTimeline : $r2 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.setTimeline : if $r2 == r1
org.jfree.chart.axis.DateAxis.setTimeline : if $r2 == r1 >>>>>>>> org.jfree.chart.axis.DateAxis.setTimeline : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> = r1
org.jfree.chart.axis.DateAxis.setTimeline : r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> = r1 >>>>>>>> org.jfree.chart.axis.DateAxis.setTimeline : $r3 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.DateAxis.setTimeline : $r3 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.DateAxis.setTimeline : specialinvoke $r3.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.DateAxis.setTimeline : specialinvoke $r3.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.DateAxis.setTimeline : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r3)
org.jfree.chart.axis.DateAxis.setTimeline : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r3) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicks : r5 = null
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = null >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.DateAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicks : if $z0 == 0
org.jfree.chart.axis.DateAxis.refreshTicks : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicks : r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.DateAxis.refreshTicks : r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r5 = $r4
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r5 = $r4 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : return $r1
org.jfree.chart.axis.Axis.getTickLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z1 == 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.DateAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3) >>>>>>>> org.jfree.chart.axis.DateAxis.selectAutoTickUnit : if $z0 == 0
org.jfree.chart.axis.DateAxis.selectAutoTickUnit : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.DateAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : l0 = 0L
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : l0 = 0L >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r7 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r7 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $z0 = $r7 instanceof org.jfree.chart.axis.SegmentedTimeline
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $z0 = $r7 instanceof org.jfree.chart.axis.SegmentedTimeline >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : if $z0 == 0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r8 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r8 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r9 = (org.jfree.chart.axis.SegmentedTimeline) $r8
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r9 = (org.jfree.chart.axis.SegmentedTimeline) $r8 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : l0 = virtualinvoke $r9.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : l0 = virtualinvoke $r9.<org.jfree.chart.axis.SegmentedTimeline: long getStartTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.getStartTime : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getStartTime : return $l0
org.jfree.chart.axis.SegmentedTimeline.getStartTime : return $l0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d7 = (double) l0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d7 = (double) l0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d8 = $d7 + 0.0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d8 = $d7 + 0.0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d8, r2, r3)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d8, r2, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $r4 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.valueToJava2D : $r4 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $l0 = (long) d0
org.jfree.chart.axis.DateAxis.valueToJava2D : $l0 = (long) d0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $l1 = interfaceinvoke $r4.<org.jfree.chart.axis.Timeline: long toTimelineValue(long)>($l0)
org.jfree.chart.axis.DateAxis.valueToJava2D : $l1 = interfaceinvoke $r4.<org.jfree.chart.axis.Timeline: long toTimelineValue(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l9 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l1 = l0 - $l9
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l1 = l0 - $l9 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l10 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l2 = l1 % $l10
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l2 = l1 % $l10 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l11 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l11 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l3 = l1 / $l11
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l3 = l1 / $l11 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l12 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l12 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b13 = l2 cmp $l12
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b13 = l2 cmp $l12 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b13 < 0
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b13 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment
org.jfree.chart.axis.SegmentedTimeline.getSegment : $r1 = new org.jfree.chart.axis.SegmentedTimeline$Segment >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, l0)
org.jfree.chart.axis.SegmentedTimeline.getSegment : specialinvoke $r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: void <init>(org.jfree.chart.axis.SegmentedTimeline,long)>(r0, l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.access$000 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$000 : return $l0
org.jfree.chart.axis.SegmentedTimeline.access$000 : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $b2 = l0 cmp $l1
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $b2 = l0 cmp $l1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : if $b2 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : if $b2 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r2 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l3 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r2)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l3 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$000(org.jfree.chart.axis.SegmentedTimeline)>($r2) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l4 = l0 - $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l4 = l0 - $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3)
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l5 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: long access$100(org.jfree.chart.axis.SegmentedTimeline)>($r3) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.access$100 : $l0 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$100 : return $l0
org.jfree.chart.axis.SegmentedTimeline.access$100 : return $l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l6 = $l4 / $l5
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : $l6 = $l4 / $l5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : return $l6
org.jfree.chart.axis.SegmentedTimeline$Segment.calculateSegmentNumber : return $l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getSegment : return $r1
org.jfree.chart.axis.SegmentedTimeline.getSegment : return $r1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $i0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$400(org.jfree.chart.axis.SegmentedTimeline,org.jfree.chart.axis.SegmentedTimeline$Segment)>($r1, r0)
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $i0 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$400(org.jfree.chart.axis.SegmentedTimeline,org.jfree.chart.axis.SegmentedTimeline$Segment)>($r1, r0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1)
org.jfree.chart.axis.SegmentedTimeline.access$400 : $i0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: int binarySearchExceptionSegments(org.jfree.chart.axis.SegmentedTimeline$Segment)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $r3 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>()
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i3 = interfaceinvoke $r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : i1 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : if i0 > i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i5 = i0 + 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : $i6 = neg $i5 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6
org.jfree.chart.axis.SegmentedTimeline.binarySearchExceptionSegments : return $i6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$400 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$400 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : if $i0 < 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : if $i0 < 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $z0 = 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : $z0 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : return $z0
org.jfree.chart.axis.SegmentedTimeline$Segment.inExceptionSegments : return $z0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l22 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l22 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l23 = l0 - $l22
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l23 = l0 - $l22 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l24 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l24 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l6 = l23 % $l24
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l6 = l23 % $l24 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l25 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l25 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsGroupSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l7 = l23 / $l25
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l7 = l23 / $l25 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l26 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l26 = r0.<org.jfree.chart.axis.SegmentedTimeline: long startTime> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l27 = l0 - 1L
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l27 = l0 - 1L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l8 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>($l26, $l27)
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l8 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getExceptionSegmentCount(long,long)>($l26, $l27) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $b3 = l1 cmp l0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $b3 = l1 cmp l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $b3 >= 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $b3 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : return 0L
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : return 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l28 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l28 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b29 = l6 cmp $l28
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $b29 = l6 cmp $l28 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b29 >= 0
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : if $b29 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l30 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l30 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentsIncludedSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l31 = $l30 * l7
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l31 = $l30 * l7 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l32 = $l31 + l6
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l32 = $l31 + l6 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l33 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize>
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l33 = r0.<org.jfree.chart.axis.SegmentedTimeline: long segmentSize> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l34 = l8 * $l33
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : $l34 = l8 * $l33 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l4 = $l32 - $l34
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : l4 = $l32 - $l34 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : goto [?= return l4]
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : goto [?= return l4] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return l4
org.jfree.chart.axis.SegmentedTimeline.toTimelineValue : return l4 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d6 = (double) $l1
org.jfree.chart.axis.DateAxis.valueToJava2D : d6 = (double) $l1 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $r5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : r3 = (org.jfree.data.time.DateRange) $r5
org.jfree.chart.axis.DateAxis.valueToJava2D : r3 = (org.jfree.data.time.DateRange) $r5 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $r6 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.valueToJava2D : $r6 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $l2 = virtualinvoke r3.<org.jfree.data.time.DateRange: long getLowerMillis()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $l2 = virtualinvoke r3.<org.jfree.data.time.DateRange: long getLowerMillis()>() >>>>>>>> org.jfree.data.time.DateRange.getLowerMillis : $l0 = r0.<org.jfree.data.time.DateRange: long lowerDate>
org.jfree.data.time.DateRange.getLowerMillis : $l0 = r0.<org.jfree.data.time.DateRange: long lowerDate> >>>>>>>> org.jfree.data.time.DateRange.getLowerMillis : return $l0
org.jfree.data.time.DateRange.getLowerMillis : return $l0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $l3 = interfaceinvoke $r6.<org.jfree.chart.axis.Timeline: long toTimelineValue(long)>($l2)
org.jfree.chart.axis.DateAxis.valueToJava2D : $l3 = interfaceinvoke $r6.<org.jfree.chart.axis.Timeline: long toTimelineValue(long)>($l2) >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d1 = (double) $l3
org.jfree.chart.axis.DateAxis.valueToJava2D : d1 = (double) $l3 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $r7 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.valueToJava2D : $r7 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $l4 = virtualinvoke r3.<org.jfree.data.time.DateRange: long getUpperMillis()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $l4 = virtualinvoke r3.<org.jfree.data.time.DateRange: long getUpperMillis()>() >>>>>>>> org.jfree.data.time.DateRange.getUpperMillis : $l0 = r0.<org.jfree.data.time.DateRange: long upperDate>
org.jfree.data.time.DateRange.getUpperMillis : $l0 = r0.<org.jfree.data.time.DateRange: long upperDate> >>>>>>>> org.jfree.data.time.DateRange.getUpperMillis : return $l0
org.jfree.data.time.DateRange.getUpperMillis : return $l0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $l5 = interfaceinvoke $r7.<org.jfree.chart.axis.Timeline: long toTimelineValue(long)>($l4)
org.jfree.chart.axis.DateAxis.valueToJava2D : $l5 = interfaceinvoke $r7.<org.jfree.chart.axis.Timeline: long toTimelineValue(long)>($l4) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : i2 = 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : i2 = 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments>
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $r4 = r0.<org.jfree.chart.axis.SegmentedTimeline: java.util.List exceptionSegments> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : r1 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $l7 = (long) i2
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : $l7 = (long) i2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : return $l7
org.jfree.chart.axis.SegmentedTimeline.getExceptionSegmentCount : return $l7 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d2 = (double) $l5
org.jfree.chart.axis.DateAxis.valueToJava2D : d2 = (double) $l5 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.axis.DateAxis.valueToJava2D : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.DateAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : if $z0 == 0
org.jfree.chart.axis.DateAxis.valueToJava2D : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isInverted()>()
org.jfree.chart.axis.DateAxis.valueToJava2D : $z1 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isInverted()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : return $z0
org.jfree.chart.axis.ValueAxis.isInverted : return $z0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : if $z1 == 0
org.jfree.chart.axis.DateAxis.valueToJava2D : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $d12 = d6 - d1
org.jfree.chart.axis.DateAxis.valueToJava2D : $d12 = d6 - d1 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $d13 = d2 - d1
org.jfree.chart.axis.DateAxis.valueToJava2D : $d13 = d2 - d1 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $d14 = $d12 / $d13
org.jfree.chart.axis.DateAxis.valueToJava2D : $d14 = $d12 / $d13 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $d15 = d5 - d4
org.jfree.chart.axis.DateAxis.valueToJava2D : $d15 = d5 - d4 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : $d16 = $d14 * $d15
org.jfree.chart.axis.DateAxis.valueToJava2D : $d16 = $d14 * $d15 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : d3 = d4 + $d16
org.jfree.chart.axis.DateAxis.valueToJava2D : d3 = d4 + $d16 >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : goto [?= return d3]
org.jfree.chart.axis.DateAxis.valueToJava2D : goto [?= return d3] >>>>>>>> org.jfree.chart.axis.DateAxis.valueToJava2D : return d3
org.jfree.chart.axis.DateAxis.valueToJava2D : return d3 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.DateAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.DateAxis.getTickUnit : return $r1
org.jfree.chart.axis.DateAxis.getTickUnit : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d1 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)>(r1, $r10)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d1 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)>(r1, $r10) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1
org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d3 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d3 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d4 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d4 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d0 = $d3 + $d4
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d0 = $d3 + $d4 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r5 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r5 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r4.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", r5)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r4.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", r5) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels> >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : if $z0 == 0
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $r14 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $r14 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r7 = (org.jfree.data.time.DateRange) $r14
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r7 = (org.jfree.data.time.DateRange) $r14 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r7.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r7.<org.jfree.data.time.DateRange: java.util.Date getLowerDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r9 = virtualinvoke r7.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r9 = virtualinvoke r7.<org.jfree.data.time.DateRange: java.util.Date getUpperDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>()
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r10 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>() >>>>>>>> org.jfree.chart.axis.DateAxis.getDateFormatOverride : $r1 = r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat dateFormatOverride>
org.jfree.chart.axis.DateAxis.getDateFormatOverride : $r1 = r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat dateFormatOverride> >>>>>>>> org.jfree.chart.axis.DateAxis.getDateFormatOverride : return $r1
org.jfree.chart.axis.DateAxis.getDateFormatOverride : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : if r10 == null
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : if r10 == null >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r8)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r8) >>>>>>>> org.jfree.chart.axis.DateTickUnit.dateToString : $r2 = r0.<org.jfree.chart.axis.DateTickUnit: java.text.DateFormat formatter>
org.jfree.chart.axis.DateTickUnit.dateToString : $r2 = r0.<org.jfree.chart.axis.DateTickUnit: java.text.DateFormat formatter> >>>>>>>> org.jfree.chart.axis.DateTickUnit.dateToString : $r3 = virtualinvoke $r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1)
org.jfree.chart.axis.DateTickUnit.dateToString : $r3 = virtualinvoke $r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.dateToString : return $r3
org.jfree.chart.axis.DateTickUnit.dateToString : return $r3 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r9)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r9) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r13 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r4)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : r13 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r4) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r11)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r11) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d1 = (double) $i0
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d1 = (double) $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r12)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r13.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r12) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d2 = (double) $i1
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d2 = (double) $i1 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d7 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2)
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : $d7 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d2) >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d6 = d0 + $d7
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : d6 = d0 + $d7 >>>>>>>> org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : return d6
org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth : return d6 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r11 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r11 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r11)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r11) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3
org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : return -1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 0
org.jfree.chart.axis.TickUnit.compareTo : return 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d9 = (double) l0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d9 = (double) l0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d10 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d10 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d11 = $d9 + $d10
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d11 = $d9 + $d10 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d11, r2, r3)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d11, r2, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d12 = d2 - d0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d12 = d2 - d0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d3 = staticinvoke <java.lang.Math: double abs(double)>($d12)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d3 = staticinvoke <java.lang.Math: double abs(double)>($d12) >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d13 = d1 / d3
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d13 = d1 / d3 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d14 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d14 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d4 = $d13 * $d14
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d4 = $d13 * $d14 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r12 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d4)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $r12 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d4) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r9 = (org.jfree.chart.axis.TickUnit) $r8
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r9 = (org.jfree.chart.axis.TickUnit) $r8 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r9
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r9 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r6 = (org.jfree.chart.axis.DateTickUnit) $r12
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : r6 = (org.jfree.chart.axis.DateTickUnit) $r12 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d15 = (double) l0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d15 = (double) l0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d16 = virtualinvoke r6.<org.jfree.chart.axis.DateTickUnit: double getSize()>()
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d16 = virtualinvoke r6.<org.jfree.chart.axis.DateTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d17 = $d15 + $d16
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d17 = $d15 + $d16 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d17, r2, r3)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d5 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d17, r2, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d18 = d5 - d0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $d18 = d5 - d0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d6 = staticinvoke <java.lang.Math: double abs(double)>($d18)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d6 = staticinvoke <java.lang.Math: double abs(double)>($d18) >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d19 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)>(r1, r6)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : d19 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.DateTickUnit)>(r1, r6) >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $b1 = d19 cmpl d6
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : $b1 = d19 cmpl d6 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : if $b1 <= 0
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : if $b1 <= 0 >>>>>>>> org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.DateAxis: void setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)>(r6, 0, 0) >>>>>>>> org.jfree.chart.axis.DateAxis.selectAutoTickUnit : goto [?= return]
org.jfree.chart.axis.DateAxis.selectAutoTickUnit : goto [?= return] >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)>(r7)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateLowestVisibleTickValue(org.jfree.chart.axis.DateTickUnit)>(r7) >>>>>>>> org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>()
org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMinimumDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>($r2, r1)
org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : $r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date nextStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>($r2, r1) >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>(r1, r2)
org.jfree.chart.axis.DateAxis.nextStandardDate : r3 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date previousStandardDate(java.util.Date,org.jfree.chart.axis.DateTickUnit)>(r1, r2) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r12 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r12 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r13 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r13 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale> >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r12, $r13)
org.jfree.chart.axis.DateAxis.previousStandardDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r12, $r13) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCount()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCount()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.DateTickUnit.getCount : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCount : return $i0
org.jfree.chart.axis.DateTickUnit.getCount : return $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $i11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $i11 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCalendarField : $r1 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.chart.axis.DateTickUnit.getCalendarField : $r1 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCalendarField : $i0 = virtualinvoke $r1.<org.jfree.chart.axis.DateTickUnitType: int getCalendarField()>()
org.jfree.chart.axis.DateTickUnit.getCalendarField : $i0 = virtualinvoke $r1.<org.jfree.chart.axis.DateTickUnitType: int getCalendarField()>() >>>>>>>> org.jfree.chart.axis.DateTickUnitType.getCalendarField : $i0 = r0.<org.jfree.chart.axis.DateTickUnitType: int calendarField>
org.jfree.chart.axis.DateTickUnitType.getCalendarField : $i0 = r0.<org.jfree.chart.axis.DateTickUnitType: int calendarField> >>>>>>>> org.jfree.chart.axis.DateTickUnitType.getCalendarField : return $i0
org.jfree.chart.axis.DateTickUnitType.getCalendarField : return $i0 >>>>>>>> org.jfree.chart.axis.DateTickUnit.getCalendarField : return $i0
org.jfree.chart.axis.DateTickUnit.getCalendarField : return $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>($i11)
org.jfree.chart.axis.DateAxis.previousStandardDate : i1 = virtualinvoke r3.<java.util.Calendar: int get(int)>($i11) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $i12 = i1 / i0
org.jfree.chart.axis.DateAxis.previousStandardDate : $i12 = i1 / i0 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : i2 = i0 * $i12
org.jfree.chart.axis.DateAxis.previousStandardDate : i2 = i0 * $i12 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $i13 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $i13 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.getUnit : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int unit>
org.jfree.chart.axis.DateTickUnit.getUnit : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int unit> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getUnit : return $i0
org.jfree.chart.axis.DateTickUnit.getUnit : return $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : tableswitch($i13) {     case 0:
org.jfree.chart.axis.DateAxis.previousStandardDate : tableswitch($i13) {     case 0: >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : i54 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1)
org.jfree.chart.axis.DateAxis.previousStandardDate : i54 = virtualinvoke r3.<java.util.Calendar: int get(int)>(1) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void clear(int)>(14)
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void clear(int)>(14) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(i54, i2, 1, 0, 0, 0)
org.jfree.chart.axis.DateAxis.previousStandardDate : virtualinvoke r3.<java.util.Calendar: void set(int,int,int,int,int,int)>(i54, i2, 1, 0, 0, 0) >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r30 = new org.jfree.data.time.Month
org.jfree.chart.axis.DateAxis.previousStandardDate : $r30 = new org.jfree.data.time.Month >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r31 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $r31 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r32 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r32 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r33 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r33 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale> >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : specialinvoke $r30.<org.jfree.data.time.Month: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>($r31, $r32, $r33)
org.jfree.chart.axis.DateAxis.previousStandardDate : specialinvoke $r30.<org.jfree.data.time.Month: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>($r31, $r32, $r33) >>>>>>>> org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Month: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getFirstMillisecond : $i0 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getFirstMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $i2 = $i1 - 1
org.jfree.data.time.Month.getFirstMillisecond : $i2 = $i1 - 1 >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i2, 1, 0, 0, 0)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i0, $i2, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Month.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getFirstMillisecond : $l3 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : return $l3
org.jfree.data.time.Month.getFirstMillisecond : return $l3 >>>>>>>> org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long firstMillisecond> = $l0
org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Month.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Month: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i1 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i2 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getLastMillisecond : $i2 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : i0 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>($i1, $i2)
org.jfree.data.time.Month.getLastMillisecond : i0 = staticinvoke <org.jfree.date.SerialDate: int lastDayOfMonth(int,int)>($i1, $i2) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year>
org.jfree.data.time.Month.getLastMillisecond : $i3 = r0.<org.jfree.data.time.Month: int year> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i4 = r0.<org.jfree.data.time.Month: int month>
org.jfree.data.time.Month.getLastMillisecond : $i4 = r0.<org.jfree.data.time.Month: int month> >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $i5 = $i4 - 1
org.jfree.data.time.Month.getLastMillisecond : $i5 = $i4 - 1 >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i3, $i5, i0, 23, 59, 59)
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i3, $i5, i0, 23, 59, 59) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Month.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Month.getLastMillisecond : $l6 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Month.getLastMillisecond : return $l6
org.jfree.data.time.Month.getLastMillisecond : return $l6 >>>>>>>> org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long lastMillisecond> = $l1
org.jfree.data.time.Month.peg : r0.<org.jfree.data.time.Month: long lastMillisecond> = $l1 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : r9 = $r30
org.jfree.chart.axis.DateAxis.previousStandardDate : r9 = $r30 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $r34 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.DateAxis.previousStandardDate : $r34 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition> >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : r10 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)>(r9, $r34)
org.jfree.chart.axis.DateAxis.previousStandardDate : r10 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)>(r9, $r34) >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "period")
org.jfree.chart.axis.DateAxis.calculateDateForPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "period") >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : r3 = null
org.jfree.chart.axis.DateAxis.calculateDateForPosition : r3 = null >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r4 = <org.jfree.chart.axis.DateTickMarkPosition: org.jfree.chart.axis.DateTickMarkPosition START>
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r4 = <org.jfree.chart.axis.DateTickMarkPosition: org.jfree.chart.axis.DateTickMarkPosition START> >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : if r2 != $r4
org.jfree.chart.axis.DateAxis.calculateDateForPosition : if r2 != $r4 >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r5 = new java.util.Date
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $r5 = new java.util.Date >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : $l0 = virtualinvoke r1.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>()
org.jfree.chart.axis.DateAxis.calculateDateForPosition : $l0 = virtualinvoke r1.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>() >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Month: long firstMillisecond>
org.jfree.data.time.Month.getFirstMillisecond : $l0 = r0.<org.jfree.data.time.Month: long firstMillisecond> >>>>>>>> org.jfree.data.time.Month.getFirstMillisecond : return $l0
org.jfree.data.time.Month.getFirstMillisecond : return $l0 >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : specialinvoke $r5.<java.util.Date: void <init>(long)>($l0)
org.jfree.chart.axis.DateAxis.calculateDateForPosition : specialinvoke $r5.<java.util.Date: void <init>(long)>($l0) >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : r3 = $r5
org.jfree.chart.axis.DateAxis.calculateDateForPosition : r3 = $r5 >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : goto [?= return r3]
org.jfree.chart.axis.DateAxis.calculateDateForPosition : goto [?= return r3] >>>>>>>> org.jfree.chart.axis.DateAxis.calculateDateForPosition : return r3
org.jfree.chart.axis.DateAxis.calculateDateForPosition : return r3 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : l10 = virtualinvoke r10.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : l10 = virtualinvoke r10.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $l55 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.previousStandardDate : $l55 = virtualinvoke r1.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : $b56 = l10 cmp $l55
org.jfree.chart.axis.DateAxis.previousStandardDate : $b56 = l10 cmp $l55 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : if $b56 < 0
org.jfree.chart.axis.DateAxis.previousStandardDate : if $b56 < 0 >>>>>>>> org.jfree.chart.axis.DateAxis.previousStandardDate : return r10
org.jfree.chart.axis.DateAxis.previousStandardDate : return r10 >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : $r5 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.nextStandardDate : $r5 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : $r6 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale>
org.jfree.chart.axis.DateAxis.nextStandardDate : $r6 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale> >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r5, $r6)
org.jfree.chart.axis.DateAxis.nextStandardDate : r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r5, $r6) >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>(r3)
org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void setTime(java.util.Date)>(r3) >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getCalendarField()>() >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : $i1 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getMultiple()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : $i1 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getMultiple()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.DateTickUnit.getMultiple : $i0 = r0.<org.jfree.chart.axis.DateTickUnit: int count> >>>>>>>> org.jfree.chart.axis.DateTickUnit.getMultiple : return $i0
org.jfree.chart.axis.DateTickUnit.getMultiple : return $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void add(int,int)>($i0, $i1)
org.jfree.chart.axis.DateAxis.nextStandardDate : virtualinvoke r4.<java.util.Calendar: void add(int,int)>($i0, $i1) >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : $r7 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateAxis.nextStandardDate : $r7 = virtualinvoke r4.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.nextStandardDate : return $r7
org.jfree.chart.axis.DateAxis.nextStandardDate : return $r7 >>>>>>>> org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : return $r3
org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue : return $r3 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r9 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r9 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date getMaximumDate()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : z0 = 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : z0 = 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z2 == 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if z0 != 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if z0 != 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r14 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r14 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickMarkPosition tickMarkPosition> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)>(r8, r7, $r14)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date correctTickDateForPosition(java.util.Date,org.jfree.chart.axis.DateTickUnit,org.jfree.chart.axis.DateTickMarkPosition)>(r8, r7, $r14) >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : r4 = r1
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : r4 = r1 >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>()
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $i0 = virtualinvoke r2.<org.jfree.chart.axis.DateTickUnit: int getUnit()>() >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : tableswitch($i0) {     case 0:
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : tableswitch($i0) {     case 0: >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r5 = new org.jfree.data.time.Month
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r5 = new org.jfree.data.time.Month >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r6 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r6 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r7 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale>
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : $r7 = r0.<org.jfree.chart.axis.DateAxis: java.util.Locale locale> >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : specialinvoke $r5.<org.jfree.data.time.Month: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>(r1, $r6, $r7)
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : specialinvoke $r5.<org.jfree.data.time.Month: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>(r1, $r6, $r7) >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : r4 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)>($r5, r3)
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : r4 = specialinvoke r0.<org.jfree.chart.axis.DateAxis: java.util.Date calculateDateForPosition(org.jfree.data.time.RegularTimePeriod,org.jfree.chart.axis.DateTickMarkPosition)>($r5, r3) >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : goto [?= return r4]
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : goto [?= return r4] >>>>>>>> org.jfree.chart.axis.DateAxis.correctTickDateForPosition : return r4
org.jfree.chart.axis.DateAxis.correctTickDateForPosition : return r4 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l0 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l0 = virtualinvoke r8.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r15 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r15 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r16 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: java.util.Date addToDate(java.util.Date,java.util.TimeZone)>(r8, $r15)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r16 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: java.util.Date addToDate(java.util.Date,java.util.TimeZone)>(r8, $r15) >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2)
org.jfree.chart.axis.DateTickUnit.addToDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2) >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateTickUnit.addToDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : $r4 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType>
org.jfree.chart.axis.DateTickUnit.addToDate : $r4 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType unitType> >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : $i0 = virtualinvoke $r4.<org.jfree.chart.axis.DateTickUnitType: int getCalendarField()>()
org.jfree.chart.axis.DateTickUnit.addToDate : $i0 = virtualinvoke $r4.<org.jfree.chart.axis.DateTickUnitType: int getCalendarField()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : $i1 = r0.<org.jfree.chart.axis.DateTickUnit: int count>
org.jfree.chart.axis.DateTickUnit.addToDate : $i1 = r0.<org.jfree.chart.axis.DateTickUnit: int count> >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : virtualinvoke r3.<java.util.Calendar: void add(int,int)>($i0, $i1)
org.jfree.chart.axis.DateTickUnit.addToDate : virtualinvoke r3.<java.util.Calendar: void add(int,int)>($i0, $i1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : $r5 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateTickUnit.addToDate : $r5 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.addToDate : return $r5
org.jfree.chart.axis.DateTickUnit.addToDate : return $r5 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $l9 = virtualinvoke $r16.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $l9 = virtualinvoke $r16.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l1 = $l9 - l0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l1 = $l9 - l0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount> >>>>>>>> org.jfree.chart.axis.ValueAxis.getMinorTickCount : return $i0
org.jfree.chart.axis.ValueAxis.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i2 > 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i2 > 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i2 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount> >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0
org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i3 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i3 = 1 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i3 >= i2
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i3 >= i2 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $l15 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $l15 = virtualinvoke r8.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isHiddenValue(long)>($l15)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z6 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isHiddenValue(long)>($l15) >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : $r2 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline>
org.jfree.chart.axis.DateAxis.isHiddenValue : $r2 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.Timeline timeline> >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : $r1 = new java.util.Date
org.jfree.chart.axis.DateAxis.isHiddenValue : $r1 = new java.util.Date >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : specialinvoke $r1.<java.util.Date: void <init>(long)>(l0)
org.jfree.chart.axis.DateAxis.isHiddenValue : specialinvoke $r1.<java.util.Date: void <init>(long)>(l0) >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : $z0 = interfaceinvoke $r2.<org.jfree.chart.axis.Timeline: boolean containsDomainValue(java.util.Date)>($r1)
org.jfree.chart.axis.DateAxis.isHiddenValue : $z0 = interfaceinvoke $r2.<org.jfree.chart.axis.Timeline: boolean containsDomainValue(java.util.Date)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $l0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r1)
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $l0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: long getTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>()
org.jfree.chart.axis.SegmentedTimeline.getTime : l0 = virtualinvoke r1.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving>
org.jfree.chart.axis.SegmentedTimeline.getTime : $z0 = r0.<org.jfree.chart.axis.SegmentedTimeline: boolean adjustForDaylightSaving> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : if $z0 == 0
org.jfree.chart.axis.SegmentedTimeline.getTime : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.getTime : return l0
org.jfree.chart.axis.SegmentedTimeline.getTime : return l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: boolean containsDomainValue(long)>($l0)
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: boolean containsDomainValue(long)>($l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0)
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : r1 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline: org.jfree.chart.axis.SegmentedTimeline$Segment getSegment(long)>(l0) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>()
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : $z0 = virtualinvoke r1.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inIncludeSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l0 = specialinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long getSegmentNumberRelativeToGroup()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: long segmentNumber> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $i2 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$300(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount>
org.jfree.chart.axis.SegmentedTimeline.access$300 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int groupSegmentCount> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$300 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$300 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l3 = (long) $i2
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $l3 = (long) $i2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : l0 = $l1 % $l3
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : l0 = $l1 % $l3 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : $b4 = l0 cmp 0L >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : if $b4 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : if $b4 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0
org.jfree.chart.axis.SegmentedTimeline$Segment.getSegmentNumberRelativeToGroup : return l0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0>
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $r1 = r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: org.jfree.chart.axis.SegmentedTimeline this$0> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1)
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $i1 = staticinvoke <org.jfree.chart.axis.SegmentedTimeline: int access$200(org.jfree.chart.axis.SegmentedTimeline)>($r1) >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded>
org.jfree.chart.axis.SegmentedTimeline.access$200 : $i0 = r0.<org.jfree.chart.axis.SegmentedTimeline: int segmentsIncluded> >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.access$200 : return $i0
org.jfree.chart.axis.SegmentedTimeline.access$200 : return $i0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l2 = (long) $i1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $l2 = (long) $i1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $b3 = $l0 cmp $l2
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $b3 = $l0 cmp $l2 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $b3 >= 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $b3 >= 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>()
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z0 = virtualinvoke r0.<org.jfree.chart.axis.SegmentedTimeline$Segment: boolean inExceptionSegments()>() >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $z0 != 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z1 = 1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : $z1 = 1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : goto [?= return $z1]
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : goto [?= return $z1] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return $z1
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return $z1 >>>>>>>> org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : return $z0
org.jfree.chart.axis.SegmentedTimeline.containsDomainValue : return $z0 >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : if $z0 != 0
org.jfree.chart.axis.DateAxis.isHiddenValue : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : $z1 = 0
org.jfree.chart.axis.DateAxis.isHiddenValue : $z1 = 0 >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : return $z1
org.jfree.chart.axis.DateAxis.isHiddenValue : return $z1 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z6 != 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z6 != 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r22 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r22 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: java.text.DateFormat getDateFormatOverride()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if r22 == null
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if r22 == null >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r24 = r0.<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.DateTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r23 = virtualinvoke $r24.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r8)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r23 = virtualinvoke $r24.<org.jfree.chart.axis.DateTickUnit: java.lang.String dateToString(java.util.Date)>(r8) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : d0 = 0.0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $z7 = virtualinvoke r0.<org.jfree.chart.axis.DateAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z7 == 0
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if $z7 == 0 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r26 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r26 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if r3 != $r26
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if r3 != $r26 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r11 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r11 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r12 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r27 = new org.jfree.chart.axis.DateTick
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r27 = new org.jfree.chart.axis.DateTick >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : specialinvoke $r27.<org.jfree.chart.axis.DateTick: void <init>(java.util.Date,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>(r8, r23, r11, r12, d0)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : specialinvoke $r27.<org.jfree.chart.axis.DateTick: void <init>(java.util.Date,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>(r8, r23, r11, r12, d0) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r13 = $r27
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r13 = $r27 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r13) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l5 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l5 = virtualinvoke r8.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r28 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r28 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: java.util.Date addToDate(java.util.Date,java.util.TimeZone)>(r8, $r28)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: java.util.Date addToDate(java.util.Date,java.util.TimeZone)>(r8, $r28) >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l6 = virtualinvoke r8.<java.util.Date: long getTime()>()
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : l6 = virtualinvoke r8.<java.util.Date: long getTime()>() >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i7 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : i7 = 1 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i7 >= i2
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : if i7 >= i2 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= (branch)]
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)]
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : goto [?= $z2 = virtualinvoke r8.<java.util.Date: boolean before(java.util.Date)>(r9)] >>>>>>>> org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return 0
org.jfree.chart.axis.SegmentedTimeline$Segment.inIncludeSegments : return 0 >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : $z1 = 1
org.jfree.chart.axis.DateAxis.isHiddenValue : $z1 = 1 >>>>>>>> org.jfree.chart.axis.DateAxis.isHiddenValue : goto [?= return $z1]
org.jfree.chart.axis.DateAxis.isHiddenValue : goto [?= return $z1] >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r35 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone>
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : $r35 = r0.<org.jfree.chart.axis.DateAxis: java.util.TimeZone timeZone> >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: java.util.Date rollDate(java.util.Date,java.util.TimeZone)>(r8, $r35)
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : r8 = virtualinvoke r7.<org.jfree.chart.axis.DateTickUnit: java.util.Date rollDate(java.util.Date,java.util.TimeZone)>(r8, $r35) >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2)
org.jfree.chart.axis.DateTickUnit.rollDate : r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r2) >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1)
org.jfree.chart.axis.DateTickUnit.rollDate : virtualinvoke r3.<java.util.Calendar: void setTime(java.util.Date)>(r1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : $r4 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType rollUnitType>
org.jfree.chart.axis.DateTickUnit.rollDate : $r4 = r0.<org.jfree.chart.axis.DateTickUnit: org.jfree.chart.axis.DateTickUnitType rollUnitType> >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : $i0 = virtualinvoke $r4.<org.jfree.chart.axis.DateTickUnitType: int getCalendarField()>()
org.jfree.chart.axis.DateTickUnit.rollDate : $i0 = virtualinvoke $r4.<org.jfree.chart.axis.DateTickUnitType: int getCalendarField()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : $i1 = r0.<org.jfree.chart.axis.DateTickUnit: int rollCount>
org.jfree.chart.axis.DateTickUnit.rollDate : $i1 = r0.<org.jfree.chart.axis.DateTickUnit: int rollCount> >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : virtualinvoke r3.<java.util.Calendar: void add(int,int)>($i0, $i1)
org.jfree.chart.axis.DateTickUnit.rollDate : virtualinvoke r3.<java.util.Calendar: void add(int,int)>($i0, $i1) >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : $r5 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>()
org.jfree.chart.axis.DateTickUnit.rollDate : $r5 = virtualinvoke r3.<java.util.Calendar: java.util.Date getTime()>() >>>>>>>> org.jfree.chart.axis.DateTickUnit.rollDate : return $r5
org.jfree.chart.axis.DateTickUnit.rollDate : return $r5 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : z0 = 1
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : z0 = 1 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : return r5
org.jfree.chart.axis.DateAxis.refreshTicksHorizontal : return r5 >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicks : goto [?= return r5]
org.jfree.chart.axis.DateAxis.refreshTicks : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.DateAxis.refreshTicks : return r5
