org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l0 = virtualinvoke r0.<org.jfree.data.time.Year: long getFirstMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getFirstMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 0, 1, 0, 0, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0)
org.jfree.data.time.Year.getFirstMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 0) >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getFirstMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getFirstMillisecond : return $l1
org.jfree.data.time.Year.getFirstMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long firstMillisecond> = $l0 >>>>>>>> org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1)
org.jfree.data.time.Year.peg : $l1 = virtualinvoke r0.<org.jfree.data.time.Year: long getLastMillisecond(java.util.Calendar)>(r1) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year>
org.jfree.data.time.Year.getLastMillisecond : $s0 = r0.<org.jfree.data.time.Year: short year> >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($s0, 11, 31, 23, 59, 59) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999)
org.jfree.data.time.Year.getLastMillisecond : virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, 999) >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>()
org.jfree.data.time.Year.getLastMillisecond : $l1 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>() >>>>>>>> org.jfree.data.time.Year.getLastMillisecond : return $l1
org.jfree.data.time.Year.getLastMillisecond : return $l1 >>>>>>>> org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1
org.jfree.data.time.Year.peg : r0.<org.jfree.data.time.Year: long lastMillisecond> = $l1 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double,boolean)>(r1, d0, 1)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.RegularTimePeriod,double,boolean)>(r1, d0, 1) >>>>>>>> org.jfree.data.time.TimeSeries.add : $r2 = new org.jfree.data.time.TimeSeriesDataItem
org.jfree.data.time.TimeSeries.add : $r2 = new org.jfree.data.time.TimeSeriesDataItem >>>>>>>> org.jfree.data.time.TimeSeries.add : specialinvoke $r2.<org.jfree.data.time.TimeSeriesDataItem: void <init>(org.jfree.data.time.RegularTimePeriod,double)>(r1, d0)
org.jfree.data.time.TimeSeries.add : specialinvoke $r2.<org.jfree.data.time.TimeSeriesDataItem: void <init>(org.jfree.data.time.RegularTimePeriod,double)>(r1, d0) >>>>>>>> org.jfree.data.time.TimeSeries.add : r3 = $r2
org.jfree.data.time.TimeSeries.add : r3 = $r2 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r3, z0)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void add(org.jfree.data.time.TimeSeriesDataItem,boolean)>(r3, z0) >>>>>>>> org.jfree.data.time.TimeSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.time.TimeSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.time.TimeSeries.add : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.add : $r6 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : r1 = null
org.jfree.data.time.TimeSeriesDataItem.clone : r1 = null >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.time.TimeSeriesDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : goto [?= return r1]
org.jfree.data.time.TimeSeriesDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.clone : return r1
org.jfree.data.time.TimeSeriesDataItem.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeries.add : r7 = (org.jfree.data.time.TimeSeriesDataItem) $r6
org.jfree.data.time.TimeSeries.add : r7 = (org.jfree.data.time.TimeSeriesDataItem) $r6 >>>>>>>> org.jfree.data.time.TimeSeries.add : $r8 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>()
org.jfree.data.time.TimeSeries.add : $r8 = virtualinvoke r7.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod getPeriod()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getPeriod : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.getPeriod : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getPeriod : return $r1
org.jfree.data.time.TimeSeriesDataItem.getPeriod : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.add : r2 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>()
org.jfree.data.time.TimeSeries.add : r2 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>() >>>>>>>> org.jfree.data.time.TimeSeries.add : $r9 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.add : $r9 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.add : if $r9 != null
org.jfree.data.time.TimeSeries.add : if $r9 != null >>>>>>>> org.jfree.data.time.TimeSeries.add : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2
org.jfree.data.time.TimeSeries.add : r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> = r2 >>>>>>>> org.jfree.data.time.TimeSeries.add : goto [?= z2 = 0]
org.jfree.data.time.TimeSeries.add : goto [?= z2 = 0] >>>>>>>> org.jfree.data.time.TimeSeries.add : z2 = 0
org.jfree.data.time.TimeSeries.add : z2 = 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.getItemCount : $r1 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeries.getItemCount : return $i0
org.jfree.data.time.TimeSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeries.add : if i0 != 0
org.jfree.data.time.TimeSeries.add : if i0 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : $r25 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.add : $r25 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.add : interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r7)
org.jfree.data.time.TimeSeries.add : interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r7) >>>>>>>> org.jfree.data.time.TimeSeries.add : z4 = 1
org.jfree.data.time.TimeSeries.add : z4 = 1 >>>>>>>> org.jfree.data.time.TimeSeries.add : goto [?= (branch)]
org.jfree.data.time.TimeSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.time.TimeSeries.add : if z4 == 0
org.jfree.data.time.TimeSeries.add : if z4 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r7)
org.jfree.data.time.TimeSeries.add : specialinvoke r0.<org.jfree.data.time.TimeSeries: void updateBoundsForAddedItem(org.jfree.data.time.TimeSeriesDataItem)>(r7) >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r2 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r2 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getValue : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.getValue : $r1 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.getValue : return $r1
org.jfree.data.time.TimeSeriesDataItem.getValue : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $r3 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $r3 = virtualinvoke r1.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number getValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : if $r3 == null
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : if $r3 == null >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : d0 = virtualinvoke r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d1 = r0.<org.jfree.data.time.TimeSeries: double minY>
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d1 = r0.<org.jfree.data.time.TimeSeries: double minY> >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d2 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double minIgnoreNaN(double,double)>($d1, d0)
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d2 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double minIgnoreNaN(double,double)>($d1, d0) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.time.TimeSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.time.TimeSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.minIgnoreNaN : return d1
org.jfree.data.time.TimeSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double minY> = $d2
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double minY> = $d2 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d3 = r0.<org.jfree.data.time.TimeSeries: double maxY>
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d3 = r0.<org.jfree.data.time.TimeSeries: double maxY> >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d4 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double maxIgnoreNaN(double,double)>($d3, d0)
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : $d4 = specialinvoke r0.<org.jfree.data.time.TimeSeries: double maxIgnoreNaN(double,double)>($d3, d0) >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.time.TimeSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.time.TimeSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.maxIgnoreNaN : return d1
org.jfree.data.time.TimeSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double maxY> = $d4
org.jfree.data.time.TimeSeries.updateBoundsForAddedItem : r0.<org.jfree.data.time.TimeSeries: double maxY> = $d4 >>>>>>>> org.jfree.data.time.TimeSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.add : $i8 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.add : $i8 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.add : if $i7 <= $i8
org.jfree.data.time.TimeSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0)
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void removeAgedItems(boolean)>(0) >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.removeAgedItems : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.removeAgedItems : if $i1 <= 1
org.jfree.data.time.TimeSeries.removeAgedItems : if $i1 <= 1 >>>>>>>> org.jfree.data.time.TimeSeries.add : if z0 == 0
org.jfree.data.time.TimeSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>()
org.jfree.data.time.TimeSeries.add : virtualinvoke r0.<org.jfree.data.time.TimeSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.time.TimeSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.addSeries : $r2 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeriesCollection.addSeries : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.time.TimeSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.time.TimeSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r2 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>()
org.jfree.data.time.TimeSeriesCollection.clone : $r2 = specialinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.AbstractDataset.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3
org.jfree.data.general.AbstractDataset.clone : r1 = (org.jfree.data.general.AbstractDataset) $r3 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.AbstractDataset.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.AbstractDataset.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2
org.jfree.data.general.AbstractDataset.clone : r1.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> = $r2 >>>>>>>> org.jfree.data.general.AbstractDataset.clone : return r1
org.jfree.data.general.AbstractDataset.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : r1 = (org.jfree.data.time.TimeSeriesCollection) $r2
org.jfree.data.time.TimeSeriesCollection.clone : r1 = (org.jfree.data.time.TimeSeriesCollection) $r2 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r3 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.clone : $r3 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3)
org.jfree.data.time.TimeSeriesCollection.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3) >>>>>>>> org.jfree.data.time.TimeSeries.clone : $r2 = specialinvoke r0.<org.jfree.data.general.Series: java.lang.Object clone()>()
org.jfree.data.time.TimeSeries.clone : $r2 = specialinvoke r0.<org.jfree.data.general.Series: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.Series.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.general.Series.clone : $r3 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.general.Series.clone : r1 = (org.jfree.data.general.Series) $r3
org.jfree.data.general.Series.clone : r1 = (org.jfree.data.general.Series) $r3 >>>>>>>> org.jfree.data.general.Series.clone : $r2 = new javax.swing.event.EventListenerList
org.jfree.data.general.Series.clone : $r2 = new javax.swing.event.EventListenerList >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>()
org.jfree.data.general.Series.clone : specialinvoke $r2.<javax.swing.event.EventListenerList: void <init>()>() >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> = $r2
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> = $r2 >>>>>>>> org.jfree.data.general.Series.clone : $r4 = new java.beans.PropertyChangeSupport
org.jfree.data.general.Series.clone : $r4 = new java.beans.PropertyChangeSupport >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r1)
org.jfree.data.general.Series.clone : specialinvoke $r4.<java.beans.PropertyChangeSupport: void <init>(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> = $r4
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> = $r4 >>>>>>>> org.jfree.data.general.Series.clone : $r5 = new java.beans.VetoableChangeSupport
org.jfree.data.general.Series.clone : $r5 = new java.beans.VetoableChangeSupport >>>>>>>> org.jfree.data.general.Series.clone : specialinvoke $r5.<java.beans.VetoableChangeSupport: void <init>(java.lang.Object)>(r1)
org.jfree.data.general.Series.clone : specialinvoke $r5.<java.beans.VetoableChangeSupport: void <init>(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> = $r5
org.jfree.data.general.Series.clone : r1.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> = $r5 >>>>>>>> org.jfree.data.general.Series.clone : return r1
org.jfree.data.general.Series.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeries.clone : r1 = (org.jfree.data.time.TimeSeries) $r2
org.jfree.data.time.TimeSeries.clone : r1 = (org.jfree.data.time.TimeSeries) $r2 >>>>>>>> org.jfree.data.time.TimeSeries.clone : $r3 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.clone : $r3 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3)
org.jfree.data.time.TimeSeries.clone : $r4 = staticinvoke <org.jfree.util.ObjectUtilities: java.util.Collection deepClone(java.util.Collection)>($r3) >>>>>>>> org.jfree.data.time.TimeSeries.clone : $r5 = (java.util.List) $r4
org.jfree.data.time.TimeSeries.clone : $r5 = (java.util.List) $r4 >>>>>>>> org.jfree.data.time.TimeSeries.clone : r1.<org.jfree.data.time.TimeSeries: java.util.List data> = $r5
org.jfree.data.time.TimeSeries.clone : r1.<org.jfree.data.time.TimeSeries: java.util.List data> = $r5 >>>>>>>> org.jfree.data.time.TimeSeries.clone : return r1
org.jfree.data.time.TimeSeries.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r5 = (java.util.List) $r4
org.jfree.data.time.TimeSeriesCollection.clone : $r5 = (java.util.List) $r4 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : r1.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> = $r5
org.jfree.data.time.TimeSeriesCollection.clone : r1.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> = $r5 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r6 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar>
org.jfree.data.time.TimeSeriesCollection.clone : $r6 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r7 = virtualinvoke $r6.<java.util.Calendar: java.lang.Object clone()>()
org.jfree.data.time.TimeSeriesCollection.clone : $r7 = virtualinvoke $r6.<java.util.Calendar: java.lang.Object clone()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : $r8 = (java.util.Calendar) $r7
org.jfree.data.time.TimeSeriesCollection.clone : $r8 = (java.util.Calendar) $r7 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : r1.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar> = $r8
org.jfree.data.time.TimeSeriesCollection.clone : r1.<org.jfree.data.time.TimeSeriesCollection: java.util.Calendar workingCalendar> = $r8 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.clone : return r1
org.jfree.data.time.TimeSeriesCollection.clone : return r1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : if r1 != r0
org.jfree.data.time.TimeSeriesCollection.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeriesCollection
org.jfree.data.time.TimeSeriesCollection.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeriesCollection >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : if $z0 != 0
org.jfree.data.time.TimeSeriesCollection.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : r2 = (org.jfree.data.time.TimeSeriesCollection) r1
org.jfree.data.time.TimeSeriesCollection.equals : r2 = (org.jfree.data.time.TimeSeriesCollection) r1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $r3 = r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>
org.jfree.data.time.TimeSeriesCollection.equals : $r3 = r0.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $r4 = r2.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>
org.jfree.data.time.TimeSeriesCollection.equals : $r4 = r2.<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : if $r3 == $r4
org.jfree.data.time.TimeSeriesCollection.equals : if $r3 == $r4 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $z1 = r0.<org.jfree.data.time.TimeSeriesCollection: boolean domainIsPointsInTime>
org.jfree.data.time.TimeSeriesCollection.equals : $z1 = r0.<org.jfree.data.time.TimeSeriesCollection: boolean domainIsPointsInTime> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $z2 = r2.<org.jfree.data.time.TimeSeriesCollection: boolean domainIsPointsInTime>
org.jfree.data.time.TimeSeriesCollection.equals : $z2 = r2.<org.jfree.data.time.TimeSeriesCollection: boolean domainIsPointsInTime> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : if $z1 == $z2
org.jfree.data.time.TimeSeriesCollection.equals : if $z1 == $z2 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $r5 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.equals : $r5 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $r6 = r2.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.equals : $r6 = r2.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.time.TimeSeriesCollection.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if r1 != r0
org.jfree.data.time.TimeSeries.equals : if r1 != r0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeries
org.jfree.data.time.TimeSeries.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeries >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z0 != 0
org.jfree.data.time.TimeSeries.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : r2 = (org.jfree.data.time.TimeSeries) r1
org.jfree.data.time.TimeSeries.equals : r2 = (org.jfree.data.time.TimeSeries) r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>()
org.jfree.data.time.TimeSeries.equals : $r3 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.getDomainDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain>
org.jfree.data.time.TimeSeries.getDomainDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String domain> >>>>>>>> org.jfree.data.time.TimeSeries.getDomainDescription : return $r1
org.jfree.data.time.TimeSeries.getDomainDescription : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>()
org.jfree.data.time.TimeSeries.equals : $r4 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getDomainDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.data.time.TimeSeries.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z1 != 0
org.jfree.data.time.TimeSeries.equals : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>()
org.jfree.data.time.TimeSeries.equals : $r5 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.getRangeDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range>
org.jfree.data.time.TimeSeries.getRangeDescription : $r1 = r0.<org.jfree.data.time.TimeSeries: java.lang.String range> >>>>>>>> org.jfree.data.time.TimeSeries.getRangeDescription : return $r1
org.jfree.data.time.TimeSeries.getRangeDescription : return $r1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>()
org.jfree.data.time.TimeSeries.equals : $r6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: java.lang.String getRangeDescription()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.time.TimeSeries.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z2 != 0
org.jfree.data.time.TimeSeries.equals : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.equals : $r7 = r0.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r8 = r2.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass>
org.jfree.data.time.TimeSeries.equals : $r8 = r2.<org.jfree.data.time.TimeSeries: java.lang.Class timePeriodClass> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8)
org.jfree.data.time.TimeSeries.equals : $z3 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r7, $r8) >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z3 != 0
org.jfree.data.time.TimeSeries.equals : if $z3 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $l1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>()
org.jfree.data.time.TimeSeries.equals : $l1 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>() >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemAge : $l0 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge>
org.jfree.data.time.TimeSeries.getMaximumItemAge : $l0 = r0.<org.jfree.data.time.TimeSeries: long maximumItemAge> >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemAge : return $l0
org.jfree.data.time.TimeSeries.getMaximumItemAge : return $l0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $l2 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>()
org.jfree.data.time.TimeSeries.equals : $l2 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: long getMaximumItemAge()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $b3 = $l1 cmp $l2
org.jfree.data.time.TimeSeries.equals : $b3 = $l1 cmp $l2 >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $b3 == 0
org.jfree.data.time.TimeSeries.equals : if $b3 == 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i4 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemCount : $i0 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount>
org.jfree.data.time.TimeSeries.getMaximumItemCount : $i0 = r0.<org.jfree.data.time.TimeSeries: int maximumItemCount> >>>>>>>> org.jfree.data.time.TimeSeries.getMaximumItemCount : return $i0
org.jfree.data.time.TimeSeries.getMaximumItemCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i5 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getMaximumItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $i4 == $i5
org.jfree.data.time.TimeSeries.equals : if $i4 == $i5 >>>>>>>> org.jfree.data.time.TimeSeries.equals : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.equals : i0 = virtualinvoke r0.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : $i6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getItemCount()>()
org.jfree.data.time.TimeSeries.equals : $i6 = virtualinvoke r2.<org.jfree.data.time.TimeSeries: int getItemCount()>() >>>>>>>> org.jfree.data.time.TimeSeries.equals : if i0 == $i6
org.jfree.data.time.TimeSeries.equals : if i0 == $i6 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.equals : $r9 = r0.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $r10 = r2.<org.jfree.data.time.TimeSeries: java.util.List data>
org.jfree.data.time.TimeSeries.equals : $r10 = r2.<org.jfree.data.time.TimeSeries: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10)
org.jfree.data.time.TimeSeries.equals : $z4 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r9, $r10) >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if r0 != r1
org.jfree.data.time.TimeSeriesDataItem.equals : if r0 != r1 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeriesDataItem
org.jfree.data.time.TimeSeriesDataItem.equals : $z0 = r1 instanceof org.jfree.data.time.TimeSeriesDataItem >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if $z0 != 0
org.jfree.data.time.TimeSeriesDataItem.equals : if $z0 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : r2 = (org.jfree.data.time.TimeSeriesDataItem) r1
org.jfree.data.time.TimeSeriesDataItem.equals : r2 = (org.jfree.data.time.TimeSeriesDataItem) r1 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r3 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.equals : $r3 = r0.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r4 = r2.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period>
org.jfree.data.time.TimeSeriesDataItem.equals : $r4 = r2.<org.jfree.data.time.TimeSeriesDataItem: org.jfree.data.time.RegularTimePeriod period> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4)
org.jfree.data.time.TimeSeriesDataItem.equals : $z1 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r3, $r4) >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if $z1 != 0
org.jfree.data.time.TimeSeriesDataItem.equals : if $z1 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r5 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.equals : $r5 = r0.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $r6 = r2.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value>
org.jfree.data.time.TimeSeriesDataItem.equals : $r6 = r2.<org.jfree.data.time.TimeSeriesDataItem: java.lang.Number value> >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.time.TimeSeriesDataItem.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : if $z2 != 0
org.jfree.data.time.TimeSeriesDataItem.equals : if $z2 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesDataItem.equals : return 1
org.jfree.data.time.TimeSeriesDataItem.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : if $z4 != 0
org.jfree.data.time.TimeSeries.equals : if $z4 != 0 >>>>>>>> org.jfree.data.time.TimeSeries.equals : $z5 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1)
org.jfree.data.time.TimeSeries.equals : $z5 = specialinvoke r0.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.Series.equals : if r1 != r0
org.jfree.data.general.Series.equals : if r1 != r0 >>>>>>>> org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series
org.jfree.data.general.Series.equals : $z0 = r1 instanceof org.jfree.data.general.Series >>>>>>>> org.jfree.data.general.Series.equals : if $z0 != 0
org.jfree.data.general.Series.equals : if $z0 != 0 >>>>>>>> org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1
org.jfree.data.general.Series.equals : r2 = (org.jfree.data.general.Series) r1 >>>>>>>> org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r3 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>()
org.jfree.data.general.Series.equals : $r4 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4)
org.jfree.data.general.Series.equals : $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.data.general.Series.equals : if $z1 != 0
org.jfree.data.general.Series.equals : if $z1 != 0 >>>>>>>> org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r5 = virtualinvoke r0.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description>
org.jfree.data.general.Series.getDescription : $r1 = r0.<org.jfree.data.general.Series: java.lang.String description> >>>>>>>> org.jfree.data.general.Series.getDescription : return $r1
org.jfree.data.general.Series.getDescription : return $r1 >>>>>>>> org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>()
org.jfree.data.general.Series.equals : $r6 = virtualinvoke r2.<org.jfree.data.general.Series: java.lang.String getDescription()>() >>>>>>>> org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6)
org.jfree.data.general.Series.equals : $z2 = staticinvoke <org.jfree.util.ObjectUtilities: boolean equal(java.lang.Object,java.lang.Object)>($r5, $r6) >>>>>>>> org.jfree.data.general.Series.equals : if $z2 != 0
org.jfree.data.general.Series.equals : if $z2 != 0 >>>>>>>> org.jfree.data.general.Series.equals : return 1
org.jfree.data.general.Series.equals : return 1 >>>>>>>> org.jfree.data.time.TimeSeries.equals : return $z5
org.jfree.data.time.TimeSeries.equals : return $z5 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : if $z3 != 0
org.jfree.data.time.TimeSeriesCollection.equals : if $z3 != 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : return 1
org.jfree.data.time.TimeSeriesCollection.equals : return 1 >>>>>>>> org.jfree.data.general.Series.setDescription : r2 = r0.<org.jfree.data.general.Series: java.lang.String description>
org.jfree.data.general.Series.setDescription : r2 = r0.<org.jfree.data.general.Series: java.lang.String description> >>>>>>>> org.jfree.data.general.Series.setDescription : r0.<org.jfree.data.general.Series: java.lang.String description> = r1
org.jfree.data.general.Series.setDescription : r0.<org.jfree.data.general.Series: java.lang.String description> = r1 >>>>>>>> org.jfree.data.general.Series.setDescription : $r3 = r0.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport>
org.jfree.data.general.Series.setDescription : $r3 = r0.<org.jfree.data.general.Series: java.beans.PropertyChangeSupport propertyChangeSupport> >>>>>>>> org.jfree.data.general.Series.setDescription : virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("Description", r2, r1)
org.jfree.data.general.Series.setDescription : virtualinvoke $r3.<java.beans.PropertyChangeSupport: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("Description", r2, r1) >>>>>>>> org.jfree.data.general.Series.equals : return 0
org.jfree.data.general.Series.equals : return 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.equals : return 0
org.jfree.data.time.TimeSeriesCollection.equals : return 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < 0
org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: int getSeriesCount()>()
org.jfree.data.time.TimeSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.time.TimeSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeriesCount : return $i0
org.jfree.data.time.TimeSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < $i1
org.jfree.data.time.TimeSeriesCollection.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r7 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data>
org.jfree.data.time.TimeSeriesCollection.getSeries : $r7 = r0.<org.jfree.data.time.TimeSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.time.TimeSeriesCollection.getSeries : $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : $r9 = (org.jfree.data.time.TimeSeries) $r8
org.jfree.data.time.TimeSeriesCollection.getSeries : $r9 = (org.jfree.data.time.TimeSeries) $r8 >>>>>>>> org.jfree.data.time.TimeSeriesCollection.getSeries : return $r9
