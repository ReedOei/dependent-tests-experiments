org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setBaseLegendShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter>
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : $r0 = <org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.renderer.category.BarPainter defaultBarPainter> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0
org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter : return $r0 >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible>
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : $z0 = <org.jfree.chart.renderer.category.BarRenderer: boolean defaultShadowsVisible> >>>>>>>> org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0
org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0)
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelsVisible(java.lang.Boolean)>($r1)
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelsVisible(java.lang.Boolean)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelsVisible(java.lang.Boolean,boolean)>(r1, 1)
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setItemLabelsVisible(java.lang.Boolean,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> = r1
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.AbstractRenderer.setItemLabelsVisible : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isItemLabelVisible : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean isSeriesItemLabelsVisible(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isItemLabelVisible : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean isSeriesItemLabelsVisible(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean itemLabelsVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>()
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : return $z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isItemLabelVisible : return $z0
