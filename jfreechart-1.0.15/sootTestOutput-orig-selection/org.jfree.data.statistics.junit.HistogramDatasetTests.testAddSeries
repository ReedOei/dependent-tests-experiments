org.jfree.data.statistics.HistogramDataset.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "values")
org.jfree.data.statistics.HistogramDataset.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "values") >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if i0 >= 1
org.jfree.data.statistics.HistogramDataset.addSeries : if i0 >= 1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d6 = d1 - d0
org.jfree.data.statistics.HistogramDataset.addSeries : $d6 = d1 - d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d7 = (double) i0
org.jfree.data.statistics.HistogramDataset.addSeries : $d7 = (double) i0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : d2 = $d6 / $d7
org.jfree.data.statistics.HistogramDataset.addSeries : d2 = $d6 / $d7 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : d3 = d0
org.jfree.data.statistics.HistogramDataset.addSeries : d3 = d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r6 = new java.util.ArrayList
org.jfree.data.statistics.HistogramDataset.addSeries : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0)
org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : r3 = $r6
org.jfree.data.statistics.HistogramDataset.addSeries : r3 = $r6 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : i1 = 0
org.jfree.data.statistics.HistogramDataset.addSeries : i1 = 0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if i1 >= i0
org.jfree.data.statistics.HistogramDataset.addSeries : if i1 >= i0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $i2 = i0 - 1
org.jfree.data.statistics.HistogramDataset.addSeries : $i2 = i0 - 1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if i1 != $i2
org.jfree.data.statistics.HistogramDataset.addSeries : if i1 != $i2 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $i3 = i1 + 1
org.jfree.data.statistics.HistogramDataset.addSeries : $i3 = i1 + 1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d8 = (double) $i3
org.jfree.data.statistics.HistogramDataset.addSeries : $d8 = (double) $i3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d9 = $d8 * d2
org.jfree.data.statistics.HistogramDataset.addSeries : $d9 = $d8 * d2 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : d4 = d0 + $d9
org.jfree.data.statistics.HistogramDataset.addSeries : d4 = d0 + $d9 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r8 = new org.jfree.data.statistics.HistogramBin
org.jfree.data.statistics.HistogramDataset.addSeries : $r8 = new org.jfree.data.statistics.HistogramBin >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r8.<org.jfree.data.statistics.HistogramBin: void <init>(double,double)>(d3, d4)
org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r8.<org.jfree.data.statistics.HistogramBin: void <init>(double,double)>(d3, d4) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : r4 = $r8
org.jfree.data.statistics.HistogramDataset.addSeries : r4 = $r8 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : d3 = d4
org.jfree.data.statistics.HistogramDataset.addSeries : d3 = d4 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)
org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : i1 = i1 + 1
org.jfree.data.statistics.HistogramDataset.addSeries : i1 = i1 + 1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : goto [?= (branch)]
org.jfree.data.statistics.HistogramDataset.addSeries : goto [?= (branch)] >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r7 = new org.jfree.data.statistics.HistogramBin
org.jfree.data.statistics.HistogramDataset.addSeries : $r7 = new org.jfree.data.statistics.HistogramBin >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r7.<org.jfree.data.statistics.HistogramBin: void <init>(double,double)>(d3, d1)
org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r7.<org.jfree.data.statistics.HistogramBin: void <init>(double,double)>(d3, d1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : r4 = $r7
org.jfree.data.statistics.HistogramDataset.addSeries : r4 = $r7 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : goto [?= interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)]
org.jfree.data.statistics.HistogramDataset.addSeries : goto [?= interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r4)] >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : i4 = 0
org.jfree.data.statistics.HistogramDataset.addSeries : i4 = 0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $i5 = lengthof r2
org.jfree.data.statistics.HistogramDataset.addSeries : $i5 = lengthof r2 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if i4 >= $i5
org.jfree.data.statistics.HistogramDataset.addSeries : if i4 >= $i5 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : i6 = i0 - 1
org.jfree.data.statistics.HistogramDataset.addSeries : i6 = i0 - 1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d10 = r2[i4]
org.jfree.data.statistics.HistogramDataset.addSeries : $d10 = r2[i4] >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $b7 = $d10 cmpg d1
org.jfree.data.statistics.HistogramDataset.addSeries : $b7 = $d10 cmpg d1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if $b7 >= 0
org.jfree.data.statistics.HistogramDataset.addSeries : if $b7 >= 0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d11 = r2[i4]
org.jfree.data.statistics.HistogramDataset.addSeries : $d11 = r2[i4] >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d12 = $d11 - d0
org.jfree.data.statistics.HistogramDataset.addSeries : $d12 = $d11 - d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d13 = d1 - d0
org.jfree.data.statistics.HistogramDataset.addSeries : $d13 = d1 - d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : d5 = $d12 / $d13
org.jfree.data.statistics.HistogramDataset.addSeries : d5 = $d12 / $d13 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $b8 = d5 cmpg 0.0
org.jfree.data.statistics.HistogramDataset.addSeries : $b8 = d5 cmpg 0.0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if $b8 >= 0
org.jfree.data.statistics.HistogramDataset.addSeries : if $b8 >= 0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : d5 = 0.0
org.jfree.data.statistics.HistogramDataset.addSeries : d5 = 0.0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d14 = (double) i0
org.jfree.data.statistics.HistogramDataset.addSeries : $d14 = (double) i0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $d15 = d5 * $d14
org.jfree.data.statistics.HistogramDataset.addSeries : $d15 = d5 * $d14 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : i6 = (int) $d15
org.jfree.data.statistics.HistogramDataset.addSeries : i6 = (int) $d15 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : if i6 < i0
org.jfree.data.statistics.HistogramDataset.addSeries : if i6 < i0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6)
org.jfree.data.statistics.HistogramDataset.addSeries : $r9 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i6) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : r10 = (org.jfree.data.statistics.HistogramBin) $r9
org.jfree.data.statistics.HistogramDataset.addSeries : r10 = (org.jfree.data.statistics.HistogramBin) $r9 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : virtualinvoke r10.<org.jfree.data.statistics.HistogramBin: void incrementCount()>()
org.jfree.data.statistics.HistogramDataset.addSeries : virtualinvoke r10.<org.jfree.data.statistics.HistogramBin: void incrementCount()>() >>>>>>>> org.jfree.data.statistics.HistogramBin.incrementCount : $i0 = r0.<org.jfree.data.statistics.HistogramBin: int count>
org.jfree.data.statistics.HistogramBin.incrementCount : $i0 = r0.<org.jfree.data.statistics.HistogramBin: int count> >>>>>>>> org.jfree.data.statistics.HistogramBin.incrementCount : $i1 = $i0 + 1
org.jfree.data.statistics.HistogramBin.incrementCount : $i1 = $i0 + 1 >>>>>>>> org.jfree.data.statistics.HistogramBin.incrementCount : r0.<org.jfree.data.statistics.HistogramBin: int count> = $i1
org.jfree.data.statistics.HistogramBin.incrementCount : r0.<org.jfree.data.statistics.HistogramBin: int count> = $i1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : i4 = i4 + 1
org.jfree.data.statistics.HistogramDataset.addSeries : i4 = i4 + 1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : goto [?= $i5 = lengthof r2]
org.jfree.data.statistics.HistogramDataset.addSeries : goto [?= $i5 = lengthof r2] >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r11 = new java.util.HashMap
org.jfree.data.statistics.HistogramDataset.addSeries : $r11 = new java.util.HashMap >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r11.<java.util.HashMap: void <init>()>()
org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r11.<java.util.HashMap: void <init>()>() >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : r12 = $r11
org.jfree.data.statistics.HistogramDataset.addSeries : r12 = $r11 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", r1)
org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", r1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bins", r3)
org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bins", r3) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r15 = new java.lang.Integer
org.jfree.data.statistics.HistogramDataset.addSeries : $r15 = new java.lang.Integer >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $i9 = lengthof r2
org.jfree.data.statistics.HistogramDataset.addSeries : $i9 = lengthof r2 >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i9)
org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i9) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("values.length", $r15)
org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("values.length", $r15) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r17 = new java.lang.Double
org.jfree.data.statistics.HistogramDataset.addSeries : $r17 = new java.lang.Double >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r17.<java.lang.Double: void <init>(double)>(d2)
org.jfree.data.statistics.HistogramDataset.addSeries : specialinvoke $r17.<java.lang.Double: void <init>(double)>(d2) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bin width", $r17)
org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bin width", $r17) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : $r19 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list>
org.jfree.data.statistics.HistogramDataset.addSeries : $r19 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list> >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r12)
org.jfree.data.statistics.HistogramDataset.addSeries : interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r12) >>>>>>>> org.jfree.data.statistics.HistogramDataset.addSeries : virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: void fireDatasetChanged()>()
org.jfree.data.statistics.HistogramDataset.addSeries : virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = #NaN
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getStartX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getStartX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : r1 = virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: java.util.List getBins(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getStartX : r1 = virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: java.util.List getBins(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBins : $r2 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list>
org.jfree.data.statistics.HistogramDataset.getBins : $r2 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list> >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBins : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getBins : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBins : r1 = (java.util.Map) $r3
org.jfree.data.statistics.HistogramDataset.getBins : r1 = (java.util.Map) $r3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBins : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("bins")
org.jfree.data.statistics.HistogramDataset.getBins : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("bins") >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBins : $r5 = (java.util.List) $r4
org.jfree.data.statistics.HistogramDataset.getBins : $r5 = (java.util.List) $r4 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBins : return $r5
org.jfree.data.statistics.HistogramDataset.getBins : return $r5 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.statistics.HistogramDataset.getStartX : $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : r2 = (org.jfree.data.statistics.HistogramBin) $r3
org.jfree.data.statistics.HistogramDataset.getStartX : r2 = (org.jfree.data.statistics.HistogramBin) $r3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : $r4 = new java.lang.Double
org.jfree.data.statistics.HistogramDataset.getStartX : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : $d0 = virtualinvoke r2.<org.jfree.data.statistics.HistogramBin: double getStartBoundary()>()
org.jfree.data.statistics.HistogramDataset.getStartX : $d0 = virtualinvoke r2.<org.jfree.data.statistics.HistogramBin: double getStartBoundary()>() >>>>>>>> org.jfree.data.statistics.HistogramBin.getStartBoundary : $d0 = r0.<org.jfree.data.statistics.HistogramBin: double startBoundary>
org.jfree.data.statistics.HistogramBin.getStartBoundary : $d0 = r0.<org.jfree.data.statistics.HistogramBin: double startBoundary> >>>>>>>> org.jfree.data.statistics.HistogramBin.getStartBoundary : return $d0
org.jfree.data.statistics.HistogramBin.getStartBoundary : return $d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d0)
org.jfree.data.statistics.HistogramDataset.getStartX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getStartX : return $r4
org.jfree.data.statistics.HistogramDataset.getStartX : return $r4 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : if r1 == null
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : return d0
org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue : return d0 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = #NaN
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getEndX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Number getEndX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : r1 = virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: java.util.List getBins(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getEndX : r1 = virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: java.util.List getBins(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.statistics.HistogramDataset.getEndX : $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : r2 = (org.jfree.data.statistics.HistogramBin) $r3
org.jfree.data.statistics.HistogramDataset.getEndX : r2 = (org.jfree.data.statistics.HistogramBin) $r3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : $r4 = new java.lang.Double
org.jfree.data.statistics.HistogramDataset.getEndX : $r4 = new java.lang.Double >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : $d0 = virtualinvoke r2.<org.jfree.data.statistics.HistogramBin: double getEndBoundary()>()
org.jfree.data.statistics.HistogramDataset.getEndX : $d0 = virtualinvoke r2.<org.jfree.data.statistics.HistogramBin: double getEndBoundary()>() >>>>>>>> org.jfree.data.statistics.HistogramBin.getEndBoundary : $d0 = r0.<org.jfree.data.statistics.HistogramBin: double endBoundary>
org.jfree.data.statistics.HistogramBin.getEndBoundary : $d0 = r0.<org.jfree.data.statistics.HistogramBin: double endBoundary> >>>>>>>> org.jfree.data.statistics.HistogramBin.getEndBoundary : return $d0
org.jfree.data.statistics.HistogramBin.getEndBoundary : return $d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d0)
org.jfree.data.statistics.HistogramDataset.getEndX : specialinvoke $r4.<java.lang.Double: void <init>(double)>($d0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getEndX : return $r4
org.jfree.data.statistics.HistogramDataset.getEndX : return $r4 >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : if r1 == null
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : return d0
org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue : return d0 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : r1 = virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: java.util.List getBins(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getY : r1 = virtualinvoke r0.<org.jfree.data.statistics.HistogramDataset: java.util.List getBins(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.statistics.HistogramDataset.getY : $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : r2 = (org.jfree.data.statistics.HistogramBin) $r3
org.jfree.data.statistics.HistogramDataset.getY : r2 = (org.jfree.data.statistics.HistogramBin) $r3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $i2 = specialinvoke r0.<org.jfree.data.statistics.HistogramDataset: int getTotal(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getY : $i2 = specialinvoke r0.<org.jfree.data.statistics.HistogramDataset: int getTotal(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : $r2 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list>
org.jfree.data.statistics.HistogramDataset.getTotal : $r2 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list> >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getTotal : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : r1 = (java.util.Map) $r3
org.jfree.data.statistics.HistogramDataset.getTotal : r1 = (java.util.Map) $r3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("values.length")
org.jfree.data.statistics.HistogramDataset.getTotal : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("values.length") >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : $r5 = (java.lang.Integer) $r4
org.jfree.data.statistics.HistogramDataset.getTotal : $r5 = (java.lang.Integer) $r4 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>()
org.jfree.data.statistics.HistogramDataset.getTotal : $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.data.statistics.HistogramDataset.getTotal : return $i1
org.jfree.data.statistics.HistogramDataset.getTotal : return $i1 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : d0 = (double) $i2
org.jfree.data.statistics.HistogramDataset.getY : d0 = (double) $i2 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : d1 = specialinvoke r0.<org.jfree.data.statistics.HistogramDataset: double getBinWidth(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getY : d1 = specialinvoke r0.<org.jfree.data.statistics.HistogramDataset: double getBinWidth(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : $r2 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list>
org.jfree.data.statistics.HistogramDataset.getBinWidth : $r2 = r0.<org.jfree.data.statistics.HistogramDataset: java.util.List list> >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.statistics.HistogramDataset.getBinWidth : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : r1 = (java.util.Map) $r3
org.jfree.data.statistics.HistogramDataset.getBinWidth : r1 = (java.util.Map) $r3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("bin width")
org.jfree.data.statistics.HistogramDataset.getBinWidth : $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("bin width") >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : $r5 = (java.lang.Double) $r4
org.jfree.data.statistics.HistogramDataset.getBinWidth : $r5 = (java.lang.Double) $r4 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>()
org.jfree.data.statistics.HistogramDataset.getBinWidth : $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.HistogramDataset.getBinWidth : return $d0
org.jfree.data.statistics.HistogramDataset.getBinWidth : return $d0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $r4 = r0.<org.jfree.data.statistics.HistogramDataset: org.jfree.data.statistics.HistogramType type>
org.jfree.data.statistics.HistogramDataset.getY : $r4 = r0.<org.jfree.data.statistics.HistogramDataset: org.jfree.data.statistics.HistogramType type> >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $r5 = <org.jfree.data.statistics.HistogramType: org.jfree.data.statistics.HistogramType FREQUENCY>
org.jfree.data.statistics.HistogramDataset.getY : $r5 = <org.jfree.data.statistics.HistogramType: org.jfree.data.statistics.HistogramType FREQUENCY> >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : if $r4 != $r5
org.jfree.data.statistics.HistogramDataset.getY : if $r4 != $r5 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $r6 = new java.lang.Double
org.jfree.data.statistics.HistogramDataset.getY : $r6 = new java.lang.Double >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $i3 = virtualinvoke r2.<org.jfree.data.statistics.HistogramBin: int getCount()>()
org.jfree.data.statistics.HistogramDataset.getY : $i3 = virtualinvoke r2.<org.jfree.data.statistics.HistogramBin: int getCount()>() >>>>>>>> org.jfree.data.statistics.HistogramBin.getCount : $i0 = r0.<org.jfree.data.statistics.HistogramBin: int count>
org.jfree.data.statistics.HistogramBin.getCount : $i0 = r0.<org.jfree.data.statistics.HistogramBin: int count> >>>>>>>> org.jfree.data.statistics.HistogramBin.getCount : return $i0
org.jfree.data.statistics.HistogramBin.getCount : return $i0 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : $d2 = (double) $i3
org.jfree.data.statistics.HistogramDataset.getY : $d2 = (double) $i3 >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : specialinvoke $r6.<java.lang.Double: void <init>(double)>($d2)
org.jfree.data.statistics.HistogramDataset.getY : specialinvoke $r6.<java.lang.Double: void <init>(double)>($d2) >>>>>>>> org.jfree.data.statistics.HistogramDataset.getY : return $r6
org.jfree.data.statistics.HistogramDataset.getY : return $r6 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : return d0
