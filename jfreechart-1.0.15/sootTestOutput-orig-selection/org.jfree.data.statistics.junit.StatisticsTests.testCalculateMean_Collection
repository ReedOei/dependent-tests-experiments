org.jfree.data.statistics.Statistics.calculateMean : $d0 = staticinvoke <org.jfree.data.statistics.Statistics: double calculateMean(java.util.Collection,boolean)>(r0, 1) >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "values")
org.jfree.data.statistics.Statistics.calculateMean : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "values") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null
org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : $r3 = new java.lang.IllegalArgumentException
org.jfree.chart.util.ParamChecks.nullNotPermitted : $r3 = new java.lang.IllegalArgumentException >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : $r2 = new java.lang.StringBuilder
org.jfree.chart.util.ParamChecks.nullNotPermitted : $r2 = new java.lang.StringBuilder >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
org.jfree.chart.util.ParamChecks.nullNotPermitted : specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null \'")
org.jfree.chart.util.ParamChecks.nullNotPermitted : $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null \'") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)
org.jfree.chart.util.ParamChecks.nullNotPermitted : $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1) >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' argument")
org.jfree.chart.util.ParamChecks.nullNotPermitted : $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' argument") >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
org.jfree.chart.util.ParamChecks.nullNotPermitted : $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>() >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)
org.jfree.chart.util.ParamChecks.nullNotPermitted : specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7) >>>>>>>> org.jfree.chart.util.ParamChecks.nullNotPermitted : throw $r3
org.jfree.chart.util.ParamChecks.nullNotPermitted : throw $r3 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : i0 = 0
org.jfree.data.statistics.Statistics.calculateMean : i0 = 0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : d0 = 0.0
org.jfree.data.statistics.Statistics.calculateMean : d0 = 0.0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.data.statistics.Statistics.calculateMean : r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.statistics.Statistics.calculateMean : $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : if $z1 == 0
org.jfree.data.statistics.Statistics.calculateMean : if $z1 == 0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : $d3 = (double) i0
org.jfree.data.statistics.Statistics.calculateMean : $d3 = (double) i0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : $d4 = d0 / $d3
org.jfree.data.statistics.Statistics.calculateMean : $d4 = d0 / $d3 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : return $d4
org.jfree.data.statistics.Statistics.calculateMean : return $d4 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : return $d0
org.jfree.data.statistics.Statistics.calculateMean : return $d0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.statistics.Statistics.calculateMean : r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : if r2 != null
org.jfree.data.statistics.Statistics.calculateMean : if r2 != null >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : $z2 = r2 instanceof java.lang.Number
org.jfree.data.statistics.Statistics.calculateMean : $z2 = r2 instanceof java.lang.Number >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : if $z2 == 0
org.jfree.data.statistics.Statistics.calculateMean : if $z2 == 0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : r3 = (java.lang.Number) r2
org.jfree.data.statistics.Statistics.calculateMean : r3 = (java.lang.Number) r2 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : d1 = virtualinvoke r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.statistics.Statistics.calculateMean : d1 = virtualinvoke r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.statistics.Statistics.calculateMean : $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : if $z3 == 0
org.jfree.data.statistics.Statistics.calculateMean : if $z3 == 0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : $d2 = virtualinvoke r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.statistics.Statistics.calculateMean : $d2 = virtualinvoke r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : d0 = d0 + $d2
org.jfree.data.statistics.Statistics.calculateMean : d0 = d0 + $d2 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : i0 = i0 + 1
org.jfree.data.statistics.Statistics.calculateMean : i0 = i0 + 1 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.statistics.Statistics.calculateMean : goto [?= $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : if z0 == 0
org.jfree.data.statistics.Statistics.calculateMean : if z0 == 0 >>>>>>>> org.jfree.data.statistics.Statistics.calculateMean : return #NaN
