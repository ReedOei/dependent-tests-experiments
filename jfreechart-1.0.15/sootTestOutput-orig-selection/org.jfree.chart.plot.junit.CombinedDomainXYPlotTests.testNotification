org.jfree.chart.util.ParamChecks.nullNotPermitted : if r0 != null >>>>>>>> org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r1 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0)
org.jfree.data.xy.XYSeries.add : specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double
org.jfree.data.xy.XYSeries.add : $r2 = new java.lang.Double >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1)
org.jfree.data.xy.XYSeries.add : specialinvoke $r2.<java.lang.Double: void <init>(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, 1)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($r1, $r2, 1) >>>>>>>> org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYSeries.add : $r3 = new org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2)
org.jfree.data.xy.XYSeries.add : specialinvoke $r3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(r1, r2) >>>>>>>> org.jfree.data.xy.XYSeries.add : r4 = $r3
org.jfree.data.xy.XYSeries.add : r4 = $r3 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0)
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(r4, z0) >>>>>>>> org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item")
org.jfree.data.xy.XYSeries.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "item") >>>>>>>> org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>()
org.jfree.data.xy.XYSeries.add : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = null
org.jfree.data.xy.XYDataItem.clone : r1 = null >>>>>>>> org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>()
org.jfree.data.xy.XYDataItem.clone : r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>() >>>>>>>> org.jfree.data.xy.XYDataItem.clone : goto [?= return r1]
org.jfree.data.xy.XYDataItem.clone : goto [?= return r1] >>>>>>>> org.jfree.data.xy.XYDataItem.clone : return r1
org.jfree.data.xy.XYDataItem.clone : return r1 >>>>>>>> org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.add : r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort>
org.jfree.data.xy.XYSeries.add : $z1 = r0.<org.jfree.data.xy.XYSeries: boolean autoSort> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $z1 == 0
org.jfree.data.xy.XYSeries.add : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r4 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3)
org.jfree.data.xy.XYSeries.add : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r4, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : if i0 >= 0
org.jfree.data.xy.XYSeries.add : if i0 >= 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.add : $r5 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.add : $i2 = neg i0
org.jfree.data.xy.XYSeries.add : $i2 = neg i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1
org.jfree.data.xy.XYSeries.add : $i3 = $i2 - 1 >>>>>>>> org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3)
org.jfree.data.xy.XYSeries.add : interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>($i3, r3) >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= (branch)]
org.jfree.data.xy.XYSeries.add : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)]
org.jfree.data.xy.XYSeries.add : goto [?= specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)] >>>>>>>> org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3)
org.jfree.data.xy.XYSeries.add : specialinvoke r0.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(r3) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d0 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getXValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getXValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getXValue : $d0 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getXValue : return $d0
org.jfree.data.xy.XYDataItem.getXValue : return $d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d2 = r0.<org.jfree.data.xy.XYSeries: double minX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d3 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d2, d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.minIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minX> = $d3 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d4 = r0.<org.jfree.data.xy.XYSeries: double maxX> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d5 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d4, d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return d1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxX> = $d5 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $r2 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getY : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getY : return $r1
org.jfree.data.xy.XYDataItem.getY : return $r1 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : if $r2 == null >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>()
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : d1 = virtualinvoke r1.<org.jfree.data.xy.XYDataItem: double getYValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN
org.jfree.data.xy.XYDataItem.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null
org.jfree.data.xy.XYDataItem.getYValue : if $r1 == null >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y>
org.jfree.data.xy.XYDataItem.getYValue : $r2 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number y> >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.getYValue : d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getYValue : return d0
org.jfree.data.xy.XYDataItem.getYValue : return d0 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d6 = r0.<org.jfree.data.xy.XYSeries: double minY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d7 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($d6, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double minY> = $d7 >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY>
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d8 = r0.<org.jfree.data.xy.XYSeries: double maxY> >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1)
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : $d9 = specialinvoke r0.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($d8, d1) >>>>>>>> org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9
org.jfree.data.xy.XYSeries.updateBoundsForAddedItem : r0.<org.jfree.data.xy.XYSeries: double maxY> = $d9 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeries.add : $i7 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getItemCount : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeries.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeries.getItemCount : return $i0
org.jfree.data.xy.XYSeries.getItemCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount>
org.jfree.data.xy.XYSeries.add : $i8 = r0.<org.jfree.data.xy.XYSeries: int maximumItemCount> >>>>>>>> org.jfree.data.xy.XYSeries.add : if $i7 <= $i8
org.jfree.data.xy.XYSeries.add : if $i7 <= $i8 >>>>>>>> org.jfree.data.xy.XYSeries.add : if z0 == 0
org.jfree.data.xy.XYSeries.add : if z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>()
org.jfree.data.xy.XYSeries.add : virtualinvoke r0.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>() >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify>
org.jfree.data.general.Series.fireSeriesChanged : $z0 = r0.<org.jfree.data.general.Series: boolean notify> >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0
org.jfree.data.general.Series.fireSeriesChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent
org.jfree.data.general.Series.fireSeriesChanged : $r1 = new org.jfree.data.general.SeriesChangeEvent >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.data.general.Series.fireSeriesChanged : specialinvoke $r1.<org.jfree.data.general.SeriesChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1)
org.jfree.data.general.Series.fireSeriesChanged : virtualinvoke r0.<org.jfree.data.general.Series: void notifyListeners(org.jfree.data.general.SeriesChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.notifyListeners : $r3 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.Series.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.Series.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.Series.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.Series.notifyListeners : if i0 < 0
org.jfree.data.general.Series.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem
org.jfree.data.xy.XYDataItem.compareTo : $z0 = r1 instanceof org.jfree.data.xy.XYDataItem >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $z0 == 0
org.jfree.data.xy.XYDataItem.compareTo : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1
org.jfree.data.xy.XYDataItem.compareTo : r2 = (org.jfree.data.xy.XYDataItem) r1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.compareTo : $r3 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.compareTo : $d1 = virtualinvoke $r3.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYDataItem.compareTo : $r4 = virtualinvoke r2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x>
org.jfree.data.xy.XYDataItem.getX : $r1 = r0.<org.jfree.data.xy.XYDataItem: java.lang.Number x> >>>>>>>> org.jfree.data.xy.XYDataItem.getX : return $r1
org.jfree.data.xy.XYDataItem.getX : return $r1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $d2 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.XYDataItem.compareTo : $d2 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : d0 = $d1 - $d2
org.jfree.data.xy.XYDataItem.compareTo : d0 = $d1 - $d2 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0
org.jfree.data.xy.XYDataItem.compareTo : $b1 = d0 cmpl 0.0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $b1 <= 0
org.jfree.data.xy.XYDataItem.compareTo : if $b1 <= 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0
org.jfree.data.xy.XYDataItem.compareTo : $b2 = d0 cmpg 0.0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : if $b2 >= 0
org.jfree.data.xy.XYDataItem.compareTo : if $b2 >= 0 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : b0 = -1
org.jfree.data.xy.XYDataItem.compareTo : b0 = -1 >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : goto [?= (branch)]
org.jfree.data.xy.XYDataItem.compareTo : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0]
org.jfree.data.xy.XYDataItem.compareTo : goto [?= return b0] >>>>>>>> org.jfree.data.xy.XYDataItem.compareTo : return b0
org.jfree.data.xy.XYDataItem.compareTo : return b0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z1 == 0
org.jfree.data.xy.XYSeries.minIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.minIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeries.minIgnoreNaN : return $d2
org.jfree.data.xy.XYSeries.minIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $z1 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d1) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z1 == 0
org.jfree.data.xy.XYSeries.maxIgnoreNaN : if $z1 == 0 >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1)
org.jfree.data.xy.XYSeries.maxIgnoreNaN : $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1) >>>>>>>> org.jfree.data.xy.XYSeries.maxIgnoreNaN : return $d2
org.jfree.data.xy.XYSeries.maxIgnoreNaN : return $d2 >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.addChangeListener : $r2 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1)
org.jfree.data.general.AbstractDataset.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/DatasetChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series")
org.jfree.data.xy.XYSeriesCollection.addSeries : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "series") >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : $r3 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key>
org.jfree.data.general.Series.getKey : $r1 = r0.<org.jfree.data.general.Series: java.lang.Comparable key> >>>>>>>> org.jfree.data.general.Series.getKey : return $r1
org.jfree.data.general.Series.getKey : return $r1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesIndex(java.lang.Comparable)>($r3)
org.jfree.data.xy.XYSeriesCollection.addSeries : $i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesIndex(java.lang.Comparable)>($r3) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key")
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "key") >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i0 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $r1 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesCount : return $i0
org.jfree.data.xy.XYSeriesCollection.getSeriesCount : return $i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if i1 >= i0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if i1 >= i0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : return -1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : if $i0 < 0
org.jfree.data.xy.XYSeriesCollection.addSeries : if $i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.addSeries : $r9 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.data.xy.XYSeriesCollection.addSeries : interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners>
org.jfree.data.general.Series.addChangeListener : $r2 = r0.<org.jfree.data.general.Series: javax.swing.event.EventListenerList listeners> >>>>>>>> org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1)
org.jfree.data.general.Series.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/data/general/SeriesChangeListener", r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0)
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r1.<org.jfree.data.xy.XYSeries: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r0) >>>>>>>> org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport>
org.jfree.data.general.Series.addVetoableChangeListener : $r2 = r0.<org.jfree.data.general.Series: java.beans.VetoableChangeSupport vetoableChangeSupport> >>>>>>>> org.jfree.data.general.Series.addVetoableChangeListener : virtualinvoke $r2.<java.beans.VetoableChangeSupport: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r1)
org.jfree.data.general.Series.addVetoableChangeListener : virtualinvoke $r2.<java.beans.VetoableChangeSupport: void addVetoableChangeListener(java.beans.VetoableChangeListener)>(r1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>()
org.jfree.data.xy.XYSeriesCollection.addSeries : virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: void fireDatasetChanged()>() >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.data.general.AbstractDataset.fireDatasetChanged : $r1 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : specialinvoke $r1.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, r0) >>>>>>>> org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1)
org.jfree.data.general.AbstractDataset.fireDatasetChanged : virtualinvoke r0.<org.jfree.data.general.AbstractDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($r1) >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList>
org.jfree.data.general.AbstractDataset.notifyListeners : $r3 = r0.<org.jfree.data.general.AbstractDataset: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.data.general.AbstractDataset.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2
org.jfree.data.general.AbstractDataset.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0
org.jfree.data.general.AbstractDataset.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0]
org.jfree.data.general.AbstractDataset.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener"
org.jfree.data.general.AbstractDataset.notifyListeners : if $r4 != class "org/jfree/data/general/DatasetChangeListener" >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1
org.jfree.data.general.AbstractDataset.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2]
org.jfree.data.general.AbstractDataset.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5
org.jfree.data.general.AbstractDataset.notifyListeners : $r6 = (org.jfree.data.general.DatasetChangeListener) $r5 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1)
org.jfree.data.general.AbstractDataset.notifyListeners : interfaceinvoke $r6.<org.jfree.data.general.DatasetChangeListener: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>(r1) >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth>
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : $z0 = r0.<org.jfree.data.xy.IntervalXYDelegate: boolean autoWidth> >>>>>>>> org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0
org.jfree.data.xy.IntervalXYDelegate.datasetChanged : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2
org.jfree.data.general.AbstractDataset.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)]
org.jfree.data.general.AbstractDataset.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r3 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r3 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : r2 = (org.jfree.data.xy.XYSeries) $r4
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : r2 = (org.jfree.data.xy.XYSeries) $r4 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r5 = virtualinvoke r2.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $r5 = virtualinvoke r2.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5)
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if $z0 == 0
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : if $z0 == 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = i1 + 1
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : i1 = i1 + 1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : goto [?= (branch)]
org.jfree.data.xy.XYSeriesCollection.getSeriesIndex : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setBaseToolTipGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : $r1 = new org.jfree.chart.event.RendererChangeEvent >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.RendererChangeEvent: void <init>(java.lang.Object)>(r0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1)
org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void notifyListeners(org.jfree.chart.event.RendererChangeEvent)>($r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0
org.jfree.chart.renderer.AbstractRenderer.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator : virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r0 = new org.jfree.chart.axis.TickUnits >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>()
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r0.<org.jfree.chart.axis.TickUnits: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r1 = $r0 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r15 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r15.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r2 = $r15 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r16 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r16.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r3 = $r16 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r17 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r17.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r4 = $r17 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r18 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r18.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r5 = $r18 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r19 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r19.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r6 = $r19 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r20 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r20.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r7 = $r20 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r21 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r21.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r8 = $r21 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r22 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r22.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.000") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r9 = $r22 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r23 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r23.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.00") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r10 = $r23 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r24 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r24.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r11 = $r24 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r25 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r25.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r12 = $r25 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r26 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r26.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r13 = $r26 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r27 = new java.text.DecimalFormat >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0")
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r27.<java.text.DecimalFormat: void <init>(java.lang.String)>("#,###,###,##0") >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : r14 = $r27 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r28 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r28.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-9, r3, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r28) >>>>>>>> org.jfree.chart.axis.TickUnits.add : if r1 != null
org.jfree.chart.axis.TickUnits.add : if r1 != null >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.axis.TickUnits.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.add : $r4 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4)
org.jfree.chart.axis.TickUnits.add : staticinvoke <java.util.Collections: void sort(java.util.List)>($r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r29 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r29.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-8, r4, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r29) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit
org.jfree.chart.axis.TickUnit.compareTo : $z0 = r1 instanceof org.jfree.chart.axis.TickUnit >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0
org.jfree.chart.axis.TickUnit.compareTo : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1
org.jfree.chart.axis.TickUnit.compareTo : r2 = (org.jfree.chart.axis.TickUnit) r1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d1 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.getSize : $d0 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.getSize : return $d0
org.jfree.chart.axis.TickUnit.getSize : return $d0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1
org.jfree.chart.axis.TickUnit.compareTo : $b0 = $d0 cmpl $d1 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 1
org.jfree.chart.axis.TickUnit.compareTo : return 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r30 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r30.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-7, r5, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r30) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r31 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r31.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-6, r6, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r31) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r32 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r32.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-5, r7, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r32) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r33 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r33.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E-4, r8, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r33) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r34 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r34.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.001, r9, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r34) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r35 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r35.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.01, r10, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r35) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r36 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r36.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.1, r11, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r36) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r37 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r37.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r37) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r38 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r38.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r38) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r39 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r39.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r39) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r40 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r40.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r40) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r41 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r41.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(10000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r41) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r42 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r42.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(100000.0, r12, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r42) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r43 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r43.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1000000.0, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r43) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r44 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r44.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E7, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r44) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r45 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r45.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E8, r13, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r45) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r46 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r46.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E9, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r46) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r47 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r47.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E10, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r47) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r48 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r48.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(1.0E11, r14, 2) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r48) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r49 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r49.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-9, r2, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r49) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size>
org.jfree.chart.axis.TickUnit.compareTo : $d2 = r0.<org.jfree.chart.axis.TickUnit: double size> >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.TickUnit.compareTo : $d3 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3
org.jfree.chart.axis.TickUnit.compareTo : $b1 = $d2 cmpg $d3 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0
org.jfree.chart.axis.TickUnit.compareTo : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return -1
org.jfree.chart.axis.TickUnit.compareTo : return -1 >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r50 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r50.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-8, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r50) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r51 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r51.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-7, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r51) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r52 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r52.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-6, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r52) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r53 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r53.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-5, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r53) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r54 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r54.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E-4, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r54) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r55 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r55.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.0025, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r55) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r56 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r56.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.025, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r56) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r57 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r57.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.25, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r57) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r58 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r58.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r58) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r59 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r59.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r59) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r60 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r60.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r60) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r61 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r61.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r61) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r62 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r62.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(25000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r62) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r63 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r63.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(250000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r63) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r64 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r64.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2500000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r64) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r65 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r65.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r65) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r66 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r66.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r66) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r67 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r67.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r67) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r68 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r68.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r68) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r69 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r69.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(2.5E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r69) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r70 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r70.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-9, r3, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r70) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r71 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r71.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-8, r4, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r71) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r72 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r72.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-7, r5, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r72) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r73 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r73.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-6, r6, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r73) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r74 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r74.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-5, r7, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r74) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r75 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r75.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E-4, r8, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r75) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r76 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r76.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.005, r9, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r76) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r77 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r77.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.05, r10, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r77) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r78 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r78.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(0.5, r11, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r78) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r79 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r79.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r79) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r80 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r80.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r80) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r81 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r81.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r81) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r82 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r82.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r82) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r83 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r83.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(50000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r83) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r84 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r84.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(500000.0, r12, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r84) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r85 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r85.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5000000.0, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r85) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r86 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r86.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E7, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r86) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r87 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r87.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E8, r13, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r87) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r88 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r88.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E9, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r88) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r89 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r89.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E10, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r89) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : $r90 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : specialinvoke $r90.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat,int)>(5.0E11, r14, 5) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90)
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : virtualinvoke r1.<org.jfree.chart.axis.TickUnits: void add(org.jfree.chart.axis.TickUnit)>($r90) >>>>>>>> org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1
org.jfree.chart.axis.NumberAxis.createStandardTickUnits : return r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setPlot : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> = r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setPlot : r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> = r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1)
org.jfree.chart.renderer.AbstractRenderer.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/RendererChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null
org.jfree.chart.plot.XYPlot.checkAxisIndices : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : i0 = interfaceinvoke r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet
org.jfree.chart.plot.XYPlot.checkAxisIndices : $r5 = new java.util.HashSet >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>()
org.jfree.chart.plot.XYPlot.checkAxisIndices : specialinvoke $r5.<java.util.HashSet: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5
org.jfree.chart.plot.XYPlot.checkAxisIndices : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.XYPlot.checkAxisIndices : r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z0 = r3 instanceof java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : $z1 = virtualinvoke r2.<java.util.HashSet: boolean contains(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0
org.jfree.chart.plot.XYPlot.checkAxisIndices : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3)
org.jfree.chart.plot.XYPlot.checkAxisIndices : virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r3) >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.checkAxisIndices : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.checkAxisIndices : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = null
org.jfree.chart.plot.XYPlot.getDataset : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDataset : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getDataset : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataset : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4
org.jfree.chart.plot.XYPlot.getDataset : r1 = (org.jfree.data.xy.XYDataset) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataset : return r1
org.jfree.chart.plot.XYPlot.getDataset : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureDomainAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureDomainAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureDomainAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureDomainAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureDomainAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureDomainAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>]
org.jfree.chart.plot.XYPlot.configureDomainAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>()
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void configureRangeAxes()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1
org.jfree.chart.plot.XYPlot.configureRangeAxes : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.datasetChanged : $r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent>
org.jfree.chart.plot.Plot.getParent : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> >>>>>>>> org.jfree.chart.plot.Plot.getParent : return $r1
org.jfree.chart.plot.Plot.getParent : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null
org.jfree.chart.plot.XYPlot.datasetChanged : if $r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.XYPlot.datasetChanged : $r5 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.XYPlot.datasetChanged : specialinvoke $r5.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5
org.jfree.chart.plot.XYPlot.datasetChanged : r2 = $r5 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED>
org.jfree.chart.plot.XYPlot.datasetChanged : $r6 = <org.jfree.chart.event.ChartChangeEventType: org.jfree.chart.event.ChartChangeEventType DATASET_UPDATED> >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r2.<org.jfree.chart.event.PlotChangeEvent: void setType(org.jfree.chart.event.ChartChangeEventType)>($r6) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1
org.jfree.chart.event.ChartChangeEvent.setType : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.event.ChartChangeEventType type> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2)
org.jfree.chart.plot.XYPlot.datasetChanged : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r2) >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify>
org.jfree.chart.plot.Plot.notifyListeners : $z0 = r0.<org.jfree.chart.plot.Plot: boolean notify> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0
org.jfree.chart.plot.Plot.notifyListeners : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.notifyListeners : $r3 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.plot.Plot.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2
org.jfree.chart.plot.Plot.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2
org.jfree.chart.plot.Plot.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0
org.jfree.chart.plot.Plot.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : r2 = $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : $r3 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : specialinvoke $r3.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r3) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>(i0, r2) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void checkAxisIndices(java.util.List)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r4 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r5 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r6 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r6) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r8 = new org.jfree.data.general.DatasetChangeEvent >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : $r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : specialinvoke $r8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(r0, $r9) >>>>>>>> org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8)
org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void datasetChanged(org.jfree.data.general.DatasetChangeEvent)>($r8) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.configureRangeAxes : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4
org.jfree.chart.plot.XYPlot.configureRangeAxes : r1 = (org.jfree.chart.axis.ValueAxis) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null
org.jfree.chart.plot.XYPlot.configureRangeAxes : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.configureRangeAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.configure : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange>
org.jfree.chart.axis.ValueAxis.isAutoRange : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0
org.jfree.chart.axis.ValueAxis.isAutoRange : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0
org.jfree.chart.axis.NumberAxis.configure : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.configure : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.plot.Plot getPlot()>() >>>>>>>> org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot>
org.jfree.chart.axis.Axis.getPlot : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.axis.Axis.getPlot : return $r1
org.jfree.chart.axis.Axis.getPlot : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.configureRangeAxes : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.configureRangeAxes : goto [?= $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1
org.jfree.chart.axis.Axis.setPlot : r0.<org.jfree.chart.axis.Axis: org.jfree.chart.plot.Plot plot> = r1 >>>>>>>> org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>()
org.jfree.chart.axis.Axis.setPlot : virtualinvoke r0.<org.jfree.chart.axis.Axis: void configure()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z0 = r1 instanceof org.jfree.chart.plot.ValueAxisPlot >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r2 = (org.jfree.chart.plot.ValueAxisPlot) r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = interfaceinvoke r2.<org.jfree.chart.plot.ValueAxisPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r2 = null
org.jfree.chart.plot.XYPlot.getDataRange : r2 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r14 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataRange : $r14 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r14.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r14.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r3 = $r14
org.jfree.chart.plot.XYPlot.getDataRange : r3 = $r14 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r15 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDataRange : $r15 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r15.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r15.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r4 = $r15
org.jfree.chart.plot.XYPlot.getDataRange : r4 = $r15 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : z0 = 1
org.jfree.chart.plot.XYPlot.getDataRange : z0 = 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : i0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : i0 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if i0 >= 0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if $z0 == 0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : return i0
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : return i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i0 < 0
org.jfree.chart.plot.XYPlot.getDataRange : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDataRange : i1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke $r4.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if i0 >= 0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if i0 >= 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : return i0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : return i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i1 < 0
org.jfree.chart.plot.XYPlot.getDataRange : if i1 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : z0 = 0
org.jfree.chart.plot.XYPlot.getDataRange : z0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r19 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDataRange : $r19 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i1)
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r19.<java.lang.Integer: void <init>(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r20 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>($r19)
org.jfree.chart.plot.XYPlot.getDataRange : $r20 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>($r19) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex")
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex") >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r4 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r2 = $r4
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToRangeAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r7 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r7 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r3 = (java.util.List) $r8
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : r3 = (java.util.List) $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if r3 != null
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if $z2 == 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : return r2
org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r20)
org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r20) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i1 != 0
org.jfree.chart.plot.XYPlot.getDataRange : if i1 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.getDataRange : $r21 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z6 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z6 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r24 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z9 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z9 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r25 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r26 = (org.jfree.data.xy.XYDataset) $r25
org.jfree.chart.plot.XYPlot.getDataRange : r26 = (org.jfree.data.xy.XYDataset) $r25 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if r26 == null
org.jfree.chart.plot.XYPlot.getDataRange : if r26 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRendererForDataset(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : r9 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRendererForDataset(org.jfree.data.xy.XYDataset)>(r26) >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = null
org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : i0 = 0
org.jfree.chart.plot.XYPlot.getRendererForDataset : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRendererForDataset : $i1 = virtualinvoke $r3.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getRendererForDataset : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r5 = virtualinvoke $r4.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : if $r5 != r1
org.jfree.chart.plot.XYPlot.getRendererForDataset : if $r5 != r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r6 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : $r7 = virtualinvoke $r6.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRendererForDataset : $r7 = virtualinvoke $r6.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r7
org.jfree.chart.plot.XYPlot.getRendererForDataset : r2 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : if r2 != null
org.jfree.chart.plot.XYPlot.getRendererForDataset : if r2 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererForDataset : return r2
org.jfree.chart.plot.XYPlot.getRendererForDataset : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if z0 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if r9 == null
org.jfree.chart.plot.XYPlot.getDataRange : if r9 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r29 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : $r29 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>(r26) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly>
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean dataBoundsIncludesVisibleSeriesOnly> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0
org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r2 = $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r2 = $r5 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisible> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible : return z0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z2 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r6 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r6 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < 0 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>()
org.jfree.data.xy.XYSeriesCollection.getSeries : $i1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: int getSeriesCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < $i1
org.jfree.data.xy.XYSeriesCollection.getSeries : if i0 < $i1 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getSeries : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getSeries : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getSeries : $r4 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeries : return $r4
org.jfree.data.xy.XYSeriesCollection.getSeries : return $r4 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>()
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: java.lang.Comparable getKey()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getSeriesKey : return $r2
org.jfree.data.xy.XYSeriesCollection.getSeriesKey : return $r2 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = i1 + 1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : goto [?= (branch)]
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r3 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : return $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r3 == null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i2 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)>(r0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : i2 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getIndexOf(org.jfree.chart.renderer.xy.XYItemRenderer)>(r0) >>>>>>>> org.jfree.chart.plot.XYPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getIndexOf : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getIndexOf : $i0 = virtualinvoke $r2.<org.jfree.util.ObjectList: int indexOf(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getIndexOf : return $i0
org.jfree.chart.plot.XYPlot.getIndexOf : return $i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i2 < 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if i2 < 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r8 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r8 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot plot> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = virtualinvoke $r8.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i2)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r4 = virtualinvoke $r8.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxisForDataset(int)>(i2) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getDatasetCount()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDatasetCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetCount : return $i0
org.jfree.chart.plot.XYPlot.getDatasetCount : return $i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRendererCount()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: int getRendererCount()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRendererCount : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRendererCount : $i0 = virtualinvoke $r1.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRendererCount : return $i0
org.jfree.chart.plot.XYPlot.getRendererCount : return $i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : i1 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < 0
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < i1
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if i0 < i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r10 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r11 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r11 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : specialinvoke $r11.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r12 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r2 = (java.util.List) $r12
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r2 = (java.util.List) $r12 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if r2 == null
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $r13 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r3 = (java.lang.Integer) $r13
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r3 = (java.lang.Integer) $r13 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>()
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : $i4 = virtualinvoke r3.<java.lang.Integer: int intValue()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>($i4)
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : r4 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>($i4) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = null
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDomainAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getDomainAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.getDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : if r1 != null
org.jfree.chart.plot.XYPlot.getDomainAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getDomainAxis : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : if $z0 == 0
org.jfree.chart.plot.XYPlot.getDomainAxis : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : return r1
org.jfree.chart.plot.XYPlot.getDomainAxis : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : goto [?= return r4]
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : goto [?= return r4] >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : return r4
org.jfree.chart.plot.XYPlot.getDomainAxisForDataset : return r4 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r4 == null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r4 == null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : if r7 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r9 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(#-Infinity, #Infinity)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(#-Infinity, #Infinity) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = $r9
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = $r9 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : $r10 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r1, r2, r7, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo
org.jfree.data.general.DatasetUtilities.findRangeBounds : $z1 = r0 instanceof org.jfree.data.xy.XYRangeInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findRangeBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0)
org.jfree.data.general.DatasetUtilities.findRangeBounds : r4 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>(r0, r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange")
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r2, "xRange") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z14 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r18 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r19 = (java.lang.Comparable) $r18
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : r19 = (java.lang.Comparable) $r18 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i9 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r19) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>()
org.jfree.data.general.AbstractSeriesDataset.indexOf : i0 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: int getSeriesCount()>() >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if i1 >= i0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $r2 = virtualinvoke r0.<org.jfree.data.general.AbstractSeriesDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1)
org.jfree.data.general.AbstractSeriesDataset.indexOf : $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0
org.jfree.data.general.AbstractSeriesDataset.indexOf : if $z0 == 0 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1
org.jfree.data.general.AbstractSeriesDataset.indexOf : return i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i10 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i9) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getItemCount : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: int getItemCount()>()
org.jfree.data.xy.XYSeriesCollection.getItemCount : $i1 = virtualinvoke $r1.<org.jfree.data.xy.XYSeries: int getItemCount()>() >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getItemCount : return $i1
org.jfree.data.xy.XYSeriesCollection.getItemCount : return $i1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if i11 >= i10 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d12 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i9, i11) >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getXValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getX : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getX : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : r1 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getX : r1 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getX : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getX : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data>
org.jfree.data.xy.XYSeries.getRawDataItem : $r1 = r0.<org.jfree.data.xy.XYSeries: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeries.getRawDataItem : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2
org.jfree.data.xy.XYSeries.getRawDataItem : $r3 = (org.jfree.data.xy.XYDataItem) $r2 >>>>>>>> org.jfree.data.xy.XYSeries.getRawDataItem : return $r3
org.jfree.data.xy.XYSeries.getRawDataItem : return $r3 >>>>>>>> org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>()
org.jfree.data.xy.XYSeries.getX : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>() >>>>>>>> org.jfree.data.xy.XYSeries.getX : return $r2
org.jfree.data.xy.XYSeries.getX : return $r2 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getX : return $r4
org.jfree.data.xy.XYSeriesCollection.getX : return $r4 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getXValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getXValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getXValue : return d0
org.jfree.data.xy.AbstractXYDataset.getXValue : return d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d5 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(i9, i11) >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = #NaN >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1)
org.jfree.data.xy.AbstractXYDataset.getYValue : r1 = virtualinvoke r0.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(i0, i1) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data>
org.jfree.data.xy.XYSeriesCollection.getY : $r2 = r0.<org.jfree.data.xy.XYSeriesCollection: java.util.List data> >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.data.xy.XYSeriesCollection.getY : $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : r1 = (org.jfree.data.xy.XYSeries) $r3
org.jfree.data.xy.XYSeriesCollection.getY : r1 = (org.jfree.data.xy.XYSeries) $r3 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1)
org.jfree.data.xy.XYSeriesCollection.getY : $r4 = virtualinvoke r1.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i1) >>>>>>>> org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0)
org.jfree.data.xy.XYSeries.getY : $r1 = virtualinvoke r0.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(i0) >>>>>>>> org.jfree.data.xy.XYSeries.getY : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>()
org.jfree.data.xy.XYSeries.getY : $r2 = virtualinvoke $r1.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>() >>>>>>>> org.jfree.data.xy.XYSeries.getY : return $r2
org.jfree.data.xy.XYSeries.getY : return $r2 >>>>>>>> org.jfree.data.xy.XYSeriesCollection.getY : return $r4
org.jfree.data.xy.XYSeriesCollection.getY : return $r4 >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null
org.jfree.data.xy.AbstractXYDataset.getYValue : if r1 == null >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>()
org.jfree.data.xy.AbstractXYDataset.getYValue : d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>() >>>>>>>> org.jfree.data.xy.AbstractXYDataset.getYValue : return d0
org.jfree.data.xy.AbstractXYDataset.getYValue : return d0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z15 = virtualinvoke r2.<org.jfree.data.Range: boolean contains(double)>(d12) >>>>>>>> org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.contains : $d1 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.contains : $b0 = d0 cmpl $d1
org.jfree.data.Range.contains : $b0 = d0 cmpl $d1 >>>>>>>> org.jfree.data.Range.contains : if $b0 < 0
org.jfree.data.Range.contains : if $b0 < 0 >>>>>>>> org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.contains : $d2 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.contains : $b1 = d0 cmpg $d2
org.jfree.data.Range.contains : $b1 = d0 cmpg $d2 >>>>>>>> org.jfree.data.Range.contains : if $b1 > 0
org.jfree.data.Range.contains : if $b1 > 0 >>>>>>>> org.jfree.data.Range.contains : $z0 = 1
org.jfree.data.Range.contains : $z0 = 1 >>>>>>>> org.jfree.data.Range.contains : goto [?= return $z0]
org.jfree.data.Range.contains : goto [?= return $z0] >>>>>>>> org.jfree.data.Range.contains : return $z0
org.jfree.data.Range.contains : return $z0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z15 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $z16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $z16 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : i11 = i11 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : goto [?= $z14 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1
org.jfree.data.general.AbstractSeriesDataset.indexOf : i1 = i1 + 1 >>>>>>>> org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)]
org.jfree.data.general.AbstractSeriesDataset.indexOf : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $b12 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : if $b12 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : $r20 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r20.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : specialinvoke $r20.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r20
org.jfree.data.general.DatasetUtilities.iterateToFindRangeBounds : return $r20 >>>>>>>> org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4
org.jfree.data.general.DatasetUtilities.findRangeBounds : return r4 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r10
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r10 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : return $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r29)
org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r29) >>>>>>>> org.jfree.data.Range.combine : if r0 != null
org.jfree.data.Range.combine : if r0 != null >>>>>>>> org.jfree.data.Range.combine : return r1
org.jfree.data.Range.combine : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer] >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer
org.jfree.chart.plot.XYPlot.getDataRange : $z10 = r9 instanceof org.jfree.chart.renderer.xy.AbstractXYItemRenderer >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z10 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z10 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r10 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r9
org.jfree.chart.plot.XYPlot.getDataRange : r10 = (org.jfree.chart.renderer.xy.AbstractXYItemRenderer) r9 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r11 = virtualinvoke r10.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.Collection getAnnotations()>()
org.jfree.chart.plot.XYPlot.getDataRange : r11 = virtualinvoke r10.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.Collection getAnnotations()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r1 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r1 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r3 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List foregroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : r2 = $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : r2 = $r1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r4 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : $r4 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.List backgroundAnnotations> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : return r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r12 = interfaceinvoke r11.<java.util.Collection: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z11 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z11 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z11 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z11 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z9 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r32 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r32 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z14 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z14 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z14 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z14 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : return r2
org.jfree.chart.plot.XYPlot.getDataRange : return r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if r3 != null >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper>
org.jfree.data.Range.getUpperBound : $d0 = r0.<org.jfree.data.Range: double upper> >>>>>>>> org.jfree.data.Range.getUpperBound : return $d0
org.jfree.data.Range.getUpperBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower>
org.jfree.data.Range.getLowerBound : $d0 = r0.<org.jfree.data.Range: double lower> >>>>>>>> org.jfree.data.Range.getLowerBound : return $d0
org.jfree.data.Range.getLowerBound : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r4 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r5 = <org.jfree.data.RangeType: org.jfree.data.RangeType POSITIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r4 != $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r6 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.RangeType rangeType> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE>
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r7 = <org.jfree.data.RangeType: org.jfree.data.RangeType NEGATIVE> >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $r6 != $r7 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeIncludesZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d1 = staticinvoke <java.lang.Math: double min(double,double)>(d1, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = staticinvoke <java.lang.Math: double max(double,double)>(d0, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d2 = d0 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getFixedAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange>
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double fixedAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0
org.jfree.chart.axis.ValueAxis.getFixedAutoRange : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b0 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getAutoRangeMinimumSize()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize>
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double autoRangeMinimumSize> >>>>>>>> org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0
org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b1 = d2 cmpg d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b1 >= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean getAutoRangeStickyZero()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero>
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : $z0 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeStickyZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0
org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b5 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b5 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getUpperMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin>
org.jfree.chart.axis.ValueAxis.getUpperMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double upperMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0
org.jfree.chart.axis.ValueAxis.getUpperMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d14 = $d13 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d0 = d0 + $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $b6 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0
org.jfree.chart.axis.NumberAxis.autoAdjustRange : if $b6 < 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double getLowerMargin()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin>
org.jfree.chart.axis.ValueAxis.getLowerMargin : $d0 = r0.<org.jfree.chart.axis.ValueAxis: double lowerMargin> >>>>>>>> org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0
org.jfree.chart.axis.ValueAxis.getLowerMargin : return $d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d16 = $d15 * d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $d17 = d1 - $d16 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : d7 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d17) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range]
org.jfree.chart.axis.NumberAxis.autoAdjustRange : goto [?= $r12 = new org.jfree.data.Range] >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range
org.jfree.chart.axis.NumberAxis.autoAdjustRange : $r12 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : specialinvoke $r12.<org.jfree.data.Range: void <init>(double,double)>(d7, d0) >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0)
org.jfree.chart.axis.NumberAxis.autoAdjustRange : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($r12, 0, 0) >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range")
org.jfree.chart.axis.ValueAxis.setRange : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "range") >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1
org.jfree.chart.axis.ValueAxis.setRange : r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0
org.jfree.chart.axis.ValueAxis.setRange : if z1 == 0 >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.addChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, 1)
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setRangeAxisLocation(int,org.jfree.chart.axis.AxisLocation,boolean)>(0, r1, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if i0 != 0
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if r1 != null
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if z0 == 0
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setRangeAxisLocation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent
org.jfree.chart.plot.Plot.fireChangeEvent : $r1 = new org.jfree.chart.event.PlotChangeEvent >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.Plot.fireChangeEvent : specialinvoke $r1.<org.jfree.chart.event.PlotChangeEvent: void <init>(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1)
org.jfree.chart.plot.Plot.fireChangeEvent : virtualinvoke r0.<org.jfree.chart.plot.Plot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>($r1) >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font")
org.jfree.chart.annotations.XYTextAnnotation.setFont : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "font") >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setFont : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> = r1
org.jfree.chart.annotations.XYTextAnnotation.setFont : r0.<org.jfree.chart.annotations.XYTextAnnotation: java.awt.Font font> = r1 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setFont : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTextAnnotation.setFont : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify>
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $z0 = r0.<org.jfree.chart.annotations.AbstractAnnotation: boolean notify> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : if $z0 == 0
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : if $z0 == 0 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : $r1 = new org.jfree.chart.event.AnnotationChangeEvent >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : specialinvoke $r1.<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>(r0, r0)
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : specialinvoke $r1.<org.jfree.chart.event.AnnotationChangeEvent: void <init>(java.lang.Object,org.jfree.chart.annotations.Annotation)>(r0, r0) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : virtualinvoke r0.<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>($r1)
org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged : virtualinvoke r0.<org.jfree.chart.annotations.AbstractAnnotation: void notifyListeners(org.jfree.chart.event.AnnotationChangeEvent)>($r1) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $r3 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : i0 = $i1 - 2
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : if i0 < 0
org.jfree.chart.annotations.AbstractAnnotation.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> = d0
org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : r0.<org.jfree.chart.annotations.XYTextAnnotation: double rotationAngle> = d0 >>>>>>>> org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>()
org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle : virtualinvoke r0.<org.jfree.chart.annotations.XYTextAnnotation: void fireAnnotationChanged()>() >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>(r1, 1)
org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void addAnnotation(org.jfree.chart.annotations.XYAnnotation,boolean)>(r1, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation")
org.jfree.chart.plot.XYPlot.addAnnotation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "annotation") >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.addAnnotation : $r2 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.XYAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.addAnnotation : interfaceinvoke r1.<org.jfree.chart.annotations.XYAnnotation: void addChangeListener(org.jfree.chart.event.AnnotationChangeListener)>(r0) >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : $r2 = r0.<org.jfree.chart.annotations.AbstractAnnotation: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AnnotationChangeListener", r1)
org.jfree.chart.annotations.AbstractAnnotation.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AnnotationChangeListener", r1) >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : if z0 == 0
org.jfree.chart.plot.XYPlot.addAnnotation : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.addAnnotation : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero>
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z1 = r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z1 == z0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z1 == z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> = z0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : r0.<org.jfree.chart.axis.NumberAxis: boolean autoRangeIncludesZero> = z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>()
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z2 == 0
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>()
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void autoAdjustRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $r1 = new org.jfree.chart.event.AxisChangeEvent
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : $r1 = new org.jfree.chart.event.AxisChangeEvent >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0)
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : specialinvoke $r1.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(r0) >>>>>>>> org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1)
org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($r1) >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.notifyListeners : $r3 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.axis.Axis.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2
org.jfree.chart.axis.Axis.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2
org.jfree.chart.axis.Axis.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0
org.jfree.chart.axis.Axis.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.plot.XYPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.XYPlot.configureDomainAxes : virtualinvoke r1.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = null
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $r5 == null
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $r5 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : return r2
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : return r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>()
org.jfree.chart.axis.NumberAxis.autoAdjustRange : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getDefaultAutoRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange>
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range defaultAutoRange> >>>>>>>> org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : return $r1
org.jfree.chart.axis.ValueAxis.getDefaultAutoRange : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setGap : r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> = d0
org.jfree.chart.plot.CombinedDomainXYPlot.setGap : r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> = d0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setGap : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setGap : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "subplot")
org.jfree.chart.plot.CombinedDomainXYPlot.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "subplot") >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : if i0 > 0
org.jfree.chart.plot.CombinedDomainXYPlot.add : if i0 > 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setParent(org.jfree.chart.plot.Plot)>(r0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setParent(org.jfree.chart.plot.Plot)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.setParent : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> = r1
org.jfree.chart.plot.Plot.setParent : r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot parent> = r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setWeight(int)>(i0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setWeight(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.setWeight : r0.<org.jfree.chart.plot.XYPlot: int weight> = i0
org.jfree.chart.plot.XYPlot.setWeight : r0.<org.jfree.chart.plot.XYPlot: int weight> = i0 >>>>>>>> org.jfree.chart.plot.XYPlot.setWeight : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setWeight : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : $r4 = <org.jfree.ui.RectangleInsets: org.jfree.ui.RectangleInsets ZERO_INSETS>
org.jfree.chart.plot.CombinedDomainXYPlot.add : $r4 = <org.jfree.ui.RectangleInsets: org.jfree.ui.RectangleInsets ZERO_INSETS> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>($r4, 0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setInsets(org.jfree.ui.RectangleInsets,boolean)>($r4, 0) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets")
org.jfree.chart.plot.Plot.setInsets : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "insets") >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.setInsets : $r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1)
org.jfree.chart.plot.Plot.setInsets : $z1 = virtualinvoke $r2.<org.jfree.ui.RectangleInsets: boolean equals(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if $z1 != 0
org.jfree.chart.plot.Plot.setInsets : if $z1 != 0 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1
org.jfree.chart.plot.Plot.setInsets : r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> = r1 >>>>>>>> org.jfree.chart.plot.Plot.setInsets : if z0 == 0
org.jfree.chart.plot.Plot.setInsets : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setDomainAxis(org.jfree.chart.axis.ValueAxis)>(null)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void setDomainAxis(org.jfree.chart.axis.ValueAxis)>(null) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis)>(0, r1)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis)>(0, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)>(i0, r1, 1)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)>(i0, r1, 1) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0)
org.jfree.chart.plot.XYPlot.setDomainAxis : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getDomainAxis : r3 = (org.jfree.chart.plot.XYPlot) r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0)
org.jfree.chart.plot.XYPlot.getDomainAxis : r1 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : if r2 == null
org.jfree.chart.plot.XYPlot.setDomainAxis : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void removeChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void removeChangeListener(org.jfree.chart.event.AxisChangeListener)>(r0) >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.axis.Axis.removeChangeListener : $r2 = r0.<org.jfree.chart.axis.Axis: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.axis.Axis.removeChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1)
org.jfree.chart.axis.Axis.removeChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/AxisChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : if r1 != r0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : if r1 != r0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CombinedDomainXYPlot
org.jfree.chart.plot.CombinedDomainXYPlot.equals : $z0 = r1 instanceof org.jfree.chart.plot.CombinedDomainXYPlot >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $z0 != 0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.equals : return 0
org.jfree.chart.plot.CombinedDomainXYPlot.equals : return 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : if r1 == null
org.jfree.chart.plot.XYPlot.setDomainAxis : if r1 == null >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes>
org.jfree.chart.plot.XYPlot.setDomainAxis : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1)
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke $r3.<org.jfree.util.ObjectList: void set(int,java.lang.Object)>(i0, r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : if z0 == 0
org.jfree.chart.plot.XYPlot.setDomainAxis : if z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.XYPlot.setDomainAxis : virtualinvoke r0.<org.jfree.chart.plot.XYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void addChangeListener(org.jfree.chart.event.PlotChangeListener)>(r0)
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r1.<org.jfree.chart.plot.XYPlot: void addChangeListener(org.jfree.chart.event.PlotChangeListener)>(r0) >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.plot.Plot.addChangeListener : $r2 = r0.<org.jfree.chart.plot.Plot: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1)
org.jfree.chart.plot.Plot.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/PlotChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.add : $r5 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.add : interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : r2 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.CombinedDomainXYPlot.add : r2 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxis : return $r1
org.jfree.chart.plot.XYPlot.getDomainAxis : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : if r2 == null
org.jfree.chart.plot.CombinedDomainXYPlot.add : if r2 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>()
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r2.<org.jfree.chart.axis.ValueAxis: void configure()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r6 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r6 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $z0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r4 = (org.jfree.chart.plot.XYPlot) $r7
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r4 = (org.jfree.chart.plot.XYPlot) $r7 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r8 = virtualinvoke r4.<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : $r8 = virtualinvoke r4.<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getDomainAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getDomainAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r5 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDataRange : $r5 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDataRange : specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r16 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>($r5)
org.jfree.chart.plot.XYPlot.getDataRange : $r16 = specialinvoke r0.<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>($r5) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex")
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "axisIndex") >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r4 = new java.util.ArrayList
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r2 = $r4
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r2 = $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $i1 = virtualinvoke $r5.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r6 = r0.<org.jfree.chart.plot.XYPlot: java.util.Map datasetToDomainAxesMap> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r7 = new java.lang.Integer
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r7 = new java.lang.Integer >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : specialinvoke $r7.<java.lang.Integer: void <init>(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r3 = (java.util.List) $r8
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : r3 = (java.util.List) $r8 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if r3 != null
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $z2 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if $z2 == 0
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r12 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : $r13 = virtualinvoke $r12.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13)
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r13) >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>]
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : goto [?= $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>] >>>>>>>> org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : return r2
org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r16)
org.jfree.chart.plot.XYPlot.getDataRange : interfaceinvoke r3.<java.util.List: boolean addAll(java.util.Collection)>($r16) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if i0 != 0
org.jfree.chart.plot.XYPlot.getDataRange : if i0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations>
org.jfree.chart.plot.XYPlot.getDataRange : $r17 = r0.<org.jfree.chart.plot.XYPlot: java.util.List annotations> >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r6 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.XYPlot.getDataRange : r6 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.XYPlot.getDataRange : $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z2 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z2 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r18 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r7 = (org.jfree.chart.annotations.XYAnnotation) $r18
org.jfree.chart.plot.XYPlot.getDataRange : r7 = (org.jfree.chart.annotations.XYAnnotation) $r18 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z3 = r7 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo
org.jfree.chart.plot.XYPlot.getDataRange : $z3 = r7 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z3 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z3 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : $z0 = r2 instanceof org.jfree.chart.plot.XYPlot >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if $z0 == 0
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : r3 = (org.jfree.chart.plot.XYPlot) r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1)
org.jfree.chart.plot.XYPlot.getRangeAxisIndex : i0 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: int getRangeAxisIndex(org.jfree.chart.axis.ValueAxis)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r27 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r26)
org.jfree.chart.plot.XYPlot.getDataRange : $r27 = interfaceinvoke r9.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>(r26) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean getDataBoundsIncludesVisibleSeriesOnly()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r3 = new java.util.ArrayList >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : specialinvoke $r3.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : r2 = $r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i0 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if i1 >= i0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean isSeriesVisible(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r4 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : i1 = i1 + 1 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)]
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0)
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : $r5 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r1, r2, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.findDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo
org.jfree.data.general.DatasetUtilities.findDomainBounds : $z1 = r0 instanceof org.jfree.data.xy.XYDomainInfo >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0
org.jfree.data.general.DatasetUtilities.findDomainBounds : if $z1 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0)
org.jfree.data.general.DatasetUtilities.findDomainBounds : r3 = staticinvoke <org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>(r0, r1, z0) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "dataset") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys")
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "visibleSeriesKeys") >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = #-Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if z0 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r6 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z5 == 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z5 == 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r8 = (java.lang.Comparable) $r7
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : r8 = (java.lang.Comparable) $r7 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r8)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i3 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int indexOf(java.lang.Comparable)>(r8) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(i3) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i5 >= i4
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if i5 >= i4 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i3, i5)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d4 = interfaceinvoke r0.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(i3, i5) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $z6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $z6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d0 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, d4) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = i5 + 1
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : i5 = i5 + 1 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= (branch)]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= (branch)] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : goto [?= $z5 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $b6 = d0 cmpl #Infinity >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : if $b6 != 0 >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : $r9 = new org.jfree.data.Range >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : specialinvoke $r9.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return $r9
org.jfree.data.general.DatasetUtilities.iterateToFindDomainBounds : return $r9 >>>>>>>> org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3
org.jfree.data.general.DatasetUtilities.findDomainBounds : return r3 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r5 >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r2
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds : return $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r27)
org.jfree.chart.plot.XYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r27) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r8)
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : r2 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>(r2, $r8) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange : goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>()
org.jfree.chart.plot.CombinedDomainXYPlot.add : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void fireChangeEvent()>() >>>>>>>> org.jfree.data.Range.combine : if r1 != null
org.jfree.data.Range.combine : if r1 != null >>>>>>>> org.jfree.data.Range.combine : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.combine : $d2 = virtualinvoke r0.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.combine : $d3 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.data.Range.combine : $d3 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.data.Range.combine : d0 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d3)
org.jfree.data.Range.combine : d0 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d3) >>>>>>>> org.jfree.data.Range.combine : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.combine : $d4 = virtualinvoke r0.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.combine : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.data.Range.combine : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.data.Range.combine : d1 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d5)
org.jfree.data.Range.combine : d1 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d5) >>>>>>>> org.jfree.data.Range.combine : $r2 = new org.jfree.data.Range
org.jfree.data.Range.combine : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.data.Range.combine : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.data.Range.combine : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.data.Range.combine : return $r2
org.jfree.data.Range.combine : return $r2 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : specialinvoke r0.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.setOrientation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.XYPlot.setOrientation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.XYPlot.setOrientation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.setOrientation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.setOrientation : if r1 == $r2
org.jfree.chart.plot.XYPlot.setOrientation : if r1 == $r2 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r4 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r4 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : if $z0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r3 = (org.jfree.chart.plot.XYPlot) $r5
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : r3 = (org.jfree.chart.plot.XYPlot) $r5 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setOrientation(org.jfree.chart.plot.PlotOrientation)>(r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding")
org.jfree.chart.block.AbstractBlock.setPadding : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "padding") >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1
org.jfree.chart.block.AbstractBlock.setPadding : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin")
org.jfree.chart.block.AbstractBlock.setMargin : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "margin") >>>>>>>> org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1
org.jfree.chart.block.AbstractBlock.setMargin : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> = r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame")
org.jfree.chart.block.AbstractBlock.setFrame : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "frame") >>>>>>>> org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1
org.jfree.chart.block.AbstractBlock.setFrame : r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1
org.jfree.chart.title.LegendTitle.setBackgroundPaint : r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.LegendTitle.setBackgroundPaint : $r2 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : specialinvoke $r2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2)
org.jfree.chart.title.LegendTitle.setBackgroundPaint : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r2) >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify>
org.jfree.chart.title.Title.notifyListeners : $z0 = r0.<org.jfree.chart.title.Title: boolean notify> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if $z0 == 0
org.jfree.chart.title.Title.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.notifyListeners : $r3 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.title.Title.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2
org.jfree.chart.title.Title.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2
org.jfree.chart.title.Title.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.title.Title.notifyListeners : if i0 < 0
org.jfree.chart.title.Title.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position")
org.jfree.chart.title.Title.setPosition : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "position") >>>>>>>> org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.setPosition : $r2 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.setPosition : if $r2 == r1
org.jfree.chart.title.Title.setPosition : if $r2 == r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1
org.jfree.chart.title.Title.setPosition : r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> = r1 >>>>>>>> org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent
org.jfree.chart.title.Title.setPosition : $r3 = new org.jfree.chart.event.TitleChangeEvent >>>>>>>> org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0)
org.jfree.chart.title.Title.setPosition : specialinvoke $r3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(r0) >>>>>>>> org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3)
org.jfree.chart.title.Title.setPosition : virtualinvoke r0.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($r3) >>>>>>>> org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>
org.jfree.chart.title.Title.addChangeListener : $r2 = r0.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> >>>>>>>> org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1)
org.jfree.chart.title.Title.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/TitleChangeListener", r1) >>>>>>>> org.jfree.chart.JFreeChart.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener")
org.jfree.chart.JFreeChart.addChangeListener : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "listener") >>>>>>>> org.jfree.chart.JFreeChart.addChangeListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.addChangeListener : $r2 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.JFreeChart.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/ChartChangeListener", r1)
org.jfree.chart.JFreeChart.addChangeListener : virtualinvoke $r2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "org/jfree/chart/event/ChartChangeListener", r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : $r1 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : $r1 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : if $r1 == null
org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : if $r1 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : $r2 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : $r2 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2)
org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : return $r3
org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots : return $r3 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0)
org.jfree.chart.plot.XYPlot.getRangeAxis : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : r1 = null
org.jfree.chart.plot.XYPlot.getRangeAxis : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxis : $r4 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRangeAxis : $i1 = virtualinvoke $r4.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getRangeAxis : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.getRangeAxis : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRangeAxis : $r6 = virtualinvoke $r5.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6
org.jfree.chart.plot.XYPlot.getRangeAxis : r1 = (org.jfree.chart.axis.ValueAxis) $r6 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : if r1 != null
org.jfree.chart.plot.XYPlot.getRangeAxis : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : return r1
org.jfree.chart.plot.XYPlot.getRangeAxis : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxis : return $r1
org.jfree.chart.plot.XYPlot.getRangeAxis : return $r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.XYPlot.getDataRange : $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : r8 = (org.jfree.chart.annotations.XYAnnotation) $r23
org.jfree.chart.plot.XYPlot.getDataRange : r8 = (org.jfree.chart.annotations.XYAnnotation) $r23 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : $z7 = r8 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo
org.jfree.chart.plot.XYPlot.getDataRange : $z7 = r8 instanceof org.jfree.chart.annotations.XYAnnotationBoundsInfo >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : if $z7 == 0
org.jfree.chart.plot.XYPlot.getDataRange : if $z7 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.XYPlot.getDataRange : goto [?= $z6 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds : r7 = virtualinvoke r4.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range>
org.jfree.chart.axis.ValueAxis.getRange : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range range> >>>>>>>> org.jfree.chart.axis.ValueAxis.getRange : return $r1
org.jfree.chart.axis.ValueAxis.getRange : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r4 = r2[i0]
org.jfree.chart.axis.Axis.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : if $r4 != class "org/jfree/chart/event/AxisChangeListener"
org.jfree.chart.axis.Axis.notifyListeners : if $r4 != class "org/jfree/chart/event/AxisChangeListener" >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $i2 = i0 + 1
org.jfree.chart.axis.Axis.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.axis.Axis.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : $r6 = (org.jfree.chart.event.AxisChangeListener) $r5
org.jfree.chart.axis.Axis.notifyListeners : $r6 = (org.jfree.chart.event.AxisChangeListener) $r5 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.AxisChangeListener: void axisChanged(org.jfree.chart.event.AxisChangeEvent)>(r1)
org.jfree.chart.axis.Axis.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.AxisChangeListener: void axisChanged(org.jfree.chart.event.AxisChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.Plot.axisChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>()
org.jfree.chart.plot.Plot.axisChanged : virtualinvoke r0.<org.jfree.chart.plot.Plot: void fireChangeEvent()>() >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0]
org.jfree.chart.plot.Plot.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : if $r4 != class "org/jfree/chart/event/PlotChangeListener"
org.jfree.chart.plot.Plot.notifyListeners : if $r4 != class "org/jfree/chart/event/PlotChangeListener" >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1
org.jfree.chart.plot.Plot.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.plot.Plot.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : $r6 = (org.jfree.chart.event.PlotChangeListener) $r5
org.jfree.chart.plot.Plot.notifyListeners : $r6 = (org.jfree.chart.event.PlotChangeListener) $r5 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.PlotChangeListener: void plotChanged(org.jfree.chart.event.PlotChangeEvent)>(r1)
org.jfree.chart.plot.Plot.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.PlotChangeListener: void plotChanged(org.jfree.chart.event.PlotChangeEvent)>(r1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.plotChanged : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r1)
org.jfree.chart.plot.CombinedDomainXYPlot.plotChanged : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void notifyListeners(org.jfree.chart.event.PlotChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r1.<org.jfree.chart.event.PlotChangeEvent: void setChart(org.jfree.chart.JFreeChart)>(r0) >>>>>>>> org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1
org.jfree.chart.event.ChartChangeEvent.setChart : r0.<org.jfree.chart.event.ChartChangeEvent: org.jfree.chart.JFreeChart chart> = r1 >>>>>>>> org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.plotChanged : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify>
org.jfree.chart.JFreeChart.notifyListeners : $z0 = r0.<org.jfree.chart.JFreeChart: boolean notify> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if $z0 == 0
org.jfree.chart.JFreeChart.notifyListeners : if $z0 == 0 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList changeListeners> >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>()
org.jfree.chart.JFreeChart.notifyListeners : r2 = virtualinvoke $r3.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>() >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2
org.jfree.chart.JFreeChart.notifyListeners : $i1 = lengthof r2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2
org.jfree.chart.JFreeChart.notifyListeners : i0 = $i1 - 2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0
org.jfree.chart.JFreeChart.notifyListeners : if i0 < 0 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r4 = r2[i0]
org.jfree.chart.JFreeChart.notifyListeners : $r4 = r2[i0] >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : if $r4 != class "org/jfree/chart/event/ChartChangeListener"
org.jfree.chart.JFreeChart.notifyListeners : if $r4 != class "org/jfree/chart/event/ChartChangeListener" >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $i2 = i0 + 1
org.jfree.chart.JFreeChart.notifyListeners : $i2 = i0 + 1 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r5 = r2[$i2]
org.jfree.chart.JFreeChart.notifyListeners : $r5 = r2[$i2] >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r6 = (org.jfree.chart.event.ChartChangeListener) $r5
org.jfree.chart.JFreeChart.notifyListeners : $r6 = (org.jfree.chart.event.ChartChangeListener) $r5 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.ChartChangeListener: void chartChanged(org.jfree.chart.event.ChartChangeEvent)>(r1)
org.jfree.chart.JFreeChart.notifyListeners : interfaceinvoke $r6.<org.jfree.chart.event.ChartChangeListener: void chartChanged(org.jfree.chart.event.ChartChangeEvent)>(r1) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : i0 = i0 + -2
org.jfree.chart.JFreeChart.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : goto [?= (branch)]
org.jfree.chart.JFreeChart.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : i0 = i0 + -2
org.jfree.chart.plot.Plot.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.plot.Plot.notifyListeners : goto [?= (branch)]
org.jfree.chart.plot.Plot.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : i0 = i0 + -2
org.jfree.chart.axis.Axis.notifyListeners : i0 = i0 + -2 >>>>>>>> org.jfree.chart.axis.Axis.notifyListeners : goto [?= (branch)]
org.jfree.chart.axis.Axis.notifyListeners : goto [?= (branch)] >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>(r1, r2, null, null)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>(r1, r2, null, null) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r5 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0)
org.jfree.chart.JFreeChart.draw : specialinvoke $r5.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 1, 0) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5)
org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r5) >>>>>>>> org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners>
org.jfree.chart.JFreeChart.notifyListeners : $r3 = r0.<org.jfree.chart.JFreeChart: javax.swing.event.EventListenerList progressListeners> >>>>>>>> org.jfree.chart.JFreeChart.draw : r6 = null
org.jfree.chart.JFreeChart.draw : r6 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r4 == null
org.jfree.chart.JFreeChart.draw : if r4 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : if r6 == null
org.jfree.chart.JFreeChart.draw : if r6 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>()
org.jfree.chart.JFreeChart.draw : r7 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.Shape getClip()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void clip(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints>
org.jfree.chart.JFreeChart.draw : $r15 = r0.<org.jfree.chart.JFreeChart: java.awt.RenderingHints renderingHints> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void addRenderingHints(java.util.Map)>($r15) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r16 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r16 == null
org.jfree.chart.JFreeChart.draw : if $r16 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint>
org.jfree.chart.JFreeChart.draw : $r17 = r0.<org.jfree.chart.JFreeChart: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r17) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage>
org.jfree.chart.JFreeChart.draw : $r18 = r0.<org.jfree.chart.JFreeChart: java.awt.Image backgroundImage> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r18 == null
org.jfree.chart.JFreeChart.draw : if $r18 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>()
org.jfree.chart.JFreeChart.draw : $z1 = virtualinvoke r0.<org.jfree.chart.JFreeChart: boolean isBorderVisible()>() >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible>
org.jfree.chart.JFreeChart.isBorderVisible : $z0 = r0.<org.jfree.chart.JFreeChart: boolean borderVisible> >>>>>>>> org.jfree.chart.JFreeChart.isBorderVisible : return $z0
org.jfree.chart.JFreeChart.isBorderVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z1 == 0
org.jfree.chart.JFreeChart.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.draw : $r27 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.JFreeChart.draw : specialinvoke $r27.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r28 = $r27
org.jfree.chart.JFreeChart.draw : r28 = $r27 >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.JFreeChart.draw : virtualinvoke r28.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.JFreeChart.draw : $r29 = r0.<org.jfree.chart.JFreeChart: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r29.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r28) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title>
org.jfree.chart.JFreeChart.draw : $r30 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle title> >>>>>>>> org.jfree.chart.JFreeChart.draw : if $r30 == null
org.jfree.chart.JFreeChart.draw : if $r30 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles>
org.jfree.chart.JFreeChart.draw : $r37 = r0.<org.jfree.chart.JFreeChart: java.util.List subtitles> >>>>>>>> org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.JFreeChart.draw : r38 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.JFreeChart.draw : $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z4 == 0
org.jfree.chart.JFreeChart.draw : if $z4 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.JFreeChart.draw : $r39 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39
org.jfree.chart.JFreeChart.draw : r40 = (org.jfree.chart.title.Title) $r39 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>()
org.jfree.chart.JFreeChart.draw : $z5 = virtualinvoke r40.<org.jfree.chart.title.Title: boolean isVisible()>() >>>>>>>> org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible>
org.jfree.chart.title.Title.isVisible : $z0 = r0.<org.jfree.chart.title.Title: boolean visible> >>>>>>>> org.jfree.chart.title.Title.isVisible : return $z0
org.jfree.chart.title.Title.isVisible : return $z0 >>>>>>>> org.jfree.chart.JFreeChart.draw : if $z5 == 0
org.jfree.chart.JFreeChart.draw : if $z5 == 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : $z6 = 0
org.jfree.chart.JFreeChart.draw : $z6 = 0 >>>>>>>> org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6)
org.jfree.chart.JFreeChart.draw : r11 = virtualinvoke r0.<org.jfree.chart.JFreeChart: org.jfree.chart.entity.EntityCollection drawTitle(org.jfree.chart.title.Title,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r40, r1, r28, $z6) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "t") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area")
org.jfree.chart.JFreeChart.drawTitle : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r3, "area") >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.JFreeChart.drawTitle : r4 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position>
org.jfree.chart.title.Title.getPosition : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.RectangleEdge position> >>>>>>>> org.jfree.chart.title.Title.getPosition : return $r1
org.jfree.chart.title.Title.getPosition : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b0 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0
org.jfree.chart.JFreeChart.drawTitle : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0
org.jfree.chart.JFreeChart.drawTitle : if $b1 > 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.JFreeChart.drawTitle : $r11 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r5 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r5.<org.jfree.data.Range: void <init>(double,double)>(0.0, d0) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range
org.jfree.chart.JFreeChart.drawTitle : $r13 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r13.<org.jfree.data.Range: void <init>(double,double)>(0.0, d1) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.JFreeChart.drawTitle : $r14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14)
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r11.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r5, $r12, d1, $r13, $r14) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r6 = $r11
org.jfree.chart.JFreeChart.drawTitle : r6 = $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : n0 = null
org.jfree.chart.JFreeChart.drawTitle : n0 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams
org.jfree.chart.JFreeChart.drawTitle : $r15 = new org.jfree.chart.block.BlockParams >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>()
org.jfree.chart.JFreeChart.drawTitle : specialinvoke $r15.<org.jfree.chart.block.BlockParams: void <init>()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r7 = $r15
org.jfree.chart.JFreeChart.drawTitle : r7 = $r15 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r7.<org.jfree.chart.block.BlockParams: void setGenerateEntities(boolean)>(z0) >>>>>>>> org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0
org.jfree.chart.block.BlockParams.setGenerateEntities : r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> = z0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.JFreeChart.drawTitle : $r16 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r16 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20
org.jfree.chart.JFreeChart.drawTitle : if r4 != $r20 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6)
org.jfree.chart.JFreeChart.drawTitle : r21 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, r6) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendTitle.arrange : $r3 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>()
org.jfree.chart.title.LegendTitle.arrange : specialinvoke $r3.<org.jfree.ui.Size2D: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4 = $r3
org.jfree.chart.title.LegendTitle.arrange : r4 = $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>()
org.jfree.chart.title.LegendTitle.arrange : virtualinvoke r0.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.clear : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r1.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.clear : $r2 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>()
org.jfree.chart.block.BlockContainer.clear : interfaceinvoke $r2.<org.jfree.chart.block.Arrangement: void clear()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge getPosition()>() >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r4 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5)
org.jfree.chart.title.LegendTitle.fetchLegendItems : virtualinvoke $r4.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($r5) >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement")
org.jfree.chart.block.BlockContainer.setArrangement : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "arrangement") >>>>>>>> org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1
org.jfree.chart.block.BlockContainer.setArrangement : r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.util.SortOrder sortOrder> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r9 = <org.jfree.util.SortOrder: org.jfree.util.SortOrder ASCENDING> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $z1 = virtualinvoke $r8.<org.jfree.util.SortOrder: boolean equals(java.lang.Object)>($r9) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i2 = lengthof $r10 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i0 >= $i2 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r11 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0]
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r12 = $r11[i0] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : r2 = interfaceinvoke $r12.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.LegendItemCollection getFixedLegendItems()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r1 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.LegendItemCollection getFixedLegendItems()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getFixedLegendItems : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.getFixedLegendItems : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.getFixedLegendItems : return $r1
org.jfree.chart.plot.XYPlot.getFixedLegendItems : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : if r1 != null
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : if r1 != null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r5 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r5 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : specialinvoke $r5.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : specialinvoke $r5.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r1 = $r5
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r1 = $r5 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r6 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r6 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : if $r6 == null
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : if $r6 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r7 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r2 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : if $z0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r3 = (org.jfree.chart.plot.XYPlot) $r8
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r3 = (org.jfree.chart.plot.XYPlot) $r8 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r4 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection getLegendItems()>()
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : r4 = virtualinvoke r3.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection getLegendItems()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems>
org.jfree.chart.plot.XYPlot.getLegendItems : $r5 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.LegendItemCollection fixedLegendItems> >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if $r5 == null
org.jfree.chart.plot.XYPlot.getLegendItems : if $r5 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : $r7 = new org.jfree.chart.LegendItemCollection
org.jfree.chart.plot.XYPlot.getLegendItems : $r7 = new org.jfree.chart.LegendItemCollection >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : specialinvoke $r7.<org.jfree.chart.LegendItemCollection: void <init>()>()
org.jfree.chart.plot.XYPlot.getLegendItems : specialinvoke $r7.<org.jfree.chart.LegendItemCollection: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : r1 = $r7
org.jfree.chart.plot.XYPlot.getLegendItems : r1 = $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets>
org.jfree.chart.plot.XYPlot.getLegendItems : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList datasets> >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : i0 = virtualinvoke $r8.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getLegendItems : i0 = virtualinvoke $r8.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : i1 = 0
org.jfree.chart.plot.XYPlot.getLegendItems : i1 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if i1 >= i0
org.jfree.chart.plot.XYPlot.getLegendItems : if i1 >= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i1)
org.jfree.chart.plot.XYPlot.getLegendItems : r2 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if r2 == null
org.jfree.chart.plot.XYPlot.getLegendItems : if r2 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i1)
org.jfree.chart.plot.XYPlot.getLegendItems : r3 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(i1) >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : r1 = null
org.jfree.chart.plot.XYPlot.getRenderer : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRenderer : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRenderer : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : if $i1 <= i0
org.jfree.chart.plot.XYPlot.getRenderer : if $i1 <= i0 >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers>
org.jfree.chart.plot.XYPlot.getRenderer : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList renderers> >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRenderer : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : r1 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r4
org.jfree.chart.plot.XYPlot.getRenderer : r1 = (org.jfree.chart.renderer.xy.XYItemRenderer) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getRenderer : return r1
org.jfree.chart.plot.XYPlot.getRenderer : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if r3 != null
org.jfree.chart.plot.XYPlot.getLegendItems : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if r3 == null
org.jfree.chart.plot.XYPlot.getLegendItems : if r3 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : i2 = interfaceinvoke r2.<org.jfree.data.xy.XYDataset: int getSeriesCount()>()
org.jfree.chart.plot.XYPlot.getLegendItems : i2 = interfaceinvoke r2.<org.jfree.data.xy.XYDataset: int getSeriesCount()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : i3 = 0
org.jfree.chart.plot.XYPlot.getLegendItems : i3 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if i3 >= i2
org.jfree.chart.plot.XYPlot.getLegendItems : if i3 >= i2 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : $z0 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: boolean isSeriesVisible(int)>(i3)
org.jfree.chart.plot.XYPlot.getLegendItems : $z0 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: boolean isSeriesVisible(int)>(i3) >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if $z0 == 0
org.jfree.chart.plot.XYPlot.getLegendItems : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : $z1 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: boolean isSeriesVisibleInLegend(int)>(i3)
org.jfree.chart.plot.XYPlot.getLegendItems : $z1 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: boolean isSeriesVisibleInLegend(int)>(i3) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean baseSeriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Boolean seriesVisibleInLegend> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if $r2 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if $r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList>
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : $r4 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.BooleanList seriesVisibleInLegendList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : if r1 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend : return z0 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if $z1 == 0
org.jfree.chart.plot.XYPlot.getLegendItems : if $z1 == 0 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : r4 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i1, i3)
org.jfree.chart.plot.XYPlot.getLegendItems : r4 = interfaceinvoke r3.<org.jfree.chart.renderer.xy.XYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>(i1, i3) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r1 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r1 != null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r1 != null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r2 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r2 = null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r3 = virtualinvoke r1.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r3 = virtualinvoke r1.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(i0) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r3 == null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r3 == null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemVisible(int,int)>(i1, 0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemVisible(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemVisible : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean isSeriesVisible(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getItemVisible : $z0 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: boolean isSeriesVisible(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getItemVisible : return $z0
org.jfree.chart.renderer.AbstractRenderer.getItemVisible : return $z0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if $z2 == 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if $z2 == 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r18 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemLabelGenerator()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r18 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemLabelGenerator()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemLabelGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemLabelGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemLabelGenerator : return $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemLabelGenerator : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r4 = interfaceinvoke $r18.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(r3, i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r4 = interfaceinvoke $r18.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(r3, i1) >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset")
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "dataset") >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern>
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : $r3 = r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.String formatPattern> >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.xy.XYDataset,int)>(r1, i0)
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : $r4 = virtualinvoke r0.<org.jfree.chart.labels.StandardXYSeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.xy.XYDataset,int)>(r1, i0) >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1]
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : r2 = newarray (java.lang.Object)[1] >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i0)
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : $r3 = interfaceinvoke r1.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i0) >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>()
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>() >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : r2[0] = $r4
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : r2[0] = $r4 >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : return r2
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray : return r2 >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : r2 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4)
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : r2 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, $r4) >>>>>>>> org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : return r2
org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel : return r2 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r5 = r4
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r5 = r4 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r6 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r6 = null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r19 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r19 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemToolTipGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemToolTipGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemToolTipGenerator : return $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemToolTipGenerator : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if $r19 == null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if $r19 == null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r7 = null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r7 = null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r21 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>()
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r21 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemURLGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemURLGenerator : $r1 = r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator> >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemURLGenerator : return $r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemURLGenerator : return $r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if $r21 == null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if $r21 == null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape lookupLegendShape(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r8 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape lookupLegendShape(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getLegendShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList>
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList legendShapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendShape : return $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendShape : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape baseLegendShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape lookupSeriesShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape shape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Shape getSeriesShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : $r2 = virtualinvoke $r1.<org.jfree.util.ShapeList: java.awt.Shape getShape(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesShape : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesShape> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r1 = null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r1 = null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r2 = virtualinvoke r0.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.plot.XYPlot getPlot()>() >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : if r2 == null
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : if r2 == null >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : r1 = virtualinvoke r2.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null
org.jfree.chart.plot.Plot.getDrawingSupplier : n0 = null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : r1 = virtualinvoke r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.Plot getParent()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null
org.jfree.chart.plot.Plot.getDrawingSupplier : if r1 == null >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = virtualinvoke r1.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier>
org.jfree.chart.plot.Plot.getDrawingSupplier : r2 = r0.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier drawingSupplier> >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : return r2
org.jfree.chart.plot.Plot.getDrawingSupplier : return r2 >>>>>>>> org.jfree.chart.plot.Plot.getDrawingSupplier : goto [?= return r2]
org.jfree.chart.plot.Plot.getDrawingSupplier : goto [?= return r2] >>>>>>>> org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : return r1
org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Shape getNextShape()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] shapeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int shapeIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesShape(int,java.awt.Shape,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ShapeList shapeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : virtualinvoke $r2.<org.jfree.util.ShapeList: void setShape(int,java.awt.Shape)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesShape : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape : return r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : z0 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemShapeFilled(int,int)>(i1, 0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : z0 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean getItemShapeFilled(int,int)>(i1, 0) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $r2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $r2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.lang.Boolean shapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : if $r2 == null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : if $r2 == null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $r4 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $r4 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.util.BooleanList seriesShapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : r1 = virtualinvoke $r4.<org.jfree.util.BooleanList: java.lang.Boolean getBoolean(int)>(i0) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : if r1 == null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : if r1 == null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $z2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : $z2 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesFilled> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : return $z2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled : return $z2 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r9 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r9 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint paint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getSeriesPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Paint getNextPaint()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Paint[] paintSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int paintIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesPaint(int,java.awt.Paint,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList paintList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : virtualinvoke $r2.<org.jfree.util.PaintList: void setPaint(int,java.awt.Paint)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint : return r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r10 = r9
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r10 = r9 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r11 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r11 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Stroke lookupSeriesStroke(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $r3 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $r3 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $r3 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Stroke getSeriesStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : $r2 = virtualinvoke $r1.<org.jfree.util.StrokeList: java.awt.Stroke getStroke(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : return $r2
org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke>
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : $z0 = r0.<org.jfree.chart.renderer.AbstractRenderer: boolean autoPopulateSeriesStroke> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $z0 == 0
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if $z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r2 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>() >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : if r2 == null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>()
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : r1 = interfaceinvoke r2.<org.jfree.chart.plot.DrawingSupplier: java.awt.Stroke getNextStroke()>() >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r2 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i0 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $r3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Stroke[] strokeSequence> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i1 = lengthof $r3
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i1 = lengthof $r3 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i2 = $i0 % $i1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i2 = $i0 % $i1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r1 = $r2[$i2]
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r1 = $r2[$i2] >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex>
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i3 = r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i4 = $i3 + 1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : $i4 = $i3 + 1 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> = $i4
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : r0.<org.jfree.chart.plot.DefaultDrawingSupplier: int strokeIndex> = $i4 >>>>>>>> org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1
org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke : return r1 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: void setSeriesStroke(int,java.awt.Stroke,boolean)>(i0, r1, 0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList>
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : $r2 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.StrokeList strokeList> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1)
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : virtualinvoke $r2.<org.jfree.util.StrokeList: void setStroke(int,java.awt.Stroke)>(i0, r1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0
org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke : if z0 == 0 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke : return r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r23 = new org.jfree.chart.LegendItem
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r23 = new org.jfree.chart.LegendItem >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r13 = r6
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r13 = r6 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r14 = r7
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r14 = r7 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z3 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z3 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean baseShapesVisible> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if z0 != 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if z0 != 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z4 = 0
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z4 = 0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $z5 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: boolean plotLines> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r26 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine>
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r26 = r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Shape legendLine> >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : specialinvoke $r23.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)>(r4, r5, $r13, $r14, $z3, r8, z0, r9, $z4, r9, r11, $z5, $r26, r11, r10)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : specialinvoke $r23.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)>(r4, r5, $r13, $r14, $z3, r8, z0, r9, $z4, r9, r11, $z5, $r26, r11, r10) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r2 = $r23
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r2 = $r23 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r27 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Font lookupLegendTextFont(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r27 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Font lookupLegendTextFont(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font getLegendTextFont(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.ObjectList legendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r3 = (java.awt.Font) $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : $r3 = (java.awt.Font) $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : return $r3
org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont : return $r3 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Font baseLegendTextFont> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont : return r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($r27)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($r27) >>>>>>>> org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1
org.jfree.chart.LegendItem.setLabelFont : r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> = r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r17 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : r17 = virtualinvoke r0.<org.jfree.chart.renderer.xy.StandardXYItemRenderer: java.awt.Paint lookupLegendTextPaint(int)>(i1) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = virtualinvoke r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint getLegendTextPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: org.jfree.util.PaintList legendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0)
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : $r2 = virtualinvoke $r1.<org.jfree.util.PaintList: java.awt.Paint getPaint(int)>(i0) >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : return $r2
org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint : return $r2 >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : if r1 != null >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint>
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : r1 = r0.<org.jfree.chart.renderer.AbstractRenderer: java.awt.Paint baseLegendTextPaint> >>>>>>>> org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1
org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint : return r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r17 == null
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : if r17 == null >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r3)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(r3) >>>>>>>> org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1
org.jfree.chart.LegendItem.setDataset : r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> = r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(i0) >>>>>>>> org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0
org.jfree.chart.LegendItem.setDatasetIndex : r0.<org.jfree.chart.LegendItem: int datasetIndex> = i0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r28 = interfaceinvoke r3.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : $r28 = interfaceinvoke r3.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(i1) >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($r28)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($r28) >>>>>>>> org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1
org.jfree.chart.LegendItem.setSeriesKey : r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> = r1 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1)
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : virtualinvoke r2.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(i1) >>>>>>>> org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0
org.jfree.chart.LegendItem.setSeriesIndex : r0.<org.jfree.chart.LegendItem: int series> = i0 >>>>>>>> org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : return r2
org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : if r4 == null
org.jfree.chart.plot.XYPlot.getLegendItems : if r4 == null >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4)
org.jfree.chart.plot.XYPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void add(org.jfree.chart.LegendItem)>(r4) >>>>>>>> org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.add : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.LegendItemCollection.add : interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : i3 = i3 + 1
org.jfree.chart.plot.XYPlot.getLegendItems : i3 = i3 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : goto [?= (branch)]
org.jfree.chart.plot.XYPlot.getLegendItems : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : i1 = i1 + 1
org.jfree.chart.plot.XYPlot.getLegendItems : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.getLegendItems : return r1
org.jfree.chart.plot.XYPlot.getLegendItems : return r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void addAll(org.jfree.chart.LegendItemCollection)>(r4)
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : virtualinvoke r1.<org.jfree.chart.LegendItemCollection: void addAll(org.jfree.chart.LegendItemCollection)>(r4) >>>>>>>> org.jfree.chart.LegendItemCollection.addAll : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.addAll : $r2 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.addAll : $r3 = r1.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.addAll : $r3 = r1.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.addAll : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3)
org.jfree.chart.LegendItemCollection.addAll : interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r3) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : return r1
org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null
org.jfree.chart.title.LegendTitle.fetchLegendItems : if r2 == null >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = 0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()
org.jfree.chart.title.LegendTitle.fetchLegendItems : $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.getItemCount : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>()
org.jfree.chart.LegendItemCollection.getItemCount : $i0 = interfaceinvoke $r1.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.LegendItemCollection.getItemCount : return $i0
org.jfree.chart.LegendItemCollection.getItemCount : return $i0 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3
org.jfree.chart.title.LegendTitle.fetchLegendItems : if i1 >= $i3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1)
org.jfree.chart.title.LegendTitle.fetchLegendItems : $r13 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i1) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items>
org.jfree.chart.LegendItemCollection.get : $r1 = r0.<org.jfree.chart.LegendItemCollection: java.util.List items> >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.LegendItemCollection.get : $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2
org.jfree.chart.LegendItemCollection.get : $r3 = (org.jfree.chart.LegendItem) $r2 >>>>>>>> org.jfree.chart.LegendItemCollection.get : return $r3
org.jfree.chart.LegendItemCollection.get : return $r3 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : specialinvoke r0.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($r13)
org.jfree.chart.title.LegendTitle.fetchLegendItems : specialinvoke r0.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($r13) >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1)
org.jfree.chart.title.LegendTitle.addItemBlock : r2 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(r1) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : n0 = null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r7 = new org.jfree.chart.title.LegendGraphic >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r8 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r8 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>() >>>>>>>> org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape>
org.jfree.chart.LegendItem.getShape : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape shape> >>>>>>>> org.jfree.chart.LegendItem.getShape : return $r1
org.jfree.chart.LegendItem.getShape : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r9 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>() >>>>>>>> org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint>
org.jfree.chart.LegendItem.getFillPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint fillPaint> >>>>>>>> org.jfree.chart.LegendItem.getFillPaint : return $r1
org.jfree.chart.LegendItem.getFillPaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r7.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($r8, $r9)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r7.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($r8, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets
org.jfree.chart.block.AbstractBlock.setPadding : $r1 = new org.jfree.ui.RectangleInsets >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3)
org.jfree.chart.block.AbstractBlock.setPadding : specialinvoke $r1.<org.jfree.ui.RectangleInsets: void <init>(double,double,double,double)>(d0, d1, d2, d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.setPadding : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r1)
org.jfree.chart.block.AbstractBlock.setPadding : virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r1) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r2 = $r7
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r2 = $r7 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r10 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer getFillPaintTransformer()>() >>>>>>>> org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer>
org.jfree.chart.LegendItem.getFillPaintTransformer : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> >>>>>>>> org.jfree.chart.LegendItem.getFillPaintTransformer : return $r1
org.jfree.chart.LegendItem.getFillPaintTransformer : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.ui.GradientPaintTransformer)>($r10)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.ui.GradientPaintTransformer)>($r10) >>>>>>>> org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer")
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "transformer") >>>>>>>> org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1
org.jfree.chart.title.LegendGraphic.setFillPaintTransformer : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.GradientPaintTransformer fillPaintTransformer> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z0 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeFilled()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled>
org.jfree.chart.LegendItem.isShapeFilled : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeFilled> >>>>>>>> org.jfree.chart.LegendItem.isShapeFilled : return $z0
org.jfree.chart.LegendItem.isShapeFilled : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($z0)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($z0) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0
org.jfree.chart.title.LegendGraphic.setShapeFilled : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r11 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>() >>>>>>>> org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line>
org.jfree.chart.LegendItem.getLine : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Shape line> >>>>>>>> org.jfree.chart.LegendItem.getLine : return $r1
org.jfree.chart.LegendItem.getLine : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($r11)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($r11) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1
org.jfree.chart.title.LegendGraphic.setLine : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r12 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>() >>>>>>>> org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke>
org.jfree.chart.LegendItem.getLineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke lineStroke> >>>>>>>> org.jfree.chart.LegendItem.getLineStroke : return $r1
org.jfree.chart.LegendItem.getLineStroke : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($r12)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($r12) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1
org.jfree.chart.title.LegendGraphic.setLineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r13 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>() >>>>>>>> org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint>
org.jfree.chart.LegendItem.getLinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint linePaint> >>>>>>>> org.jfree.chart.LegendItem.getLinePaint : return $r1
org.jfree.chart.LegendItem.getLinePaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($r13)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1
org.jfree.chart.title.LegendGraphic.setLinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z1 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isLineVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible>
org.jfree.chart.LegendItem.isLineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean lineVisible> >>>>>>>> org.jfree.chart.LegendItem.isLineVisible : return $z0
org.jfree.chart.LegendItem.isLineVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($z1)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($z1) >>>>>>>> org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0
org.jfree.chart.title.LegendGraphic.setLineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z2 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible>
org.jfree.chart.LegendItem.isShapeVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeVisible> >>>>>>>> org.jfree.chart.LegendItem.isShapeVisible : return $z0
org.jfree.chart.LegendItem.isShapeVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($z2)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($z2) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0
org.jfree.chart.title.LegendGraphic.setShapeVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $z3 = virtualinvoke r1.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>() >>>>>>>> org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible>
org.jfree.chart.LegendItem.isShapeOutlineVisible : $z0 = r0.<org.jfree.chart.LegendItem: boolean shapeOutlineVisible> >>>>>>>> org.jfree.chart.LegendItem.isShapeOutlineVisible : return $z0
org.jfree.chart.LegendItem.isShapeOutlineVisible : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($z3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($z3) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0
org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible : r0.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = z0 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r14 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>() >>>>>>>> org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint>
org.jfree.chart.LegendItem.getOutlinePaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint outlinePaint> >>>>>>>> org.jfree.chart.LegendItem.getOutlinePaint : return $r1
org.jfree.chart.LegendItem.getOutlinePaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($r14)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1
org.jfree.chart.title.LegendGraphic.setOutlinePaint : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r15 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>() >>>>>>>> org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke>
org.jfree.chart.LegendItem.getOutlineStroke : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Stroke outlineStroke> >>>>>>>> org.jfree.chart.LegendItem.getOutlineStroke : return $r1
org.jfree.chart.LegendItem.getOutlineStroke : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($r15)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1
org.jfree.chart.title.LegendGraphic.setOutlineStroke : r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r16 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets legendItemGraphicPadding> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.ui.RectangleInsets)>($r16)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.ui.RectangleInsets)>($r16) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r17 = new org.jfree.chart.title.LegendItemBlockContainer >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r18 = new org.jfree.chart.block.BorderArrangement
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r18 = new org.jfree.chart.block.BorderArrangement >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r18.<org.jfree.chart.block.BorderArrangement: void <init>()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r18.<org.jfree.chart.block.BorderArrangement: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r19 = virtualinvoke r1.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>() >>>>>>>> org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset>
org.jfree.chart.LegendItem.getDataset : $r1 = r0.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset dataset> >>>>>>>> org.jfree.chart.LegendItem.getDataset : return $r1
org.jfree.chart.LegendItem.getDataset : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r20 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>() >>>>>>>> org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey>
org.jfree.chart.LegendItem.getSeriesKey : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.Comparable seriesKey> >>>>>>>> org.jfree.chart.LegendItem.getSeriesKey : return $r1
org.jfree.chart.LegendItem.getSeriesKey : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r17.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($r18, $r19, $r20)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r17.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($r18, $r19, $r20) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r3 = $r17
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r3 = $r17 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r21 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicAnchor()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicAnchor> >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : return $r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.ui.RectangleAnchor)>($r21)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.ui.RectangleAnchor)>($r21) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor")
org.jfree.chart.title.LegendGraphic.setShapeAnchor : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "anchor") >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1
org.jfree.chart.title.LegendGraphic.setShapeAnchor : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r22 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor getLegendItemGraphicLocation()>() >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation>
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : $r1 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleAnchor legendItemGraphicLocation> >>>>>>>> org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : return $r1
org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.ui.RectangleAnchor)>($r22)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r2.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.ui.RectangleAnchor)>($r22) >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location")
org.jfree.chart.title.LegendGraphic.setShapeLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "location") >>>>>>>> org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1
org.jfree.chart.title.LegendGraphic.setShapeLocation : r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r23 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleEdge legendItemGraphicEdge> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r2, $r23)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r2, $r23) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.add : $r3 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1) >>>>>>>> org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.add : $r4 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2)
org.jfree.chart.block.BlockContainer.add : interfaceinvoke $r4.<org.jfree.chart.block.Arrangement: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r2 != null
org.jfree.chart.block.BorderArrangement.add : if r2 != null >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2
org.jfree.chart.block.BorderArrangement.add : r3 = (org.jfree.ui.RectangleEdge) r2 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.block.BorderArrangement.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r4
org.jfree.chart.block.BorderArrangement.add : if r3 != $r4 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.block.BorderArrangement.add : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r5
org.jfree.chart.block.BorderArrangement.add : if r3 != $r5 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.block.BorderArrangement.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.block.BorderArrangement.add : if r3 != $r6
org.jfree.chart.block.BorderArrangement.add : if r3 != $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.add : goto [?= return]
org.jfree.chart.block.BorderArrangement.add : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont>
org.jfree.chart.LegendItem.getLabelFont : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.LegendItem.getLabelFont : return $r1
org.jfree.chart.LegendItem.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r4 != null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r4 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>() >>>>>>>> org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint>
org.jfree.chart.LegendItem.getLabelPaint : $r1 = r0.<org.jfree.chart.LegendItem: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.LegendItem.getLabelPaint : return $r1
org.jfree.chart.LegendItem.getLabelPaint : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null
org.jfree.chart.title.LegendTitle.createLegendItemBlock : if r5 != null >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r5 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r24 = new org.jfree.chart.block.LabelBlock >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r25 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getLabel()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r25 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label>
org.jfree.chart.LegendItem.getLabel : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String label> >>>>>>>> org.jfree.chart.LegendItem.getLabel : return $r1
org.jfree.chart.LegendItem.getLabel : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r24.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($r25, r4, r5)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r24.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($r25, r4, r5) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r6 = $r24
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r6 = $r24 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding>
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r26 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.ui.RectangleInsets itemLabelPadding> >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r6.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r26)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r6.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.ui.RectangleInsets)>($r26) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null)
org.jfree.chart.block.BlockContainer.add : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>(r1, null) >>>>>>>> org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1
org.jfree.chart.block.BorderArrangement.add : r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r27 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>() >>>>>>>> org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText>
org.jfree.chart.LegendItem.getToolTipText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String toolTipText> >>>>>>>> org.jfree.chart.LegendItem.getToolTipText : return $r1
org.jfree.chart.LegendItem.getToolTipText : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($r27)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($r27) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1
org.jfree.chart.title.LegendItemBlockContainer.setToolTipText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String toolTipText> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r28 = virtualinvoke r1.<org.jfree.chart.LegendItem: java.lang.String getURLText()>() >>>>>>>> org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText>
org.jfree.chart.LegendItem.getURLText : $r1 = r0.<org.jfree.chart.LegendItem: java.lang.String urlText> >>>>>>>> org.jfree.chart.LegendItem.getURLText : return $r1
org.jfree.chart.LegendItem.getURLText : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($r28)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r3.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($r28) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1
org.jfree.chart.title.LegendItemBlockContainer.setURLText : r0.<org.jfree.chart.title.LegendItemBlockContainer: java.lang.String urlText> = r1 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r29 = new org.jfree.chart.block.BlockContainer >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r30 = new org.jfree.chart.block.CenterArrangement
org.jfree.chart.title.LegendTitle.createLegendItemBlock : $r30 = new org.jfree.chart.block.CenterArrangement >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r30.<org.jfree.chart.block.CenterArrangement: void <init>()>()
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r30.<org.jfree.chart.block.CenterArrangement: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r29.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($r30)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : specialinvoke $r29.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($r30) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : r31 = $r29
org.jfree.chart.title.LegendTitle.createLegendItemBlock : r31 = $r29 >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3)
org.jfree.chart.title.LegendTitle.createLegendItemBlock : virtualinvoke r31.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r3) >>>>>>>> org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31
org.jfree.chart.title.LegendTitle.createLegendItemBlock : return r31 >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.addItemBlock : $r3 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.addItemBlock : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r2)
org.jfree.chart.title.LegendTitle.addItemBlock : virtualinvoke $r3.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(r2) >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = i1 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i1 = i1 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $i3 = virtualinvoke r2.<org.jfree.chart.LegendItemCollection: int getItemCount()>()] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1
org.jfree.chart.title.LegendTitle.fetchLegendItems : i0 = i0 + 1 >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= $r10 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>] >>>>>>>> org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return]
org.jfree.chart.title.LegendTitle.fetchLegendItems : goto [?= return] >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : $r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>()
org.jfree.chart.title.LegendTitle.arrange : $z0 = virtualinvoke $r8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.isEmpty : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.BlockContainer.isEmpty : $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.BlockContainer.isEmpty : return $z0
org.jfree.chart.block.BlockContainer.isEmpty : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0
org.jfree.chart.title.LegendTitle.arrange : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : if r5 != null
org.jfree.chart.title.LegendTitle.arrange : if r5 != null >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.arrange : r5 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendTitle.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c")
org.jfree.chart.block.AbstractBlock.toContentConstraint : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "c") >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6)
org.jfree.chart.block.AbstractBlock.toContentConstraint : $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r6) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0
org.jfree.chart.block.AbstractBlock.toContentConstraint : if $z0 == 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d0 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width>
org.jfree.chart.block.RectangleConstraint.getWidth : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double width> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidth : return $d0
org.jfree.chart.block.RectangleConstraint.getWidth : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r2 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.getWidthRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : d1 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: double getHeight()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.getHeight : $d0 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeight : return $d0
org.jfree.chart.block.RectangleConstraint.getHeight : return $d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : r3 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.getHeightRange : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightRange : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d2 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.getInsets : $r1 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.getInsets : return $r1
org.jfree.chart.block.LineBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.toContentConstraint : d3 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d2 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d3 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double trimHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d3, 0.0) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $d4 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r4 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentWidth(org.jfree.data.Range)>(r2) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentWidth : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentWidth(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentWidth : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentWidth : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentWidth : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3)
org.jfree.chart.block.AbstractBlock.toContentConstraint : r5 = specialinvoke r0.<org.jfree.chart.block.AbstractBlock: org.jfree.data.Range trimToContentHeight(org.jfree.data.Range)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if r1 != null >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d0 = 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d2 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b0 = $d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $b1 = $d4 cmpg #Infinity >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0
org.jfree.chart.block.AbstractBlock.trimToContentHeight : if $b1 >= 0 >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $d5 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : d1 = virtualinvoke r0.<org.jfree.chart.block.AbstractBlock: double trimToContentHeight(double)>($d5) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range
org.jfree.chart.block.AbstractBlock.trimToContentHeight : $r2 = new org.jfree.data.Range >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1)
org.jfree.chart.block.AbstractBlock.trimToContentHeight : specialinvoke $r2.<org.jfree.data.Range: void <init>(double,double)>(d0, d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2
org.jfree.chart.block.AbstractBlock.trimToContentHeight : return $r2 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r7 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r8 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType>
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType widthConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getWidthConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.AbstractBlock.toContentConstraint : $r9 = virtualinvoke r1.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : $r1 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1
org.jfree.chart.block.RectangleConstraint.getHeightConstraintType : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9)
org.jfree.chart.block.AbstractBlock.toContentConstraint : specialinvoke $r7.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d2, r4, $r8, d3, r5, $r9) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7
org.jfree.chart.block.AbstractBlock.toContentConstraint : return $r7 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6)
org.jfree.chart.title.LegendTitle.arrange : r7 = virtualinvoke r5.<org.jfree.chart.block.BlockContainer: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r6) >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement>
org.jfree.chart.block.BlockContainer.arrange : $r3 = r0.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.Arrangement arrangement> >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2)
org.jfree.chart.block.BlockContainer.arrange : $r4 = interfaceinvoke $r3.<org.jfree.chart.block.Arrangement: org.jfree.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r0, r1, r2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.FlowArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r6
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r13
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r13 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r20
org.jfree.chart.block.FlowArrangement.arrange : if r4 != $r20 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.FlowArrangement.arrange : $r21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r21
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.FlowArrangement.arrange : $r23 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r23
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r23 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>
org.jfree.chart.block.FlowArrangement.arrange : $r25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r25
org.jfree.chart.block.FlowArrangement.arrange : if r5 != $r25 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.FlowArrangement.arrange : $r26 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.FlowArrangement.arrangeRR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.getBlocks : $r1 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1)
org.jfree.chart.block.BlockContainer.getBlocks : $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1) >>>>>>>> org.jfree.chart.block.BlockContainer.getBlocks : return $r2
org.jfree.chart.block.BlockContainer.getBlocks : return $r2 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : i0 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i2 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r4 = newarray (org.jfree.ui.Size2D)[$i2]
org.jfree.chart.block.FlowArrangement.arrangeNN : r4 = newarray (org.jfree.ui.Size2D)[$i2] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i3 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i3 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i1 >= $i3
org.jfree.chart.block.FlowArrangement.arrangeNN : if i1 >= $i3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r7
org.jfree.chart.block.FlowArrangement.arrangeNN : r5 = (org.jfree.chart.block.Block) $r7 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r6 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r8 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6)
org.jfree.chart.block.FlowArrangement.arrangeNN : $r8 = interfaceinvoke r5.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r6) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.CenterArrangement.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r6 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : if r4 != $r6
org.jfree.chart.block.CenterArrangement.arrange : if r4 != $r6 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.CenterArrangement.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : if r5 != $r7
org.jfree.chart.block.CenterArrangement.arrange : if r5 != $r7 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.CenterArrangement.arrange : $r8 = virtualinvoke r0.<org.jfree.chart.block.CenterArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.CenterArrangement.arrangeNN : r3 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0)
org.jfree.chart.block.CenterArrangement.arrangeNN : $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r4 = (org.jfree.chart.block.Block) $r7
org.jfree.chart.block.CenterArrangement.arrangeNN : r4 = (org.jfree.chart.block.Block) $r7 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.CenterArrangement.arrangeNN : $r5 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : r6 = interfaceinvoke r4.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r5)
org.jfree.chart.block.CenterArrangement.arrangeNN : r6 = interfaceinvoke r4.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r5) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3)
org.jfree.chart.block.BorderArrangement.arrange : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r3) >>>>>>>> org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1
org.jfree.chart.block.AbstractBlock.toContentConstraint : return r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = null
org.jfree.chart.block.BorderArrangement.arrange : r5 = null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r6 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.block.BorderArrangement.arrange : r7 = virtualinvoke r4.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8
org.jfree.chart.block.BorderArrangement.arrange : if r6 != $r8 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.block.BorderArrangement.arrange : $r9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r9
org.jfree.chart.block.BorderArrangement.arrange : if r7 != $r9 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2)
org.jfree.chart.block.BorderArrangement.arrange : r5 = virtualinvoke r0.<org.jfree.chart.block.BorderArrangement: org.jfree.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : r3 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5]
org.jfree.chart.block.BorderArrangement.arrangeNN : r4 = newarray (double)[5] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r7 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r7 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r7 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r9 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r9 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r9 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r13 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r13 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r13 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r14 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r15 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r15 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r16 = interfaceinvoke $r14.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r15)
org.jfree.chart.block.BorderArrangement.arrangeNN : r16 = interfaceinvoke $r14.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r15) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2)
org.jfree.chart.title.LegendGraphic.arrange : r3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r4 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>()
org.jfree.chart.title.LegendGraphic.arrange : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r6 = null
org.jfree.chart.title.LegendGraphic.arrange : r6 = null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $r7 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : if r4 != $r7
org.jfree.chart.title.LegendGraphic.arrange : if r4 != $r7 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>
org.jfree.chart.title.LegendGraphic.arrange : $r8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : if r5 != $r8
org.jfree.chart.title.LegendGraphic.arrange : if r5 != $r8 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1)
org.jfree.chart.title.LegendGraphic.arrange : r6 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.Size2D arrangeNN(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.title.LegendGraphic.arrangeNN : $r2 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = $r2
org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = $r2 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r4 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : if $r4 == null
org.jfree.chart.title.LegendGraphic.arrangeNN : if $r4 == null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r5 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $r6 = interfaceinvoke $r5.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($r6)
org.jfree.chart.title.LegendGraphic.arrangeNN : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($r6) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r7 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : if $r7 == null
org.jfree.chart.title.LegendGraphic.arrangeNN : if $r7 == null >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>
org.jfree.chart.title.LegendGraphic.arrangeNN : $r8 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r9 = interfaceinvoke $r8.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $r9 = interfaceinvoke $r8.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r9)
org.jfree.chart.title.LegendGraphic.arrangeNN : r3 = virtualinvoke r3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($r9) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrangeNN : $r10 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrangeNN : $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r10.<org.jfree.ui.Size2D: void <init>(double,double)>($d0, $d1)
org.jfree.chart.title.LegendGraphic.arrangeNN : specialinvoke $r10.<org.jfree.ui.Size2D: void <init>(double,double)>($d0, $d1) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrangeNN : return $r10
org.jfree.chart.title.LegendGraphic.arrangeNN : return $r10 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : goto [?= $r27 = new org.jfree.ui.Size2D]
org.jfree.chart.title.LegendGraphic.arrange : goto [?= $r27 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D
org.jfree.chart.title.LegendGraphic.arrange : $r27 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.title.LegendGraphic.arrange : $d2 = virtualinvoke r6.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($d2)
org.jfree.chart.title.LegendGraphic.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.getInsets : $r1 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.getInsets : return $r1
org.jfree.chart.block.BlockBorder.getInsets : return $r1 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendWidth(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalWidth : return d4 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.title.LegendGraphic.arrange : $d4 = virtualinvoke r6.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : $d5 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($d4)
org.jfree.chart.title.LegendGraphic.arrange : $d5 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($d4) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d1 = d0 >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d2 = virtualinvoke $r1.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d1) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d3 = virtualinvoke $r3.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d2) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : $r4 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3)
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : d4 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double extendHeight(double)>(d3) >>>>>>>> org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4
org.jfree.chart.block.AbstractBlock.calculateTotalHeight : return d4 >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d3, $d5)
org.jfree.chart.title.LegendGraphic.arrange : specialinvoke $r27.<org.jfree.ui.Size2D: void <init>(double,double)>($d3, $d5) >>>>>>>> org.jfree.chart.title.LegendGraphic.arrange : return $r27
org.jfree.chart.title.LegendGraphic.arrange : return $r27 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d6 = r16.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3[2] = $d6
org.jfree.chart.block.BorderArrangement.arrangeNN : r3[2] = $d6 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d7 = r16.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d7
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d7 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r17 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r17 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d10 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d11 = r4[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d11 = r4[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d10, $d11)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d12 = staticinvoke <java.lang.Math: double max(double,double)>($d10, $d11) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d12
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[2] = $d12 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d13 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[3] = $d13
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[3] = $d13 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r21 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r21 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r21 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r22 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r23 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r23 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r24 = interfaceinvoke $r22.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r23)
org.jfree.chart.block.BorderArrangement.arrangeNN : r24 = interfaceinvoke $r22.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r23) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.arrange : $r4 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font> >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r4)
org.jfree.chart.block.LabelBlock.arrange : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r4) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.arrange : $r5 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : r3 = virtualinvoke $r5.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1)
org.jfree.chart.block.LabelBlock.arrange : r3 = virtualinvoke $r5.<org.jfree.text.TextBlock: org.jfree.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D
org.jfree.chart.block.LabelBlock.arrange : $r6 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d0 = virtualinvoke r3.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.LabelBlock.arrange : $d0 = virtualinvoke r3.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($d0)
org.jfree.chart.block.LabelBlock.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($d0) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.LabelBlock.arrange : $d2 = virtualinvoke r3.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($d2)
org.jfree.chart.block.LabelBlock.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($d2) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : specialinvoke $r6.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3)
org.jfree.chart.block.LabelBlock.arrange : specialinvoke $r6.<org.jfree.ui.Size2D: void <init>(double,double)>($d1, $d3) >>>>>>>> org.jfree.chart.block.LabelBlock.arrange : return $r6
org.jfree.chart.block.LabelBlock.arrange : return $r6 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d14 = r24.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r3[4] = $d14
org.jfree.chart.block.BorderArrangement.arrangeNN : r3[4] = $d14 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.BorderArrangement.arrangeNN : $d15 = r24.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : r4[4] = $d15
org.jfree.chart.block.BorderArrangement.arrangeNN : r4[4] = $d15 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d16 = r3[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d17 = r3[1]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d17 = r3[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d18 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d18 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d19 = r3[4]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d19 = r3[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d20 = $d18 + $d19
org.jfree.chart.block.BorderArrangement.arrangeNN : $d20 = $d18 + $d19 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d21 = r3[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d21 = r3[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d22 = $d20 + $d21
org.jfree.chart.block.BorderArrangement.arrangeNN : $d22 = $d20 + $d21 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d22)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d23 = staticinvoke <java.lang.Math: double max(double,double)>($d17, $d22) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d24 = staticinvoke <java.lang.Math: double max(double,double)>($d16, $d23)
org.jfree.chart.block.BorderArrangement.arrangeNN : d24 = staticinvoke <java.lang.Math: double max(double,double)>($d16, $d23) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d25 = r4[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d26 = r4[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d26 = r4[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d27 = r4[4]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d27 = r4[4] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d28 = staticinvoke <java.lang.Math: double max(double,double)>($d26, $d27)
org.jfree.chart.block.BorderArrangement.arrangeNN : $d28 = staticinvoke <java.lang.Math: double max(double,double)>($d26, $d27) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>($d25, $d28)
org.jfree.chart.block.BorderArrangement.arrangeNN : d0 = staticinvoke <java.lang.Math: double max(double,double)>($d25, $d28) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d29 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d30 = r4[1]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d30 = r4[1] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d31 = $d29 + $d30
org.jfree.chart.block.BorderArrangement.arrangeNN : $d31 = $d29 + $d30 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : d1 = $d31 + d0
org.jfree.chart.block.BorderArrangement.arrangeNN : d1 = $d31 + d0 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r25 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r25 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r25 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r28 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r28 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r28 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r31 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r31 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r31 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r32 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r33 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeNN : $r33 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d36 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d36 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d37 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d37 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d36, $d37, d0)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $d36, $d37, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r32.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r33)
org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r32.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r33) >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds")
org.jfree.chart.block.AbstractBlock.setBounds : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "bounds") >>>>>>>> org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1
org.jfree.chart.block.AbstractBlock.setBounds : r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> = r1 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r34 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r34 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r34 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r37 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : if $r37 == null
org.jfree.chart.block.BorderArrangement.arrangeNN : if $r37 == null >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>
org.jfree.chart.block.BorderArrangement.arrangeNN : $r38 = r0.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r39 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BorderArrangement.arrangeNN : $r39 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d42 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d42 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d43 = r4[0]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d43 = r4[0] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d44 = r3[2]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d44 = r3[2] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d45 = d24 - $d44
org.jfree.chart.block.BorderArrangement.arrangeNN : $d45 = d24 - $d44 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d46 = r3[3]
org.jfree.chart.block.BorderArrangement.arrangeNN : $d46 = r3[3] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $d47 = $d45 - $d46
org.jfree.chart.block.BorderArrangement.arrangeNN : $d47 = $d45 - $d46 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r39.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d42, $d43, $d47, d0)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r39.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d42, $d43, $d47, d0) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r38.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r39)
org.jfree.chart.block.BorderArrangement.arrangeNN : interfaceinvoke $r38.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r39) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrangeNN : $r40 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r40.<org.jfree.ui.Size2D: void <init>(double,double)>(d24, d1)
org.jfree.chart.block.BorderArrangement.arrangeNN : specialinvoke $r40.<org.jfree.ui.Size2D: void <init>(double,double)>(d24, d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrangeNN : return $r40
org.jfree.chart.block.BorderArrangement.arrangeNN : return $r40 >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : goto [?= $r26 = new org.jfree.ui.Size2D]
org.jfree.chart.block.BorderArrangement.arrange : goto [?= $r26 = new org.jfree.ui.Size2D] >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D
org.jfree.chart.block.BorderArrangement.arrange : $r26 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.BorderArrangement.arrange : $d1 = virtualinvoke r5.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1)
org.jfree.chart.block.BorderArrangement.arrange : $d2 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($d1) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>()
org.jfree.chart.block.BorderArrangement.arrange : $d3 = virtualinvoke r5.<org.jfree.ui.Size2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3)
org.jfree.chart.block.BorderArrangement.arrange : $d4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($d3) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4)
org.jfree.chart.block.BorderArrangement.arrange : specialinvoke $r26.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d4) >>>>>>>> org.jfree.chart.block.BorderArrangement.arrange : return $r26
org.jfree.chart.block.BorderArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.block.BlockContainer.arrange : return $r4
org.jfree.chart.block.BlockContainer.arrange : return $r4 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.CenterArrangement.arrangeNN : $r8 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d0 = r6.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d0 = r6.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d1 = r6.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d1 = r6.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1)
org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r8.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $d0, $d1) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : interfaceinvoke r4.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r8)
org.jfree.chart.block.CenterArrangement.arrangeNN : interfaceinvoke r4.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r8) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D
org.jfree.chart.block.CenterArrangement.arrangeNN : $r9 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d2 = r6.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d2 = r6.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : $d3 = r6.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.CenterArrangement.arrangeNN : $d3 = r6.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r9.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d3)
org.jfree.chart.block.CenterArrangement.arrangeNN : specialinvoke $r9.<org.jfree.ui.Size2D: void <init>(double,double)>($d2, $d3) >>>>>>>> org.jfree.chart.block.CenterArrangement.arrangeNN : return $r9
org.jfree.chart.block.CenterArrangement.arrangeNN : return $r9 >>>>>>>> org.jfree.chart.block.CenterArrangement.arrange : return $r8
org.jfree.chart.block.CenterArrangement.arrange : return $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : r4[i1] = $r8
org.jfree.chart.block.FlowArrangement.arrangeNN : r4[i1] = $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r9 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d3 = virtualinvoke $r9.<org.jfree.ui.Size2D: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $d3 = virtualinvoke $r9.<org.jfree.ui.Size2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d3
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r10 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d4 = $r10.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d4 = $r10.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, d2)
org.jfree.chart.block.FlowArrangement.arrangeNN : d2 = staticinvoke <java.lang.Math: double max(double,double)>($d4, d2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeNN : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r12 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r12 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d5 = $r12.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d5 = $r12.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r13 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r13 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d6 = $r13.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d6 = $r13.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, 0.0, $d5, $d6)
org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, 0.0, $d5, $d6) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11)
org.jfree.chart.block.FlowArrangement.arrangeNN : interfaceinvoke r5.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1]
org.jfree.chart.block.FlowArrangement.arrangeNN : $r14 = r4[i1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d7 = $r14.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d7 = $r14.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d8 = d0 + $d7
org.jfree.chart.block.FlowArrangement.arrangeNN : $d8 = d0 + $d7 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d9 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d9 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = $d8 + $d9
org.jfree.chart.block.FlowArrangement.arrangeNN : d0 = $d8 + $d9 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = i1 + 1
org.jfree.chart.block.FlowArrangement.arrangeNN : i1 = i1 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i3 = interfaceinvoke r3.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i3 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1
org.jfree.chart.block.FlowArrangement.arrangeNN : if i0 <= 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d10 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeNN : $d10 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i4 = i0 - 1
org.jfree.chart.block.FlowArrangement.arrangeNN : $i4 = i0 - 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d11 = (double) $i4
org.jfree.chart.block.FlowArrangement.arrangeNN : $d11 = (double) $i4 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $d12 = $d10 * $d11
org.jfree.chart.block.FlowArrangement.arrangeNN : $d12 = $d10 * $d11 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d12
org.jfree.chart.block.FlowArrangement.arrangeNN : d1 = d1 + $d12 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r15 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r16 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r16 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if $r15 == $r16
org.jfree.chart.block.FlowArrangement.arrangeNN : if $r15 == $r16 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $i6 = interfaceinvoke r3.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeNN : $i6 = interfaceinvoke r3.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if i5 >= $i6
org.jfree.chart.block.FlowArrangement.arrangeNN : if i5 >= $i6 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r17 = r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.VerticalAlignment verticalAlignment> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.block.FlowArrangement.arrangeNN : $r18 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : if $r17 != $r18
org.jfree.chart.block.FlowArrangement.arrangeNN : if $r17 != $r18 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= i5 = i5 + 1]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= i5 = i5 + 1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = i5 + 1
org.jfree.chart.block.FlowArrangement.arrangeNN : i5 = i5 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i6 = interfaceinvoke r3.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeNN : goto [?= $i6 = interfaceinvoke r3.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeNN : $r21 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r21.<org.jfree.ui.Size2D: void <init>(double,double)>(d1, d2)
org.jfree.chart.block.FlowArrangement.arrangeNN : specialinvoke $r21.<org.jfree.ui.Size2D: void <init>(double,double)>(d1, d2) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeNN : return $r21
org.jfree.chart.block.FlowArrangement.arrangeNN : return $r21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $d0 = r4.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeRR : $d0 = r4.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0)
org.jfree.chart.block.FlowArrangement.arrangeRR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0) >>>>>>>> org.jfree.data.Range.contains : $z0 = 0
org.jfree.data.Range.contains : $z0 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : if $z0 == 0
org.jfree.chart.block.FlowArrangement.arrangeRR : if $z0 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $r7 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $r7 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $d1 = virtualinvoke $r7.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.block.FlowArrangement.arrangeRR : $d1 = virtualinvoke $r7.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d1)
org.jfree.chart.block.FlowArrangement.arrangeRR : r5 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($d1) >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r1 = new org.jfree.chart.block.RectangleConstraint
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r1 = new org.jfree.chart.block.RectangleConstraint >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r3 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r3 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range widthRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r2 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r2 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED> >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : $d1 = r0.<org.jfree.chart.block.RectangleConstraint: double height>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $d1 = r0.<org.jfree.chart.block.RectangleConstraint: double height> >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r4 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r4 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range heightRange> >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r5 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType>
org.jfree.chart.block.RectangleConstraint.toFixedWidth : $r5 = r0.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType heightConstraintType> >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : specialinvoke $r1.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r3, $r2, $d1, $r4, $r5)
org.jfree.chart.block.RectangleConstraint.toFixedWidth : specialinvoke $r1.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(d0, $r3, $r2, $d1, $r4, $r5) >>>>>>>> org.jfree.chart.block.RectangleConstraint.toFixedWidth : return $r1
org.jfree.chart.block.RectangleConstraint.toFixedWidth : return $r1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : $r8 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r5)
org.jfree.chart.block.FlowArrangement.arrangeRR : $r8 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r5) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3)
org.jfree.chart.block.FlowArrangement.arrangeFR : r4 = virtualinvoke r0.<org.jfree.chart.block.FlowArrangement: org.jfree.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r1, r2, r3) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : r4 = virtualinvoke r1.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d0 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : d0 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d2 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : d2 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $r9 = new java.util.ArrayList
org.jfree.chart.block.FlowArrangement.arrangeFN : $r9 = new java.util.ArrayList >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r9.<java.util.ArrayList: void <init>()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r9.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : r5 = $r9
org.jfree.chart.block.FlowArrangement.arrangeFN : r5 = $r9 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : i0 = 0
org.jfree.chart.block.FlowArrangement.arrangeFN : i0 = 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $i1 = interfaceinvoke r4.<java.util.List: int size()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $i1 = interfaceinvoke r4.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : if i0 >= $i1
org.jfree.chart.block.FlowArrangement.arrangeFN : if i0 >= $i1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.block.FlowArrangement.arrangeFN : $r10 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : r6 = (org.jfree.chart.block.Block) $r10
org.jfree.chart.block.FlowArrangement.arrangeFN : r6 = (org.jfree.chart.block.Block) $r10 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $r7 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>
org.jfree.chart.block.FlowArrangement.arrangeFN : $r7 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : r8 = interfaceinvoke r6.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r7)
org.jfree.chart.block.FlowArrangement.arrangeFN : r8 = interfaceinvoke r6.<org.jfree.chart.block.Block: org.jfree.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(r2, $r7) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d4 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d4 = r8.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d5 = d1 + $d4
org.jfree.chart.block.FlowArrangement.arrangeFN : $d5 = d1 + $d4 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $b2 = $d5 cmpg d0
org.jfree.chart.block.FlowArrangement.arrangeFN : $b2 = $d5 cmpg d0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : if $b2 > 0
org.jfree.chart.block.FlowArrangement.arrangeFN : if $b2 > 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6)
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r6) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeFN : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d6 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d6 = r8.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d7 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d7 = r8.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d2, $d6, $d7)
org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d1, d2, $d6, $d7) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11)
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r11) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d8 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d8 = r8.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d9 = d1 + $d8
org.jfree.chart.block.FlowArrangement.arrangeFN : $d9 = d1 + $d8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d10 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d10 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = $d9 + $d10
org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = $d9 + $d10 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d11 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d11 = r8.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d11)
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d11) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : goto [?= i0 = i0 + 1]
org.jfree.chart.block.FlowArrangement.arrangeFN : goto [?= i0 = i0 + 1] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : i0 = i0 + 1
org.jfree.chart.block.FlowArrangement.arrangeFN : i0 = i0 + 1 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : goto [?= $i1 = interfaceinvoke r4.<java.util.List: int size()>()]
org.jfree.chart.block.FlowArrangement.arrangeFN : goto [?= $i1 = interfaceinvoke r4.<java.util.List: int size()>()] >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : if $z1 == 0
org.jfree.chart.block.FlowArrangement.arrangeFN : if $z1 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r5.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d19 = 0.0
org.jfree.chart.block.FlowArrangement.arrangeFN : d19 = 0.0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d20 = d2 + d3
org.jfree.chart.block.FlowArrangement.arrangeFN : $d20 = d2 + d3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d21 = r0.<org.jfree.chart.block.FlowArrangement: double verticalGap>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d21 = r0.<org.jfree.chart.block.FlowArrangement: double verticalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d2 = $d20 + $d21
org.jfree.chart.block.FlowArrangement.arrangeFN : d2 = $d20 + $d21 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : d3 = r8.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $r13 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.FlowArrangement.arrangeFN : $r13 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d22 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d22 = r8.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d23 = staticinvoke <java.lang.Math: double min(double,double)>($d22, d0)
org.jfree.chart.block.FlowArrangement.arrangeFN : $d23 = staticinvoke <java.lang.Math: double min(double,double)>($d22, d0) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d24 = r8.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d24 = r8.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r13.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d19, d2, $d23, $d24)
org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r13.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d19, d2, $d23, $d24) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r13)
org.jfree.chart.block.FlowArrangement.arrangeFN : interfaceinvoke r6.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($r13) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d25 = r8.<org.jfree.ui.Size2D: double width>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d25 = r8.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d26 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap>
org.jfree.chart.block.FlowArrangement.arrangeFN : $d26 = r0.<org.jfree.chart.block.FlowArrangement: double horizontalGap> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = $d25 + $d26
org.jfree.chart.block.FlowArrangement.arrangeFN : d1 = $d25 + $d26 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $r14 = new org.jfree.ui.Size2D
org.jfree.chart.block.FlowArrangement.arrangeFN : $r14 = new org.jfree.ui.Size2D >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d27 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>()
org.jfree.chart.block.FlowArrangement.arrangeFN : $d27 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: double getWidth()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : $d28 = d2 + d3
org.jfree.chart.block.FlowArrangement.arrangeFN : $d28 = d2 + d3 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r14.<org.jfree.ui.Size2D: void <init>(double,double)>($d27, $d28)
org.jfree.chart.block.FlowArrangement.arrangeFN : specialinvoke $r14.<org.jfree.ui.Size2D: void <init>(double,double)>($d27, $d28) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFN : return $r14
org.jfree.chart.block.FlowArrangement.arrangeFN : return $r14 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>()
org.jfree.chart.block.FlowArrangement.arrangeFR : $r6 = virtualinvoke r3.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>() >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFR : $d0 = r4.<org.jfree.ui.Size2D: double height>
org.jfree.chart.block.FlowArrangement.arrangeFR : $d0 = r4.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0)
org.jfree.chart.block.FlowArrangement.arrangeFR : $z0 = virtualinvoke $r6.<org.jfree.data.Range: boolean contains(double)>($d0) >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFR : if $z0 == 0
org.jfree.chart.block.FlowArrangement.arrangeFR : if $z0 == 0 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeFR : return r4
org.jfree.chart.block.FlowArrangement.arrangeFR : return r4 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrangeRR : return $r8
org.jfree.chart.block.FlowArrangement.arrangeRR : return $r8 >>>>>>>> org.jfree.chart.block.FlowArrangement.arrange : return $r26
org.jfree.chart.block.FlowArrangement.arrange : return $r26 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height>
org.jfree.chart.title.LegendTitle.arrange : $d0 = r7.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($d0)
org.jfree.chart.title.LegendTitle.arrange : $d1 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($d0) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double height> = $d1
org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double height> = $d1 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width>
org.jfree.chart.title.LegendTitle.arrange : $d2 = r7.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($d2)
org.jfree.chart.title.LegendTitle.arrange : $d3 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($d2) >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double width> = $d3
org.jfree.chart.title.LegendTitle.arrange : r4.<org.jfree.ui.Size2D: double width> = $d3 >>>>>>>> org.jfree.chart.title.LegendTitle.arrange : return r4
org.jfree.chart.title.LegendTitle.arrange : return r4 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>()
org.jfree.chart.JFreeChart.drawTitle : $r22 = virtualinvoke r1.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment getHorizontalAlignment()>() >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment>
org.jfree.chart.title.Title.getHorizontalAlignment : $r1 = r0.<org.jfree.chart.title.Title: org.jfree.ui.HorizontalAlignment horizontalAlignment> >>>>>>>> org.jfree.chart.title.Title.getHorizontalAlignment : return $r1
org.jfree.chart.title.Title.getHorizontalAlignment : return $r1 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.drawTitle : $r23 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23)
org.jfree.chart.JFreeChart.drawTitle : r24 = specialinvoke r0.<org.jfree.chart.JFreeChart: java.awt.geom.Rectangle2D createAlignedRectangle2D(org.jfree.ui.Size2D,java.awt.geom.Rectangle2D,org.jfree.ui.HorizontalAlignment,org.jfree.ui.VerticalAlignment)>(r21, r3, $r22, $r23) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = #NaN >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r5 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment LEFT> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r5 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r6 = <org.jfree.ui.HorizontalAlignment: org.jfree.ui.HorizontalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r3 != $r6 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d3 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d4 = $d3 / 2.0 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d0 = $d2 - $d4 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>]
org.jfree.chart.JFreeChart.createAlignedRectangle2D : goto [?= $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>] >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r8 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment TOP> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r8 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r9 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment CENTER> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r9 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r10 = <org.jfree.ui.VerticalAlignment: org.jfree.ui.VerticalAlignment BOTTOM> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10
org.jfree.chart.JFreeChart.createAlignedRectangle2D : if r4 != $r10 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d11 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : d1 = $d10 - $d11 >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $r11 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d12 = r1.<org.jfree.ui.Size2D: double width> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.createAlignedRectangle2D : $d13 = r1.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13)
org.jfree.chart.JFreeChart.createAlignedRectangle2D : specialinvoke $r11.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d12, $d13) >>>>>>>> org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11
org.jfree.chart.JFreeChart.createAlignedRectangle2D : return $r11 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7)
org.jfree.chart.JFreeChart.drawTitle : r19 = virtualinvoke r1.<org.jfree.chart.title.Title: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r2, r24, r7) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11
org.jfree.chart.title.LegendTitle.draw : r4 = (java.awt.geom.Rectangle2D) $r11 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.title.LegendTitle.draw : $r12 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12
org.jfree.chart.title.LegendTitle.draw : r5 = (java.awt.geom.Rectangle2D) $r12 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r6 = null
org.jfree.chart.title.LegendTitle.draw : r6 = null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendTitle.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z0 == 0
org.jfree.chart.title.LegendTitle.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendTitle.draw : $r13 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendTitle.draw : $z1 = interfaceinvoke $r13.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities>
org.jfree.chart.block.BlockParams.getGenerateEntities : $z0 = r0.<org.jfree.chart.block.BlockParams: boolean generateEntities> >>>>>>>> org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0
org.jfree.chart.block.BlockParams.getGenerateEntities : return $z0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z1 == 0
org.jfree.chart.title.LegendTitle.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4)
org.jfree.chart.title.LegendTitle.draw : r16 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r4) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin>
org.jfree.chart.block.AbstractBlock.trimMargin : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets margin> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimMargin : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimMargin : return r1
org.jfree.chart.block.AbstractBlock.trimMargin : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r17 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $r17 == null
org.jfree.chart.title.LegendTitle.draw : if $r17 == null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>
org.jfree.chart.title.LegendTitle.draw : $r18 = r0.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r18) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke r1.<java.awt.Graphics2D: void fill(java.awt.Shape)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>()
org.jfree.chart.title.LegendTitle.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.getFrame : $r1 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.getFrame : return $r1
org.jfree.chart.block.AbstractBlock.getFrame : return $r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.title.LegendTitle.draw : interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.LineBorder.draw : d0 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.LineBorder.draw : d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b0 = d0 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b0 <= 0
org.jfree.chart.block.LineBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0
org.jfree.chart.block.LineBorder.draw : $b1 = d1 cmpg 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b1 > 0
org.jfree.chart.block.LineBorder.draw : if $b1 > 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r4 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d2 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r5 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1)
org.jfree.chart.block.LineBorder.draw : d3 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>(d1) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r6 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d4 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.LineBorder.draw : $r7 = r0.<org.jfree.chart.block.LineBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0)
org.jfree.chart.block.LineBorder.draw : d5 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>(d0) >>>>>>>> org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.LineBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.LineBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0
org.jfree.chart.block.LineBorder.draw : $d12 = d4 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12
org.jfree.chart.block.LineBorder.draw : d8 = d6 + $d12 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0
org.jfree.chart.block.LineBorder.draw : $d13 = d6 + d0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0
org.jfree.chart.block.LineBorder.draw : $d14 = d5 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14
org.jfree.chart.block.LineBorder.draw : d9 = $d13 - $d14 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1
org.jfree.chart.block.LineBorder.draw : $d15 = d7 + d1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0
org.jfree.chart.block.LineBorder.draw : $d16 = d3 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16
org.jfree.chart.block.LineBorder.draw : d10 = $d15 - $d16 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0
org.jfree.chart.block.LineBorder.draw : $d17 = d2 / 2.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17
org.jfree.chart.block.LineBorder.draw : d11 = d7 + $d17 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>()
org.jfree.chart.block.LineBorder.draw : $r8 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Paint getPaint()>() >>>>>>>> org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint>
org.jfree.chart.block.LineBorder.getPaint : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.LineBorder.getPaint : return $r1
org.jfree.chart.block.LineBorder.getPaint : return $r1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>()
org.jfree.chart.block.LineBorder.draw : $r9 = virtualinvoke r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke getStroke()>() >>>>>>>> org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke>
org.jfree.chart.block.LineBorder.getStroke : $r1 = r0.<org.jfree.chart.block.LineBorder: java.awt.Stroke stroke> >>>>>>>> org.jfree.chart.block.LineBorder.getStroke : return $r1
org.jfree.chart.block.LineBorder.getStroke : return $r1 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r9) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double
org.jfree.chart.block.LineBorder.draw : $r10 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>()
org.jfree.chart.block.LineBorder.draw : specialinvoke $r10.<java.awt.geom.Line2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.LineBorder.draw : r3 = $r10
org.jfree.chart.block.LineBorder.draw : r3 = $r10 >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b2 <= 0
org.jfree.chart.block.LineBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d11, d9, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r3) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b3 <= 0
org.jfree.chart.block.LineBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d9, d10) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b4 = d4 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b4 <= 0
org.jfree.chart.block.LineBorder.draw : if $b4 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d8, d10, d8, d11) >>>>>>>> org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0
org.jfree.chart.block.LineBorder.draw : $b5 = d5 cmpl 0.0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : if $b5 <= 0
org.jfree.chart.block.LineBorder.draw : if $b5 <= 0 >>>>>>>> org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11)
org.jfree.chart.block.LineBorder.draw : virtualinvoke r3.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(d9, d10, d9, d11) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.title.LegendTitle.draw : $r19 = interfaceinvoke r7.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : virtualinvoke $r19.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if r8 != null
org.jfree.chart.title.LegendTitle.draw : if r8 != null >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>
org.jfree.chart.title.LegendTitle.draw : r8 = r0.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.title.LegendTitle.draw : r20 = virtualinvoke r0.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding>
org.jfree.chart.block.AbstractBlock.trimPadding : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.ui.RectangleInsets padding> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimPadding : virtualinvoke $r2.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimPadding : return r1
org.jfree.chart.block.AbstractBlock.trimPadding : return r1 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3)
org.jfree.chart.title.LegendTitle.draw : r9 = virtualinvoke r8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r20, r3) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r4 = null
org.jfree.chart.block.BlockContainer.draw : r4 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.BlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z0 == 0
org.jfree.chart.block.BlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.block.BlockContainer.draw : r5 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.block.BlockContainer.draw : $z1 = interfaceinvoke r5.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z1 == 0
org.jfree.chart.block.BlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>()
org.jfree.chart.block.BlockContainer.draw : $r15 = virtualinvoke r2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15
org.jfree.chart.block.BlockContainer.draw : r6 = (java.awt.geom.Rectangle2D) $r15 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6)
org.jfree.chart.block.BlockContainer.draw : r16 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r6) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.drawBorder : $r3 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.block.AbstractBlock.drawBorder : interfaceinvoke $r3.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r4 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d8 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8)
org.jfree.chart.block.BlockBorder.draw : d0 = virtualinvoke $r4.<org.jfree.ui.RectangleInsets: double calculateTopInset(double)>($d8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r5 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : $d9 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9)
org.jfree.chart.block.BlockBorder.draw : d1 = virtualinvoke $r5.<org.jfree.ui.RectangleInsets: double calculateBottomInset(double)>($d9) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r6 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d10 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10)
org.jfree.chart.block.BlockBorder.draw : d2 = virtualinvoke $r6.<org.jfree.ui.RectangleInsets: double calculateLeftInset(double)>($d10) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.block.BlockBorder.draw : $r7 = r0.<org.jfree.chart.block.BlockBorder: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : $d11 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11)
org.jfree.chart.block.BlockBorder.draw : d3 = virtualinvoke $r7.<org.jfree.ui.RectangleInsets: double calculateRightInset(double)>($d11) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockBorder.draw : d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockBorder.draw : d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockBorder.draw : d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockBorder.draw : d7 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>
org.jfree.chart.block.BlockBorder.draw : $r8 = r0.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8)
org.jfree.chart.block.BlockBorder.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r8) >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockBorder.draw : $r9 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.block.BlockBorder.draw : specialinvoke $r9.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.block.BlockBorder.draw : r3 = $r9
org.jfree.chart.block.BlockBorder.draw : r3 = $r9 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b0 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b1 = d1 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b1 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b2 = d2 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b2 <= 0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0
org.jfree.chart.block.BlockBorder.draw : $b3 = d3 cmpl 0.0 >>>>>>>> org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0
org.jfree.chart.block.BlockBorder.draw : if $b3 <= 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16)
org.jfree.chart.block.BlockContainer.draw : r17 = virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r16) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame>
org.jfree.chart.block.AbstractBlock.trimBorder : $r2 = r0.<org.jfree.chart.block.AbstractBlock: org.jfree.chart.block.BlockFrame frame> >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.block.AbstractBlock.trimBorder : $r3 = interfaceinvoke $r2.<org.jfree.chart.block.BlockFrame: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1)
org.jfree.chart.block.AbstractBlock.trimBorder : virtualinvoke $r3.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r1) >>>>>>>> org.jfree.chart.block.AbstractBlock.trimBorder : return r1
org.jfree.chart.block.AbstractBlock.trimBorder : return r1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17)
org.jfree.chart.block.BlockContainer.draw : virtualinvoke r0.<org.jfree.chart.block.BlockContainer: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r17) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks>
org.jfree.chart.block.BlockContainer.draw : $r19 = r0.<org.jfree.chart.block.BlockContainer: java.util.List blocks> >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.block.BlockContainer.draw : r7 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.block.BlockContainer.draw : $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if $z2 == 0
org.jfree.chart.block.BlockContainer.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.block.BlockContainer.draw : $r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20
org.jfree.chart.block.BlockContainer.draw : r8 = (org.jfree.chart.block.Block) $r20 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>()
org.jfree.chart.block.BlockContainer.draw : r9 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.awt.geom.Rectangle2D getBounds()>() >>>>>>>> org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds>
org.jfree.chart.block.AbstractBlock.getBounds : $r1 = r0.<org.jfree.chart.block.AbstractBlock: java.awt.geom.Rectangle2D bounds> >>>>>>>> org.jfree.chart.block.AbstractBlock.getBounds : return $r1
org.jfree.chart.block.AbstractBlock.getBounds : return $r1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.block.BlockContainer.draw : $r21 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d0 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.block.BlockContainer.draw : $d1 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1
org.jfree.chart.block.BlockContainer.draw : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d3 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.block.BlockContainer.draw : $d4 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4
org.jfree.chart.block.BlockContainer.draw : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.block.BlockContainer.draw : $d6 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.block.BlockContainer.draw : $d7 = virtualinvoke r9.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7)
org.jfree.chart.block.BlockContainer.draw : specialinvoke $r21.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, $d5, $d6, $d7) >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r10 = $r21
org.jfree.chart.block.BlockContainer.draw : r10 = $r21 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3)
org.jfree.chart.block.BlockContainer.draw : r11 = interfaceinvoke r8.<org.jfree.chart.block.Block: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r10, r3) >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null)
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke r0.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(r1, r2, null) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.title.LegendGraphic.draw : r7 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r7) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.title.LegendGraphic.draw : r8 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r7) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8)
org.jfree.chart.title.LegendGraphic.draw : r9 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r8) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>
org.jfree.chart.title.LegendGraphic.draw : $z0 = r0.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z0 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r10 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation>
org.jfree.chart.title.LegendGraphic.draw : $r10 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeLocation> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r3 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r9, $r10)
org.jfree.chart.title.LegendGraphic.draw : r3 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r9, $r10) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r11 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape getLine()>()
org.jfree.chart.title.LegendGraphic.draw : $r11 = virtualinvoke r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape getLine()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.getLine : $r1 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>
org.jfree.chart.title.LegendGraphic.getLine : $r1 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> >>>>>>>> org.jfree.chart.title.LegendGraphic.getLine : return $r1
org.jfree.chart.title.LegendGraphic.getLine : return $r1 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r12 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor>
org.jfree.chart.title.LegendGraphic.draw : $r12 = r0.<org.jfree.chart.title.LegendGraphic: org.jfree.ui.RectangleAnchor shapeAnchor> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.title.LegendGraphic.draw : $d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.title.LegendGraphic.draw : $d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : r4 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.ui.RectangleAnchor,double,double)>($r11, $r12, $d0, $d1)
org.jfree.chart.title.LegendGraphic.draw : r4 = staticinvoke <org.jfree.util.ShapeUtilities: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.ui.RectangleAnchor,double,double)>($r11, $r12, $d0, $d1) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r13 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>
org.jfree.chart.title.LegendGraphic.draw : $r13 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r13) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $r14 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>
org.jfree.chart.title.LegendGraphic.draw : $r14 = r0.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r14) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.title.LegendGraphic.draw : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>
org.jfree.chart.title.LegendGraphic.draw : $z1 = r0.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : if $z1 == 0
org.jfree.chart.title.LegendGraphic.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendGraphic.draw : return null
org.jfree.chart.title.LegendGraphic.draw : return null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : if r4 == null
org.jfree.chart.block.BlockContainer.draw : if r4 == null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.block.BlockContainer.draw : goto [?= $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.block.LabelBlock.draw : r10 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r0.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r10) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10)
org.jfree.chart.block.LabelBlock.draw : r11 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(r10) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11)
org.jfree.chart.block.LabelBlock.draw : r12 = virtualinvoke r0.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(r11) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r4 = null
org.jfree.chart.block.LabelBlock.draw : r4 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r5 = null
org.jfree.chart.block.LabelBlock.draw : r5 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r6 = null
org.jfree.chart.block.LabelBlock.draw : r6 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.block.LabelBlock.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.block.LabelBlock.draw : if $z0 == 0
org.jfree.chart.block.LabelBlock.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>
org.jfree.chart.block.LabelBlock.draw : $r15 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font>
org.jfree.chart.block.LabelBlock.draw : $r16 = r0.<org.jfree.chart.block.LabelBlock: java.awt.Font font> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r16) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor>
org.jfree.chart.block.LabelBlock.draw : $r17 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.ui.RectangleAnchor textAnchor> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r7 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r12, $r17)
org.jfree.chart.block.LabelBlock.draw : r7 = staticinvoke <org.jfree.ui.RectangleAnchor: java.awt.geom.Point2D coordinates(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleAnchor)>(r12, $r17) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label>
org.jfree.chart.block.LabelBlock.draw : $r18 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlock label> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>()
org.jfree.chart.block.LabelBlock.draw : $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>() >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $f0 = (float) $d0
org.jfree.chart.block.LabelBlock.draw : $f0 = (float) $d0 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>()
org.jfree.chart.block.LabelBlock.draw : $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>() >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $f1 = (float) $d1
org.jfree.chart.block.LabelBlock.draw : $f1 = (float) $d1 >>>>>>>> org.jfree.chart.block.LabelBlock.draw : $r19 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlockAnchor contentAlignmentPoint>
org.jfree.chart.block.LabelBlock.draw : $r19 = r0.<org.jfree.chart.block.LabelBlock: org.jfree.text.TextBlockAnchor contentAlignmentPoint> >>>>>>>> org.jfree.chart.block.LabelBlock.draw : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, $f0, $f1, $r19)
org.jfree.chart.block.LabelBlock.draw : virtualinvoke $r18.<org.jfree.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.text.TextBlockAnchor)>(r1, $f0, $f1, $r19) >>>>>>>> org.jfree.chart.block.LabelBlock.draw : r8 = null
org.jfree.chart.block.LabelBlock.draw : r8 = null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : if r4 == null
org.jfree.chart.block.LabelBlock.draw : if r4 == null >>>>>>>> org.jfree.chart.block.LabelBlock.draw : return r8
org.jfree.chart.block.LabelBlock.draw : return r8 >>>>>>>> org.jfree.chart.block.BlockContainer.draw : r22 = null
org.jfree.chart.block.BlockContainer.draw : r22 = null >>>>>>>> org.jfree.chart.block.BlockContainer.draw : return r22
org.jfree.chart.block.BlockContainer.draw : return r22 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null
org.jfree.chart.title.LegendItemBlockContainer.draw : n0 = null >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendItemBlockContainer.draw : $r8 = new org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke $r8.<org.jfree.chart.block.BlockResult: void <init>()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : specialinvoke $r8.<org.jfree.chart.block.BlockResult: void <init>()>() >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : r4 = $r8
org.jfree.chart.title.LegendItemBlockContainer.draw : r4 = $r8 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams
org.jfree.chart.title.LegendItemBlockContainer.draw : $z0 = r3 instanceof org.jfree.chart.block.EntityBlockParams >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : if $z0 == 0
org.jfree.chart.title.LegendItemBlockContainer.draw : if $z0 == 0 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3
org.jfree.chart.title.LegendItemBlockContainer.draw : r9 = (org.jfree.chart.block.EntityBlockParams) r3 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>()
org.jfree.chart.title.LegendItemBlockContainer.draw : $z1 = interfaceinvoke r9.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>() >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : if $z1 == 0
org.jfree.chart.title.LegendItemBlockContainer.draw : if $z1 == 0 >>>>>>>> org.jfree.chart.title.LegendItemBlockContainer.draw : return r4
org.jfree.chart.title.LegendItemBlockContainer.draw : return r4 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult
org.jfree.chart.title.LegendTitle.draw : $z2 = r9 instanceof org.jfree.chart.block.BlockResult >>>>>>>> org.jfree.chart.title.LegendTitle.draw : if $z2 == 0
org.jfree.chart.title.LegendTitle.draw : if $z2 == 0 >>>>>>>> org.jfree.chart.title.LegendTitle.draw : return r9
org.jfree.chart.title.LegendTitle.draw : return r9 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.JFreeChart.drawTitle : $d13 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.JFreeChart.drawTitle : $d14 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.JFreeChart.drawTitle : $d15 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.JFreeChart.drawTitle : $d16 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height>
org.jfree.chart.JFreeChart.drawTitle : $d17 = r21.<org.jfree.ui.Size2D: double height> >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17
org.jfree.chart.JFreeChart.drawTitle : $d18 = $d16 - $d17 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18)
org.jfree.chart.JFreeChart.drawTitle : virtualinvoke r3.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d13, $d14, $d15, $d18) >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null]
org.jfree.chart.JFreeChart.drawTitle : goto [?= r36 = null] >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : r36 = null
org.jfree.chart.JFreeChart.drawTitle : r36 = null >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult
org.jfree.chart.JFreeChart.drawTitle : $z1 = r19 instanceof org.jfree.chart.block.EntityBlockResult >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0
org.jfree.chart.JFreeChart.drawTitle : if $z1 == 0 >>>>>>>> org.jfree.chart.JFreeChart.drawTitle : return r36
org.jfree.chart.JFreeChart.drawTitle : return r36 >>>>>>>> org.jfree.chart.JFreeChart.draw : if r11 == null
org.jfree.chart.JFreeChart.draw : if r11 == null >>>>>>>> org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.JFreeChart.draw : goto [?= $z4 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.JFreeChart.draw : r45 = r28
org.jfree.chart.JFreeChart.draw : r45 = r28 >>>>>>>> org.jfree.chart.JFreeChart.draw : r46 = null
org.jfree.chart.JFreeChart.draw : r46 = null >>>>>>>> org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot>
org.jfree.chart.JFreeChart.draw : $r47 = r0.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot plot> >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46)
org.jfree.chart.JFreeChart.draw : virtualinvoke $r47.<org.jfree.chart.plot.Plot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, r45, r3, null, r46) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : if r5 == null
org.jfree.chart.plot.CombinedDomainXYPlot.draw : if r5 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.ui.RectangleInsets getInsets()>()
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.ui.RectangleInsets getInsets()>() >>>>>>>> org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets>
org.jfree.chart.plot.Plot.getInsets : $r1 = r0.<org.jfree.chart.plot.Plot: org.jfree.ui.RectangleInsets insets> >>>>>>>> org.jfree.chart.plot.Plot.getInsets : return $r1
org.jfree.chart.plot.Plot.getInsets : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r6.<org.jfree.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(r2) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)>(null)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)>(null) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : $r4 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : $r4 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : if $z0 == 0
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : if $z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : r3 = (org.jfree.chart.plot.XYPlot) $r5
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : r3 = (org.jfree.chart.plot.XYPlot) $r5 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)>(r1, 0)
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : virtualinvoke r3.<org.jfree.chart.plot.XYPlot: void setFixedRangeAxisSpace(org.jfree.chart.axis.AxisSpace,boolean)>(r1, 0) >>>>>>>> org.jfree.chart.plot.XYPlot.setFixedRangeAxisSpace : r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> = r1
org.jfree.chart.plot.XYPlot.setFixedRangeAxisSpace : r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> = r1 >>>>>>>> org.jfree.chart.plot.XYPlot.setFixedRangeAxisSpace : if z0 == 0
org.jfree.chart.plot.XYPlot.setFixedRangeAxisSpace : if z0 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots : goto [?= $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.AxisSpace calculateAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(r1, r2) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r3 = new org.jfree.chart.axis.AxisSpace >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : specialinvoke $r3.<org.jfree.chart.axis.AxisSpace: void <init>()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : specialinvoke $r3.<org.jfree.chart.axis.AxisSpace: void <init>()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r4 = $r3
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r4 = $r3 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r5 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r5 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getOrientation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.getOrientation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.getOrientation : return $r1
org.jfree.chart.plot.XYPlot.getOrientation : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.AxisSpace getFixedDomainAxisSpace()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.AxisSpace getFixedDomainAxisSpace()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getFixedDomainAxisSpace : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace>
org.jfree.chart.plot.XYPlot.getFixedDomainAxisSpace : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedDomainAxisSpace> >>>>>>>> org.jfree.chart.plot.XYPlot.getFixedDomainAxisSpace : return $r1
org.jfree.chart.plot.XYPlot.getFixedDomainAxisSpace : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r6 == null
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r6 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r7 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r13 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r13 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations>
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r1 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList domainAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(0)
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r2 = virtualinvoke $r1.<org.jfree.util.ObjectList: java.lang.Object get(int)>(0) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r3 = (org.jfree.chart.axis.AxisLocation) $r2
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : $r3 = (org.jfree.chart.axis.AxisLocation) $r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisLocation : return $r3
org.jfree.chart.plot.XYPlot.getDomainAxisLocation : return $r3 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r8 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r13, r5)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r8 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r13, r5) >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location") >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = null >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r3
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r3 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r6
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r6 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r9
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r9 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r12
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r0 != $r12 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r13
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r13 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r14
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r1 != $r14 >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r2 != null
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : if r2 != null >>>>>>>> org.jfree.chart.plot.Plot.resolveDomainAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveDomainAxisLocation : return r2 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r7 == null
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r7 == null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r4 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r8, r4)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r4 = virtualinvoke r7.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r8, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if r5 != null
org.jfree.chart.axis.ValueAxis.reserveSpace : if r5 != null >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean visible>
org.jfree.chart.axis.Axis.isVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean visible> >>>>>>>> org.jfree.chart.axis.Axis.isVisible : return $z0
org.jfree.chart.axis.Axis.isVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z0 != 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double getFixedDimension()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double getFixedDimension()>() >>>>>>>> org.jfree.chart.axis.Axis.getFixedDimension : $d0 = r0.<org.jfree.chart.axis.Axis: double fixedDimension>
org.jfree.chart.axis.Axis.getFixedDimension : $d0 = r0.<org.jfree.chart.axis.Axis: double fixedDimension> >>>>>>>> org.jfree.chart.axis.Axis.getFixedDimension : return $d0
org.jfree.chart.axis.Axis.getFixedDimension : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $b0 = d0 cmpl 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : $b0 = d0 cmpl 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $b0 <= 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible>
org.jfree.chart.axis.Axis.isTickLabelsVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickLabelsVisible> >>>>>>>> org.jfree.chart.axis.Axis.isTickLabelsVisible : return $z0
org.jfree.chart.axis.Axis.isTickLabelsVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z1 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $r8 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont>
org.jfree.chart.axis.Axis.getTickLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font tickLabelFont> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelFont : return $r1
org.jfree.chart.axis.Axis.getTickLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8)
org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r8) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.reserveSpace : $r9 = new org.jfree.chart.axis.AxisState >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : specialinvoke $r9.<org.jfree.chart.axis.AxisState: void <init>()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : specialinvoke $r9.<org.jfree.chart.axis.AxisState: void <init>()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : r6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, $r9, r3, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : r6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, $r9, r3, r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : $r5 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicks : $r5 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.NumberAxis.refreshTicks : specialinvoke $r5.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = $r5
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : if $z0 == 0
org.jfree.chart.axis.NumberAxis.refreshTicks : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r5 = $r4
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r5 = $r4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection>
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean autoTickUnitSelection> >>>>>>>> org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0
org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z0 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z0 == 0
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectHorizontalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit>
org.jfree.chart.axis.NumberAxis.getTickUnit : $r1 = r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> >>>>>>>> org.jfree.chart.axis.NumberAxis.getTickUnit : return $r1
org.jfree.chart.axis.NumberAxis.getTickUnit : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, $r7)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, $r7) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets>
org.jfree.chart.axis.Axis.getTickLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets tickLabelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1
org.jfree.chart.axis.Axis.getTickLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d5 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d5 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getLeft()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d6 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getRight()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d6 = virtualinvoke r3.<org.jfree.ui.RectangleInsets: double getRight()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d0 = $d5 + $d6
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d0 = $d5 + $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels>
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean verticalTickLabels> >>>>>>>> org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0
org.jfree.chart.axis.ValueAxis.isVerticalTickLabels : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : if $z0 == 0
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r10)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r11 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r10) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r12 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d1 = virtualinvoke r12.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d1 = virtualinvoke r12.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d2 = virtualinvoke r12.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d2 = virtualinvoke r12.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride>
org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : $r1 = r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat numberFormatOverride> >>>>>>>> org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : return $r1
org.jfree.chart.axis.NumberAxis.getNumberFormatOverride : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : if r6 == null
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : if r6 == null >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r7 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d1)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r7 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d1) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter>
org.jfree.chart.axis.NumberTickUnit.valueToString : $r1 = r0.<org.jfree.chart.axis.NumberTickUnit: java.text.NumberFormat formatter> >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0)
org.jfree.chart.axis.NumberTickUnit.valueToString : $r2 = virtualinvoke $r1.<java.text.NumberFormat: java.lang.String format(double)>(d0) >>>>>>>> org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2
org.jfree.chart.axis.NumberTickUnit.valueToString : return $r2 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d2)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : r8 = virtualinvoke r2.<org.jfree.chart.axis.TickUnit: java.lang.String valueToString(double)>(d2) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r7)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $i0 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r7) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d3 = (double) $i0
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d3 = (double) $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r8)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $i1 = virtualinvoke r11.<java.awt.FontMetrics: int stringWidth(java.lang.String)>(r8) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d4 = (double) $i1
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d4 = (double) $i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d9 = staticinvoke <java.lang.Math: double max(double,double)>(d3, d4)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : $d9 = staticinvoke <java.lang.Math: double max(double,double)>(d3, d4) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d8 = d0 + $d9
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : d8 = d0 + $d9 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : return d8
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth : return d8 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits>
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : $r1 = r0.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.TickUnitSource standardTickUnits> >>>>>>>> org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1
org.jfree.chart.axis.ValueAxis.getStandardTickUnits : return $r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r8)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r8) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i0 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($r2, r1) >>>>>>>> org.jfree.chart.axis.TickUnit.compareTo : return 0
org.jfree.chart.axis.TickUnit.compareTo : return 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : if i0 < 0 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r5 = (org.jfree.chart.axis.TickUnit) $r4 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3) >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(0.0, r1, r2)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(0.0, r1, r2) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d1 = virtualinvoke r3.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d2 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d2 = virtualinvoke r3.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = 0.0
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = 0.0
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z0 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z0 == 0
org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>()]
org.jfree.chart.axis.NumberAxis.valueToJava2D : goto [?= $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>()] >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isInverted()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted>
org.jfree.chart.axis.ValueAxis.isInverted : $z0 = r0.<org.jfree.chart.axis.ValueAxis: boolean inverted> >>>>>>>> org.jfree.chart.axis.ValueAxis.isInverted : return $z0
org.jfree.chart.axis.ValueAxis.isInverted : return $z0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z2 == 0
org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d11 = d0 - d1
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d11 = d0 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d12 = d2 - d1
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d12 = d2 - d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d13 = $d11 / $d12
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d13 = $d11 / $d12 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d14 = d4 - d3
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d14 = d4 - d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d15 = $d13 * $d14
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d15 = $d13 * $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $d16 = d3 + $d15
org.jfree.chart.axis.NumberAxis.valueToJava2D : $d16 = d3 + $d15 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : return $d16
org.jfree.chart.axis.NumberAxis.valueToJava2D : return $d16 >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r1, r2)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(d0, r1, r2) >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d3 = d2 - d1
org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d3 = d2 - d1 >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3)
org.jfree.chart.axis.ValueAxis.lengthToJava2D : $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3) >>>>>>>> org.jfree.chart.axis.ValueAxis.lengthToJava2D : return $d4
org.jfree.chart.axis.ValueAxis.lengthToJava2D : return $d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d5 = d0 / d1
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d5 = d0 / d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d2 = $d5 * $d6
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d2 = $d5 * $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r9 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $r9 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r1 = new org.jfree.chart.axis.NumberTickUnit >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r2 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : specialinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(d0, $r2) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r3 = virtualinvoke r0.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r1) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i1 = i0 + 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : i2 = neg $i1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r6 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r7 = r0.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>()
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i3 = interfaceinvoke $r7.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i4 = $i3 - 1 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5)
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r8 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i5) >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r9 = (org.jfree.chart.axis.TickUnit) $r8
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : $r9 = (org.jfree.chart.axis.TickUnit) $r8 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r9
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r9 >>>>>>>> org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3
org.jfree.chart.axis.TickUnits.getCeilingTickUnit : return $r3 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r9
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r9 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, r6)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelWidth(java.awt.Graphics2D,org.jfree.chart.axis.TickUnit)>(r1, r6) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $b0 = d8 cmpl d3
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : $b0 = d8 cmpl d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0) >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit")
org.jfree.chart.axis.NumberAxis.setTickUnit : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "unit") >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1
org.jfree.chart.axis.NumberAxis.setTickUnit : r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit tickUnit> = r1 >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : if z1 == 0
org.jfree.chart.axis.NumberAxis.setTickUnit : if z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.setTickUnit : if z0 == 0
org.jfree.chart.axis.NumberAxis.setTickUnit : if z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : goto [?= return]
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : goto [?= return] >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : d0 = virtualinvoke $r2.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : d0 = virtualinvoke $r2.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d1 = virtualinvoke r1.<org.jfree.data.Range: double getUpperBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d2 = $d1 / d0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d2 = $d1 / d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2)
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d3 = staticinvoke <java.lang.Math: double floor(double)>($d2) >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d4 = virtualinvoke r1.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d5 = $d4 / d0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d5 = $d4 / d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5)
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5) >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d7 = $d3 - $d6
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d7 = $d3 - $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d8 = $d7 + 1.0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $d8 = $d7 + 1.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $i0 = (int) $d8
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : $i0 = (int) $d8 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : return $i0
org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d0 = virtualinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d0 = virtualinvoke $r1.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d2 = virtualinvoke $r2.<org.jfree.data.Range: double getLowerBound()>()
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d2 = virtualinvoke $r2.<org.jfree.data.Range: double getLowerBound()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d3 = $d2 / d0
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d3 = $d2 / d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d1 = staticinvoke <java.lang.Math: double ceil(double)>($d3)
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : d1 = staticinvoke <java.lang.Math: double ceil(double)>($d3) >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d4 = d1 * d0
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : $d4 = d1 * d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : return $d4
org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue : return $d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i0 > 500
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i0 > 500 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount>
org.jfree.chart.axis.ValueAxis.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.ValueAxis: int minorTickCount> >>>>>>>> org.jfree.chart.axis.ValueAxis.getMinorTickCount : return $i0
org.jfree.chart.axis.ValueAxis.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i1 > 0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i1 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount>
org.jfree.chart.axis.TickUnit.getMinorTickCount : $i0 = r0.<org.jfree.chart.axis.TickUnit: int minorTickCount> >>>>>>>> org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0
org.jfree.chart.axis.TickUnit.getMinorTickCount : return $i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i2 = 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i2 >= i1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i2 >= i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d6 = (double) i2
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d6 = (double) i2 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d7 = d0 * $d6
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d7 = d0 * $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d8 = (double) i1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d8 = (double) i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d9 = $d7 / $d8
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d9 = $d7 / $d8 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d2 = d1 - $d9
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d2 = d1 - $d9 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r13 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z1 = virtualinvoke $r13.<org.jfree.data.Range: boolean contains(double)>(d2)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z1 = virtualinvoke $r13.<org.jfree.data.Range: boolean contains(double)>(d2) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z1 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i2 = i2 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i2 = i2 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : goto [?= (branch)]
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i4 = 0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i4 = 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i4 >= i0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i4 >= i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d10 = (double) i4
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d10 = (double) i4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d11 = $d10 * d0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d11 = $d10 * d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d12 = d1 + $d11
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d12 = d1 + $d11 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.text.NumberFormat getNumberFormatOverride()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if r10 == null
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if r10 == null >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r16 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r16 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r11 = virtualinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: java.lang.String valueToString(double)>(d12)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r11 = virtualinvoke $r16.<org.jfree.chart.axis.NumberTickUnit: java.lang.String valueToString(double)>(d12) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : n0 = null
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : n0 = null >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : n1 = null
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : n1 = null >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d3 = 0.0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z3 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r20 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if r3 != $r20
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if r3 != $r20 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r17 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r17 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r18 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r18 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r21 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r21 = new org.jfree.chart.axis.NumberTick >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r22 = new java.lang.Double
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r22 = new java.lang.Double >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r22.<java.lang.Double: void <init>(double)>(d12)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r22.<java.lang.Double: void <init>(double)>(d12) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r21.<org.jfree.chart.axis.NumberTick: void <init>(java.lang.Number,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r22, r11, r17, r18, d3)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r21.<org.jfree.chart.axis.NumberTick: void <init>(java.lang.Number,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r22, r11, r17, r18, d3) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r12 = $r21
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : r12 = $r21 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r12)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r12) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $i5 = i4 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $i5 = i4 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d13 = (double) $i5
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d13 = (double) $i5 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d14 = $d13 * d0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d14 = $d13 * d0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d4 = d1 + $d14
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d4 = d1 + $d14 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i3 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i3 = 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i3 >= i1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if i3 >= i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d15 = d4 - d12
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d15 = d4 - d12 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d16 = (double) i3
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d16 = (double) i3 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d17 = $d15 * $d16
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d17 = $d15 * $d16 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d18 = (double) i1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d18 = (double) i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d19 = $d17 / $d18
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $d19 = $d17 / $d18 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d5 = d12 + $d19
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : d5 = d12 + $d19 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r23 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r23 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z5 = virtualinvoke $r23.<org.jfree.data.Range: boolean contains(double)>(d5)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $z5 = virtualinvoke $r23.<org.jfree.data.Range: boolean contains(double)>(d5) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z5 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r24 = new org.jfree.chart.axis.NumberTick
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r24 = new org.jfree.chart.axis.NumberTick >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r26 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r26 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor TOP_CENTER> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r27 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : $r27 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r24.<org.jfree.chart.axis.NumberTick: void <init>(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r25, d5, "", $r26, $r27, 0.0)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : specialinvoke $r24.<org.jfree.chart.axis.NumberTick: void <init>(org.jfree.chart.axis.TickType,double,java.lang.String,org.jfree.ui.TextAnchor,org.jfree.ui.TextAnchor,double)>($r25, d5, "", $r26, $r27, 0.0) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24)
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r24) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i3 = i3 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i3 = i3 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i4 = i4 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : i4 = i4 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : return r5
org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal : return r5 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : goto [?= return r6]
org.jfree.chart.axis.NumberAxis.refreshTicks : goto [?= return r6] >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : return r6
org.jfree.chart.axis.NumberAxis.refreshTicks : return r6 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z2 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z2 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z3)
org.jfree.chart.axis.ValueAxis.reserveSpace : d1 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z3) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : d0 = 0.0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : if z0 == 0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $r12 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r13 = virtualinvoke r5.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", $r12)
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : r13 = virtualinvoke r5.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("ABCxyz", $r12) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $f0 = virtualinvoke r13.<java.awt.font.LineMetrics: float getHeight()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $f0 = virtualinvoke r13.<java.awt.font.LineMetrics: float getHeight()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d10 = (double) $f0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d10 = (double) $f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d11 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d12 = $d10 + $d11
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d12 = $d10 + $d11 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d13 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : $d13 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getBottom()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : d0 = $d12 + $d13
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : d0 = $d12 + $d13 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : return d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight : return d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : goto [?= r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)]
org.jfree.chart.axis.ValueAxis.reserveSpace : goto [?= r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)] >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.geom.Rectangle2D getLabelEnclosure(java.awt.Graphics2D,org.jfree.ui.RectangleEdge)>(r1, r4) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.Axis.getLabelEnclosure : $r3 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = $r3
org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = $r3 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r5 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.lang.String getLabel()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r5 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label>
org.jfree.chart.axis.Axis.getLabel : $r1 = r0.<org.jfree.chart.axis.Axis: java.lang.String label> >>>>>>>> org.jfree.chart.axis.Axis.getLabel : return $r1
org.jfree.chart.axis.Axis.getLabel : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if r5 == null
org.jfree.chart.axis.Axis.getLabelEnclosure : if r5 == null >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("")
org.jfree.chart.axis.Axis.getLabelEnclosure : $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if $z0 != 0
org.jfree.chart.axis.Axis.getLabelEnclosure : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r11 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : $r11 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont>
org.jfree.chart.axis.Axis.getLabelFont : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Font labelFont> >>>>>>>> org.jfree.chart.axis.Axis.getLabelFont : return $r1
org.jfree.chart.axis.Axis.getLabelFont : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r11)
org.jfree.chart.axis.Axis.getLabelEnclosure : r6 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r11) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r7 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r5, r1, r6)
org.jfree.chart.axis.Axis.getLabelEnclosure : r7 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r5, r1, r6) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets>
org.jfree.chart.axis.Axis.getLabelInsets : $r1 = r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets labelInsets> >>>>>>>> org.jfree.chart.axis.Axis.getLabelInsets : return $r1
org.jfree.chart.axis.Axis.getLabelInsets : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r12 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)>(r7)
org.jfree.chart.axis.Axis.getLabelEnclosure : r12 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)>(r7) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelAngle : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle>
org.jfree.chart.axis.Axis.getLabelAngle : $d0 = r0.<org.jfree.chart.axis.Axis: double labelAngle> >>>>>>>> org.jfree.chart.axis.Axis.getLabelAngle : return $d0
org.jfree.chart.axis.Axis.getLabelAngle : return $d0 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.Axis.getLabelEnclosure : $r13 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 == $r13
org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 == $r13 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.Axis.getLabelEnclosure : $r14 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT> >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 != $r14
org.jfree.chart.axis.Axis.getLabelEnclosure : if r2 != $r14 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d1 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : d1 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d2 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : d2 = virtualinvoke r12.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>(d0, d1, d2)
org.jfree.chart.axis.Axis.getLabelEnclosure : r9 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>(d0, d1, d2) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r10 = virtualinvoke r9.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r12)
org.jfree.chart.axis.Axis.getLabelEnclosure : r10 = virtualinvoke r9.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r12) >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = interfaceinvoke r10.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.getLabelEnclosure : r4 = interfaceinvoke r10.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : return r4
org.jfree.chart.axis.Axis.getLabelEnclosure : return r4 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d3 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d3 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d4 = 0.0
org.jfree.chart.axis.ValueAxis.reserveSpace : d4 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z6 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z6 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z6 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z6 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d5 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d5 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $d6 = d5 + d1
org.jfree.chart.axis.ValueAxis.reserveSpace : $d6 = d5 + d1 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d6, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d6, r4) >>>>>>>> org.jfree.chart.axis.AxisSpace.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "edge")
org.jfree.chart.axis.AxisSpace.add : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "edge") >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.AxisSpace.add : $r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : if r1 != $r2
org.jfree.chart.axis.AxisSpace.add : if r1 != $r2 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.AxisSpace.add : $r4 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : if r1 != $r4
org.jfree.chart.axis.AxisSpace.add : if r1 != $r4 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.add : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d4 = $d3 + d0
org.jfree.chart.axis.AxisSpace.add : $d4 = $d3 + d0 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = $d4
org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = $d4 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : goto [?= return]
org.jfree.chart.axis.AxisSpace.add : goto [?= return] >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : goto [?= return r5]
org.jfree.chart.axis.ValueAxis.reserveSpace : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : return r5
org.jfree.chart.axis.ValueAxis.reserveSpace : return r5 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r14 = virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r14 = virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null) >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : if r2 != null
org.jfree.chart.axis.AxisSpace.shrink : if r2 != null >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $r3 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.axis.AxisSpace.shrink : $r3 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>()
org.jfree.chart.axis.AxisSpace.shrink : specialinvoke $r3.<java.awt.geom.Rectangle2D$Double: void <init>()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : r2 = $r3
org.jfree.chart.axis.AxisSpace.shrink : r2 = $r3 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.AxisSpace.shrink : $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d1 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.shrink : $d1 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d2 = $d0 + $d1
org.jfree.chart.axis.AxisSpace.shrink : $d2 = $d0 + $d1 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.axis.AxisSpace.shrink : $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d4 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.shrink : $d4 = r0.<org.jfree.chart.axis.AxisSpace: double top> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d5 = $d3 + $d4
org.jfree.chart.axis.AxisSpace.shrink : $d5 = $d3 + $d4 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.AxisSpace.shrink : $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d7 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.shrink : $d7 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d8 = $d6 - $d7
org.jfree.chart.axis.AxisSpace.shrink : $d8 = $d6 - $d7 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right>
org.jfree.chart.axis.AxisSpace.shrink : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d10 = $d8 - $d9
org.jfree.chart.axis.AxisSpace.shrink : $d10 = $d8 - $d9 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.AxisSpace.shrink : $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d12 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.shrink : $d12 = r0.<org.jfree.chart.axis.AxisSpace: double top> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d13 = $d11 - $d12
org.jfree.chart.axis.AxisSpace.shrink : $d13 = $d11 - $d12 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d14 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.shrink : $d14 = r0.<org.jfree.chart.axis.AxisSpace: double bottom> >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : $d15 = $d13 - $d14
org.jfree.chart.axis.AxisSpace.shrink : $d15 = $d13 - $d14 >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d5, $d10, $d15)
org.jfree.chart.axis.AxisSpace.shrink : virtualinvoke r2.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($d2, $d5, $d10, $d15) >>>>>>>> org.jfree.chart.axis.AxisSpace.shrink : return r2
org.jfree.chart.axis.AxisSpace.shrink : return r2 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r15 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r15 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i3 = interfaceinvoke $r15.<java.util.List: int size()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i3 = interfaceinvoke $r15.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i0 = 0
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i0 = 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i1 = 0
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i1 = 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if i1 >= i3
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if i1 >= i3 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r16 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r16 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i1)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i1) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r9 = (org.jfree.chart.plot.XYPlot) $r17
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r9 = (org.jfree.chart.plot.XYPlot) $r17 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $i4 = virtualinvoke r9.<org.jfree.chart.plot.XYPlot: int getWeight()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $i4 = virtualinvoke r9.<org.jfree.chart.plot.XYPlot: int getWeight()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getWeight : $i0 = r0.<org.jfree.chart.plot.XYPlot: int weight>
org.jfree.chart.plot.XYPlot.getWeight : $i0 = r0.<org.jfree.chart.plot.XYPlot: int weight> >>>>>>>> org.jfree.chart.plot.XYPlot.getWeight : return $i0
org.jfree.chart.plot.XYPlot.getWeight : return $i0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i0 = i0 + $i4
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i0 = i0 + $i4 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i1 = i1 + 1
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i1 = i1 + 1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : goto [?= (branch)]
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r18 = newarray (java.awt.geom.Rectangle2D)[i3]
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r18 = newarray (java.awt.geom.Rectangle2D)[i3] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas> = $r18
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas> = $r18 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d7 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d7 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d0 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getY()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d0 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getY()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d1 = 0.0
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d1 = 0.0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r19 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r19 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r19
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r19 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r20 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r20 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r20
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r20 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d12 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d12 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d13 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d13 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $i6 = i3 - 1
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $i6 = i3 - 1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d14 = (double) $i6
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d14 = (double) $i6 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d15 = $d13 * $d14
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d15 = $d13 * $d14 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d1 = $d12 - $d15
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d1 = $d12 - $d15 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i2 = 0
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i2 = 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if i2 >= i3
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if i2 >= i3 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r21 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r21 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i2)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i2) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r10 = (org.jfree.chart.plot.XYPlot) $r22
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r10 = (org.jfree.chart.plot.XYPlot) $r22 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r23 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r23 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r23
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r23 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r26 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r26 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r26
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : if r5 != $r26 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $i8 = virtualinvoke r10.<org.jfree.chart.plot.XYPlot: int getWeight()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $i8 = virtualinvoke r10.<org.jfree.chart.plot.XYPlot: int getWeight()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d22 = (double) $i8
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d22 = (double) $i8 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d23 = d1 * $d22
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d23 = d1 * $d22 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d24 = (double) i0
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d24 = (double) i0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d25 = $d23 / $d24
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d25 = $d23 / $d24 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r27 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r27 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r28 = new java.awt.geom.Rectangle2D$Double
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r28 = new java.awt.geom.Rectangle2D$Double >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d26 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d26 = virtualinvoke r14.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : specialinvoke $r28.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d7, d0, $d26, d25)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : specialinvoke $r28.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d7, d0, $d26, d25) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r27[i2] = $r28
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r27[i2] = $r28 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d27 = d0 + d25
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d27 = d0 + d25 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d28 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $d28 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: double gap> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d0 = $d27 + $d28
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : d0 = $d27 + $d28 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r29 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r29 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r30 = $r29[i2]
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : $r30 = $r29[i2] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r31 = virtualinvoke r10.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, $r30, null)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : r31 = virtualinvoke r10.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace calculateRangeAxisSpace(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.axis.AxisSpace)>(r1, $r30, null) >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if r3 != null
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if r3 != null >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r7 = new org.jfree.chart.axis.AxisSpace
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r7 = new org.jfree.chart.axis.AxisSpace >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : specialinvoke $r7.<org.jfree.chart.axis.AxisSpace: void <init>()>()
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : specialinvoke $r7.<org.jfree.chart.axis.AxisSpace: void <init>()>() >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r3 = $r7
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r3 = $r7 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace>
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r8 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisSpace fixedRangeAxisSpace> >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if $r8 == null
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if $r8 == null >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : i0 = 0
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : i0 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $i1 = virtualinvoke $r20.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $i1 = virtualinvoke $r20.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if i0 >= $i1
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r21 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r21 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes> >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : $r22 = virtualinvoke $r21.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r5 = (org.jfree.chart.axis.Axis) $r22
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r5 = (org.jfree.chart.axis.Axis) $r22 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if r5 == null
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : if r5 == null >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i0)
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r6 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.ui.RectangleEdge getRangeAxisEdge(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation(int)>(i0)
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : r1 = null
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : r1 = null >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>()
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $i1 = virtualinvoke $r2.<org.jfree.util.ObjectList: int size()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : if i0 >= $i1
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations>
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r3 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxisLocations> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : $r4 = virtualinvoke $r3.<org.jfree.util.ObjectList: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : r1 = (org.jfree.chart.axis.AxisLocation) $r4
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : r1 = (org.jfree.chart.axis.AxisLocation) $r4 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : if r1 != null
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : if r1 != null >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisLocation : return r1
org.jfree.chart.plot.XYPlot.getRangeAxisLocation : return r1 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisEdge : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisEdge : $r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>(r1, $r2)
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : $r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>(r1, $r2) >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r0, "location") >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation")
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r1, "orientation") >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = null >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r3 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r3
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r3 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r6 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation TOP_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r6
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r6 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r9 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_RIGHT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r9
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r9 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r12 = <org.jfree.chart.axis.AxisLocation: org.jfree.chart.axis.AxisLocation BOTTOM_OR_LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r12
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r0 != $r12 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r13 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r13
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r13 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r14 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r14
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r14 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : r2 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r2 != null >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : return r2 >>>>>>>> org.jfree.chart.plot.XYPlot.getRangeAxisEdge : return $r3
org.jfree.chart.plot.XYPlot.getRangeAxisEdge : return $r3 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r3 = virtualinvoke r5.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r6, r3)
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : r3 = virtualinvoke r5.<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisSpace reserveSpace(java.awt.Graphics2D,org.jfree.chart.plot.Plot,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisSpace)>(r1, r0, r2, r6, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : if $z1 == 0
org.jfree.chart.axis.NumberAxis.refreshTicks : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4)
org.jfree.chart.axis.NumberAxis.refreshTicks : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r3, r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r4 = new java.util.ArrayList
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r4 = new java.util.ArrayList >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r4.<java.util.ArrayList: void <init>()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : specialinvoke $r4.<java.util.ArrayList: void <init>()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r5 = $r4
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r5 = $r4 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: void clear()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : interfaceinvoke r5.<java.util.List: void clear()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r6 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r6) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isAutoTickUnitSelection()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z0 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z1 == 0
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3)
org.jfree.chart.axis.NumberAxis.selectAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void selectVerticalAutoTickUnit(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d1 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d1 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d2 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d2 = virtualinvoke r2.<org.jfree.ui.RectangleInsets: double getBottom()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d0 = $d1 + $d2
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d0 = $d1 + $d2 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : r4 = virtualinvoke r1.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $r5 = virtualinvoke r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("123", r4)
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $r5 = virtualinvoke r3.<java.awt.Font: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.font.FontRenderContext)>("123", r4) >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $f0 = virtualinvoke $r5.<java.awt.font.LineMetrics: float getHeight()>()
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $f0 = virtualinvoke $r5.<java.awt.font.LineMetrics: float getHeight()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d3 = (double) $f0
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : $d3 = (double) $f0 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d4 = d0 + $d3
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : d4 = d0 + $d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : return d4
org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight : return d4 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r4 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource getStandardTickUnits()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r7)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r5 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($r7) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d4 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d4, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2)
org.jfree.chart.axis.NumberAxis.valueToJava2D : $z1 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r2) >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z1 == 0
org.jfree.chart.axis.NumberAxis.valueToJava2D : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>()
org.jfree.chart.axis.NumberAxis.valueToJava2D : d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d5 = d0 / d1
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d5 = d0 / d1 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d6 = virtualinvoke r5.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d2 = $d5 * $d6
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d2 = $d5 * $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r8 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $r8 = interfaceinvoke r4.<org.jfree.chart.axis.TickUnitSource: org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)>(d2) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r8
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : r6 = (org.jfree.chart.axis.NumberTickUnit) $r8 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $d7 = virtualinvoke r6.<org.jfree.chart.axis.NumberTickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d3 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d7, r2, r3) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : d8 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double estimateMaximumTickLabelHeight(java.awt.Graphics2D)>(r1) >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $b0 = d8 cmpl d3
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : $b0 = d8 cmpl d3 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : if $b0 <= 0
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : if $b0 <= 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0)
org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)>(r6, 0, 0) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : r7 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.NumberTickUnit getTickUnit()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d0 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: double getSize()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int calculateVisibleTickCount()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: double calculateLowestVisibleTickValue()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i0 > 500
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i0 > 500 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i1 > 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i1 > 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i1 = virtualinvoke r7.<org.jfree.chart.axis.TickUnit: int getMinorTickCount()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i2 >= i1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i2 >= i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d6 = (double) i2
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d6 = (double) i2 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d7 = d0 * $d6
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d7 = d0 * $d6 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d8 = (double) i1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d8 = (double) i1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d9 = $d7 / $d8
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $d9 = $d7 / $d8 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d2 = d1 - $d9
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : d2 = d1 - $d9 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>()
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $r15 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.data.Range getRange()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z1 = virtualinvoke $r15.<org.jfree.data.Range: boolean contains(double)>(d2)
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : $z1 = virtualinvoke $r15.<org.jfree.data.Range: boolean contains(double)>(d2) >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z1 == 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = i2 + 1
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i2 = i2 + 1 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : goto [?= (branch)]
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : goto [?= (branch)] >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = 0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : i4 = 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i4 >= i0
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : if i4 >= i0 >>>>>>>> org.jfree.chart.axis.NumberAxis.refreshTicksVertical : return r5
org.jfree.chart.axis.NumberAxis.refreshTicksVertical : return r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z4 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z4 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z4 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z4 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z5)
org.jfree.chart.axis.ValueAxis.reserveSpace : d2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelWidth(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r6, r1, r3, $z5) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = 0.0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : d0 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if z0 != 0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if z0 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r6 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r5)
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r6 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>(r5) >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : r7 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if $z1 == 0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= return d0]
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : goto [?= return d0] >>>>>>>> org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : return d0
org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth : return d0 >>>>>>>> org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = d0 - 1.5707963267948966
org.jfree.chart.axis.Axis.getLabelEnclosure : d0 = d0 - 1.5707963267948966 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $z7 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : $z7 = staticinvoke <org.jfree.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.ui.RectangleEdge)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : if $z7 == 0
org.jfree.chart.axis.ValueAxis.reserveSpace : if $z7 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : d7 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.axis.ValueAxis.reserveSpace : d7 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : $d8 = d7 + d2
org.jfree.chart.axis.ValueAxis.reserveSpace : $d8 = d7 + d2 >>>>>>>> org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d8, r4)
org.jfree.chart.axis.ValueAxis.reserveSpace : virtualinvoke r5.<org.jfree.chart.axis.AxisSpace: void add(double,org.jfree.ui.RectangleEdge)>($d8, r4) >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.AxisSpace.add : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : if r1 != $r6
org.jfree.chart.axis.AxisSpace.add : if r1 != $r6 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d5 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.add : $d5 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.add : $d6 = $d5 + d0
org.jfree.chart.axis.AxisSpace.add : $d6 = $d5 + d0 >>>>>>>> org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double left> = $d6
org.jfree.chart.axis.AxisSpace.add : r0.<org.jfree.chart.axis.AxisSpace: double left> = $d6 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : i0 = i0 + 1
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : goto [?= $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>]
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : goto [?= $r20 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.util.ObjectList rangeAxes>] >>>>>>>> org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : return r3
org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace : return r3 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: void ensureAtLeast(org.jfree.chart.axis.AxisSpace)>(r31)
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : virtualinvoke r4.<org.jfree.chart.axis.AxisSpace: void ensureAtLeast(org.jfree.chart.axis.AxisSpace)>(r31) >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d0 = r0.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d0 = r0.<org.jfree.chart.axis.AxisSpace: double top> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d1 = r1.<org.jfree.chart.axis.AxisSpace: double top>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d1 = r1.<org.jfree.chart.axis.AxisSpace: double top> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1)
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1) >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double top> = $d2
org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double top> = $d2 >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d3 = r0.<org.jfree.chart.axis.AxisSpace: double bottom> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d4 = r1.<org.jfree.chart.axis.AxisSpace: double bottom>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d4 = r1.<org.jfree.chart.axis.AxisSpace: double bottom> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d4)
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d4) >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = $d5
org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double bottom> = $d5 >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d6 = r0.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d6 = r0.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d7 = r1.<org.jfree.chart.axis.AxisSpace: double left>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d7 = r1.<org.jfree.chart.axis.AxisSpace: double left> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d8 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d7)
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d8 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d7) >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double left> = $d8
org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double left> = $d8 >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d9 = r0.<org.jfree.chart.axis.AxisSpace: double right> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d10 = r1.<org.jfree.chart.axis.AxisSpace: double right>
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d10 = r1.<org.jfree.chart.axis.AxisSpace: double right> >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d11 = staticinvoke <java.lang.Math: double max(double,double)>($d9, $d10)
org.jfree.chart.axis.AxisSpace.ensureAtLeast : $d11 = staticinvoke <java.lang.Math: double max(double,double)>($d9, $d10) >>>>>>>> org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double right> = $d11
org.jfree.chart.axis.AxisSpace.ensureAtLeast : r0.<org.jfree.chart.axis.AxisSpace: double right> = $d11 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i2 = i2 + 1
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : i2 = i2 + 1 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r7 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r7 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r7
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r7 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : $r8 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL> >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r8
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : if r1 != $r8 >>>>>>>> org.jfree.chart.plot.Plot.resolveRangeAxisLocation : goto [?= (branch)]
org.jfree.chart.plot.Plot.resolveRangeAxisLocation : goto [?= (branch)] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : return r4
org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace : return r4 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r8 = virtualinvoke r7.<org.jfree.chart.axis.AxisSpace: java.awt.geom.Rectangle2D shrink(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>(r2, null) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)>(r7)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: void setFixedRangeAxisSpaceForSubplots(org.jfree.chart.axis.AxisSpace)>(r7) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>()
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r9 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r10 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>()
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r10 = virtualinvoke r0.<org.jfree.chart.plot.CombinedDomainXYPlot: org.jfree.ui.RectangleEdge getDomainAxisEdge()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>()
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r1 = virtualinvoke r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>() >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation>
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r2 = r0.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation orientation> >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r1, $r2)
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : $r3 = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($r1, $r2) >>>>>>>> org.jfree.chart.plot.XYPlot.getDomainAxisEdge : return $r3
org.jfree.chart.plot.XYPlot.getDomainAxisEdge : return $r3 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : d0 = staticinvoke <org.jfree.ui.RectangleEdge: double coordinate(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r8, r10)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : d0 = staticinvoke <org.jfree.ui.RectangleEdge: double coordinate(java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r8, r10) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r11 = virtualinvoke r9.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d0, r2, r8, r10, r5)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r11 = virtualinvoke r9.<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(r1, d0, r2, r8, r10, r5) >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : n0 = null
org.jfree.chart.axis.NumberAxis.draw : n0 = null >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVisible()>()
org.jfree.chart.axis.NumberAxis.draw : $z0 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: boolean isVisible()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : if $z0 != 0
org.jfree.chart.axis.NumberAxis.draw : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r2, r3, r4)
org.jfree.chart.axis.NumberAxis.draw : r9 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r2, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r5 = new org.jfree.chart.axis.AxisState
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r5 = new org.jfree.chart.axis.AxisState >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r5.<org.jfree.chart.axis.AxisState: void <init>(double)>(d0)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r5.<org.jfree.chart.axis.AxisState: void <init>(double)>(d0) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r6 = $r5
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r6 = $r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAxisLineVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z0 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isAxisLineVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isAxisLineVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible>
org.jfree.chart.axis.Axis.isAxisLineVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean axisLineVisible> >>>>>>>> org.jfree.chart.axis.Axis.isAxisLineVisible : return $z0
org.jfree.chart.axis.Axis.isAxisLineVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z0 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: void drawAxisLine(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, d0, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = null
org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = null >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r5 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r5
org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r10 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r10
org.jfree.chart.axis.ValueAxis.drawAxisLine : if r3 != $r10 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r11 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r11 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d5 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getX()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $d6 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getMaxX()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d5, d0, $d6, d0)
org.jfree.chart.axis.ValueAxis.drawAxisLine : specialinvoke $r11.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d5, d0, $d6, d0) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = $r11
org.jfree.chart.axis.ValueAxis.drawAxisLine : r4 = $r11 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : goto [?= $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()]
org.jfree.chart.axis.ValueAxis.drawAxisLine : goto [?= $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r16 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getAxisLinePaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getAxisLinePaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint>
org.jfree.chart.axis.Axis.getAxisLinePaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint axisLinePaint> >>>>>>>> org.jfree.chart.axis.Axis.getAxisLinePaint : return $r1
org.jfree.chart.axis.Axis.getAxisLinePaint : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r16)
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r16) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $r17 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getAxisLineStroke()>()
org.jfree.chart.axis.ValueAxis.drawAxisLine : $r17 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getAxisLineStroke()>() >>>>>>>> org.jfree.chart.axis.Axis.getAxisLineStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke>
org.jfree.chart.axis.Axis.getAxisLineStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke axisLineStroke> >>>>>>>> org.jfree.chart.axis.Axis.getAxisLineStroke : return $r1
org.jfree.chart.axis.Axis.getAxisLineStroke : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r17)
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r17) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4)
org.jfree.chart.axis.ValueAxis.drawAxisLine : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : z0 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : z0 = 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : z1 = 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : z1 = 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z2 = r0.<org.jfree.chart.axis.ValueAxis: boolean positiveArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z2 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : $z4 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible>
org.jfree.chart.axis.ValueAxis.drawAxisLine : $z4 = r0.<org.jfree.chart.axis.ValueAxis: boolean negativeArrowVisible> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z4 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if $z4 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if z0 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z0 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawAxisLine : if z1 == 0
org.jfree.chart.axis.ValueAxis.drawAxisLine : if z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r1, r6, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void setTicks(java.util.List)>(r7) >>>>>>>> org.jfree.chart.axis.AxisState.setTicks : r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> = r1
org.jfree.chart.axis.AxisState.setTicks : r0.<org.jfree.chart.axis.AxisState: java.util.List ticks> = r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r12 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r12)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r12) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z1 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z1 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r13 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r9 = (org.jfree.chart.axis.ValueTick) $r13
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r9 = (org.jfree.chart.axis.ValueTick) $r13 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z2 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z2 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z2 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r14 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickLabelPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r14 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickLabelPaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint>
org.jfree.chart.axis.Axis.getTickLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickLabelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1
org.jfree.chart.axis.Axis.getTickLabelPaint : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float[] calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r9, d0, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r10 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float[] calculateAnchorPoint(org.jfree.chart.axis.ValueTick,double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>(r9, d0, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: org.jfree.ui.RectangleInsets getTickLabelInsets()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5 = newarray (float)[2]
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5 = newarray (float)[2] >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r6 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r6
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r6 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $r7 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r7
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : if r3 != $r7 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d6 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d6 = virtualinvoke r1.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.axis.ValueTick.getValue : $d0 = r0.<org.jfree.chart.axis.ValueTick: double value>
org.jfree.chart.axis.ValueTick.getValue : $d0 = r0.<org.jfree.chart.axis.ValueTick: double value> >>>>>>>> org.jfree.chart.axis.ValueTick.getValue : return $d0
org.jfree.chart.axis.ValueTick.getValue : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d6, r2, r3)
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d6, r2, r3) >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f2 = (float) $d7
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f2 = (float) $d7 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[0] = $f2
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[0] = $f2 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d8 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d8 = virtualinvoke r4.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d9 = d0 + $d8
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d9 = d0 + $d8 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d10 = $d9 + 2.0
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $d10 = $d9 + 2.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f3 = (float) $d10
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : $f3 = (float) $d10 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[1] = $f3
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : r5[1] = $f3 >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : goto [?= return r5]
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : goto [?= return r5] >>>>>>>> org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : return r5
org.jfree.chart.axis.ValueAxis.calculateAnchorPoint : return r5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r15 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: java.lang.String getText()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r15 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: java.lang.String getText()>() >>>>>>>> org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text>
org.jfree.chart.axis.Tick.getText : $r1 = r0.<org.jfree.chart.axis.Tick: java.lang.String text> >>>>>>>> org.jfree.chart.axis.Tick.getText : return $r1
org.jfree.chart.axis.Tick.getText : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f1 = r10[0]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f1 = r10[0] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f2 = r10[1]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f2 = r10[1] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r16 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getTextAnchor()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r16 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getTextAnchor()>() >>>>>>>> org.jfree.chart.axis.Tick.getTextAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor textAnchor>
org.jfree.chart.axis.Tick.getTextAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor textAnchor> >>>>>>>> org.jfree.chart.axis.Tick.getTextAnchor : return $r1
org.jfree.chart.axis.Tick.getTextAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d2 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getAngle()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d2 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getAngle()>() >>>>>>>> org.jfree.chart.axis.Tick.getAngle : $d0 = r0.<org.jfree.chart.axis.Tick: double angle>
org.jfree.chart.axis.Tick.getAngle : $d0 = r0.<org.jfree.chart.axis.Tick: double angle> >>>>>>>> org.jfree.chart.axis.Tick.getAngle : return $d0
org.jfree.chart.axis.Tick.getAngle : return $d0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r17 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getRotationAnchor()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r17 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.ui.TextAnchor getRotationAnchor()>() >>>>>>>> org.jfree.chart.axis.Tick.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor rotationAnchor>
org.jfree.chart.axis.Tick.getRotationAnchor : $r1 = r0.<org.jfree.chart.axis.Tick: org.jfree.ui.TextAnchor rotationAnchor> >>>>>>>> org.jfree.chart.axis.Tick.getRotationAnchor : return $r1
org.jfree.chart.axis.Tick.getRotationAnchor : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>($r15, r1, $f1, $f2, $r16, $d2, $r17)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>($r15, r1, $f1, $f2, $r16, $d2, $r17) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z3 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickMarksVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible>
org.jfree.chart.axis.Axis.isTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean tickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.isTickMarksVisible : return $z0
org.jfree.chart.axis.Axis.isTickMarksVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z3 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z3 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r18 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r18 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.axis.ValueTick.getTickType : $r1 = r0.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType tickType>
org.jfree.chart.axis.ValueTick.getTickType : $r1 = r0.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType tickType> >>>>>>>> org.jfree.chart.axis.ValueTick.getTickType : return $r1
org.jfree.chart.axis.ValueTick.getTickType : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r19 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r19 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MAJOR> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z4 = virtualinvoke $r18.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r19)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z4 = virtualinvoke $r18.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r19) >>>>>>>> org.jfree.chart.axis.TickType.equals : if r0 != r1
org.jfree.chart.axis.TickType.equals : if r0 != r1 >>>>>>>> org.jfree.chart.axis.TickType.equals : return 1
org.jfree.chart.axis.TickType.equals : return 1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z4 != 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z4 != 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r22 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r22 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r23 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r23 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z7 = virtualinvoke $r22.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r23)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z7 = virtualinvoke $r22.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r23) >>>>>>>> org.jfree.chart.axis.TickType.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickType
org.jfree.chart.axis.TickType.equals : $z0 = r1 instanceof org.jfree.chart.axis.TickType >>>>>>>> org.jfree.chart.axis.TickType.equals : if $z0 != 0
org.jfree.chart.axis.TickType.equals : if $z0 != 0 >>>>>>>> org.jfree.chart.axis.TickType.equals : r2 = (org.jfree.chart.axis.TickType) r1
org.jfree.chart.axis.TickType.equals : r2 = (org.jfree.chart.axis.TickType) r1 >>>>>>>> org.jfree.chart.axis.TickType.equals : $r3 = r0.<org.jfree.chart.axis.TickType: java.lang.String name>
org.jfree.chart.axis.TickType.equals : $r3 = r0.<org.jfree.chart.axis.TickType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.TickType.equals : $r4 = r2.<org.jfree.chart.axis.TickType: java.lang.String name>
org.jfree.chart.axis.TickType.equals : $r4 = r2.<org.jfree.chart.axis.TickType: java.lang.String name> >>>>>>>> org.jfree.chart.axis.TickType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4)
org.jfree.chart.axis.TickType.equals : $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) >>>>>>>> org.jfree.chart.axis.TickType.equals : if $z1 != 0
org.jfree.chart.axis.TickType.equals : if $z1 != 0 >>>>>>>> org.jfree.chart.axis.TickType.equals : return 0
org.jfree.chart.axis.TickType.equals : return 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z7 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z7 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkOutsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f4 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkOutsideLength()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkOutsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength>
org.jfree.chart.axis.Axis.getTickMarkOutsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkOutsideLength> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkOutsideLength : return $f0
org.jfree.chart.axis.Axis.getTickMarkOutsideLength : return $f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d3 = (double) $f4
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d3 = (double) $f4 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d4 = $d3
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d4 = $d3 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r24 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r24 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: org.jfree.chart.axis.TickType getTickType()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r25 = <org.jfree.chart.axis.TickType: org.jfree.chart.axis.TickType MINOR> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z8 = virtualinvoke $r24.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r25)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z8 = virtualinvoke $r24.<org.jfree.chart.axis.TickType: boolean equals(java.lang.Object)>($r25) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z8 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z8 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkInsideLength()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $f6 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: float getTickMarkInsideLength()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkInsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength>
org.jfree.chart.axis.Axis.getTickMarkInsideLength : $f0 = r0.<org.jfree.chart.axis.Axis: float tickMarkInsideLength> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkInsideLength : return $f0
org.jfree.chart.axis.Axis.getTickMarkInsideLength : return $f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d5 = (double) $f6
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d5 = (double) $f6 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d1 = $d5
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d1 = $d5 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d6 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d6 = virtualinvoke r9.<org.jfree.chart.axis.ValueTick: double getValue()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d6, r3, r4)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d7 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)>($d6, r3, r4) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : f0 = (float) $d7
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : f0 = (float) $d7 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = null
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = null >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r26 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getTickMarkStroke()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r26 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Stroke getTickMarkStroke()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke>
org.jfree.chart.axis.Axis.getTickMarkStroke : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Stroke tickMarkStroke> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkStroke : return $r1
org.jfree.chart.axis.Axis.getTickMarkStroke : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r26)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r26) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r27 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickMarkPaint()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r27 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: java.awt.Paint getTickMarkPaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint>
org.jfree.chart.axis.Axis.getTickMarkPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint tickMarkPaint> >>>>>>>> org.jfree.chart.axis.Axis.getTickMarkPaint : return $r1
org.jfree.chart.axis.Axis.getTickMarkPaint : return $r1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r27)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r27) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r28 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r28 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r28
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r28 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r30 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r30 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r30
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r30 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r32 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r32
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r32 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r34 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r34 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r34
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r34 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r35 = new java.awt.geom.Line2D$Double
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r35 = new java.awt.geom.Line2D$Double >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d20 = (double) f0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d20 = (double) f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d21 = d0 + d4
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d21 = d0 + d4 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d22 = (double) f0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d22 = (double) f0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d23 = d0 - d1
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $d23 = d0 - d1 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r35.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d20, $d21, $d22, $d23)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : specialinvoke $r35.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d20, $d21, $d22, $d23) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = $r35
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : r11 = $r35 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r1.<java.awt.Graphics2D: void draw(java.awt.Shape)>(r11) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()]
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : goto [?= $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>()] >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isMinorTickMarksVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z5 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isMinorTickMarksVisible()>() >>>>>>>> org.jfree.chart.axis.Axis.isMinorTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible>
org.jfree.chart.axis.Axis.isMinorTickMarksVisible : $z0 = r0.<org.jfree.chart.axis.Axis: boolean minorTickMarksVisible> >>>>>>>> org.jfree.chart.axis.Axis.isMinorTickMarksVisible : return $z0
org.jfree.chart.axis.Axis.isMinorTickMarksVisible : return $z0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z5 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z5 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d24 = 0.0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d24 = 0.0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z9 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z9 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isTickLabelsVisible()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z9 == 0
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if $z9 == 0 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r36 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge LEFT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r36
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r36 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r37 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge RIGHT> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r37
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r37 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r38 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r38 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r38
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r38 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r39 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $r39 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r39
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : if r4 != $r39 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z13 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>()
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : $z13 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: boolean isVerticalTickLabels()>() >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d29 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z13)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : d29 = virtualinvoke r0.<org.jfree.chart.axis.ValueAxis: double findMaximumTickLabelHeight(java.util.List,java.awt.Graphics2D,java.awt.geom.Rectangle2D,boolean)>(r7, r1, r2, $z13) >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d29)
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(d29) >>>>>>>> org.jfree.chart.axis.AxisState.cursorDown : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.AxisState.cursorDown : $d1 = r0.<org.jfree.chart.axis.AxisState: double cursor> >>>>>>>> org.jfree.chart.axis.AxisState.cursorDown : $d2 = $d1 + d0
org.jfree.chart.axis.AxisState.cursorDown : $d2 = $d1 + d0 >>>>>>>> org.jfree.chart.axis.AxisState.cursorDown : r0.<org.jfree.chart.axis.AxisState: double cursor> = $d2
org.jfree.chart.axis.AxisState.cursorDown : r0.<org.jfree.chart.axis.AxisState: double cursor> = $d2 >>>>>>>> org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : return r6
org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels : return r6 >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.draw : $r10 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : r11 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>($r10, r1, r2, r3, r4, r9)
org.jfree.chart.axis.NumberAxis.draw : r11 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.axis.AxisState)>($r10, r1, r2, r3, r4, r9) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r6, "state")
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.chart.util.ParamChecks: void nullNotPermitted(java.lang.Object,java.lang.String)>(r6, "state") >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r1 == null
org.jfree.chart.axis.Axis.drawLabel : if r1 == null >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("")
org.jfree.chart.axis.Axis.drawLabel : $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("") >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if $z0 == 0
org.jfree.chart.axis.Axis.drawLabel : if $z0 == 0 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>()
org.jfree.chart.axis.Axis.drawLabel : r7 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Font getLabelFont()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>()
org.jfree.chart.axis.Axis.drawLabel : r8 = virtualinvoke r0.<org.jfree.chart.axis.Axis: org.jfree.ui.RectangleInsets getLabelInsets()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r7)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r7) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r14 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Paint getLabelPaint()>()
org.jfree.chart.axis.Axis.drawLabel : $r14 = virtualinvoke r0.<org.jfree.chart.axis.Axis: java.awt.Paint getLabelPaint()>() >>>>>>>> org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint>
org.jfree.chart.axis.Axis.getLabelPaint : $r1 = r0.<org.jfree.chart.axis.Axis: java.awt.Paint labelPaint> >>>>>>>> org.jfree.chart.axis.Axis.getLabelPaint : return $r1
org.jfree.chart.axis.Axis.getLabelPaint : return $r1 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r14) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>()
org.jfree.chart.axis.Axis.drawLabel : r9 = virtualinvoke r2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r10 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r1, r2, r9)
org.jfree.chart.axis.Axis.drawLabel : r10 = staticinvoke <org.jfree.text.TextUtilities: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>(r1, r2, r9) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r15 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP>
org.jfree.chart.axis.Axis.drawLabel : $r15 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge TOP> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r5 != $r15
org.jfree.chart.axis.Axis.drawLabel : if r5 != $r15 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r18 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM>
org.jfree.chart.axis.Axis.drawLabel : $r18 = <org.jfree.ui.RectangleEdge: org.jfree.ui.RectangleEdge BOTTOM> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : if r5 != $r18
org.jfree.chart.axis.Axis.drawLabel : if r5 != $r18 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d16 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d16 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d17 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : $d17 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d18 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>()
org.jfree.chart.axis.Axis.drawLabel : $d18 = virtualinvoke r10.<java.awt.geom.Rectangle2D: double getCenterY()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r19 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d16, $d17, $d18)
org.jfree.chart.axis.Axis.drawLabel : r19 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d16, $d17, $d18) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r20 = virtualinvoke r19.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10)
org.jfree.chart.axis.Axis.drawLabel : r20 = virtualinvoke r19.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r10) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : r21 = interfaceinvoke r20.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>()
org.jfree.chart.axis.Axis.drawLabel : r21 = interfaceinvoke r20.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterX()>()
org.jfree.chart.axis.Axis.drawLabel : d19 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getCenterX()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d20 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>()
org.jfree.chart.axis.Axis.drawLabel : $d20 = virtualinvoke r6.<org.jfree.chart.axis.AxisState: double getCursor()>() >>>>>>>> org.jfree.chart.axis.AxisState.getCursor : $d0 = r0.<org.jfree.chart.axis.AxisState: double cursor>
org.jfree.chart.axis.AxisState.getCursor : $d0 = r0.<org.jfree.chart.axis.AxisState: double cursor> >>>>>>>> org.jfree.chart.axis.AxisState.getCursor : return $d0
org.jfree.chart.axis.AxisState.getCursor : return $d0 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d21 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : $d21 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d22 = $d20 + $d21
org.jfree.chart.axis.Axis.drawLabel : $d22 = $d20 + $d21 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d23 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.Axis.drawLabel : $d23 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d24 = $d23 / 2.0
org.jfree.chart.axis.Axis.drawLabel : $d24 = $d23 / 2.0 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : d25 = $d22 + $d24
org.jfree.chart.axis.Axis.drawLabel : d25 = $d22 + $d24 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $f2 = (float) d19
org.jfree.chart.axis.Axis.drawLabel : $f2 = (float) d19 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $f3 = (float) d25
org.jfree.chart.axis.Axis.drawLabel : $f3 = (float) d25 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r22 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.Axis.drawLabel : $r22 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d26 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>()
org.jfree.chart.axis.Axis.drawLabel : $d26 = virtualinvoke r0.<org.jfree.chart.axis.Axis: double getLabelAngle()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $r23 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER>
org.jfree.chart.axis.Axis.drawLabel : $r23 = <org.jfree.ui.TextAnchor: org.jfree.ui.TextAnchor CENTER> >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>(r1, r2, $f2, $f3, $r22, $d26, $r23)
org.jfree.chart.axis.Axis.drawLabel : staticinvoke <org.jfree.text.TextUtilities: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.ui.TextAnchor,double,org.jfree.ui.TextAnchor)>(r1, r2, $f2, $f3, $r22, $d26, $r23) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d27 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>()
org.jfree.chart.axis.Axis.drawLabel : $d27 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getTop()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d28 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.axis.Axis.drawLabel : $d28 = virtualinvoke r21.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d29 = $d27 + $d28
org.jfree.chart.axis.Axis.drawLabel : $d29 = $d27 + $d28 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d30 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getBottom()>()
org.jfree.chart.axis.Axis.drawLabel : $d30 = virtualinvoke r8.<org.jfree.ui.RectangleInsets: double getBottom()>() >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : $d31 = $d29 + $d30
org.jfree.chart.axis.Axis.drawLabel : $d31 = $d29 + $d30 >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>($d31)
org.jfree.chart.axis.Axis.drawLabel : virtualinvoke r6.<org.jfree.chart.axis.AxisState: void cursorDown(double)>($d31) >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : goto [?= return r6]
org.jfree.chart.axis.Axis.drawLabel : goto [?= return r6] >>>>>>>> org.jfree.chart.axis.Axis.drawLabel : return r6
org.jfree.chart.axis.Axis.drawLabel : return r6 >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r11, r3, r4, r5)
org.jfree.chart.axis.NumberAxis.draw : virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>(d0, r11, r3, r4, r5) >>>>>>>> org.jfree.chart.axis.Axis.createAndAddEntity : if r4 == null
org.jfree.chart.axis.Axis.createAndAddEntity : if r4 == null >>>>>>>> org.jfree.chart.axis.NumberAxis.draw : return r11
org.jfree.chart.axis.NumberAxis.draw : return r11 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : if r4 != null
org.jfree.chart.plot.CombinedDomainXYPlot.draw : if r4 != null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r14 = new org.jfree.chart.plot.PlotState
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r14 = new org.jfree.chart.plot.PlotState >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : specialinvoke $r14.<org.jfree.chart.plot.PlotState: void <init>()>()
org.jfree.chart.plot.CombinedDomainXYPlot.draw : specialinvoke $r14.<org.jfree.chart.plot.PlotState: void <init>()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r4 = $r14
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r4 = $r14 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r15 = virtualinvoke r4.<org.jfree.chart.plot.PlotState: java.util.Map getSharedAxisStates()>()
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r15 = virtualinvoke r4.<org.jfree.chart.plot.PlotState: java.util.Map getSharedAxisStates()>() >>>>>>>> org.jfree.chart.plot.PlotState.getSharedAxisStates : $r1 = r0.<org.jfree.chart.plot.PlotState: java.util.Map sharedAxisStates>
org.jfree.chart.plot.PlotState.getSharedAxisStates : $r1 = r0.<org.jfree.chart.plot.PlotState: java.util.Map sharedAxisStates> >>>>>>>> org.jfree.chart.plot.PlotState.getSharedAxisStates : return $r1
org.jfree.chart.plot.PlotState.getSharedAxisStates : return $r1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r11)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r11) >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.hashCode : $r1 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : if $r1 == null
org.jfree.chart.axis.NumberAxis.hashCode : if $r1 == null >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>()
org.jfree.chart.axis.NumberAxis.hashCode : $r2 = virtualinvoke r0.<org.jfree.chart.axis.NumberAxis: java.lang.String getLabel()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>()
org.jfree.chart.axis.NumberAxis.hashCode : $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>() >>>>>>>> org.jfree.chart.axis.NumberAxis.hashCode : return $i0
org.jfree.chart.axis.NumberAxis.hashCode : return $i0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : i0 = 0
org.jfree.chart.plot.CombinedDomainXYPlot.draw : i0 = 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r17 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r17 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $i1 = interfaceinvoke $r17.<java.util.List: int size()>()
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $i1 = interfaceinvoke $r17.<java.util.List: int size()>() >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : if i0 >= $i1
org.jfree.chart.plot.CombinedDomainXYPlot.draw : if i0 >= $i1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r18 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r18 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i0)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i0) >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r12 = (org.jfree.chart.plot.XYPlot) $r19
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r12 = (org.jfree.chart.plot.XYPlot) $r19 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : r13 = null
org.jfree.chart.plot.CombinedDomainXYPlot.draw : r13 = null >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r22 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas>
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r22 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.awt.geom.Rectangle2D[] subplotAreas> >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r23 = $r22[i0]
org.jfree.chart.plot.CombinedDomainXYPlot.draw : $r23 = $r22[i0] >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r12.<org.jfree.chart.plot.XYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, $r23, r3, r4, r13)
org.jfree.chart.plot.CombinedDomainXYPlot.draw : virtualinvoke r12.<org.jfree.chart.plot.XYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>(r1, $r23, r3, r4, r13) >>>>>>>> org.jfree.chart.plot.XYPlot.draw : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>()
org.jfree.chart.plot.XYPlot.draw : $d2 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getWidth()>() >>>>>>>> org.jfree.chart.plot.XYPlot.draw : $b3 = $d2 cmpg 10.0
org.jfree.chart.plot.XYPlot.draw : $b3 = $d2 cmpg 10.0 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : if $b3 > 0
org.jfree.chart.plot.XYPlot.draw : if $b3 > 0 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : $z2 = 0
org.jfree.chart.plot.XYPlot.draw : $z2 = 0 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : z0 = $z2
org.jfree.chart.plot.XYPlot.draw : z0 = $z2 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>()
org.jfree.chart.plot.XYPlot.draw : $d3 = virtualinvoke r2.<java.awt.geom.Rectangle2D: double getHeight()>() >>>>>>>> org.jfree.chart.plot.XYPlot.draw : $b4 = $d3 cmpg 10.0
org.jfree.chart.plot.XYPlot.draw : $b4 = $d3 cmpg 10.0 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : if $b4 > 0
org.jfree.chart.plot.XYPlot.draw : if $b4 > 0 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : $z3 = 1
org.jfree.chart.plot.XYPlot.draw : $z3 = 1 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : goto [?= z1 = $z3]
org.jfree.chart.plot.XYPlot.draw : goto [?= z1 = $z3] >>>>>>>> org.jfree.chart.plot.XYPlot.draw : z1 = $z3
org.jfree.chart.plot.XYPlot.draw : z1 = $z3 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : if z0 != 0
org.jfree.chart.plot.XYPlot.draw : if z0 != 0 >>>>>>>> org.jfree.chart.plot.XYPlot.draw : if z1 == 0
org.jfree.chart.plot.XYPlot.draw : if z1 == 0 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : i0 = i0 + 1
org.jfree.chart.plot.CombinedDomainXYPlot.draw : i0 = i0 + 1 >>>>>>>> org.jfree.chart.plot.CombinedDomainXYPlot.draw : goto [?= $r17 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>]
org.jfree.chart.plot.CombinedDomainXYPlot.draw : goto [?= $r17 = r0.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List subplots>] >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7)
org.jfree.chart.JFreeChart.draw : virtualinvoke r1.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(r7) >>>>>>>> org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent
org.jfree.chart.JFreeChart.draw : $r48 = new org.jfree.chart.event.ChartProgressEvent >>>>>>>> org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100)
org.jfree.chart.JFreeChart.draw : specialinvoke $r48.<org.jfree.chart.event.ChartProgressEvent: void <init>(java.lang.Object,org.jfree.chart.JFreeChart,int,int)>(r0, r0, 2, 100) >>>>>>>> org.jfree.chart.JFreeChart.draw : virtualinvoke r0.<org.jfree.chart.JFreeChart: void notifyListeners(org.jfree.chart.event.ChartProgressEvent)>($r48)
